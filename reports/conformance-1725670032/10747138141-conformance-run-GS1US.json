{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2821787e-06d5-4cf6-953a-2abb86bd9663",
        "name": "Clear Cache",
        "item": [
          {
            "id": "ed2b7e15-ea51-4777-96d8-33b33975d3e6",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d05b1d64-d283-48bd-851e-dffee500c39d",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7d3f62d7-2255-4479-9628-e8c218cac1f0"
                }
              }
            ]
          },
          {
            "id": "31ba2316-ac06-4e76-a175-67a54e0b78f4",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8c5af547-79dc-4fbd-988a-beea5c0c1331",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "365aaaa4-fe84-498f-90fe-2be124a6e973"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "630b22c6-a6ce-41f0-ad66-7b35b23ac80f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6a073cb8-ba75-4ec7-b2e0-99da344f9542",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e292b4f2-1407-4cae-9420-f3ad0f6c600a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8e139e55-242d-4edf-a4f0-b1ef2f568cb0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "200a652a-2ba2-469f-a232-235f7ccef146"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "036ca1e2-a1ed-4819-9f3d-923feefe9a50",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bd4b9ebd-955c-475a-af90-8c1f326239aa"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8e525dc2-2084-4bff-ba28-6054aa93bf8f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c5b4a731-3006-4a08-9294-18fbcb15973c"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29f83bb2-bc2e-4096-951d-1ba95a4c6402",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4262bac0-4acc-41c3-8e54-af3b4998e569"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5426cda3-d446-4d19-8d1d-52295c1276cb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a7392a9e-a417-4347-b166-16440ad939ab"
            }
          }
        ]
      },
      {
        "id": "9b1cf878-b198-4ad8-abf6-1843cb012190",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2da24fb0-5f7a-4904-925d-5f54442ec790",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5f460f82-942b-4422-ad76-d4ecb7bc40c3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "724d69da-5519-4d8e-bd50-8665ac8f8a1f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c417cedb-07e6-424f-90c6-18d617473c5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8950ddbf-74e3-402c-b46b-1c48ff283052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4e9b5c1-c3d2-49e4-bf4e-f0689b3921ae",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb76b1b-eafd-47a0-a1b5-77259f78be64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aee3991e-9e39-4404-a304-2a04a775da7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f143988c-3986-4440-9eda-62b081e324ec",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ffa60e5-eb67-465e-9638-5ae15c766301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31fe66b6-75e6-403d-b10c-8d2d0fdf0494"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0c16fd26-9b5e-43a4-a475-96fd1a40b9c5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1a4fe772-d3ef-441a-832a-1074441a398f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8db6a91-def1-4842-b4ee-78bed6f5dabd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eaa6d71f-6260-43f8-bcaf-c1a42315cdfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90f0cbe4-3ea3-40de-9351-f6a65c7c47f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "052651df-7beb-4a1d-ac69-c6521b2dff04"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "11a74e3c-40dd-4d01-b83e-626d70894789",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1f5e5f7f-10d5-4b3a-babb-376d213a0680",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0166514d-71b7-4281-a74c-43e7a53ce810",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "c82db72b-5004-44b6-8289-a59cc76d876b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f8bd491a-5315-491c-ac67-128244cd7a17",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c08d586d-72ae-475b-92a7-cd84e2dbae74"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13b35239-75ba-4ef9-bba1-53f1813f84b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d814c51a-ad9e-4c2e-9223-cb12cd88dce5"
            }
          }
        ]
      },
      {
        "id": "244522e4-b3ee-4e76-b4cc-fc129fa300b5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e7d1d9d2-b62a-4c21-91e6-332620e8610d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dbd87be5-3e6b-4860-b936-a8ba8f7113a9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ed45937b-f1d1-44a9-a65d-dcad5fa5092f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0dbf50f-ddbc-407b-8580-bcbfb79373fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "434fa2e8-f30e-4a97-bed4-52f90ff1b4f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ec9d62-ce93-4113-8db0-7fc8268f0d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e612f71-d377-407b-af0c-79ff1b3b6999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a3fadc-8fd0-46ff-97af-0a7ef7d6dcdb",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00746ad3-3363-4374-b601-2b30238abc56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c832f1b-4d1a-49dc-a82c-54fc2ba3494a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97bc30f3-c925-4cfb-b3bf-850b8a49c57c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a95ebacf-ff08-4c32-9bd7-c6d6d0e11e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673efe1d-829c-4e06-97b9-5c6d6edf63e9",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a406a16-7639-4186-8469-55fb9e8f725d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f2a009a-e9d2-443d-83db-b0b83d286921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19b12eb1-aca2-4218-b42e-bbc24b8cd906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3dd07fd5-794a-4679-a6b3-74364c15ca30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d18ad7-7998-4cf2-a71d-8cc29a00ba76",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "721ef37b-65a5-420a-9ac1-42ee776bd906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c5b1098-231f-4159-bbd8-b35b56a11a7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9f4646-8f25-433e-95ca-7104b5953f50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "64bb50e1-2ede-4ac0-b67e-bc4c40fb6dff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ba716f1-497b-4201-b84a-04338b04ad15",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "834264f9-5c0f-4829-8d9a-7d4cbd148b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3741dd91-9b72-4cfb-826a-df6d6f161697"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d9b7753-7e6b-4990-b227-51e2de9e975e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7fde467a-6c91-4c5d-95e6-5a49ebc517e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9520d9a5-7966-45ab-a076-a46793453c32",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f80fc7-c43f-4570-af07-90a6e24b9ad4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a80bfd5-ed41-4597-8359-ff3659670ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5095f9-7a6b-49bb-aac2-c7a4555cd6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0892dfac-d423-452d-aae7-cb5540033f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5eaf9d3-24dd-482c-8269-3a413ee28bb6",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "787befde-d22e-42a9-b891-f9fc1b7b8ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fb8b97a-284f-476a-acd3-693d8b48f51c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65746b77-fd69-402c-8a7c-8c458f153549",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38c0145c-9302-4986-b4f3-ace5078bca84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711035a0-a685-4c25-81ad-c7708013c28b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "137a9a05-63e1-4f1d-8118-011e59bea9c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e19167-323c-4622-ba5c-6f92b0fe5312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e85c2b2-fb49-4ccc-9986-01313eba9a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10a9405c-b8e5-4af8-816d-3c1f88e9b84b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bade6ee5-1383-4143-8d5d-3f6a11fdcfb1",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b447acda-d166-4cbd-b7d4-236410a556cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb258511-75cf-4440-84f7-b89140ff9382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac5e01c9-8231-4f97-8a88-c46fc8fad1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "146ce73d-6671-46c0-ab21-2e0d306b5241"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aca8b68c-1eb2-42b4-9df3-3a325bc4177a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6c055e-bc29-4545-96ae-55670736c197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a776f2-926b-4720-a4e4-6be787e3430f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde853a6-b1bd-49b4-b0a3-21fa184f0624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31cef317-13cf-40f4-aa50-b8caf744a6f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dadb4425-a8c2-46fb-ab3d-79d740309600",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bfb49f5-0b8b-41c0-a2cc-acefb869b263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3e4bb9b-68b0-460d-9ddf-a4b00dc2a7de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d014ec7-ce43-4d8e-a0c7-38453452b909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05f7eef1-f1b9-4fbe-958f-bbe4d51f54bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ad6e57-b912-4fde-8aa5-8f89ba559724",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1824b2-fc95-48a4-9c80-ecebe1a1e7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae8377bb-30bb-4b6c-84fc-d7bcc59ebfdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0f3931-9f7d-4c96-8ffe-29e8c879a178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e2cfba1-65f1-4ff4-bfd6-7af5139d956d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da4396cd-870d-49f0-b096-7c21477e4796",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6516fd8-e97a-482c-b0b8-40803ed0a47f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3d8036e-767c-456d-b076-c8dd85347c4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7256a561-7d65-43c4-9f65-b7eeb30ed13c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7d4a1493-0691-4ee5-af92-d19f7e4f3e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479e14da-cb67-4a45-a2b0-5c3f81935c72",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdfa1bab-5b2c-4299-9774-f07403dcfd29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3afc373-1787-4bc5-ac5f-4f935507bc54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbeb8c89-881c-4deb-91ea-53ed87e7d3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef55af7c-f452-4c18-866d-e7fb4395aeee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf5c6b8-d394-4cd1-a972-a045a873631b",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad1a9d4e-36a0-469d-9bd5-dbcb01ed1660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d98b9165-8ee8-4346-a2d6-afad17768bf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04069ccd-bb41-433b-8a92-a077d97d070c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b08d2eb1-e672-42eb-91ab-c9044a0a6346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11678458-b676-4f58-8a92-dc2c1ea7bde9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a084587f-9220-4ad2-aa7f-727800c9e2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff952ef3-c77f-47f0-9e2e-a5cf9ca38bc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50048778-8e41-4cfe-af4d-e906abf13e7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1bbb87c-f5e7-472e-876b-7603561ac968"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0f7199b-aaa2-4dab-b8ae-151fe4c065bf",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c25066e-6d54-4ce4-b79d-097416422088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e74c9a77-cf9e-47ed-8c0f-dfa54a2e4771"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8f0493-bed0-443b-9c91-54d805c20ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01452bf8-1af0-494f-a71f-e5a4fdf05e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3de099b2-f93c-45b2-b023-6616c9625d56",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b29f4873-6cbc-41ae-b735-c460581d310e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2370179-c9ca-4e80-9bcf-367d5ccc15ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c190470-646a-4de1-96f8-5ca275aa9314",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c9148fb-5cab-47af-956a-6733acc64148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8273ad11-5a73-40cf-b730-e60201bffb30",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35a830e3-ccf0-402c-8dda-d9e820883da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3cb6df4-4927-4a05-8551-81bc8d03e1aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79bde683-71ee-4d1d-91de-f7b548644a5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8755544d-7390-4e28-9f47-9e84621042ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54572039-fef5-4df4-ae32-60a8b11677c6",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2deabf01-dc12-4ca9-b2bf-52afa3140eba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d41301f-4a09-416e-b52b-1cea091b31c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a399e81-9f81-49b6-9662-1e02081f17c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2490f667-858a-4859-b48a-ed78702f3448"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4812ef6-fdb0-40eb-bf86-c103acaba36d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b44aa0-d6a0-42e3-8da5-71d022d11ef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a786b9f-6a24-4286-805d-262100208431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4c9e48f-1a01-46e8-b263-33388f2e5104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7e90df7b-89e9-4c09-b481-7b96662da174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe31d612-d48e-4194-b200-ceac23289f61",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "626ded09-e082-419f-b408-ff6d3c2fb58a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6be5a522-cce9-40fa-82ae-54d3f952bf9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0a6bb5-4b73-41a3-9ad3-f85a3adeb64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "08a64630-a5b5-4a24-8410-71bd8d6d3119"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b782003-a351-48d3-a268-b51b3ad22db3",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b17b53-117c-46d8-9d3f-6e2258f4d547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48b6b8a6-e93f-4114-b12b-ce6a8f1ae8ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0794760-066c-4c8c-8d70-9872584c6c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "17276332-8c3c-4653-a9fb-87f7bf62a1b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af401d34-cf22-4928-a30c-50f09adad60b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ed5b9c5-f304-4302-9110-8cb4def2d0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda02948-b332-4934-98fb-9075fdd35c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38dbb8b1-9ec9-4621-8612-c1ef54ec1417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e012eb7b-c2b8-438e-b520-91f7cf49590d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6613c53-c6ff-4780-9857-317313c7de98",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8890766-cdac-4c6b-9b2e-639f7d4f1d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57d48568-f274-4276-9f8c-b040edaec588"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b3c7ec-2277-497a-a34a-b7a59db59dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "269f3747-b524-4836-ac95-8964fd7da5c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2d8f2c-b365-478d-bf05-67b662531d20",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b40a3f-3335-4d52-aee1-958622b72c91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cc43ca5-0c2b-4a4b-8588-eaf3bdf87cf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077d042e-a2ec-477a-a0d2-c48ed5cb6ffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b4c7b4d-1fce-4583-9478-9b1810411103"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2864228b-894b-450d-873c-33f6e69a7d2f",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb9f068c-f602-4123-9d8a-d457aee607d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "341d027e-5c06-4060-955d-e6babca39760"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18d93a7-4040-4663-aab3-3f169d305161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "61eac58d-8d1c-4515-863a-75bab75bb1e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8349383-4716-4f81-a4c8-0d713b5115fd",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c45eb4-8b0c-4e2f-8af3-e337283f10f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46075314-a77c-4bf7-bd95-dffbea1852b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1096ecc7-5d61-4f51-bbf3-c00bdb7beadd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "da2225eb-0ecd-49fb-a44b-e732f80c7edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f471fd03-1e5e-4ee0-a6c6-1bbea9870993",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7001808d-5774-495c-89ec-0d0dc1e19975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4e69a61-d03d-47b9-9b9e-9d7eccaeaf09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "277b1d25-ebf0-42e3-9e9a-b75b8662fe54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "093bb2a7-a2db-444f-bdfe-38d122c4cdcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fd6b293-2da3-4669-9d6b-eed484209b97",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "353be80f-c07b-4627-911d-7d1a53068289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5c6da5b-e618-4139-a0cb-3e87753f64f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51337f58-1dcb-4967-abf6-37cbad142c46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a84da93-522c-4f2b-bd54-ccc9788b5e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3aec1d64-5cf9-4893-8cdc-7675c3ccea64",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bae2fc0-03c0-44ca-bbe7-94dde851b81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "546e6cea-49d8-4b52-8a2e-c9d445bd96f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cc4727b-7a07-46ae-b84e-75c431e914e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5f86a28-5ecc-4ce5-95cc-3bd63192b17d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e95f3862-8cbb-456c-b9e5-e4f1eb69cbde",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb05aee7-a9ae-4ac7-a837-5de66d776a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "829cd656-190d-4810-aedb-0d0da2eedb04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9efe9589-c130-422f-9737-324dbd8ba3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5504ec5-4a34-4252-9aee-f820bbdce92c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da02483a-4471-499b-8873-d06609d6cf64",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef0c66c-879c-4212-afb4-f683b5ad165f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "870d3de2-adee-41fa-8358-1281fba83444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7648480-e2a8-4d70-983c-46d0f4b786fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f0a3ae2b-0a2f-40fa-bdbc-6c01d61c8dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7682e99d-ea50-4758-b81c-39b33d521220",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da287a1-2033-43b1-87de-bca76847e56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b41ab17c-67d4-4b21-986a-1e29aabc782b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23d8c00-a6fb-4cb4-8292-840ab37551d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aafbe3bd-ec99-44a1-9af0-05e38624f9be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd00e8b-331f-4a4f-b711-4edea9ea3953",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "893a629f-4690-4016-a007-ba0cd68c16a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43244cb0-9d57-4f3c-86b1-8078dd32d58c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee1f15c-692a-4fa6-a0c2-e348a4889cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "404d6b98-24cd-4e47-add4-c6ac5fc4c6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46fe616-4928-4179-9e45-ef449aca1b45",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1f4624-1bad-4c21-ac64-1db54c3a4743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "16cd5a18-4d98-4cde-b76c-b3e367387dc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e64e1dd4-7dcf-41ac-b09e-c9a08f7d3215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bd3e7cdb-a6a2-49ca-a794-6b51c4e78c5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449e0048-736c-4a09-b5f9-d768f40aa1b6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a6868ef-662a-4a00-91ce-477606a08e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba2ad163-5035-465e-8941-20ef38df01dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e94658bf-681e-4265-929f-e79ad61e363a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1394730f-e895-4c68-aacf-02dfa8bedc02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aab49e9-37e0-4abc-93be-042b05f3b54c",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e493a8cd-baf7-4221-a875-96912caad00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99800438-1014-4561-bcc6-f8e2b67aa513"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471f60e6-6813-4788-8bde-25fbaa010c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "755be9ff-b774-44c7-96f5-ebefbba4addd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fce1be3-4cdd-4511-82e9-0e62bdaa02ca",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "320b5eb3-4f85-470a-aca8-a1ec5994e557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52ea2c2b-80b3-4fdf-90ed-fc6387c05590"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9479093-b1d7-43c9-8d75-a5af71357456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "21d02918-c52c-4b82-a819-3a0ea6004433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee1662f-6fe3-48a4-a2f8-4ad946f04257",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7508a6-9142-45bc-b60a-3368948ed26e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5107d14c-92de-485e-bdc8-f532544e7193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d15517e-36e0-4a28-b667-a2988a0cbe3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b51dca9-32e3-4a42-b46d-a497af0a9a23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b74cd0b-e565-4fa4-9f1f-d945be9aa833",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc07b7fd-aaa4-4035-b850-5e0e89b142a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a4eccb0-bb1d-467d-8315-4a9d104eca61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27a73194-4fa4-4e5d-8e2d-f6717efa3b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "14a18705-26f7-4379-8649-e4a65fa309be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9b2755-0ca9-4cb0-9bba-113d226bc6f8",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2d37dd-e24a-42ab-8d8b-bdf95000fc77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6dff46f-cd2a-4ff6-8578-edeb13f14f26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd3064c-d8bc-48ff-a5bb-36e839cdeeb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "bc44d920-c305-4bf5-8ffb-734bcfca1501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22f5cec-ca0c-4144-a25c-8518e539dac6",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5377959a-ece3-4951-9478-062bfe70f0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfe8a7fb-9ade-4fa7-afa6-a4dc5b557a02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509b269c-a50e-4a01-9575-219f81d6eabb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "662aff4e-f716-48f4-8039-e2bfac29b252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30922994-2ea8-45a6-b141-d0cad4c7da37",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e07483b-99f0-438d-827f-0e5be1deb975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7883ba2-1752-47db-abf8-605bcba7d674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608a2a56-ca69-4447-a7d4-1c3cd55fcfd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f16b637-539a-47d1-8101-611beaec64b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da3ec1f-afd0-43f3-b571-7eaa2c1ad662",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e173ec8-afaa-46f1-9f04-82d70aa716d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a7e8aed-afc6-479b-97ca-9dee64cd0315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb57ae61-79c1-44b2-956f-b86d65a61baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "309135a0-048d-441c-a009-a0aae92d7076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef0b3637-2ef1-4668-9e7d-10eb2715cb91",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dbaacc6-13da-4dbf-8e7e-bf920cfe22ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4228d1d-ddb4-4d6d-ba97-920ab448672e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd8a497-f62c-4c7b-9f02-b5e9552295c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee0ecf25-6b74-4251-9113-d8c7d025013f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9e98e0-1e25-4f73-b62f-e4c5f198c93c",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42e1643e-ffe9-4d0b-b39e-3a6dec992d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "906f28c8-ff8b-4af0-b965-d63284e5f9af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6658f7f-3be3-4df7-bb36-84a9edbc879a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "323f56c7-ede0-4419-96a9-48817edf4e7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3ec9e8-cfce-47b5-bcc7-70d51940c5ce",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a80535-1a47-4ab8-b9fb-4a2a17f24de3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efc570cf-77f5-48a9-bb07-28558124ea23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267d0e09-adcf-46bc-8aa5-ae9cb55f8583",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac87dc5d-ef8a-4eb2-81ad-749c6480a8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d56194-9615-4b41-a443-8b39d285918b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "461668b6-fa54-4f88-9b8e-80edbd7901f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "136ab334-0451-49ff-8468-662e5a678e0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f7b72f-1762-4dd5-b567-2c319a47b719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4abbe67-a150-4ed2-b541-0a467806e433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976b350f-207a-4825-b662-7ef7f02f14c5",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be952edc-57dd-41f4-86a2-6f46b71936f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02d8ec64-4645-4288-bdfe-b2034edc0789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f283f3-c6b8-4d16-a490-a68c586c5668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3aa4c4b2-8a55-4336-ac44-d81522338c71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6724cc61-efac-443d-bb46-f92abbeaa243",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14c19a30-f732-4e21-a9b9-0ec63f857727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a26292a7-9fc5-47f2-812b-a63857318c90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d584b60-c627-4422-8c6a-711c8e75e08d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2d3b3c8-78e3-4f80-8dcf-b98a7331b0db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3f44d1-a82c-43ba-8269-ba6e28fcdf9c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1575010f-97c1-4437-bbbc-152b4a18d9e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b26a290b-188e-4491-adb1-5377ae8d05e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5932d011-3437-45f6-8e73-c7d121c72485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b660f67-f55e-4da0-a9c0-fc630efc8c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03d53c4d-7805-4764-9428-60a994efa79d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78303706-ba7e-443b-bcc5-a3ab937485dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e0a266f-cbca-4944-8745-59d26b29a75e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd4bd9e-f1dc-41e1-be4c-ddaf9e5af0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f780ca89-894d-46ba-961f-2cb6f86ec328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a33504-057c-4174-81ae-5c350d4685c4",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afa14652-4249-4db7-a606-7bf3ed0a3297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc0140a6-390c-4810-867d-77861973f027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d75d553-805f-4498-8a5f-d5be728c62ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "133e29b0-2d4b-4914-a1e9-7b08187e0316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01097ac-c95d-4bdc-93df-043cb4d2a2e6",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5d5854-cc8e-4086-b470-d3dc61240f88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c79cdb4-710f-49ea-9260-d642e4c5d238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37228f93-31a5-48a7-9daa-b32294925222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c29a7cd3-a60d-4a2e-b213-efffe21f82ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f4c20b1-f392-4186-bab4-ddbc7047b124",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b932267-6a49-40f6-8adf-667cd5af9355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76ea55eb-6038-4265-9a8b-b1df06b37a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58132bd-903e-4d7b-8687-9bd6e7b2b667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2290f9b1-5220-418c-a14a-e9f1e1e2c0cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4704aea-1764-4f4b-8ea7-dba580dbb0d6",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff755e3f-2b63-45ef-923e-1f000600c72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce6a514d-209b-47af-b87e-47061b755250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53798082-cff9-48b2-b155-cbd6eee76f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ccdf8e7-80e0-4d31-9da0-f0788f4b6514"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fff00bc-8c8d-4ae9-a8f8-16d23f937702",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c08c7e-61bf-4523-9746-6e13c9157b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc017351-bea3-4512-9cfa-789a5c373480"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29e075a-f9a8-4c97-a78d-e7b46a55612b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0efd074c-0a7f-4a12-ba93-6c8b4abd1414"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480a88e7-d88f-459b-9e61-e4cc52b44b18",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ec169ea-83c0-41a0-b294-a9a9b21f404e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95c99649-2721-4081-8532-5526361e0511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f077f6c1-6f99-4f47-9473-9b99569037bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a387a10d-00b1-48a2-a4f9-3cba34a1074b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b74d5ba-f378-4f7c-9417-0b3bcd99a12e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "217316cc-c209-4bb2-968f-ec7a688185ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b44967b7-7beb-43a9-8cdd-d250d67fff94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fad0fc3-fa00-4779-97d4-8cbedc900143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "40c82860-72b5-4592-97ca-3d58e85b0bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c0bc39-bc15-40bd-81b6-0fdfc0267142",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f5f7a7-d6b1-42c6-8e12-77598ca20758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a079da9a-ad10-49e0-b2a2-069e947f89e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da4e66a-ccf2-4345-8d13-4a891d044a76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "76a2bf24-b44b-4923-a024-dcb10664a249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6497bc6-2033-4d70-92fd-36382b167f47",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55c1cd4-4157-45c6-8153-79bc8e328dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f3ac5c-9767-4461-89f2-4d8be9537680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14073d0a-3d7d-476e-ae63-6c286faedf79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e86df85-23ad-4abc-8553-4992d9a93143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab08c7be-90f9-4d79-bb89-9cd694b77251",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2740979d-1912-4adf-a036-f6806e88fb38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f708efe-65d7-448e-a489-4eb994d3bffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b5b117-5156-49fd-953f-5994b1562c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea24396b-d0eb-498c-95af-abcd4a9ad8e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52bbf2ba-0443-4575-9185-8b095871510a",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03959218-5cb3-4e1c-94c9-445aad095ff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2edff651-b0a9-4801-b965-ebc772d0de48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ebcbc8-d8d7-4043-9548-9b6d65854783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "44584ebb-7226-457f-94f6-f1d941abe250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ee8c4a-c5a0-4840-8c5d-52e278d1fc0c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13428fe6-9c21-4296-ad69-40dff03e7504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27fa9944-1dca-4072-bd8a-b461c57e92c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4016680c-b2b2-49c4-b1be-5a8942794e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "462f06b9-fd07-4c38-8bcb-54fec4614917"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0189c5-54bd-49e0-8662-3347b6b1c7ce",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9d18587-dab4-4aa7-b30b-c9e198922e20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de3d4bfb-302c-4294-9043-82da088ab237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3f55439-9da4-40b0-820c-3d44ac632651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2cd40b5-94ea-451c-8c3c-7d1757c77b37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372f5d10-a24f-4967-9397-c61b7c453b4a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "700ae75d-2c01-4cff-9be2-4b8b2a91308e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56203584-b983-45bd-8af4-c2417e248bc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f161f157-ad2a-4076-acf2-359e0890f194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d700ef00-0954-4538-a2df-8d60cc07f477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83435e68-e93d-4dec-a18f-9fb2e1771b8e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8aad05-9683-4921-b8f3-fcbf1935e516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "075b5d3c-ceb6-4fc0-b010-3c96770ead2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b776cb0e-b8b5-4975-9690-9a87ba0571a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdcb8705-61da-469a-b13d-ee635d258d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96575378-321c-4346-a50e-8e721484f923",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "616b3493-a01d-4585-a258-b9703074b3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ac38f8f-46a1-4045-a370-468f7ceb8d49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b6dc1a6-4b64-4ced-95ac-352a73ccd93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f1c062c-18ae-4555-9a01-1ccad1e0dfeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155120b7-ffc4-4e38-81f6-9687d55d00a2",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9230011-c37a-401b-8087-66cbac1ddbab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b62652-640e-4781-a96a-f400c79e7b38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3961e571-73f7-4db9-81f7-52c20701df14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6277a187-797b-43a1-9456-f828a000362f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84e959a-7c67-447d-87af-871789f3298c",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c611094c-8e39-40c4-9336-33526c96f348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb2a9338-486c-4ef1-aecf-c736688a5328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a27a46-0bff-4c62-bf8f-dc2fe71afaee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba3a8382-8766-4ff7-96f1-d97f6ce2a6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4489d8c9-235f-4979-858f-6a4f3b239060",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d53c49-bd0d-4fe0-9d1e-2bc77be3e6d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7623926-5d12-4e34-84fc-05a105a12956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "111b435d-d8c4-4907-a065-57450a782f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e2818769-c114-47a0-8dbf-59b7b1611d99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fa47aed-bf7b-4195-a3bd-54e18473a03b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed9e12c6-8cc4-4540-b19b-9d2f620a02af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3df2178f-29d4-4be8-a3d2-9d3f0311a4b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff4ec01-4909-4a77-8f14-e1210332db4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0982f298-3093-4b1a-adc8-a891b518a104"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d1bad6a-69ef-419f-9bd4-6f8e3274a8bd",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76437d64-3863-45ad-a1a6-f54c275e7949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05c34083-bff6-4261-a24a-432f768ff0b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb0f8f3-1855-4f49-a5fb-6855017af185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "89ede6eb-8f9c-4a81-a4b8-97ee7d9b805b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "646abb1f-84d1-4fa2-9be5-a310c2041c4b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de58f0e-2e13-449e-922f-d7f6381bb95a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea992c24-1175-47ae-8485-04a40667b2f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7fb3c2-606f-462d-8433-45fe30b5fbfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "65d1d0a3-195f-413d-90bb-ac31cd5a61c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2daf801-bb65-4259-a428-3e76f9c30e74",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2112dc03-95ec-4fc8-ad54-9ffe45bfb703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a6738e6-3dfe-4b53-b95d-bc4c6a502092"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32eb14bb-e1c8-45e1-831d-33d00a99d4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60c0fbbb-02ca-4045-8b28-53b4fa64cb44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad01b82-2f01-40e4-bc85-85693769d86d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac605493-7567-43f7-93ce-a1c328213c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b3af9cc-3168-41a7-afab-20bd35d3e61d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b2bc130-619e-4073-893b-5927015add68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2add2b4c-8895-4539-b888-47c0d44c69d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9953349a-96d6-4935-a136-4d58d5a71605",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe624643-bf8c-429a-8cc1-2d5d6aa90d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e24f2ff-efcc-45ea-9f7e-5a1acde4102b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbb43e53-f086-488f-b6f7-34eb0a76587e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f9cd9823-d3f1-466c-bf7c-c57f5e7432cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339ae2d6-c1c2-45b7-a6f6-06eaed133c22",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ff2548e-e474-4687-810f-203ae9e58722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21a7bf26-016e-4d08-b447-d326dde16e8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba5ba38-ed9e-477a-9a34-2442c227dd5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8159038d-835f-41ae-ae71-c27e6747c5c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08607480-0ff9-4196-8339-7cd4d15cf04d",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1682ab-65ea-4119-b8d7-ae4534678365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adbd5d0d-f0b6-4c43-bbc6-825b1d68c4ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232b001d-3aa5-4f2b-8737-80545ec1d8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0c0eb9fb-0f03-4d36-82ce-4efdb2789688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7931a45e-5bec-41db-80c7-b3a33575d4f7",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9c10b4-2f58-4997-b688-32237313e27b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c95e18fb-7226-404c-829b-040e2e46a32c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53c33a4d-564f-47c5-b502-d80e30b2a183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c5aa64e-2295-40e0-9ef1-8675e6e1b49e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "519e3ae9-9446-4913-94f4-677d91ecc202",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06469fc0-a3fa-4271-9f17-9ca6c64402ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51a44b01-8655-4980-ab32-12773fde0094"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11ebd784-f451-4508-8dd8-bbdf95d65393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32e87651-fa16-4622-8eac-6f6e5e3f64e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d44330-f984-4ea2-8aaf-d9c27643ed3d",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8a47a5-291f-4a76-95a6-0bc4987169cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2e2cdc4-8ba7-46ba-a1f5-040ad2dc2bbd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dfdc1ab-dbe3-4ee1-83c3-3a6458975c6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ed8f08d-4e99-465b-af01-0e2d8c131498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7dbb37d-68c8-4bd5-bfcd-5981ea2ed097",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f9626ee-8448-4a07-8a39-0b556b644b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afb45793-dbf7-4975-a95c-aa8960ea9dc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7de3d46-9e9b-4f8b-90cf-6d19f3d43714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1dfe89c-4fad-4991-a90b-e8148abfeeb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f954f536-ed65-46df-baeb-f8d3313432d7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bfce18c-43d6-4916-927f-94d7ff63ada2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98c63b4b-7846-4fee-b7a7-bcafa88ec9e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "addee400-3920-46cc-ae88-cafc05b104a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e1366b59-33bc-4e67-b196-935a7dae6dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1050924a-654d-4bb3-9946-487ca7cf6093",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e58ac7c6-481f-484d-b20a-23e2281307e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af3110de-692c-4add-b00c-aa7d09b9724b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e67490-bd68-425d-a49c-c341510d7a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "62c27210-6a01-4cb8-bac7-d0fb09a04174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ea803f-0377-44c3-97e7-4718694ba8cf",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09c28165-7f38-4cf3-b9c9-50a75a12338f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d762f54-d67a-4697-afbe-a2dc5d6d8781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e1a3cb4-0113-457d-8c92-118d561dcfd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "39f82066-c447-41f0-a8fb-2f81965468f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b538385-6b5b-4886-9c01-ad48536acb8a",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ae89f8-21d6-4b2a-9748-a231039c0801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e08871ea-47a5-4cb8-bb54-60cc0a12add9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7037d1a0-a9c4-4c59-930a-1034374c5736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "5df515b9-3dfe-4cca-a10c-ff62edc2e91b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4d8e8f4-fe8f-4d06-aa24-0aeb4cbb64b4",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac1be5e-ec8e-40e1-a7f4-a4ff4efb900d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e979d2b7-0948-40fa-bf6a-0b5f6cca7bf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e510fce-d2bd-434c-a479-ab7d8c6bfcb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b0c80b47-e660-49da-85a8-67c05da0b4f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f6ae65-ef2c-4f90-83b4-798f024bdcca",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16e70743-c161-48c1-8d00-559677f95f8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f0cf49b-ba8d-43d3-84b0-5a1806828c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b32c2fd3-eb85-4abf-9c33-d3dfe5916b18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "25896ea0-80b6-402b-8562-7d257c09e4c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1974f2ea-abe3-4903-b341-eb62d0199ec3",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b08db37-dfd1-4672-91c7-54c4c89541d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69172818-183a-44bc-a6a9-352b362661c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd1cecfe-95d4-4e59-971d-fd86addbbe08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bb1a2f1-e220-4021-b9cf-13b7b5a3e8cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d29ed2e-26cb-42b2-bc74-defe9e6b8f3a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e646543-6e77-45e6-bf25-bc5d29e35f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "76f20253-4011-4ab6-92ec-3bddd8aee440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0504d8fc-a9a4-41a3-b98d-ae5b2df43a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "73fc1bac-23d1-47f4-bcf2-8cfb7e932653"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0523ede1-aff8-4298-8214-cec386fb023e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a516706f-a990-4887-b496-848e97ef93ee",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c7e874-182b-4704-8c5c-0bc4bebdb234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ce92c480-af02-4bc5-bc9a-8002c72e6c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f511ec2-56da-4250-add9-74faaf43083a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1c5be840-8d7d-46e9-b45d-ec90a75a6d4b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d9c2089d-ae7f-4502-9bb1-f49992df98ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f24a223a-66a2-44ae-b434-5775c1327b84"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8fec492d-0820-439b-99ab-e92543dbc64b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f36f4137-cde2-4a6a-93c4-a50a9c8d9b5b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2ab0acc6-98bc-466a-ab87-8ca144de1ab4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a59bcd75-faa4-4fc0-ac03-738ca2f1853f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "07f663f8-61fe-445e-92f5-696c37ea28ba",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "065a2697-bbee-480f-9518-890938b98a43"
                }
              }
            ]
          },
          {
            "id": "d7f7dc35-6da0-4ed9-bda1-e90017ce3e7b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d23251ab-dba8-42e5-a636-40b524cf1f10",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "6184be49-426b-427f-a1f7-4f9184cef207",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a08652-786a-4b3e-a097-bee30318a64a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a14e474f-d8d3-47f0-8b54-7df0fb8c6cb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48abed05-05b5-4255-83df-07196a38ed31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec8ac882-e449-4a0d-a9a6-626d9900ed09"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "104578ae-a8d7-4182-ae86-b8badc5eb456",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "04fcf09a-7e4e-4372-91dc-3790b9f1f916",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b563bd4e-d476-489d-886e-5c48fea56be4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dfb90603-65bd-47da-9b2c-c0fd921f73ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2af87e44-8e4f-4dcf-a9f2-b61511fe09a5"
                    }
                  }
                ]
              },
              {
                "id": "32a7caf0-908f-45ed-b2d5-8072c2a47729",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1dfa353d-0690-4663-8a95-8f31b717ca1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a6bc2cf8-badb-46c3-864d-7b697705f253"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21f5d0f8-febd-42ef-9e1c-746bd6ee69df",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b25f4fad-af7a-4e49-84a5-ed1256e6cf29"
                    }
                  }
                ]
              },
              {
                "id": "4bee8cbd-d367-4312-a350-508f2bce9d5a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae3720e0-8f4b-4f58-8889-858cd7d2dda5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "82c215d3-5bba-40e3-a476-831e92cb85a5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be27ad39-9497-4237-8e09-9ade9433b5ed",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "96e77027-65a5-4a7b-94fc-cbe8906fdaf6"
                    }
                  }
                ]
              },
              {
                "id": "52547109-f680-4805-a488-346fd4af2734",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "711981ab-822d-487d-b3f5-f7c226d25cd6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bec3f663-2898-4862-a35c-11729830713c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ba937322-7dfe-4017-8f99-88a38ef49a14",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "a84f797e-cad9-402b-aab7-d616a7e9c6f1"
                    }
                  }
                ]
              },
              {
                "id": "85b383c9-8b54-4f3d-98b5-58d929a4699c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "033e03c0-20eb-437e-915e-1435512023fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "57f34304-776c-4b32-9dce-c705d9ea3a7b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92461166-691b-4ff8-bf17-a98480a289d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "72b3ca34-3309-4260-a2a7-42a98feb4ea3"
                    }
                  }
                ]
              },
              {
                "id": "677f016f-920e-482d-8974-24c9109fb7cb",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4605b7ff-4630-40a7-b5cc-4fe6d240e337",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c8fe781e-bf13-4ac2-9579-f9fc46870992"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d92da59b-670b-49f7-82ef-d3a4ebf2ebce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "09e023c6-9a8b-40e3-a786-44ef44c8f199"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "060a6d60-cd43-4803-81e5-7d5e48124aa9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4d80910b-c85e-4708-a9b8-79ffe6c400ca"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "91591cdb-97c4-4ecc-a995-35a7c0ef8ac6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bae2bb1e-3483-4e9c-9e54-d245e8d13c80"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7dc282c7-4e21-4e65-b5b1-428fe5245248",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5c8c9068-2e2a-4081-9429-b7892c0aa60c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "636177fa-13ab-40f4-9d61-d27ac1c98c01",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8ec7935c-77cd-4586-919b-53918f608a57"
            }
          }
        ]
      },
      {
        "id": "e5840009-0cdf-41a7-8361-61b681ab28ff",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "576cc062-55ff-40d9-a918-545cc12c054c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ec974e4a-f49d-4d15-a03b-e43d06a3adaa",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "47949ee7-b187-4a5d-9285-32aeccf3c1d9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af19df6a-62c3-4adc-be99-4931ceafc0bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a43f6458-afc3-4cba-a69e-6a0d77a5850b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02a79db1-59ef-4071-a8e8-ec72e48b66c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "10bf0ec0-2b15-4967-a54b-f758e60047db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b62803-9aef-4cc2-9f0d-f1d580401e2d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0fa2ffb-9a79-44f8-8e5f-275a541678ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "210be123-d171-443d-8f4c-e4d827619c27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee38e3e-b340-45be-a425-b35370b40196",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5cb7bf0-e348-4962-9b8c-178b9441430f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "853ed5a1-788f-4a21-a3b5-4b0fcb53bec1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af7ead99-78ea-4198-99e1-bee9764bf06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a66e7d8-4c46-418d-b082-dfec9744e820"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49959b2d-8ae9-4960-8a03-7e83dfc78809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "54361d76-e02c-43a8-9fb3-8478dedf84b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9fd6a32-fab5-4187-b296-d272176b0d70",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "138865ce-8039-455f-9705-b3609e72cb04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f3c0cff-7cf0-439b-a783-8d4c81cdaa44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b844aa7c-d8ec-4f34-aaee-957f7f776ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ba316771-3771-4356-84db-196b0c77fd4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f97052eb-0109-48a2-bb79-434d2c51c7fc",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c84db4-3e46-4160-956e-c1eb5920e51d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7ee71a0-fab3-4cf4-ac5f-72ae5b6e2136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67f0cbf2-4454-4d9c-8f8b-1d634bac272a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6587e45-a003-44a3-b40f-19b3af72b002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b236efe-d3a4-4886-84a3-db55742417b8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b472b09c-2ee9-41b0-91f6-8149c9307c25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1481ab65-7f9a-4bfc-b35c-c1daea9b280a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1c090a5-0a35-4640-96d9-a63dc97cc560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d71d1cc7-181f-48e2-abb9-67a521899993"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df2f6406-d799-41a7-b1ee-abf475f0179d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98423736-c323-49c2-ae96-e21e17fa557c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb1c247-5e73-43ad-81bb-daa8788e6a9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41608436-2134-47f3-b4ac-4974e55d59b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c45607a2-1c30-484d-bd92-985738cef036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b286957-2174-4df9-9fa9-a5d1bf64f28d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c45885-e06d-4672-a331-b0654605f09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85183e11-81a7-446b-9139-cfc06c99a452"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42292ae9-fb61-4991-ac3c-445e6e619f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "277dc379-0831-4002-9050-aaf0ccbff0c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c5baa5-e2fa-4304-9590-e5f8c6796a55",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "294e20df-065c-4348-a2e9-e376a89494eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8669fe4-ae03-43ca-8ef9-f864df2968a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f051c82a-9f76-4937-a9bc-0335300ffb5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fda8ac87-457f-472c-89c5-3864e2acdd8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "402654af-58bd-4804-851d-bdb0125d0363",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5176f099-0f7b-483f-a466-9d71e16c0f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df64b650-51dd-4015-9c68-843afea4a5f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b8855b9-d5f8-4c40-92bb-9450348d8b54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7101e562-49b8-4d7a-91d5-86e4c47364c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05cb5451-4ece-4a3e-b47b-d8c26d1cc844",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32a06d79-792e-45d3-a05d-f6d571dcffc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97d7c006-7ed5-49ba-9dd8-a695a9becdbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32927011-a93a-4fbb-8e2d-9da55662379e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5041eac3-a787-4472-a9c5-62428c0a73b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dda0235-6cf6-4ff4-a311-7d996f9c40e8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12283be7-40aa-4ba7-81c9-0dea462eb3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4276a12-2e74-490b-8d5a-2f589971cc4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6350bc-8d73-4161-8dc5-57d4cdfe1a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "087cb5c7-48f2-4db8-9a61-ffa34ca89e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf75942-e721-48c6-943c-b919cd1a696f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03010a4c-573a-4314-b8bc-b7262bda96b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ac26661-fc5a-4c3d-be3a-04a84ec285a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a634b8e6-8398-4da9-baac-e8bd14e516d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "23c42652-41d2-4c91-b0f3-b3114fa4f439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a17ceb9-da1c-4667-b7ab-2f96203cfd63",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4955bb38-38ee-42bd-98d5-cb2a13001850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3813ef9c-779b-4ffd-8aca-2ccf0cc10465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a5db04-ad3c-4db7-a09d-d211978aa02b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d46ca150-e081-4263-844e-8b249a1def70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51f7d6eb-c0d1-4a0e-8a7f-293425e4a7d3",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6990ed44-0e8d-4630-8fa5-c3ea7f49b9b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a64bc99f-dc2e-4cdd-8edb-79995e26e6c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98913d48-12d2-41c1-a1a6-302c4970ca79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "af753cd0-764e-49f1-8434-573c83f6c01f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4372469-e84d-43bd-b539-60368dfbc71f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb378f57-a8a7-46c4-95bf-b635a34c5741",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29dad146-440a-4ff0-a71c-0c1606b24b84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d9a39bd-70f5-48fd-b1cb-a22380efa8b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "94188fa3-34f2-4ea4-a43f-33d64d57b9bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e390ccf7-ede3-4685-b5ea-21ecfb935cbf",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ecf773-0bce-48fb-8434-ec8eb471d1cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6397888-171a-4773-9db7-02275a1205b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cb6fb68-fb4a-4a78-8200-8110d35f89fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "61c64960-0320-4b87-a172-ebbc7bda3979"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c1c0c85-73ad-4a69-bc8f-fe7254d0f553",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcfc908a-11f2-490d-b31d-96ac3b55031a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09175e64-db25-4cc9-bae1-f94276b72e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08620c3-4165-4b92-9e2e-b95bd9baaf7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ff2975b-2f8d-444b-b137-a63b07f7bd8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56881c2a-181f-4be2-b530-1e28c72ab5aa",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bb29c52-9588-4e9a-8c2b-543774949b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "056da74c-3a3f-4d4a-a99d-3ba4388b7383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dca49d44-782e-4a70-9329-3c8c320aba98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a3c6124-1ca1-47ae-a4ce-bfca57092d02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7322af-ae6b-4db5-95f1-c434e8fcb574",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaaadd78-c19c-48f1-9ca5-d7ad48c8f6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51d44821-19b4-41fb-9173-149b2c09b313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "267fb7b8-acd2-4d3d-b283-c9154d937f90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e2a4b9a-59da-480d-97b8-8a47468db028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13caa788-a7fe-483c-9f37-fe303607d6e1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b250416-40ef-435b-8705-1084da71b069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9fd38fa-f49f-4832-ae2a-b722cbb5d30d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9488999-5f6e-4e63-b5c1-e4ee5b15817d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f1b0150-5b9b-45d2-b1f9-9a2daf11540f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c795d0d-bb82-45a9-83c0-7391942f3632",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd7ef1e4-b7ae-4cfe-b897-1f9cf8059fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1f7f7d6-c81c-4661-9c2e-b8360a447134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80474692-7e19-4bcd-94fb-f59813d9a029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7eea49f-7593-4049-a9b9-488898452767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ae93be-c7b9-4e15-9bd8-626291aea8bb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f402fabc-3be5-4ad2-9ba1-394f027900dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1720e44-3ddb-42c5-b047-6d432e19c9a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2f2091-c0f3-4e92-887a-332371d5408e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7068c035-7955-4c8e-8148-7a0cf78239dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cc91fce-6b5c-447f-a7d8-0c08599e65d2",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbfbd9f2-08c3-4e2a-9b99-86091df19019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "803d1ac9-822f-488c-9550-e4ee61369ec3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44b0f75d-8a79-4ea9-8a69-95029d01903e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "97d796f3-1e7a-4b2a-8313-fb471a01bd8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1685cf5-5ba0-408f-b27a-704937fabf13",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d64ce226-de23-400e-9934-49ded11b3a9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7297776d-f6df-4471-bcf9-d0cfe5a152e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c5c506d-00cf-4d1e-ba4a-7223e242dab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fb878a2-70cb-4db5-8f77-926de75c215d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8aac55-50de-44ca-9c0b-481d8af55519",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaaa0f47-bb9d-488c-ba14-941a03c92a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4eddbdf-8e55-4f7e-9453-3f53acfdbc84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c58ce0c0-1975-4e61-aaa0-e313e451847c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29f78ca6-a74e-4270-b5f4-c147a163dbd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f41f4401-94af-4b51-9357-2515c563b1ac",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3df134-232e-47a4-94f7-9bef6692a506",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f4eec8a-9432-4111-98d8-4e90807ddf2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6aa7350-38db-47c7-bfee-e9f6377b63d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "274efa9e-6047-46b5-9bbf-1d484b45b033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a395add-7ff7-4b44-89ef-561a86425f50",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d933515c-c3ab-4ab1-9201-9487a56d2b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e465721d-d0d1-4f41-bb8b-4abe17d76db5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "923bb5db-5ef2-47e0-add0-4f83bafd2cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "78b6e3e0-9072-4f27-b640-d3cd813aa81d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b64bc35-f312-4f23-beb6-81f3a114192d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcdcc43a-0457-47ed-90b8-5d0c197fa1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db1b297e-cacb-4760-ab08-b6a31d251a72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "878a0b51-6904-4db6-b890-3330b5969640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8373534c-7c41-4ca4-8187-a8b4516576ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67c76810-2620-4019-b557-34b39b541491",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7731f9f1-6dcb-437f-bb95-98ffcfb5f1e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e014cf4-4127-42d6-9fd3-5d8ef3992ae5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2800a97-f657-444f-b4d1-3d3e20a95d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7444b93f-e13a-401d-a493-e419a192f247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f757704-2b60-4efd-af45-7f313918d007",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec43e9d-71ce-4349-854a-d27c7134c567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41ad7c50-7d53-4b1e-a21c-3923dcdc9268"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "299fb6ce-ff1f-496e-a809-9fc1b2c29efd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ceac0159-c746-4ede-a81e-bd05714b75d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7293c6-aa8a-49d3-86fe-5c683bc2fca1",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05f8e1c-ca77-4983-94df-8a982c654971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a77e7f92-0a5a-40df-84b3-77cd6f2af6c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd1e88e-5899-4544-a21a-606b8bc94c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "96a0c5b6-7445-4432-aac1-0d6cf1f9c91c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7021204-3417-4b7b-b4cc-cd0d5a753e5f",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c3a72c-e0ea-4cb6-9abc-989158f6ba3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff5d8998-fd5d-4da7-be7a-f7b36b710192"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7683c3f6-f84c-4ca3-85a1-81238d90bfe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c852b17f-5d13-4c43-9897-05b9067c67fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f1cfe5-0e5d-4e8c-85d2-dd9a22913431",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da42b93d-5318-4a01-b3f4-36115745009d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87373915-4341-490f-b7b8-69a0d027c363"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57e0b95f-3205-463f-976a-8607d852fde2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f929834e-b8a3-4cc0-ac99-673cc02e16a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013bab32-4c0d-48c1-a2ea-529746f2f7af",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a8ce082-c558-4ed3-9831-9b413664d155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08ad9a73-a76e-4b5f-9bf1-49f3abcb9d90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4cb35e5-f026-4b07-b1a7-b12a830b8da3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf1560ad-7196-4975-a2f8-00c0c89cc0df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10723501-5660-473f-940a-be7bf3a17a56",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c24ec3d3-c3fe-457e-bb39-65ef9a5f7107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96923976-b887-4712-8854-50c222b38703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa1f4395-b03e-4b6e-bc41-4b3fa0dd706b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a19f627-ddad-4caf-b016-8655b7d5adb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9395486a-818d-4e84-b2a3-73f8d0c452b3",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13127c9d-2b8f-4f81-aa4d-12c408bd88ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e170f6a4-9c62-441f-8541-062b9fed00b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4683d056-49e2-4816-a130-feae9b54352e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41087225-78a1-4a57-b3dd-be11d8f1b114"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7ecfedaf-f638-4ff4-8f0c-faa0ff749415",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6d04fbe9-1be9-4210-b501-b9a107eeac45",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4415bea8-1e3c-46bd-85e7-8bb60163ff62",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "aaf7b478-b246-4fac-b0a2-0b153d2545d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9afc8787-ca03-4d28-96d3-cf84eb5d2415",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c76028b7-3c28-4929-8002-0256607c972d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "454eed9c-b610-465d-9c3c-3e99e86dec26",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b06b3fe3-3a8a-4f5b-92c1-cf7747fc0cef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ea443da-ac1e-4a2d-9e16-35a7927858a7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a09172c7-3e63-4516-bc1e-4c1a0b51539d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c8cc1df3-2b8e-4e19-acd2-7a998bc52edd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "68c807be-cddd-4c19-94f5-710fdfdfb493"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b9a46acb-7d4e-4812-b831-a8d98cfcc51f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6bb001b1-6448-4255-9c1d-53e428149915"
            }
          }
        ]
      },
      {
        "id": "39778c9b-b897-4cee-a289-3787fab2d722",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "68244ad2-e45a-48e1-825f-d43a1583bb43",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fbabbe4a-1533-4695-8f9c-2b2dcb28ff08",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5905798f-a7fd-4847-b147-dff8e76f929f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea76f0b-6b9f-442f-a524-727e65666822",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da8972b2-22d3-40c5-b733-5afa0998a4db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a79212-e1b1-4caf-ab46-504983156e2c",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee9cc9fc-4434-420d-9c00-1b293e32fc7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f2c6f7d-9157-4315-9dae-0eebb5477509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779012ac-41b3-4680-98cb-1f276f6cabaa",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce2d2cea-d799-4c1d-bc90-23907a2b0d61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80760f27-bf77-491e-b6e9-376ed0d181a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2521ba69-c2b3-4b7f-ba7e-5b99e48580ac",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69b3b68-59fb-4b32-8d36-a8527f655a80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5793900a-b5c0-40d2-b7f7-cffe75c6ca2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7eba754-ae7b-4538-821c-7f0e4af761b3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb0baf3-1d11-4940-8838-3a059d6a5fb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a028ecb2-d907-4db4-8dbc-03d004a09c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4231ba88-7d42-4d81-834b-bc4a283cfaa0",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a269fb-e04c-4473-9077-3073a42606d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ef63d1e-8d8a-47b1-94bf-d656ec2fff3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c9b2f3-c8fb-4d2d-af5d-67ae3821b38d",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69260da-fe6a-4493-92d1-0a875f74dcc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0428090-3079-4193-b24a-67f269331a7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aff51254-8560-4569-a5f8-15d6a223e674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00abaa43-c71e-4161-b4a9-bf0da19c255b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e67472-7edc-47cf-a50f-7f580f309721",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f621503-2f18-44cf-a34a-54fe6f2be900",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17b4438a-bfb9-4711-b5c2-99877a3ae665"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b13722c-ac2b-4976-b470-90e6dd4b2c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c1ad04b-acf4-41d3-8e61-54aaaf1b54a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f33c76d-405d-43cb-a219-daa74ad4125b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e41066c0-8e61-46ef-a3fa-13e8a6f489ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2538b723-cb89-4a35-a32e-815da5bedf0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e942ca73-7d84-4563-a94b-56d69e4a4d37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b31c22-1db5-4049-bacb-08e591898720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c4728d-bc2c-45dd-b9f6-114265042853",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454dcdc6-87bb-45dc-8426-de131851280f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21591230-9222-4249-b4bc-ef5c1739a675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "992e3317-6220-4daf-b588-77879fe6cdbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d07a7ba-89c5-4788-8f7f-50297c8324d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8779ad16-1a57-46e8-9c35-c5a2e8b983c2",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4dd908-91eb-4d55-9ba8-52411255321b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "466040f1-8603-4880-9438-9b00a436964c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa245ce8-d4fc-4464-92e4-b4ac12f64ad6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8206fcef-8389-48fd-ab6c-d99dbc9b5cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2438a655-92ff-4a2a-b1d3-2f295b814fb2",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70463073-70d1-49b3-92d5-383b868111df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ab02beb-4ab6-49d4-95b4-001ead4e80ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "545a87de-6721-40a2-aee0-336ac0a975ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56814a79-dd69-4560-a710-620ad304509b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6875c0-82ab-438b-b329-ed3c015dfd9d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3feac53-45ec-49dc-a129-8a7cc7dfe280",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f2f997d-59e2-4e76-b239-45d405de5130"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98bcbd8b-3bc0-4790-b4f2-66f19bdf4ac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4b291d9-9a91-422c-9c40-3416757dac73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f223716-ce8f-48ee-9136-d06cf3786c91",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdda18e3-5952-49d7-8e1f-d09d4040e9a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "232da312-4dcf-4ba9-9d04-67255ea709d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d33208eb-83a5-4656-9e00-27952710325d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "604ad899-2357-47e4-8ebd-4afbc70894f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3020ffd9-86f9-488b-babc-6fb910409b20",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6865357f-bcfc-4135-8ae5-d6c69cc38880",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0e5e83c-044b-4623-9a8a-b802bc313ef4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa935258-3156-4b55-8ae9-2e640a488591",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c544c7c4-e54b-4505-bcb4-ff4f821bf113"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5818b0b5-0187-4e6c-99e7-1894ac462a78",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb3d769-e0fc-41a5-baca-d6ba72e45c9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1ffe7f2-6c3b-43cd-8e85-ef6da515028a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb3f9e5-775a-4cc7-bab4-fa7bcf37dd29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f40aba6b-d1dc-4318-b754-3c37572bf2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adbdd8d8-edea-4179-bcd9-0fe449e226ca",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed7db40b-bcdb-4ce3-a73b-ada77ad7195a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7691996-fc77-4ee8-b634-eff5ae4bcd24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2eabdb5-4999-4f79-893f-998498469a1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61719acc-7484-4b46-9e70-ac4188cb52de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd41ce20-e271-45f6-be9d-b350bc1351dc",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b13d53-861a-4668-9ae5-e6ee00d18daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "764b02f0-6a8d-4c1d-84e0-bef96efd3a0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88660642-ced1-4dcc-a487-758f6f218891",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3095f1f-ed85-485a-88a9-a543687c664b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7da7ac-4dda-47c8-a7e3-9606ae2ddd63",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba766b5a-80ff-4143-bde7-6c24bae85671",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c545d006-9f41-4121-81ec-3108644462e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4d8c81-bf4b-466c-9ec7-ea1a1da75e0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e096d94-5005-49ef-b5b3-772e97ce64fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a861e09-6d17-4e6b-9d3b-120438ed73e6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7f2608-acaf-466c-820a-e228bb0cb93f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "920bbdcd-0981-4b51-a841-d3beda14224c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78ff547-0257-43d4-96ae-b51e659fb548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb4690df-d137-488f-af7e-af3e56caa484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54835d29-c211-4360-b0ee-25a5f9e507b8",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f9dd97-2438-4f94-aa84-528657451162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c4dde36-df89-4910-98fb-2a67e4bf0bd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8748d79-2b1b-45f8-a445-38b3f033174d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8c02f08-e889-4456-855e-ee726a984aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ff64072-b2b0-4913-abb8-a998a08a8327",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daeb88a7-408d-4548-a753-80d273ae5330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d92943a-ada1-43fb-aa10-b8e96bb022d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "241b3ea8-ea30-4b71-8afa-e34d3eb92064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f282b951-5e16-4796-b166-d165bf00244b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95fabcb6-11e1-4437-aa7e-a051f360c6ee",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22522a87-f112-4f6d-bcbb-7b9f4c4f9fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb7cc05a-cc21-4a7d-a552-380801ac2e22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da05786-8337-413d-a151-99bb4835273f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70e338c8-732b-43e7-8b18-21f1cd884cac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bbb4a92-d2ed-4272-8df3-871cfd3fe81b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf611c2-d758-481a-bfe7-656e077e9f40",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbaed214-c80d-4795-8b00-04d32886175f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f6a2b9-4efe-4dca-aa83-967dfde478b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8742306f-03e3-4f30-9e32-533bc93c9182"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01b714db-a860-4bd8-8ad6-cf3de9e9b77f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca861b39-c0ea-4fac-acf0-eaf78792204b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16257039-9c7b-4d7e-bfcb-8892053ff289"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b81207-052b-4fbb-849d-b368a49e8080",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efd9c60c-0407-4270-a1c3-a8fa8d221674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2fedf5-5178-4f2d-8366-7856d7d85ab7",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f416115d-8fa1-4b17-b2fc-8b793320b0fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e09b7e32-58df-4c21-b780-3320aa0aa6e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5802ad07-c7c6-4fab-a5d2-40c7706c0ede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a707ce65-21b7-419c-9cfc-32d0f6651d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e35d0a9-b12f-4fd0-99d2-203f599ec2f6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0742378-2340-4006-b664-1cd4b56bc2f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b56b1fdd-5d77-4dbb-86c7-2094d76b795f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96c8d893-7275-4153-8298-f7c7b5acc718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02f79f16-36b7-456c-8d04-b5e2f24c0715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84907257-cb55-40e0-bb4d-c86c5b6c5048",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1445225-2080-4ab0-b56a-cf670d89656d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc2c930c-e863-473e-8d7f-1c4fd370db5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7edbb2b9-7c01-40fa-876f-e77ea8d6f9e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f886ecc6-2662-4dc3-a09f-527ff9ef0230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10718f3-e781-4f98-ba6a-67919a177796",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950b8256-5f1f-44c4-b6a9-a39869038e67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b10cf9c-5d79-400e-a6e1-17e59194f5e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dcb135d-7c38-4cd2-af2e-363a070b8d8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9147a737-2ab2-4613-9528-c0723af793b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29d6e554-ca05-4c3f-bb34-9f77dab7497d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81531187-733c-4e67-aca3-43f95a756e3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3943782b-7f14-4024-be1f-2f09357c3939"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f35b574-4d33-41e2-8a94-b34cae930440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "502c7171-9470-49d5-85db-e553eccde6ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac22ab6-e48e-4b28-8b8d-483d10228b90",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0681b9a4-d829-4036-ab6c-add7c606b61d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8470eaa5-9949-4a47-9660-4275331214cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8022dc0e-76ed-419e-b289-dcd386e9828f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8532b429-7ecc-4b96-9bae-3f56e55acdb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68104dbf-9dc7-4e1e-b33b-6140ee8c53d5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d9b648-72aa-49b1-8296-76b125a03412",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16d23459-c6e3-4a52-951a-5d0ad827bd41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01bb88a7-ba3d-4337-9c88-3be2fc628d94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5207a450-1688-4513-9628-c2e08dad9f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407eb083-1b61-4a60-a945-f7ebd351f739",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868fce27-1733-4276-bff6-2b3a31635974",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ad45ddb-128f-4942-bbf4-39b7066a1fe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cccf2c77-f75f-4394-ad81-47af1ed5f0d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65627558-1ed5-4ca1-abfb-aa299a9c587e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad0ee64-232c-4953-aa02-b215747e6339",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda39ea4-f5bc-4a5d-9f87-21e8ed17b0a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c92b2e06-972c-4b79-87a1-a535b17c2928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bdbf727-4535-4c50-b228-a82a9c03e0de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e558cae6-a6f8-4bb0-8c5a-3ffd460c407f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03fa0b74-2426-4d3d-ad21-5baec0872762",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a767e6e-29ae-4a27-a111-4bc77ab4111e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be17ad6a-f901-4362-9735-736ec17da3ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7289bac8-c4d0-4306-87ae-3bf4ae13bf97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72b6dc75-9d52-4a19-9687-2e8442458f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2bf0330-c5ea-440d-9d12-182b973f12c3",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da434616-4f04-4a7f-a2d8-c1d8589909c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8687bdd-482d-4ee9-a135-85c935a51787"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09b16cb2-aa09-4983-80ce-7bcc267c2bd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d00433d3-ab4c-431c-9f1b-5e3c6649529e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ec94c7-b0a3-42ee-88c7-5b63a5f3670b",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "424d90fd-950e-42bb-8257-c77a54bad966",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "925c4cb7-7615-49b9-8db5-54e4d112b4ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ffcf1a-20f1-4df9-92b4-e7ed2f59ba2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b17578b7-cf8a-41cf-80d0-7d50cea83876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9152365d-61dd-4ccd-8105-5b539e0636cb",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eaedff9-b6fe-4703-9cd1-50363b7f0319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1adf39ce-7ad9-4277-a1c1-abea10a637a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58f0d47b-2db0-4428-9e27-5d1170c451e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fcfdef8-b85a-42ac-83b5-53b35168752e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c52c42e-1ccc-43f0-9847-9580139048a5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7b28908-ea94-4d0e-b709-f480855921fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "300e14a5-cbed-4ca4-afde-e5830565c42d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f236841c-3eda-42f4-b63d-9a22f081e6f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "900731c5-0a56-4d51-a6cf-1b9fd8c76cfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080d873b-ed21-42d9-b331-f07b0fe5e977",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b22d718-b227-46d6-b30c-22a4a960130a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f4b331-f50f-4757-8450-46721af98be6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0ae5bb8-0f85-4dbf-a721-5b77cebd5482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa6fc4d-a0b0-44d3-982d-1ecd1d121268"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09915377-3536-43aa-a8ff-8587076d708f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366f9d3c-d907-412c-bf52-f379740b31fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2bae1d7-9416-4c99-b5a7-051eca30a2d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78ecbb0-2682-4f73-9acf-9f4b738e2c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc88c473-4fce-400d-9f57-7d015bd23515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a48cfec7-5a4d-4740-9948-3b223aee1c8d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2850a6df-8417-4c28-8a76-01dd48ef56c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "837ecab0-965e-49f4-8a31-de21a46a9ec8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11afce8f-78cd-4fd2-9cb7-df946b20c7ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52349d29-aec1-45f5-b9c9-5780115e4f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e5d03ae-e6db-4da5-b2e3-41bd0cea87b0",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97abd8ee-7a3e-498a-96ac-a3d7ef8f9d19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35eeeeb7-6406-460a-b608-6becae62728f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad3d2ac2-2372-41bb-abcb-195b47b047f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b47c05c-2dc8-44b7-8635-e8b5a69aae1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25bdb403-2d6b-434d-afbc-e9db89c3da47",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c6e38d-2f81-4b8c-bca6-97b8e31e0286",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7415d65-8f68-46c1-af56-cf18e586aab7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd619359-b767-46ed-b7b0-57466bd43061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67221843-2166-44a3-a792-52bd1e921f2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5112f774-c6d6-4f64-9ac2-5a93afc03801",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb8e1b03-6b7d-4764-8ef6-d5705324ce85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a3c502a-413a-48be-be7e-c7b463c0c79c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcbdfffe-3433-4315-9ae4-e1378c902b33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed70f016-d2bc-46b1-a165-831c87d0f15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3471b35b-7924-4687-93f6-3aa2e687c981",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c59747-6a10-48a1-9faf-a080878c2559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e19d67f7-4a10-44b2-bdba-e736460801c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be13d5e2-e4c2-478c-8eef-718ebeb90747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50e0091e-bc09-4d09-b164-82de4293e7f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675b62ef-6194-4445-83f5-760e05ca9c2f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eefc31a9-6e5e-4f18-a9a9-95db554c3fc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a645623e-8793-47cf-8e0e-feaa47a6cd8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ab6ea7-706b-4455-8039-e0857fe2dd16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9e727e1-5bb9-408f-9700-d2465bf80328"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63fcece-ffc3-4c25-a57b-ce59364afb3d",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39d8e73b-e0f7-4022-8f14-61d8ad7c8c18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ebab6a5-7db2-48dc-9dcf-796ace67412f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95b1cccd-5ef3-48b4-b87f-5c5b134fe587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0154f106-6663-451d-99dd-55e2f3d7dba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae65ba0e-23b9-4fb5-b3bc-cf459c9ca91d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fba9410-d560-441d-8063-f88aa24c75ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69a6fe4c-00bb-44f9-8a40-e526aecab839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9343f855-7ce3-418b-a3e8-bef5dce72550",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da1cde30-7525-4147-b1c0-01dfe8635b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b0fc5f-26ef-466d-80da-43452aff63a6",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6c004d-0fbf-4b62-8592-e96ceccede68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79a28758-e0af-436f-ad5f-19454fe83122"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec899259-0872-426f-af64-1313f9495605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5714908-64f4-4e46-a008-ee1fd5ed490d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e75ce49c-a912-4e89-986d-6f0935456d76",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f156189-313f-4a89-a315-b5811a38b6e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32e649e3-3365-49cf-9889-9263a100feec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fcdca35-c16d-48e3-b0e5-e89b8185653e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8108973c-daf2-4b08-9bb9-6c130b815505"
                        }
                      }
                    ]
                  },
                  {
                    "id": "891a8985-f4a5-4eef-b1de-0989599958b7",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fabbc842-c330-4c2b-8453-ce9419b36c6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e232071-f549-42c8-9afa-0915aeba81f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30aa59c8-22f7-4dfa-8f48-c5d6ee53075e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cf3c1ef-1f5e-423d-afc4-f6ab24aba255"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ca0fef-5b2a-4f54-ac87-65b8d340910e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a4b9d6f-4ac3-4021-844c-467105b24752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edec5fa1-917c-4e7a-bb5c-d88309fe007d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "213328c3-43e0-45ec-bbd3-6c1c4b77180e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba40df7-0c09-4762-b50b-5d8f1c5c5337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe6d028a-c21f-4334-9bd9-26eed8a1fbba",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8835dea4-5a79-4791-8cc7-e73f79c4d795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76b9a929-9417-4ab4-b1c4-c7e43f4759fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42db3813-f3c2-4b83-bef9-4b8733fc6de2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a6b6932-df97-496d-b0de-bea52d227fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3821c9a-fdc1-45da-8aec-8e4fef95fdf7",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e721329-4577-4102-90ca-8c9fb9fc8917",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e340a45d-589a-4e21-b280-7ca1269f08b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a749727-a7a5-4cb9-8f8a-382e5fdfde3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83ca62b0-4450-4d4c-b287-6fe62405b5a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d8e15c0-7c5c-48c0-b1df-21f1dd4854e4",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e340be1b-7b21-4f44-ac84-0ee638fab30a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65f20f02-4fa9-4d32-9066-62f400a54117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0ed8fd-2a57-48d5-b989-f50febc431e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8966b75d-8319-4250-81a8-75b09a6a1456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc6b428-e8f2-4dec-a944-e4e63897ba98",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ebcc15-d11b-49e8-89e4-44f78e768c1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff886ea1-a6d6-48ba-b601-ca382cf29ac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dc2f167-a941-4fb1-9073-6fc402d4e44d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4eb9493-1b22-4eb5-8df1-43fab982ca0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d842031e-928b-46cf-adcf-816b73ad7371",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc9b404-fa77-40c5-957e-4f75b48961dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddb90666-5db4-4108-9b82-0c6a2c01d2c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceaa0847-f9ec-4a5c-a7f3-5f7be9284071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bea9cdd-8436-4f57-8987-3196714efd0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "329d568c-203d-40a3-8cca-74d1cfe03303",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf30078f-eb78-4812-8044-5e670be35bfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3343cc63-8228-4198-98c7-4ab33110ab1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "710cef2a-da6e-4868-b430-a73f67476dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec143336-f109-4664-96e4-03b7f481e6e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576e91ea-41a1-49d9-bf05-28fdda09c718",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1276e7c2-6b85-44be-abd2-a0383e95c6d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20c7e777-cee0-4df5-aab6-1cef91a165fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10dfb41d-9b6c-4b30-ba82-a0d11e0f182e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a397ecd-b212-4fd0-b7ee-f58895016127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1787f4a4-4a7d-4fc3-a7ae-b908568297ba",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1db3ccff-cf13-45ef-81bb-6982958d8d01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b120aea1-d951-42ea-aabb-ace1ad107149"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a376d118-4c31-46d3-b6af-a267c208bba5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3007bd0-9968-4e27-98dc-f74bbd5ec140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b13efc67-e587-4452-bc61-46933df3a455",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5542d785-ef42-46e2-801e-4c433129bc93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d3fe5e2-3d94-4725-8776-33504c2df971"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd2a56b-513b-4ffe-9214-705768ff1da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69b2e06c-2304-4e07-9110-e11f4b18c322"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab293f98-6aa2-4a6c-a13c-ecb91914a2b6",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8e3666-60a2-4480-9cfe-f5630f9b8e27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4a3d54e-ac14-4363-ada5-a0fa2593d110"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03fa1ff-0bbb-40a0-9324-0f1694dc5505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6086899-9e70-4b7e-830a-c495fd3c6ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3525d9f5-5d35-4e1c-a765-0196ba7b7f26",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98314956-fcbb-4cb4-be06-9d01a9e94515",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00c4afc6-0958-4868-a372-c77e02004708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec58dd35-a138-4426-8793-5d2a9f4483a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b158f577-9496-4902-a5bf-7813aca7c661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72f472f6-e762-4278-90df-fe8df2d35d3e",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72b8961-628a-42d3-bb27-6236178b1623",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7fdfad9c-c784-4f7d-8a72-e8336b9419c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3353bf22-3c32-4a48-bd42-552d24b83df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8080a1d8-5c4e-4c14-b059-0f43dc19b218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b179c40d-57af-4872-ac10-169eb39db4ef",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c09b51-9514-4937-ba61-e854100f8ae1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d1aa0a8-a755-4e82-b991-43d519ab1abc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ef977c2-b796-47a6-9566-9ecb6e52ff44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e3d7be9-724c-4611-8ba5-6bb12d837da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75c68204-2b04-4902-8782-cbc58aac21a0",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06e6a9c-2397-46da-84c4-61a97aa2dbb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92eda73a-0748-43c3-b830-ec169acb81ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96a6bc84-3842-4c8b-8dce-f88400b17b6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fad8dff1-cdae-4434-8674-3d78ad1d3adf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b9ba992-e715-4c19-ae7b-07976010a109",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b586933-d6d9-4c2a-ae94-8ef8e88e256f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae7c22bf-108a-409c-81c0-ededc9757211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3124ac-471f-420a-92dc-f67cf49b7afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a31ddabd-7cd2-4d4d-9467-b6719872d36c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3db4ffbe-f753-44d9-a6d2-5d7f7fab90ff",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb76b9e6-c3b1-4c7d-a51f-5d228d36e981",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "80c0c46b-2206-4af7-9722-9a6948cce3a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd18a734-a5f4-4ec6-8e85-96cb77edfa94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9a0dc63-daa8-4f59-b2d5-335311e976a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbdf0ab5-7bad-4f86-bafd-c1729e1dbd08",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1afaed-1dea-4f0d-a3ea-0ccf4fedbefb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cd03f94-64c8-4b41-8a64-e74446691529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34554aa-fe34-4985-a424-826563a1fd48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba632dc-4971-425b-97d1-4e66cb397f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de21fa39-470d-48ca-a9c5-b6c794807805",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643bf3b8-b9b7-4333-8369-2fa3735315a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "465a1b14-750f-44ea-93df-5d74139513f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "642f86c2-eec6-44a8-8417-136c7237bb9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e46f7ff-b6b1-4b00-bc52-2e6ad314f6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9419bc9f-1932-4414-9970-dddfd9af1551",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc700839-5ab0-4f30-9825-e41e9fc3d262",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7a2aeb2-086e-4a5b-b4b2-da5da19914e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d308bec5-fa77-49f7-b17d-aa47b07020c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3335cdf6-f29e-41e8-b739-e47869bc12c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3855b74d-c801-4af1-8873-773bac5f23f2",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0541019a-5af2-49ba-ac8e-97e319385c19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "050f5373-2c6f-4c64-9950-edb92dd526c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2689a75e-aac2-42b9-9b03-de71634263ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5811c7fa-74cf-41d9-b3c5-59edfe5a3a78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a63828c-32bd-44b2-ada3-65529400921d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7eff399-f267-44e0-8c5d-8c2a35aa741c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "160612e7-981c-49be-828f-a107198d5a26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "669aa992-45d6-4c16-b679-c4c8283260fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed89c0eb-4941-43c3-9867-2996038d5318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "033954f1-2eb3-460f-9327-26c06794cfc9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9edb893d-9338-4548-b305-1bd80d22e88a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cedc178-6c0d-4cdc-9116-f11689813fad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c57689-4dc9-4305-837d-1a0ca9c62c0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b9ab0f23-4559-4704-8c9c-bf660575d6db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4fba816-4e1e-4a4d-aea8-95ead3af3b7c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc0347c-41dd-4d96-9d1c-15496c889b1f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e894fc87-6517-4400-84e7-af77824049a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83927242-43b3-4a8b-8830-0642a9593bb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caa77dfa-4778-481c-85f8-fa3f25e696b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e758a0f8-61a4-4bc8-b0f3-f6a9adcfbefa",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34514ddf-4381-4864-9519-6013ac1b7460",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7ad19e5-bca3-44a1-a1fa-183b1540abd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0861592-0231-4788-8e0b-25e345980e72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a77eed99-9d60-41c6-a077-5480ca22a19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5784f77-3776-4ead-b5f3-038bbe2d13a6",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d222680-b079-4798-b8a6-9a8091ff9eb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e143684-f190-4da7-858c-0715cd711050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7678245c-0ca4-4d2d-bb94-8f1ddc0fc003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1df74f8d-27a7-48ae-b9a9-b7a2c45adee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e97d3a-b407-4a3b-af8e-5827ba6b10da",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "069baceb-935e-425a-9d2e-773a7180ac39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5185851e-1f24-4030-9d50-9dbf401e0229"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57c9119-c9c0-46dd-aeb8-c7078a62334c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9af87d0e-3a07-4b39-8039-71fb8529456d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5246e311-a845-4756-a881-147b763329ab",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c084db-3fdc-42de-9f94-14e2f4503bc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cf4e42a8-77d7-4f6d-9271-ca69c86f0a77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a109a06e-822f-4d83-afe8-dc0e3a3228b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa327add-66b4-4ca2-84dc-9493351b1dc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b26d02-a70b-4443-b3d2-58cd52d803db",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78fccffd-8427-4231-a3e4-747c2622cdaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6173250e-e36b-4384-88d0-03c6262fe518"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a1ccbaf-f919-481b-8227-784cad4fcf5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "701dfc2d-8994-4d7b-8f3b-4e1975563e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a355994-6361-4828-a554-4c284a551ede",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1abc50da-03d2-4121-80fd-c8c24c1390a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "edc529df-419d-4a39-9339-afa78b2588c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee4b59e-6877-4234-9685-d3e1f97ad8a5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d31df3f-a800-4a1c-877a-626c9ab8780d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d825995-00a9-4090-ad06-d2d0b9d0c57f",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c7bfac-04be-491f-a4a0-b809cf49e4c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff29def5-fb35-40f0-819f-5fa99c59b13b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20398efb-e22f-4b63-bdcb-99ec6b9a2175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be4102d9-8db7-442f-925c-2cceb49a61a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4d36ca-c4e5-4f73-aea0-6617b6f47e3a",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5a6fb79-e05d-4b34-889f-82e496deab67",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b32bae7-f14f-445d-be0d-1805ffff9c66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3156849a-50d4-4247-bb90-31f57a7b3559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "185952cf-c5d3-46e4-a5d7-84f36ea35138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f18ec7e7-af21-45ea-a804-998b42f0c232",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58658318-76d8-4d8f-8fcf-27be5bc021ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7fc0d01-8331-416a-85d6-0914909cb24d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83a8e8f-c578-4ddc-bd8f-593f92e4cb4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c0a4b88-a4c7-4d68-b75a-875ac73418f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f87eb51-3ebb-4964-ab20-73766d53e5dd",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8972b769-97cc-46b5-933c-ca25f09f39e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "af8eab63-f095-45a6-bf88-87887896d3ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4625196-b92e-4c95-802f-e7c9d587ce67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c6b91e2-6318-4336-adf9-76e9e5f5ce08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfef7a1b-e509-402c-81f8-b2a910640071",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8177076d-36be-46ab-a3f8-4a1f15c8cf8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8e4e165-3441-4369-ab27-2646bc654d32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e3a75f6-3685-48e4-858c-9896fa81fea0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "368a99f7-7064-44c7-8378-d5370ed0a9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361540ea-ed30-402a-b46b-0b6763a12623",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7892b16-2fb5-4008-84c2-d63c17a6a1dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39ae55e3-bdec-4e4f-8329-cad3217e7220"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06be1280-aef2-4248-bd3a-2ee40a058ff3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6045281f-1da8-4f16-a659-ca4c7409e515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee67403b-32af-4fb4-9aad-5493d580c64e",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52c2800-c439-446a-84ed-c65309de893a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4d800f1-3a05-46a1-a9bb-728648f693e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d5c322-40ce-44e1-8136-e7ae5d3349c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "730de112-df97-402e-8a4b-6719514e5cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e432c9-61ff-48cf-b2ac-e18a13d66d40",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4dfce52-f7f2-49ba-b880-52449c4f83f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e717e163-e126-4999-80c2-3e7cd2e9ba18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "740947f1-abcb-4104-8787-4cd685c06f4d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92b44db2-f944-45cc-a67b-ae858ff88507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec627c8-a81f-462a-a851-36f767869cde",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f5708ae-ed2b-46c3-a074-28920f82653d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3da82116-db80-46b2-a8a6-13ac91b42525"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d781692a-30f7-4547-86c3-826f772aae33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bdc6ab0-4a55-46fb-a5cd-d8a5e69ca99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "363702b8-7a5b-4689-8c03-b4facb5b729f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "245bebae-34f2-4507-9af2-0e7e2c895915",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "380977b5-86dc-42ae-95e2-d9ca49f6550a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ade9322-4630-4cc9-8d1a-6521600c5330",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5193963f-043a-416a-b59c-d5d3012b469b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e71e4434-9cf5-4904-9d68-a43d13972fad",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e1e0dc-f2e8-4168-81f5-32ab7771d8c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "73480ad8-52cc-41e8-babf-7c42208b218c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6409f0b-67c2-490e-ab7d-48ed21ff4c94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "060edd8b-e52c-44fe-81a2-ec3847b3e261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1919913-76c2-45ef-ac52-29617927e4de",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d86c66-448d-4e4a-884f-dc70e22ce8dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f55e7cdf-967d-457e-b1ea-a34044284c3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceb94305-f947-46fd-81fe-b8b43a99a3fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a39ba306-1af7-4dbe-93df-d7afac15ebbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27fec7b-4d76-407d-93a7-ee2ddf4c459e",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa7243fe-436f-44e5-a48d-4aa7a9de36ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b5d008b-a03b-435e-a7b3-4b3c53c1d935"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9bc0c72-f98d-456b-a937-2cbcbf9e01d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7fcf19e-6a14-4e0b-a862-4c320918cb7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ce81460-84e0-4fc9-b98b-48f1568046c9",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10171611-2df2-49f3-874a-ab4b236b98b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "029c3c7d-9e2b-4909-9874-ee1b11e54ccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6941d7d1-a06c-49a6-9f60-4fa4754c72fb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cf17fc7-a8ef-410c-9bb2-bde9141eb5e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0204c702-d77b-40ea-95b9-8252e7da71c4",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd346eb-c9b4-48ff-a5c5-bbeef9820b75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cdc31ce-c78f-4760-95fe-786137cd6352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bd1846d-dd86-4e23-8446-dd13cfe17476",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e7fb944-1898-4038-9156-4de07c2c2636"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "01ea1096-c587-4b2b-a042-6c496d0cb18f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0cf94b01-804f-464d-9681-ad4776d04df4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e47d4885-1693-4b62-9952-ebaf96480f6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d4f0d50b-e28f-437f-b6ad-a89e14d8c68d"
                    }
                  }
                ]
              },
              {
                "id": "40941fe6-8d47-4467-8896-4a0787301f89",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ab5f9960-e31a-4116-8e06-627ffe5bfd3f",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2c7f3f-a16f-443e-aa68-a1f2a972062f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "11e4eb11-6377-465f-b5b5-f9d89ac7d91a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "551bdb1c-eaf2-4677-9ef7-ab1907bc626a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e11a6d11-25c7-4c3d-b90c-deefbd4f9839"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "757d3897-7ec2-443b-b306-365faff32e6c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aaec5870-c776-410d-ba7c-d65f89c22b84"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f73daff-909c-478c-ac79-a12af73839aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "df0c9179-38b5-4ec2-b4ea-73af6d2d5346"
                    }
                  }
                ]
              },
              {
                "id": "f3060417-c3fa-4c5d-892f-6024663aabcd",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "ad79b7cf-a7ea-4cc3-a2bc-2e4ed1b20fa4",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a32d9bf-4b5f-4eea-a494-9879f9c9b910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "71405040-8a08-4b24-8a4f-f285ae83d607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a9e1ac-9e2e-4f3b-a7f3-e7e87f805d1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c445d28-40d4-4606-a69c-6d24aaa5399e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d61735df-895a-466c-aa25-7da5d20a5f90",
            "name": "Positive Testing",
            "item": [
              {
                "id": "93974c08-ce9e-44a6-aa4e-33b08b269b70",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b2442d75-e983-4810-ab00-f737f8c33871",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3160c48a-d410-4781-86fd-cde21db4f75d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "85d47690-c34e-4ba8-b31c-4dc43d119e2b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c6273988-4c88-4417-bd26-c71e83485798"
                    }
                  }
                ]
              },
              {
                "id": "a2f54fc5-bf59-4650-b216-948a55972608",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "546ec7d9-53c4-49b1-b4a2-e9b4b64e609b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2cecc81f-d2c9-41a8-b11e-e077d4c55d9c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d967d588-94dd-4c61-a834-438142ad61c7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "40954bea-a201-4eb5-bde0-b096d39f6926"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3fd009f0-3b5c-49d5-907e-e67018d9bf1c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "2dadfa56-5d0f-4c3b-a5ad-d63b899b790b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef0b544d-d55f-4ff5-8968-95dde1f49709",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bee44079-448f-4f14-b8a8-902cfa06a2d3"
            }
          }
        ]
      },
      {
        "id": "a5ea3fc5-5887-4a31-b013-fe9c9cec6c98",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "698371ac-03fd-4650-85c5-8435f19155c6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c94d2fea-e8f9-4c5a-a522-ce51fabf13c0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ef8f8346-bf22-4d57-a1bb-85b58bc87342",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e394e0-403b-433b-8fd7-1a6eba5831f4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a7124447-ee50-4462-b5c7-82e7d11278a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b8466c-0e20-4d44-98f7-03be25423d49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11d89a02-0094-4f1c-81f4-5b2973860fba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5796b817-3eb7-43bb-9e3c-e553a586357a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89fd1a53-ef85-420e-b9ab-61369121ed2c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0d68a4c5-f58a-48e1-b7dc-4f5fe285b4fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "70ff686a-20e2-45db-9e7f-028167c22ebb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "754d4aac-88e7-44ec-844f-c271ad2e40dc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "487466f2-c717-4108-9cc5-b1a6af8370f5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0b12b34b-0817-433a-a141-4fa763089f12",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "351b56fb-418d-46ac-893f-8a72e1c5d8d7"
            }
          }
        ]
      },
      {
        "id": "ece4106f-9501-406c-9e6b-06332a1b0aa9",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "41ee1480-9651-4a81-be76-a1a945d6c877",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e0002fe0-7ba1-420d-8e73-9098cc93a10e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bf6c84fb-f23c-4145-807c-a382977f7cf8",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a36a39-dd4a-4aee-902a-6c2df4957792",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46566b55-9fba-4a67-a388-337922e239bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93dea3dd-d0e6-40b6-9e74-6b1675b0d1c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d0bec922-1980-47a3-b60a-82506bf801b5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a4d6b711-aee4-4b95-9b56-02434b226274",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7d376d0-beaa-4f7f-a902-f0e39352ddfa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "caf15a01-e069-41a6-89e0-e517e8a2b50b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4b539963-647f-4247-8988-b51487994bd0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2cdef949-4fc1-4e6b-9625-7643b427bccb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fa8f13ff-ec5d-41eb-8197-3777cffb1728"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a31658a7-73a5-47aa-9ed5-489a91e46d6e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "05650835-1741-4073-85dd-6963c90b7f70"
            }
          }
        ]
      },
      {
        "id": "3a2d5c4a-576e-4d60-963e-1f7416fb61b4",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "a734fecb-b483-43ac-9248-84a7a6d6ce90",
            "name": "Negative Testing",
            "item": [
              {
                "id": "82163131-90cf-49a1-a39a-f49f778a0409",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3ec10c62-4992-4b81-bbd2-7efa683a0c44",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c9561b-fc7c-48c6-a015-c8dd9629fd43",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bd79d92c-0060-4a76-996d-64b7b9d5bfd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d133b8d5-afe9-477e-ac80-ea60e7a92920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8ae44dd-4744-40ff-9486-16cba28a3db0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cc4818b0-5153-4005-bdd0-72d85051cd28",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd2ee00a-d496-4897-99c7-8f8e337d36e9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "384bb93b-08df-4861-a49d-9596a440f15f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "625240d9-5587-4904-b3a0-2265c73ee239"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "244b45e2-1ee7-4b39-aca8-517dd293d85e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4281dca1-9bf2-44fa-8b76-8d2960e1fdea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5211931b-809e-412f-ac9c-9751ef207cf3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5f31df78-9257-440f-ad21-c56d53efd9df"
            }
          }
        ]
      },
      {
        "id": "03239bd0-2e4d-462c-81d1-c2de75a13639",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63c4b9eb-b52a-4dd2-8ee2-ef7787318711",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef2074a3-0417-4d29-b4be-a8b90b119dde",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "6905ec11-d04d-4b2c-85cd-035f8563c160",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4aabc8b1-d107-433e-94a3-ddc696816fd8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4a6ecb59-0b51-4e64-872b-e153bed6ced7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 40
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 168.40079365079364,
      "responseMin": 10,
      "responseMax": 22191,
      "responseSd": 1409.6186900255018,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1725669715140,
      "completed": 1725669766005
    },
    "executions": [
      {
        "id": "ed2b7e15-ea51-4777-96d8-33b33975d3e6",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "88784c88-0377-4903-91e3-ea13b455b4b9",
          "httpRequestId": "ed5c74cf-3ac8-48c6-974b-db500203cb36"
        },
        "item": {
          "id": "ed2b7e15-ea51-4777-96d8-33b33975d3e6",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "c05f3343-3d68-404d-bb18-d900b3c4b083",
          "status": "OK",
          "code": 200,
          "responseTime": 74,
          "responseSize": 0
        }
      },
      {
        "id": "31ba2316-ac06-4e76-a175-67a54e0b78f4",
        "cursor": {
          "ref": "21c501f7-5242-4a3e-b93e-2b066d52e875",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "735ced30-4b98-44fa-98f4-f8ab181ed602"
        },
        "item": {
          "id": "31ba2316-ac06-4e76-a175-67a54e0b78f4",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "7660776d-76a4-48a5-9d02-c6252d739d75",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "e292b4f2-1407-4cae-9420-f3ad0f6c600a",
        "cursor": {
          "ref": "e9dd5484-be24-49a3-8f23-8bdc59b9e42c",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "33f90089-b95d-44b1-94cf-57df6a455e5d"
        },
        "item": {
          "id": "e292b4f2-1407-4cae-9420-f3ad0f6c600a",
          "name": "did_json"
        },
        "response": {
          "id": "7f15dc6e-9590-46bf-ac94-d828f04470b9",
          "status": "OK",
          "code": 200,
          "responseTime": 326,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724d69da-5519-4d8e-bd50-8665ac8f8a1f",
        "cursor": {
          "ref": "869e9866-a865-4451-bef6-c6c80670aa43",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7b88f8c7-d374-466d-a0e8-bc43ee679fad"
        },
        "item": {
          "id": "724d69da-5519-4d8e-bd50-8665ac8f8a1f",
          "name": "did:invalid"
        },
        "response": {
          "id": "f4ef7afd-39ef-4576-b996-23fec11d5c59",
          "status": "Not Found",
          "code": 404,
          "responseTime": 491,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724d69da-5519-4d8e-bd50-8665ac8f8a1f",
        "cursor": {
          "ref": "869e9866-a865-4451-bef6-c6c80670aa43",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7b88f8c7-d374-466d-a0e8-bc43ee679fad"
        },
        "item": {
          "id": "724d69da-5519-4d8e-bd50-8665ac8f8a1f",
          "name": "did:invalid"
        },
        "response": {
          "id": "f4ef7afd-39ef-4576-b996-23fec11d5c59",
          "status": "Not Found",
          "code": 404,
          "responseTime": 491,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4e9b5c1-c3d2-49e4-bf4e-f0689b3921ae",
        "cursor": {
          "ref": "b22cf99c-d444-432e-97a1-1a934c67525f",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "af044466-5a0a-42c5-a4e6-f2b0d67f9953"
        },
        "item": {
          "id": "f4e9b5c1-c3d2-49e4-bf4e-f0689b3921ae",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fadb2bf8-9778-469b-82c7-1bf4cd4e92a2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f143988c-3986-4440-9eda-62b081e324ec",
        "cursor": {
          "ref": "0a3084cd-6d65-4b9d-a77e-fcfb5e631362",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8d3b04ab-3a6b-40c8-8b4d-c167295a00e5"
        },
        "item": {
          "id": "f143988c-3986-4440-9eda-62b081e324ec",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "a8abde8a-c415-483e-87a4-cfb782b8db74",
          "status": "Not Found",
          "code": 404,
          "responseTime": 53,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a4fe772-d3ef-441a-832a-1074441a398f",
        "cursor": {
          "ref": "1618906e-1838-4ecf-b89a-04706678c86c",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7cf0e662-44fd-4ab1-9e26-3c094dcfb052"
        },
        "item": {
          "id": "1a4fe772-d3ef-441a-832a-1074441a398f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "04d4b166-6c6f-4068-a7dd-e58a1f948f1a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5e5f7f-10d5-4b3a-babb-376d213a0680",
        "cursor": {
          "ref": "d1d28e7d-dd00-43a2-94a0-3ec79a0b1cde",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "3ccfae23-b0b4-4876-930b-e691f99ae399"
        },
        "item": {
          "id": "1f5e5f7f-10d5-4b3a-babb-376d213a0680",
          "name": "identifiers"
        },
        "response": {
          "id": "43b19678-5d24-4119-a70a-a1c76756d9c8",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed45937b-f1d1-44a9-a65d-dcad5fa5092f",
        "cursor": {
          "ref": "974ec59c-8464-4a00-9da9-656b57422283",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "38c5ad4c-1e05-4e9f-8bde-b0b5356a42c6"
        },
        "item": {
          "id": "ed45937b-f1d1-44a9-a65d-dcad5fa5092f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "ef1d4fcd-6b3f-4761-99d7-31ddbfc44f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a3fadc-8fd0-46ff-97af-0a7ef7d6dcdb",
        "cursor": {
          "ref": "744b4460-35f2-4271-996f-3d8f0e22b527",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a1e6b48f-9935-4b59-9616-ff7c15b41f51"
        },
        "item": {
          "id": "b0a3fadc-8fd0-46ff-97af-0a7ef7d6dcdb",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "53f7113c-ef2e-491f-a6c2-d41f38e3b9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673efe1d-829c-4e06-97b9-5c6d6edf63e9",
        "cursor": {
          "ref": "674c9ab0-af0e-4894-9c3c-cbba39eed0e2",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "bc0f5c2b-8136-4d04-8a24-be7a511eabfc"
        },
        "item": {
          "id": "673efe1d-829c-4e06-97b9-5c6d6edf63e9",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "d1853ec5-bae4-40cb-9eb1-e0b9ffa9710d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d18ad7-7998-4cf2-a71d-8cc29a00ba76",
        "cursor": {
          "ref": "a91dbbb1-1373-4291-b30a-fcb0fd852b59",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2d661e6e-c0ba-4b09-abf5-e7d10c70ffb9"
        },
        "item": {
          "id": "77d18ad7-7998-4cf2-a71d-8cc29a00ba76",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "bca8c923-3d9a-43fd-ae31-6f0c24352a43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ba716f1-497b-4201-b84a-04338b04ad15",
        "cursor": {
          "ref": "50954ea2-4c0b-42cd-9ab7-7f173094f93d",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "da9d88b4-e57d-47a4-9a70-d4ee30df5935"
        },
        "item": {
          "id": "9ba716f1-497b-4201-b84a-04338b04ad15",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "c08341be-4235-4411-8ae2-303f9e607ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9520d9a5-7966-45ab-a076-a46793453c32",
        "cursor": {
          "ref": "633fd313-2144-421b-9764-f8ae58c8de19",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "d3c0ba0d-6638-46b5-8155-9ef786f333d7"
        },
        "item": {
          "id": "9520d9a5-7966-45ab-a076-a46793453c32",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2f3ff513-7f27-4939-ab43-cf8f0587436d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5eaf9d3-24dd-482c-8269-3a413ee28bb6",
        "cursor": {
          "ref": "21ce7f20-4db4-4570-8a4b-85650bbc1587",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "fd603a94-e863-46f9-9b32-c4c27e95e59c"
        },
        "item": {
          "id": "c5eaf9d3-24dd-482c-8269-3a413ee28bb6",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "7be88563-83e7-496d-9dc3-652d579fdc5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711035a0-a685-4c25-81ad-c7708013c28b",
        "cursor": {
          "ref": "b87b6517-5013-400a-a9c2-edb3979ffafd",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "00c215c7-e935-4cb5-a74c-f54395105046"
        },
        "item": {
          "id": "711035a0-a685-4c25-81ad-c7708013c28b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "24aff99b-504a-4839-bdba-62f10c37c579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bade6ee5-1383-4143-8d5d-3f6a11fdcfb1",
        "cursor": {
          "ref": "1614e324-326d-4645-b188-63d9d60e0440",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "a3c22b9d-2cd7-44cb-8c1c-cb6e2778d599"
        },
        "item": {
          "id": "bade6ee5-1383-4143-8d5d-3f6a11fdcfb1",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9aebc106-7cbf-403c-8dcf-73b836f00300",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aca8b68c-1eb2-42b4-9df3-3a325bc4177a",
        "cursor": {
          "ref": "eeea5c1d-8acd-4c21-9aed-7d56c48fb66f",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "469143b6-0f85-43de-865d-229f65a0253d"
        },
        "item": {
          "id": "aca8b68c-1eb2-42b4-9df3-3a325bc4177a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d9385361-bb51-4e12-b925-f24e41563a57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dadb4425-a8c2-46fb-ab3d-79d740309600",
        "cursor": {
          "ref": "78e3207b-685a-4989-96e1-f65569d5b980",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a3d822af-71f9-41d7-b228-5bd2fc26e21b"
        },
        "item": {
          "id": "dadb4425-a8c2-46fb-ab3d-79d740309600",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ca7c9922-d43d-4f0a-a7cc-4ff583d97206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ad6e57-b912-4fde-8aa5-8f89ba559724",
        "cursor": {
          "ref": "6c5e1f5f-0aab-48df-8815-d81b10578d40",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "79258a54-5f0d-4028-a596-f94da52b1e37"
        },
        "item": {
          "id": "80ad6e57-b912-4fde-8aa5-8f89ba559724",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b6ed1e2d-5d57-4ab2-8d36-74f19fb565c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da4396cd-870d-49f0-b096-7c21477e4796",
        "cursor": {
          "ref": "c48e983f-161c-4718-aec6-2bd81236b7a0",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1b1f4499-5568-46e6-89f7-08236a9f4a17"
        },
        "item": {
          "id": "da4396cd-870d-49f0-b096-7c21477e4796",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "68b7df9f-86f4-4b0d-b62e-893e32050852",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479e14da-cb67-4a45-a2b0-5c3f81935c72",
        "cursor": {
          "ref": "237a302a-b64c-445f-b29d-1889cd4125af",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "129ebe13-3084-4c9b-869b-0c90eb7abd68"
        },
        "item": {
          "id": "479e14da-cb67-4a45-a2b0-5c3f81935c72",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c9174376-d6cd-46df-a99c-787a518eca06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf5c6b8-d394-4cd1-a972-a045a873631b",
        "cursor": {
          "ref": "9cafd1e4-c5f6-4927-8fc5-38e19fea4371",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "45d5dafd-ba69-4c56-8796-b765fa968d2c"
        },
        "item": {
          "id": "ddf5c6b8-d394-4cd1-a972-a045a873631b",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "bd44d071-19e1-4582-adf5-2c75807d53b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11678458-b676-4f58-8a92-dc2c1ea7bde9",
        "cursor": {
          "ref": "cdaf5890-d5ea-4bfa-909f-262818623975",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "795ed5db-bcbf-4577-a483-94f4fe7b1634"
        },
        "item": {
          "id": "11678458-b676-4f58-8a92-dc2c1ea7bde9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "1318ea30-ec39-4408-b03c-82da4a50a886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0f7199b-aaa2-4dab-b8ae-151fe4c065bf",
        "cursor": {
          "ref": "d1dabd12-4cd6-4a80-ad9b-27016c9fc170",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "929a7f61-967b-4a6b-bc09-c919d09af29e"
        },
        "item": {
          "id": "e0f7199b-aaa2-4dab-b8ae-151fe4c065bf",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a9f11998-c584-45c8-8276-a75a223d66c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3de099b2-f93c-45b2-b023-6616c9625d56",
        "cursor": {
          "ref": "0ea4e46e-2efc-4610-8c49-4eaff63eb206",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b50e3461-cac9-4b73-b9c0-4bda181e70b1"
        },
        "item": {
          "id": "3de099b2-f93c-45b2-b023-6616c9625d56",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "375d1fba-caf0-438a-a289-28b7feab76eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8273ad11-5a73-40cf-b730-e60201bffb30",
        "cursor": {
          "ref": "7266fefa-f7c0-460b-82ae-069e48f8fe4d",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c57c6b23-76e3-497f-99de-2690c5bb31f4"
        },
        "item": {
          "id": "8273ad11-5a73-40cf-b730-e60201bffb30",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "aa824dd5-8a25-4340-9ddd-ff375037e54b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54572039-fef5-4df4-ae32-60a8b11677c6",
        "cursor": {
          "ref": "686417b9-c80f-4e05-a5b1-6e6ea36dd175",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "e3733131-bce0-4749-ada5-5e5479270f3d"
        },
        "item": {
          "id": "54572039-fef5-4df4-ae32-60a8b11677c6",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "355b312c-9eb2-48ac-9048-851fb78b7341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4812ef6-fdb0-40eb-bf86-c103acaba36d",
        "cursor": {
          "ref": "d85fc156-dbdb-446a-806c-46a32000a59c",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e7ff854e-0d0b-4d9d-922e-2c6e68bba7ae"
        },
        "item": {
          "id": "e4812ef6-fdb0-40eb-bf86-c103acaba36d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "361a66e0-2f9f-4c3c-b79e-0552b71c0eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe31d612-d48e-4194-b200-ceac23289f61",
        "cursor": {
          "ref": "3c1ddfb0-bd5d-4624-9029-0680e3192fcf",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "79d0a1a0-11a3-4166-aded-742a35110d72"
        },
        "item": {
          "id": "fe31d612-d48e-4194-b200-ceac23289f61",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7e37031a-149f-45a9-8023-4e24c83c6543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b782003-a351-48d3-a268-b51b3ad22db3",
        "cursor": {
          "ref": "e2390b2e-7cdb-46d8-9864-3702a55cccaf",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "030b3dbc-6670-45ad-99d6-a9c83b2b3861"
        },
        "item": {
          "id": "8b782003-a351-48d3-a268-b51b3ad22db3",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f9fd9082-afe1-418d-a33c-e0583191a016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 958,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af401d34-cf22-4928-a30c-50f09adad60b",
        "cursor": {
          "ref": "4dbdf60c-9b68-44dd-98b3-910f301b1c78",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "937a5779-940c-4e65-9f08-a7eab8873ee9"
        },
        "item": {
          "id": "af401d34-cf22-4928-a30c-50f09adad60b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6f7c70fb-8f43-4ede-89ee-b57237fc0568",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6613c53-c6ff-4780-9857-317313c7de98",
        "cursor": {
          "ref": "af6adae4-e5c4-4212-acea-839e1df21d21",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "089a83fb-dc4d-42d0-82b7-f7b26900d5a2"
        },
        "item": {
          "id": "a6613c53-c6ff-4780-9857-317313c7de98",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "df0db1f2-5d87-4254-8f26-e13235636b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2d8f2c-b365-478d-bf05-67b662531d20",
        "cursor": {
          "ref": "4384918a-8aa1-401a-8e45-0b3636295f6c",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "878ae796-a780-49cd-ab6a-4be7455ec548"
        },
        "item": {
          "id": "aa2d8f2c-b365-478d-bf05-67b662531d20",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "bba5734f-90f2-4c83-a5e2-bae40ad8c5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2864228b-894b-450d-873c-33f6e69a7d2f",
        "cursor": {
          "ref": "80ca6a0f-4e0d-4df0-bd94-d6618cc02b2f",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0812e043-bf23-4f9e-b4ee-037aedce8dcb"
        },
        "item": {
          "id": "2864228b-894b-450d-873c-33f6e69a7d2f",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e9cbd679-1891-4089-94f3-457f1e5e3dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8349383-4716-4f81-a4c8-0d713b5115fd",
        "cursor": {
          "ref": "457f21d6-4cae-4604-8745-209090dbb603",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "dc611b11-1b4b-42b2-9085-8071be0791ff"
        },
        "item": {
          "id": "d8349383-4716-4f81-a4c8-0d713b5115fd",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "7e53186d-3707-4d23-b8b6-640ef05033e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f471fd03-1e5e-4ee0-a6c6-1bbea9870993",
        "cursor": {
          "ref": "20c7aed7-32ec-4474-9be9-28b7641747a4",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e4b449a9-9ff0-439a-a6d8-6444ee4f8453"
        },
        "item": {
          "id": "f471fd03-1e5e-4ee0-a6c6-1bbea9870993",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b68c66f5-0882-4067-97b1-5253d8244ce4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fd6b293-2da3-4669-9d6b-eed484209b97",
        "cursor": {
          "ref": "98b0ca4b-9875-4b7d-9416-06d4aec41c0e",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "159d783b-6d3e-4d7d-98a1-27034a1225a3"
        },
        "item": {
          "id": "9fd6b293-2da3-4669-9d6b-eed484209b97",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6cd09b87-5dd5-43cf-9c2d-d37ff1fcae55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3aec1d64-5cf9-4893-8cdc-7675c3ccea64",
        "cursor": {
          "ref": "f162b961-a8db-4a6c-9efc-47cb3302d076",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9cc2333a-ec69-4990-b765-3c9b8b441d34"
        },
        "item": {
          "id": "3aec1d64-5cf9-4893-8cdc-7675c3ccea64",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "8b73e9f2-0362-4431-8624-abfde937af06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e95f3862-8cbb-456c-b9e5-e4f1eb69cbde",
        "cursor": {
          "ref": "c8a2526e-4ca9-4514-9676-6653b217ee9f",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8b54a717-9b73-4ad9-aa37-ef92e6a8dd4f"
        },
        "item": {
          "id": "e95f3862-8cbb-456c-b9e5-e4f1eb69cbde",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "57a829d6-f54f-41f7-ae34-b714570361ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da02483a-4471-499b-8873-d06609d6cf64",
        "cursor": {
          "ref": "7dbdf45e-052b-4e19-bccf-ecbe2fbfbcb8",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4128462d-890a-4631-ac8e-25a7731e4dc7"
        },
        "item": {
          "id": "da02483a-4471-499b-8873-d06609d6cf64",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "dbaac7a9-75aa-45ba-9327-a2d9e1d0e5a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7682e99d-ea50-4758-b81c-39b33d521220",
        "cursor": {
          "ref": "4d802ca5-6eb3-4a08-9a61-de5ed6fe0641",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "16c4d97f-4584-46dc-9903-fbd202eb7816"
        },
        "item": {
          "id": "7682e99d-ea50-4758-b81c-39b33d521220",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "af44ddb8-7a3a-4bd5-8e60-9461731d02d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd00e8b-331f-4a4f-b711-4edea9ea3953",
        "cursor": {
          "ref": "5a6e7227-023d-4939-bc8f-83eac9caff32",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "61c8e123-fb03-4b71-951f-6e36ea39842a"
        },
        "item": {
          "id": "cbd00e8b-331f-4a4f-b711-4edea9ea3953",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "0ae7c8e8-57ed-4e57-9820-034e8a724cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46fe616-4928-4179-9e45-ef449aca1b45",
        "cursor": {
          "ref": "4f043800-60bf-4cf1-add2-4bb0365fb832",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6281aaf1-eea0-4982-8513-7a20e430c95d"
        },
        "item": {
          "id": "e46fe616-4928-4179-9e45-ef449aca1b45",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8d700adc-a86f-44b1-9cc1-4a26136ed693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449e0048-736c-4a09-b5f9-d768f40aa1b6",
        "cursor": {
          "ref": "e68980fb-8d9e-47a4-b11d-852bb7551894",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "86cee855-fe50-4d4f-bf8f-1697ad88bbe8"
        },
        "item": {
          "id": "449e0048-736c-4a09-b5f9-d768f40aa1b6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1b637f91-5618-40b1-bd09-e7fb4bde645a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aab49e9-37e0-4abc-93be-042b05f3b54c",
        "cursor": {
          "ref": "01c1b901-d0e3-4b6c-bdfa-bffa562b4d76",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4f7f2973-df84-4405-8cb3-df5bffacb92e"
        },
        "item": {
          "id": "9aab49e9-37e0-4abc-93be-042b05f3b54c",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c17d9e23-3bee-46c4-9cfc-0f89bf87fe55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fce1be3-4cdd-4511-82e9-0e62bdaa02ca",
        "cursor": {
          "ref": "7aaee0a1-4d2a-49fd-85e6-f619fd446ad3",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "8ef229b2-925b-493b-b2a9-9712457bbda6"
        },
        "item": {
          "id": "7fce1be3-4cdd-4511-82e9-0e62bdaa02ca",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4ec07f52-8f93-416e-99ee-1c168d5ad838",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee1662f-6fe3-48a4-a2f8-4ad946f04257",
        "cursor": {
          "ref": "54a82949-0954-49b7-b766-659d540405ac",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5ee53a7b-313a-485d-9494-452eb2e8262c"
        },
        "item": {
          "id": "2ee1662f-6fe3-48a4-a2f8-4ad946f04257",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "854cfeae-cba6-4194-9ef0-ceb1add4384b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b74cd0b-e565-4fa4-9f1f-d945be9aa833",
        "cursor": {
          "ref": "f6a658fc-f3bb-4548-b44e-a7980d95c745",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ec121892-3a84-4882-a8b4-447bdaaedc08"
        },
        "item": {
          "id": "5b74cd0b-e565-4fa4-9f1f-d945be9aa833",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9d936fb5-7959-4b64-baaf-3b3bac3e3230",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9b2755-0ca9-4cb0-9bba-113d226bc6f8",
        "cursor": {
          "ref": "d78bc165-e0a1-482e-892f-d30943761e4c",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "907939ad-01fd-4b8e-ab36-47bb4a694c2a"
        },
        "item": {
          "id": "cf9b2755-0ca9-4cb0-9bba-113d226bc6f8",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "082b4634-735e-4f30-a874-ffa92ba52946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22f5cec-ca0c-4144-a25c-8518e539dac6",
        "cursor": {
          "ref": "b314ac0c-bb70-4381-858a-ce3409d0ef34",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "dc57c3f3-8453-4377-b676-7aefa96283aa"
        },
        "item": {
          "id": "d22f5cec-ca0c-4144-a25c-8518e539dac6",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2959cdcd-9fa8-44b0-9d39-31cc689ebd1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30922994-2ea8-45a6-b141-d0cad4c7da37",
        "cursor": {
          "ref": "2fb59a8a-54db-49e9-9b8a-cd3274f0fd98",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "39aeb0a8-f2fb-4387-9722-747c867d820d"
        },
        "item": {
          "id": "30922994-2ea8-45a6-b141-d0cad4c7da37",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "02d88f77-07e5-4648-a82d-62e1ef9e1af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da3ec1f-afd0-43f3-b571-7eaa2c1ad662",
        "cursor": {
          "ref": "ed580015-f55e-4f36-abd1-5ce6c10a3f63",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e7894b9b-d4ff-4d06-a0e0-94540781b73c"
        },
        "item": {
          "id": "0da3ec1f-afd0-43f3-b571-7eaa2c1ad662",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2b3ad085-a0f4-41e9-a651-58a261151a99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef0b3637-2ef1-4668-9e7d-10eb2715cb91",
        "cursor": {
          "ref": "72682dc3-b706-4694-87f1-f1fa565f2bd0",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "15e8be44-c092-4517-a804-d56b5dadaf55"
        },
        "item": {
          "id": "ef0b3637-2ef1-4668-9e7d-10eb2715cb91",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "e04b92da-4a88-45bd-acce-102a44d7cef9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9e98e0-1e25-4f73-b62f-e4c5f198c93c",
        "cursor": {
          "ref": "5fde0e03-8e73-40ff-a387-f2fbcd769a16",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "45e768ac-bb85-4533-9914-daf36a7ac668"
        },
        "item": {
          "id": "ea9e98e0-1e25-4f73-b62f-e4c5f198c93c",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "01184b7f-12ae-4ead-8f33-5dcfcac2ceec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3ec9e8-cfce-47b5-bcc7-70d51940c5ce",
        "cursor": {
          "ref": "4951089d-7f87-4a60-9d0f-26e9d4767446",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "103ed4f0-86da-458e-848f-5b12f50ccd38"
        },
        "item": {
          "id": "8c3ec9e8-cfce-47b5-bcc7-70d51940c5ce",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f0bff625-62f8-413c-a05e-c17be001fb0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d56194-9615-4b41-a443-8b39d285918b",
        "cursor": {
          "ref": "3ae31810-56a3-468b-8ed0-531957d3a968",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "922062fa-7350-40d5-b93d-1399f3182ed3"
        },
        "item": {
          "id": "33d56194-9615-4b41-a443-8b39d285918b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f0ef35dc-7753-4af5-a68b-8775db9d6656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976b350f-207a-4825-b662-7ef7f02f14c5",
        "cursor": {
          "ref": "11e72dfc-56ef-43ef-b36c-8c5b7e286f3e",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "004326ae-d4f2-44a5-b531-bea7c8a427bc"
        },
        "item": {
          "id": "976b350f-207a-4825-b662-7ef7f02f14c5",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0919847a-6af2-4a0f-8f81-49433fa36f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6724cc61-efac-443d-bb46-f92abbeaa243",
        "cursor": {
          "ref": "f131d3f1-67cb-4ab1-9a3a-569d7949538b",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "61606062-a126-48ce-8c8d-18405f4f15ae"
        },
        "item": {
          "id": "6724cc61-efac-443d-bb46-f92abbeaa243",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "a1b73210-f516-4e70-a434-afff8e3253be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3f44d1-a82c-43ba-8269-ba6e28fcdf9c",
        "cursor": {
          "ref": "13faa521-b8cb-4b20-b949-62e8e57c67c4",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "0eab3ee5-d076-4b89-926e-028b12992b23"
        },
        "item": {
          "id": "7f3f44d1-a82c-43ba-8269-ba6e28fcdf9c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "8bb5c18c-20d2-4f2e-b167-e62d3fb1eeb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03d53c4d-7805-4764-9428-60a994efa79d",
        "cursor": {
          "ref": "979cd646-93de-4302-a495-9d485f7941f3",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e7037644-e15b-48b8-82ec-ed4eba1e6470"
        },
        "item": {
          "id": "03d53c4d-7805-4764-9428-60a994efa79d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "f82a30cf-eeb2-4136-88e7-3dd5ac7901af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a33504-057c-4174-81ae-5c350d4685c4",
        "cursor": {
          "ref": "570615c9-d880-46fd-a2f8-8796900fb224",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d190ea80-7f8e-456a-9291-70f7231d840e"
        },
        "item": {
          "id": "c6a33504-057c-4174-81ae-5c350d4685c4",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "8f759e53-d5ca-41d7-ba9c-9f6b2edae9bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01097ac-c95d-4bdc-93df-043cb4d2a2e6",
        "cursor": {
          "ref": "3053aecd-333e-4413-8643-fbb22d973ceb",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "653a5568-e453-496a-b82d-6b1957153ede"
        },
        "item": {
          "id": "b01097ac-c95d-4bdc-93df-043cb4d2a2e6",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c670bbe5-a9c6-4a2b-aac0-1c68bf3401e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f4c20b1-f392-4186-bab4-ddbc7047b124",
        "cursor": {
          "ref": "260077fc-a1f1-4aa9-a96e-88c12cfc52bb",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0f86b972-1bda-486f-8aa0-40bd7df80592"
        },
        "item": {
          "id": "7f4c20b1-f392-4186-bab4-ddbc7047b124",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "156ecb8b-4145-4534-ad11-24de84a1b8eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4704aea-1764-4f4b-8ea7-dba580dbb0d6",
        "cursor": {
          "ref": "db8b15de-2402-4a08-b18b-ed8bbc90c56f",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "8eb7b97d-1467-4e22-9bb0-ed803bf3fad4"
        },
        "item": {
          "id": "d4704aea-1764-4f4b-8ea7-dba580dbb0d6",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "972965b5-16c9-49fc-9a70-cd42f9b0090f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fff00bc-8c8d-4ae9-a8f8-16d23f937702",
        "cursor": {
          "ref": "3a86af2f-ce13-44c3-9d29-6404bf781427",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "259bf3be-e5ac-4cad-b514-600634600ce3"
        },
        "item": {
          "id": "0fff00bc-8c8d-4ae9-a8f8-16d23f937702",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "05452fc4-979d-4111-b5c2-7bd48f934857",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480a88e7-d88f-459b-9e61-e4cc52b44b18",
        "cursor": {
          "ref": "7ae46c54-842d-44f3-a1c3-40ea77c9b1f1",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "597d34b1-7d51-4c9e-b62c-1eba028d55ce"
        },
        "item": {
          "id": "480a88e7-d88f-459b-9e61-e4cc52b44b18",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "966cc167-219d-4a02-ba4e-b4fe21865a91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b74d5ba-f378-4f7c-9417-0b3bcd99a12e",
        "cursor": {
          "ref": "414ee2ad-b7a6-41a6-9708-e2028b5e1a6a",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "89b9f43e-f9de-4d8a-9ac3-1baf02090a0e"
        },
        "item": {
          "id": "9b74d5ba-f378-4f7c-9417-0b3bcd99a12e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "bd408bf4-f3fa-4258-aaed-77480fc16785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c0bc39-bc15-40bd-81b6-0fdfc0267142",
        "cursor": {
          "ref": "6d9559cd-1fcd-44b0-9aaa-d2a60e5594b3",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "27884cdb-ce65-4877-9961-0b7b2f8c0bd5"
        },
        "item": {
          "id": "d3c0bc39-bc15-40bd-81b6-0fdfc0267142",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "e6853fef-195c-4f93-9226-5f662fe30dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6497bc6-2033-4d70-92fd-36382b167f47",
        "cursor": {
          "ref": "3e5215f3-590f-497c-85b7-a0a20996140c",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d0039eff-19ba-4703-907d-7b1a52022de8"
        },
        "item": {
          "id": "b6497bc6-2033-4d70-92fd-36382b167f47",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c9fa9791-a066-43e9-8bfa-6cbe4000a7dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab08c7be-90f9-4d79-bb89-9cd694b77251",
        "cursor": {
          "ref": "8fc7e730-2371-4f94-8953-0237218f50c3",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "96015709-1a70-4d34-b48a-0738b1995d22"
        },
        "item": {
          "id": "ab08c7be-90f9-4d79-bb89-9cd694b77251",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9b6cbef9-fea0-45ed-a10f-cfe5e07733d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52bbf2ba-0443-4575-9185-8b095871510a",
        "cursor": {
          "ref": "0eb5bc10-3e71-42f3-aa81-91d667e8fdfa",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b5ede268-6172-4d60-8511-e8d4c4fd77bc"
        },
        "item": {
          "id": "52bbf2ba-0443-4575-9185-8b095871510a",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1b00fa49-9566-4331-a041-73ffee6984ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ee8c4a-c5a0-4840-8c5d-52e278d1fc0c",
        "cursor": {
          "ref": "73319356-5c3c-4894-b072-43ab25da4dd1",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "55b44770-88c4-4901-9a4d-5ab431fc65dd"
        },
        "item": {
          "id": "a4ee8c4a-c5a0-4840-8c5d-52e278d1fc0c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "c003c3a1-a821-46e7-8f45-f353a9b78979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0189c5-54bd-49e0-8662-3347b6b1c7ce",
        "cursor": {
          "ref": "2899781b-1e54-4bab-a80d-c29dd7f84f6d",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8ab049a3-9a82-4721-92ac-25ba1b5ec059"
        },
        "item": {
          "id": "9d0189c5-54bd-49e0-8662-3347b6b1c7ce",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "611597ca-d5f7-4c99-9091-0db12c03f13c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372f5d10-a24f-4967-9397-c61b7c453b4a",
        "cursor": {
          "ref": "ab4db1d0-253f-4d48-8934-b23e7d504963",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "67173cb8-e05d-4aa3-966e-92a5d10d3552"
        },
        "item": {
          "id": "372f5d10-a24f-4967-9397-c61b7c453b4a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "fbb15217-8e81-454b-89c7-727429c99b20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83435e68-e93d-4dec-a18f-9fb2e1771b8e",
        "cursor": {
          "ref": "6a1bd0f9-2541-4383-a983-91ae9add21ad",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5ed61006-8caf-4457-87fd-7de4d9fedc8f"
        },
        "item": {
          "id": "83435e68-e93d-4dec-a18f-9fb2e1771b8e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9c02bd13-c1dc-47bf-a72c-d8318c52b556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96575378-321c-4346-a50e-8e721484f923",
        "cursor": {
          "ref": "ae2ffbd1-acbc-4c13-96cb-82d6268ebe72",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a46e0521-d760-4004-9c92-8873b8ab2a8a"
        },
        "item": {
          "id": "96575378-321c-4346-a50e-8e721484f923",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "ca6bf92a-28e9-489e-bf2c-237f936fc549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155120b7-ffc4-4e38-81f6-9687d55d00a2",
        "cursor": {
          "ref": "c4d335ca-6109-47cd-88af-5cdbf7479d4b",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b0b4517f-538a-4587-8847-a614a626adfd"
        },
        "item": {
          "id": "155120b7-ffc4-4e38-81f6-9687d55d00a2",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b40b624c-20ff-49f7-b62a-24a993fe0f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84e959a-7c67-447d-87af-871789f3298c",
        "cursor": {
          "ref": "3539b691-0aa7-4fae-95f8-315bf85c90fb",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "4974274b-2481-4d27-be3b-3c775760c2df"
        },
        "item": {
          "id": "b84e959a-7c67-447d-87af-871789f3298c",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6eef7493-2904-4035-9a1d-e3b9436e9361",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4489d8c9-235f-4979-858f-6a4f3b239060",
        "cursor": {
          "ref": "7a657cfe-e5cf-4da5-98ff-0a234690323e",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "db9fdad3-ec93-4862-933e-c8e02de3f328"
        },
        "item": {
          "id": "4489d8c9-235f-4979-858f-6a4f3b239060",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6438a58c-d31e-42df-a79c-4f4e3c93691c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fa47aed-bf7b-4195-a3bd-54e18473a03b",
        "cursor": {
          "ref": "02a77f01-db02-4a37-8b68-1e1b674209f5",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "18729d24-977d-42d3-9073-8763cfb6f6c2"
        },
        "item": {
          "id": "2fa47aed-bf7b-4195-a3bd-54e18473a03b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "0d8ae2d5-5dfb-492a-b955-d4c4152f3072",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d1bad6a-69ef-419f-9bd4-6f8e3274a8bd",
        "cursor": {
          "ref": "1d5f76ef-df7f-41ca-9bfb-8419342cf9dd",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1e631bef-a5c0-4aee-9b02-2d7e5aa52886"
        },
        "item": {
          "id": "2d1bad6a-69ef-419f-9bd4-6f8e3274a8bd",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "13053b29-e80b-400e-89a9-27ac40c1dc56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "646abb1f-84d1-4fa2-9be5-a310c2041c4b",
        "cursor": {
          "ref": "6b9b7c23-8681-4587-9711-5122cd3470e8",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "02027c5e-917e-4522-a085-b3a22be447fa"
        },
        "item": {
          "id": "646abb1f-84d1-4fa2-9be5-a310c2041c4b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "60a5be22-52d9-4511-bb92-59a4fa3bc29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2daf801-bb65-4259-a428-3e76f9c30e74",
        "cursor": {
          "ref": "e48e2596-e650-473c-a5ef-0b88f1f149dd",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bb21915b-4b01-473c-88c5-4b3b2b3b5402"
        },
        "item": {
          "id": "c2daf801-bb65-4259-a428-3e76f9c30e74",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "c4f356f2-57cd-4cbe-b4f2-2cc6ba44eb49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad01b82-2f01-40e4-bc85-85693769d86d",
        "cursor": {
          "ref": "c849d8c0-c89e-464f-9e46-2f40cb07050d",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "dadff30b-7011-437a-b7bb-14a4c5d9cf29"
        },
        "item": {
          "id": "dad01b82-2f01-40e4-bc85-85693769d86d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "0c6056f4-ad76-41e8-becf-a6eb33e90964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 125,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9953349a-96d6-4935-a136-4d58d5a71605",
        "cursor": {
          "ref": "18976238-8151-4e49-8d11-fd638c585893",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "4deaac24-d054-44a8-ac13-c70edbdb6237"
        },
        "item": {
          "id": "9953349a-96d6-4935-a136-4d58d5a71605",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "068a9c9d-556f-4ad2-a5ae-5f6690f41a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339ae2d6-c1c2-45b7-a6f6-06eaed133c22",
        "cursor": {
          "ref": "7e6db46c-0798-4243-a305-e5207e1f4339",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "82601705-c60f-4df1-9f57-69905f767708"
        },
        "item": {
          "id": "339ae2d6-c1c2-45b7-a6f6-06eaed133c22",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "20fb7b90-8284-40cb-badc-f2a4df41f00c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08607480-0ff9-4196-8339-7cd4d15cf04d",
        "cursor": {
          "ref": "5faae15c-b3cb-4083-a837-6fa55dce3f73",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "961cb59d-15b8-4808-b228-d67b8c92ebce"
        },
        "item": {
          "id": "08607480-0ff9-4196-8339-7cd4d15cf04d",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e1693343-573c-4461-97c9-8a422bb30216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7931a45e-5bec-41db-80c7-b3a33575d4f7",
        "cursor": {
          "ref": "da54ed31-d62e-446c-9eef-a643337d6f32",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f699bef2-b1a7-4035-9380-f8794ae6a75b"
        },
        "item": {
          "id": "7931a45e-5bec-41db-80c7-b3a33575d4f7",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2f110bd9-949b-4b4d-86b8-89f49c64fed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "519e3ae9-9446-4913-94f4-677d91ecc202",
        "cursor": {
          "ref": "96a52989-3f06-4857-9733-851109e975b6",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "cb0c58b8-34f1-4dc9-9b91-87b1aec3503f"
        },
        "item": {
          "id": "519e3ae9-9446-4913-94f4-677d91ecc202",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "5cef716d-9642-4d48-9830-63739842b855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d44330-f984-4ea2-8aaf-d9c27643ed3d",
        "cursor": {
          "ref": "73ccecd2-8274-4eff-91ad-77fb64f37880",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b0d548f8-c00d-45e7-a99d-5f7898188c80"
        },
        "item": {
          "id": "f3d44330-f984-4ea2-8aaf-d9c27643ed3d",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "12077a9a-7c38-45db-9b4a-67a08a65a88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7dbb37d-68c8-4bd5-bfcd-5981ea2ed097",
        "cursor": {
          "ref": "b242e6cb-b8b3-4968-9724-082a4ec6c16f",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "dead1be2-6f5e-4d8e-b817-249bb88f4bb2"
        },
        "item": {
          "id": "b7dbb37d-68c8-4bd5-bfcd-5981ea2ed097",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5eafc97a-3b3b-4edb-8014-3ad80d808475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f954f536-ed65-46df-baeb-f8d3313432d7",
        "cursor": {
          "ref": "e4794ef7-45f3-41ee-86c5-f3baa9c3e617",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4f530449-d210-439b-ac5b-0e50f6e84339"
        },
        "item": {
          "id": "f954f536-ed65-46df-baeb-f8d3313432d7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "7b28555a-5639-43c4-9043-9c2372e5982d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1050924a-654d-4bb3-9946-487ca7cf6093",
        "cursor": {
          "ref": "145c5bb1-84b5-4fc6-a1c0-3c50aa6fa4d9",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "67d1be63-45e6-4b8c-b17b-c23b90c625cc"
        },
        "item": {
          "id": "1050924a-654d-4bb3-9946-487ca7cf6093",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "899480b5-913b-4004-8a0b-84aeac19d3ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ea803f-0377-44c3-97e7-4718694ba8cf",
        "cursor": {
          "ref": "e518326e-76db-4233-be0d-9fdbd78f818a",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "be692482-f543-4d1e-bbe5-cb111cbb969b"
        },
        "item": {
          "id": "54ea803f-0377-44c3-97e7-4718694ba8cf",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "4637f37c-eef6-4e83-b985-7f634109b03a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b538385-6b5b-4886-9c01-ad48536acb8a",
        "cursor": {
          "ref": "d18abc4c-f458-4d3f-83a7-9d0b22a9f2ad",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f63ee622-ff15-4d90-a2e2-2471df8c22d6"
        },
        "item": {
          "id": "6b538385-6b5b-4886-9c01-ad48536acb8a",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "fb4cab92-6f5a-48fe-8ff7-e2409f46d2e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4d8e8f4-fe8f-4d06-aa24-0aeb4cbb64b4",
        "cursor": {
          "ref": "d9452cf0-e171-4b9a-abcd-8a89b63423cc",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "6ecba224-c120-4025-8568-9a2a9f0592c4"
        },
        "item": {
          "id": "a4d8e8f4-fe8f-4d06-aa24-0aeb4cbb64b4",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8b4aa841-c2ac-4e20-856a-b83b4a72cfe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f6ae65-ef2c-4f90-83b4-798f024bdcca",
        "cursor": {
          "ref": "31df589a-904e-4f6e-a36b-2eb963104074",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "d6480f59-42aa-4b11-b65c-231007778774"
        },
        "item": {
          "id": "c5f6ae65-ef2c-4f90-83b4-798f024bdcca",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3bc90c8d-bbfb-47a9-878b-545273bd3fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1974f2ea-abe3-4903-b341-eb62d0199ec3",
        "cursor": {
          "ref": "50fc46b5-41ba-416b-a5d1-a16c3f8ebe04",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "ff5b820e-6275-4d9e-985e-b7694ef00e57"
        },
        "item": {
          "id": "1974f2ea-abe3-4903-b341-eb62d0199ec3",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a74a5722-88b4-4b54-af8e-2998463772f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 215,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d29ed2e-26cb-42b2-bc74-defe9e6b8f3a",
        "cursor": {
          "ref": "b9713678-a987-4d7c-b563-489ff0d6b89f",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "19fe406d-03bb-4f9a-a136-c4c63135d3ed"
        },
        "item": {
          "id": "6d29ed2e-26cb-42b2-bc74-defe9e6b8f3a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "fb40debd-d36d-4826-882e-34d1a7b1cd42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a516706f-a990-4887-b496-848e97ef93ee",
        "cursor": {
          "ref": "adea71fc-5568-4cb8-87a0-ed658bce147d",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b17b680c-f11c-4bb2-9cef-3aaaddf8a399"
        },
        "item": {
          "id": "a516706f-a990-4887-b496-848e97ef93ee",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a936c93b-1c18-448a-8749-b36f80038822",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6184be49-426b-427f-a1f7-4f9184cef207",
        "cursor": {
          "ref": "54d46ba9-9615-49fe-8e9e-811a4e335e08",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "f08fcf71-ee25-4ca7-b7e5-a3cf0066ea44"
        },
        "item": {
          "id": "6184be49-426b-427f-a1f7-4f9184cef207",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "ad760a6a-43f4-4064-81d0-a5d1fe971a06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "104578ae-a8d7-4182-ae86-b8badc5eb456",
        "cursor": {
          "ref": "72af1f22-9d63-4084-86f7-b963f0214c44",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "38cc14f5-4832-4edd-8d6b-4c9a8c755da6"
        },
        "item": {
          "id": "104578ae-a8d7-4182-ae86-b8badc5eb456",
          "name": "credentials_issue"
        },
        "response": {
          "id": "39407219-34a9-49b0-b5b5-d67e3ad9e19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "32a7caf0-908f-45ed-b2d5-8072c2a47729",
        "cursor": {
          "ref": "78df2c13-d52f-4a85-b31f-e99c28891c68",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5b155c70-3427-4f6c-a8a4-ca96dfe0360e"
        },
        "item": {
          "id": "32a7caf0-908f-45ed-b2d5-8072c2a47729",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "840ac8a3-5610-430c-bfa9-99cbcf970238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "4bee8cbd-d367-4312-a350-508f2bce9d5a",
        "cursor": {
          "ref": "71e67d96-5e24-4e8b-9176-9a7e34da2dad",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "fcf31241-348f-4d76-b243-e9d96f42c62b"
        },
        "item": {
          "id": "4bee8cbd-d367-4312-a350-508f2bce9d5a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a1816f69-f5a5-49eb-b969-49aa0acb4eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "52547109-f680-4805-a488-346fd4af2734",
        "cursor": {
          "ref": "6e0e4bb5-f026-44d5-8477-f30e1a430388",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "a14f1a56-389b-495c-b8a0-0bed74174314"
        },
        "item": {
          "id": "52547109-f680-4805-a488-346fd4af2734",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4ccb7bf7-3ae1-40c8-a798-6b54c18b8e8e",
          "status": "Created",
          "code": 201,
          "responseTime": 22191,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b383c9-8b54-4f3d-98b5-58d929a4699c",
        "cursor": {
          "ref": "b53bd578-2f3e-4b12-b605-7a90ecdebb85",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "662636c2-039f-4ebb-8def-247b6822decc"
        },
        "item": {
          "id": "85b383c9-8b54-4f3d-98b5-58d929a4699c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ee39d499-5a38-4c2a-9725-5ef36bd62288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "677f016f-920e-482d-8974-24c9109fb7cb",
        "cursor": {
          "ref": "33b2f35e-1b68-4555-ae25-358f25115af3",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ba042570-2578-493a-8c51-684356428992"
        },
        "item": {
          "id": "677f016f-920e-482d-8974-24c9109fb7cb",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "26a18a7a-c09f-43c5-81af-e2c160d9e8ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 136,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "47949ee7-b187-4a5d-9285-32aeccf3c1d9",
        "cursor": {
          "ref": "3a335ced-0097-4bdf-b4a1-c7b2a66acbec",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "dce2367b-b828-4031-b424-0698fc87bb1b"
        },
        "item": {
          "id": "47949ee7-b187-4a5d-9285-32aeccf3c1d9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f2b4a649-e756-4197-8071-cee9a2618c1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b62803-9aef-4cc2-9f0d-f1d580401e2d",
        "cursor": {
          "ref": "d97200c8-cff9-4b3b-8289-46a8f5e476b1",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "00cf3faa-9fcf-4d16-8360-6b02ef9aa32b"
        },
        "item": {
          "id": "24b62803-9aef-4cc2-9f0d-f1d580401e2d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f151fe8a-dded-4598-a477-7f177cbad7cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "853ed5a1-788f-4a21-a3b5-4b0fcb53bec1",
        "cursor": {
          "ref": "1fbabd23-2ed7-45f2-a52b-ea3b08387447",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5c777708-34fd-4e4f-8263-1c8b1715fc33"
        },
        "item": {
          "id": "853ed5a1-788f-4a21-a3b5-4b0fcb53bec1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "429e61c7-272d-4aaa-b12a-ab7337ebd364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9fd6a32-fab5-4187-b296-d272176b0d70",
        "cursor": {
          "ref": "4a209bbf-14de-4142-8df5-3c3b1e41da44",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "0970b16c-88fc-4dd5-9b70-ae52186b85f5"
        },
        "item": {
          "id": "c9fd6a32-fab5-4187-b296-d272176b0d70",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e4741e28-2323-490b-ab3d-426f0cc24c9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f97052eb-0109-48a2-bb79-434d2c51c7fc",
        "cursor": {
          "ref": "f815636f-2a65-4f68-b534-5fe234fea582",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "e205098b-87b2-4df7-8304-13bdbfb5a68b"
        },
        "item": {
          "id": "f97052eb-0109-48a2-bb79-434d2c51c7fc",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "72c7003b-7352-482c-8f39-f47f5bf7a8f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b236efe-d3a4-4886-84a3-db55742417b8",
        "cursor": {
          "ref": "5825bb45-9f38-4fcb-9948-f2b7c47dca6b",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ec4a8cf4-4efb-4bc2-adee-5b02cc1bc731"
        },
        "item": {
          "id": "2b236efe-d3a4-4886-84a3-db55742417b8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "88ab8da2-8339-4510-aeff-1ba352da4fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df2f6406-d799-41a7-b1ee-abf475f0179d",
        "cursor": {
          "ref": "b476478f-a4a6-4e22-b79c-f721454803e0",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "0c7271e7-87f8-43bb-9293-d33ccaa8b656"
        },
        "item": {
          "id": "df2f6406-d799-41a7-b1ee-abf475f0179d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "20e18bbe-e699-4bfc-b660-d415b94b84e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b286957-2174-4df9-9fa9-a5d1bf64f28d",
        "cursor": {
          "ref": "b656872d-3f26-499f-b1e8-2a7e1df64b56",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4e5f5b26-8dbc-4416-8475-d601d1faecbf"
        },
        "item": {
          "id": "5b286957-2174-4df9-9fa9-a5d1bf64f28d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d992b75f-9343-46fb-99c7-ad311a84fe1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c5baa5-e2fa-4304-9590-e5f8c6796a55",
        "cursor": {
          "ref": "7270eecf-8967-46fb-af13-e2a14ac6f5eb",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8b0edaf3-f39d-4f12-9d4b-96b7dbe57f7c"
        },
        "item": {
          "id": "c9c5baa5-e2fa-4304-9590-e5f8c6796a55",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a5c007b6-c52c-448d-aba6-4539596d7aa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402654af-58bd-4804-851d-bdb0125d0363",
        "cursor": {
          "ref": "5b58dee7-fc29-4531-811c-8164c3f3256b",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "26e42633-166e-431c-b0e8-e029c087a530"
        },
        "item": {
          "id": "402654af-58bd-4804-851d-bdb0125d0363",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f57d1d91-1760-4bfe-88d0-aa7859bc7516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05cb5451-4ece-4a3e-b47b-d8c26d1cc844",
        "cursor": {
          "ref": "70ab62cb-f1f7-4883-bcae-70182d7b4812",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "eed1cf99-705a-4191-9388-5aaf1bd6d4fc"
        },
        "item": {
          "id": "05cb5451-4ece-4a3e-b47b-d8c26d1cc844",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f0d406ca-8f3e-47f0-8c34-affbbfc1a83f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dda0235-6cf6-4ff4-a311-7d996f9c40e8",
        "cursor": {
          "ref": "f0ad3a18-57dd-4694-9317-10c5715213df",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "46b00bdd-a11b-4e64-8a18-26adf196396e"
        },
        "item": {
          "id": "7dda0235-6cf6-4ff4-a311-7d996f9c40e8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5941380f-9ffe-44a3-8698-c3d1c27ef4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf75942-e721-48c6-943c-b919cd1a696f",
        "cursor": {
          "ref": "baa74af4-3a0e-4860-9a9b-c54287676789",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "960d05f1-a08c-4915-aefe-58b1d63c51e1"
        },
        "item": {
          "id": "8bf75942-e721-48c6-943c-b919cd1a696f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "94d14fa9-06ee-4638-9765-199ffa0d5755",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a17ceb9-da1c-4667-b7ab-2f96203cfd63",
        "cursor": {
          "ref": "89fb11d1-9bf8-49a0-b817-cb23eef33d66",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "138d5d2a-d474-439c-8d2b-5064a14f6267"
        },
        "item": {
          "id": "7a17ceb9-da1c-4667-b7ab-2f96203cfd63",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "c2bd434d-58dd-45ef-b280-b778ae19be02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51f7d6eb-c0d1-4a0e-8a7f-293425e4a7d3",
        "cursor": {
          "ref": "e317532d-a160-49f6-a10d-44b3d187fe99",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "4217e27d-b5c3-4fd4-88e1-e825f10b3093"
        },
        "item": {
          "id": "51f7d6eb-c0d1-4a0e-8a7f-293425e4a7d3",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3605f199-e219-41a9-810a-fe560ec2397f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4372469-e84d-43bd-b539-60368dfbc71f",
        "cursor": {
          "ref": "a97633c7-4226-4f10-8cbb-fcfde08e00d0",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ddc9b152-c511-4b45-8333-cad05d229265"
        },
        "item": {
          "id": "d4372469-e84d-43bd-b539-60368dfbc71f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8a31de1b-e16c-49d3-8917-31979e4fffe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e390ccf7-ede3-4685-b5ea-21ecfb935cbf",
        "cursor": {
          "ref": "eed6187e-b672-4c84-814d-7e97999b1a3c",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4a7f51c7-473f-42ac-b2ee-ede5e1720a95"
        },
        "item": {
          "id": "e390ccf7-ede3-4685-b5ea-21ecfb935cbf",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b2a55455-d771-4fee-9eaf-386c87dd5340",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 70,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "2c1c0c85-73ad-4a69-bc8f-fe7254d0f553",
        "cursor": {
          "ref": "988b6fe2-cd24-40da-8832-2fad6eeb82c5",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "373bda46-4418-46e3-9fb7-b8ec11b7115c"
        },
        "item": {
          "id": "2c1c0c85-73ad-4a69-bc8f-fe7254d0f553",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b29aa556-887c-4879-b9a3-a20ae6501fdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56881c2a-181f-4be2-b530-1e28c72ab5aa",
        "cursor": {
          "ref": "60726c34-a344-447d-98cd-023396df7bea",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c3bc2170-bc19-483e-8362-fe6bca02d827"
        },
        "item": {
          "id": "56881c2a-181f-4be2-b530-1e28c72ab5aa",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "b65540ff-f40e-40ed-951a-9fcfa6abef1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7322af-ae6b-4db5-95f1-c434e8fcb574",
        "cursor": {
          "ref": "eaa964bf-baee-4d3b-ae3c-b485ec298f46",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f8f0f6fb-40d9-408a-bc72-79f1da11dd7e"
        },
        "item": {
          "id": "3e7322af-ae6b-4db5-95f1-c434e8fcb574",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "557a7a23-aa7a-4226-b494-93074cb3d1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13caa788-a7fe-483c-9f37-fe303607d6e1",
        "cursor": {
          "ref": "ad6e525e-b4ec-4bf0-ad94-8ce09d3234bb",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "90e31706-e432-4047-bca8-60e9f33e19fa"
        },
        "item": {
          "id": "13caa788-a7fe-483c-9f37-fe303607d6e1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a08c7c33-50b6-4169-b4a1-8f4ba7b04bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c795d0d-bb82-45a9-83c0-7391942f3632",
        "cursor": {
          "ref": "32816ee4-db00-4dcd-87a3-f0e2484b0634",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "df8a93c9-76ae-48d8-906d-c38e2fa0e2c2"
        },
        "item": {
          "id": "5c795d0d-bb82-45a9-83c0-7391942f3632",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1653e5b2-403c-4035-b11d-21d431a4f416",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ae93be-c7b9-4e15-9bd8-626291aea8bb",
        "cursor": {
          "ref": "5d1e417c-c4c2-44d3-aa75-6437334f5351",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "93652f50-2cd5-4bda-bf78-020f38022928"
        },
        "item": {
          "id": "58ae93be-c7b9-4e15-9bd8-626291aea8bb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "14a67b32-3c2b-451a-bedb-527330cbc0a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cc91fce-6b5c-447f-a7d8-0c08599e65d2",
        "cursor": {
          "ref": "8e02399f-f654-453f-b9b7-4db9097c5868",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "c6cf74d4-a53b-49ed-9ec6-f23d9c1c64d9"
        },
        "item": {
          "id": "0cc91fce-6b5c-447f-a7d8-0c08599e65d2",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "ea2ddbc9-a3b7-44e3-8e26-07f1c6476be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1685cf5-5ba0-408f-b27a-704937fabf13",
        "cursor": {
          "ref": "9ed96e8e-fa6f-481b-b74f-a1c64ae517f3",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "986f2bf4-de75-4782-bc86-30947c0dc84d"
        },
        "item": {
          "id": "c1685cf5-5ba0-408f-b27a-704937fabf13",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4e8984ad-d1d6-470c-9e78-f072f859a4a7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 62,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "3b8aac55-50de-44ca-9c0b-481d8af55519",
        "cursor": {
          "ref": "abc49c05-2f79-47be-a82d-a8328c241c14",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "56d990e8-9076-41db-b48d-8106d34313ff"
        },
        "item": {
          "id": "3b8aac55-50de-44ca-9c0b-481d8af55519",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "13cfdc1f-a5d2-4100-bd21-a2d32cf314b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f41f4401-94af-4b51-9357-2515c563b1ac",
        "cursor": {
          "ref": "c0da5ad7-c2a9-4f0f-a035-ee9dfefdfa0b",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "626c6e20-d2d9-4d39-9b6f-6e2e53ad8b83"
        },
        "item": {
          "id": "f41f4401-94af-4b51-9357-2515c563b1ac",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b3a228a6-0247-4d22-be2b-77d9ae5bb351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a395add-7ff7-4b44-89ef-561a86425f50",
        "cursor": {
          "ref": "85b1c765-6d0f-460f-88d9-2fddb9c67dfd",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "37e8afb0-7434-4765-a796-ba61f4549be2"
        },
        "item": {
          "id": "9a395add-7ff7-4b44-89ef-561a86425f50",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c066efc2-7d09-4cdc-adeb-079bd383dffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b64bc35-f312-4f23-beb6-81f3a114192d",
        "cursor": {
          "ref": "6c8c86f9-e7ad-482b-bda8-aca02d6aa284",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c3330367-ddad-4701-b861-c43d7b58d5f0"
        },
        "item": {
          "id": "3b64bc35-f312-4f23-beb6-81f3a114192d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "472ced26-8dcd-4465-bc22-5c6a7db5c47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 186,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67c76810-2620-4019-b557-34b39b541491",
        "cursor": {
          "ref": "872b2bcb-86cc-4571-88a8-d4213ec5cd6a",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "bd7bc589-3322-4739-80bb-73178240abf1"
        },
        "item": {
          "id": "67c76810-2620-4019-b557-34b39b541491",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "67912c66-7345-4004-9709-18982ec81ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 193,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f757704-2b60-4efd-af45-7f313918d007",
        "cursor": {
          "ref": "e664e23f-bd79-4c55-98c5-37406ac60acb",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "e958db3e-3ca4-4811-a899-651659b625f1"
        },
        "item": {
          "id": "0f757704-2b60-4efd-af45-7f313918d007",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3fad9316-8481-4f70-aae9-2b42d039f6ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7293c6-aa8a-49d3-86fe-5c683bc2fca1",
        "cursor": {
          "ref": "062424b5-6b23-427f-93e9-422b2529faac",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f1360e1c-6870-4d8f-8e24-33461af7b78e"
        },
        "item": {
          "id": "cd7293c6-aa8a-49d3-86fe-5c683bc2fca1",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "f7f78f30-9e70-44c2-b210-bf958d98fee5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 68,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "b7021204-3417-4b7b-b4cc-cd0d5a753e5f",
        "cursor": {
          "ref": "c2acc126-2a32-42e7-89a0-4e5bd831fe80",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e3957292-60cf-4934-9b9d-cc46bab425b5"
        },
        "item": {
          "id": "b7021204-3417-4b7b-b4cc-cd0d5a753e5f",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "cb2b3953-1b43-4148-9151-c818bd5decf0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 283,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:141)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:141)"
            }
          }
        ]
      },
      {
        "id": "11f1cfe5-0e5d-4e8c-85d2-dd9a22913431",
        "cursor": {
          "ref": "d9f6997a-ec50-4584-9545-59ad6bc518c5",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "3fd3d91c-f5f0-4b0e-a005-7a5dce8db8ba"
        },
        "item": {
          "id": "11f1cfe5-0e5d-4e8c-85d2-dd9a22913431",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "449b49bf-0ae3-4d0b-a976-f2421cfa34be",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 95,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:142)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:142)"
            }
          }
        ]
      },
      {
        "id": "013bab32-4c0d-48c1-a2ea-529746f2f7af",
        "cursor": {
          "ref": "50c082e5-ac1a-4188-b6d1-8ceb5fb81f02",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "21fdeae6-50e6-4c90-8826-13575a8b53d7"
        },
        "item": {
          "id": "013bab32-4c0d-48c1-a2ea-529746f2f7af",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0e0f7164-a49b-4492-9ba2-2a0962757bc4",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 102,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:143)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:143)"
            }
          }
        ]
      },
      {
        "id": "10723501-5660-473f-940a-be7bf3a17a56",
        "cursor": {
          "ref": "ec2a546d-66b6-48ee-ae27-d5cd236d5ece",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "cede4813-573f-497a-a5bb-c3bb7716e581"
        },
        "item": {
          "id": "10723501-5660-473f-940a-be7bf3a17a56",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5535d8c7-e5eb-4d92-b79a-a61ce6b8889e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 92,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:144)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:144)"
            }
          }
        ]
      },
      {
        "id": "9395486a-818d-4e84-b2a3-73f8d0c452b3",
        "cursor": {
          "ref": "9812a027-5e5c-482f-84d3-6ce8a8ef6b2a",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "bed66d3f-6b33-4580-bb7f-da3cd649fce6"
        },
        "item": {
          "id": "9395486a-818d-4e84-b2a3-73f8d0c452b3",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e716343e-5338-4acc-a814-a6ae3c44c7b0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:145)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:145)"
            }
          }
        ]
      },
      {
        "id": "6d04fbe9-1be9-4210-b501-b9a107eeac45",
        "cursor": {
          "ref": "06eaf314-e333-40b7-9f61-b89b8968c3a0",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c2de175b-c493-442b-af12-fe845506bc49"
        },
        "item": {
          "id": "6d04fbe9-1be9-4210-b501-b9a107eeac45",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "821e0878-fd13-4e56-a72b-1edcd024a1ac",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 42,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5905798f-a7fd-4847-b147-dff8e76f929f",
        "cursor": {
          "ref": "bac894f7-ea65-4f70-bc2d-3746b22eb1c4",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a89a532d-cd6f-4ef0-8be5-6abdc3522e97"
        },
        "item": {
          "id": "5905798f-a7fd-4847-b147-dff8e76f929f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2483e803-d270-4967-93d8-0a13270784c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a79212-e1b1-4caf-ab46-504983156e2c",
        "cursor": {
          "ref": "227332c3-aea0-42a7-b4ab-bccd18aa2ba8",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "17835022-0272-4911-b6b0-f2dc4f998f39"
        },
        "item": {
          "id": "a3a79212-e1b1-4caf-ab46-504983156e2c",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ceb19755-54ee-48a9-9035-2ac5f72d5e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779012ac-41b3-4680-98cb-1f276f6cabaa",
        "cursor": {
          "ref": "472b2576-5581-4492-ae4a-67e87ddec876",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "7569b501-23ab-4fcc-988e-19d9b7711c2b"
        },
        "item": {
          "id": "779012ac-41b3-4680-98cb-1f276f6cabaa",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "a01ae49a-3f60-45dd-82bb-25bad8fa083a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2521ba69-c2b3-4b7f-ba7e-5b99e48580ac",
        "cursor": {
          "ref": "a11c275b-07ec-4b06-817c-7a90e5fae9be",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a3677939-c3cb-446d-a64d-47c0ce2ec062"
        },
        "item": {
          "id": "2521ba69-c2b3-4b7f-ba7e-5b99e48580ac",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "7a216674-b56f-406e-b15e-0830bff106d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7eba754-ae7b-4538-821c-7f0e4af761b3",
        "cursor": {
          "ref": "2cb4e553-85c4-43ed-a7ab-37287ecb8663",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "ec95b799-5808-421f-add5-2aab6231d5fa"
        },
        "item": {
          "id": "b7eba754-ae7b-4538-821c-7f0e4af761b3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "f55727d3-8d02-40dd-bfc4-ca7e1036551d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4231ba88-7d42-4d81-834b-bc4a283cfaa0",
        "cursor": {
          "ref": "d51c6fea-eb1c-4a8e-9a4a-30977e3647c4",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "73a5d407-3122-4643-a60b-f439bd47badf"
        },
        "item": {
          "id": "4231ba88-7d42-4d81-834b-bc4a283cfaa0",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "540c395c-3752-48ba-8009-c3ca9e0c70f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c9b2f3-c8fb-4d2d-af5d-67ae3821b38d",
        "cursor": {
          "ref": "0887e610-45cf-4c70-979e-55bf02d45f3e",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "037e6480-bddd-4ff8-9ac4-0d13defab401"
        },
        "item": {
          "id": "b1c9b2f3-c8fb-4d2d-af5d-67ae3821b38d",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "62996a4f-3c75-4d18-aa34-4c88156d5d75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e67472-7edc-47cf-a50f-7f580f309721",
        "cursor": {
          "ref": "eea85d14-05bb-49b5-b5a9-183778b189a5",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6f510cb9-0d01-452d-af90-2f2adfe87065"
        },
        "item": {
          "id": "67e67472-7edc-47cf-a50f-7f580f309721",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2c415e4d-69ec-48a1-b589-52659179bd71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f33c76d-405d-43cb-a219-daa74ad4125b",
        "cursor": {
          "ref": "3058b406-3033-43ed-93db-11efff86c4ff",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "5dedb5b0-3a09-4c2e-be1a-b6a55c60e4e4"
        },
        "item": {
          "id": "7f33c76d-405d-43cb-a219-daa74ad4125b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "dab8bb0d-19d3-4ad4-bc45-4933a5832055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c4728d-bc2c-45dd-b9f6-114265042853",
        "cursor": {
          "ref": "8a259ce9-71ba-4723-9e1c-876e87d3fc27",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "427a5e44-71a1-4a04-a677-faf84e0bd473"
        },
        "item": {
          "id": "b1c4728d-bc2c-45dd-b9f6-114265042853",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "4046d3d0-119a-4819-b208-3f9052ded067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8779ad16-1a57-46e8-9c35-c5a2e8b983c2",
        "cursor": {
          "ref": "d392e2e9-d4ee-410d-8859-0e77bcd3609b",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ed9454fc-99ad-450e-811d-a4d85ad6d849"
        },
        "item": {
          "id": "8779ad16-1a57-46e8-9c35-c5a2e8b983c2",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "de7f62c0-aa3a-4fc9-a28e-d1cc08c764be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2438a655-92ff-4a2a-b1d3-2f295b814fb2",
        "cursor": {
          "ref": "1c470e1c-d93d-496b-9dbf-71f7b7024b15",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "ad27e514-1b5f-4bf6-851d-7b096b827e64"
        },
        "item": {
          "id": "2438a655-92ff-4a2a-b1d3-2f295b814fb2",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "cf75468c-6082-4434-9d7e-891233a9ac5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6875c0-82ab-438b-b329-ed3c015dfd9d",
        "cursor": {
          "ref": "f8b0dfa9-160e-4ece-bb63-83669b05c654",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ddb74251-edbd-4aef-aa6a-329f0f54cf69"
        },
        "item": {
          "id": "de6875c0-82ab-438b-b329-ed3c015dfd9d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "798b18d2-8d46-4ff9-9ddf-f3f6c0c9e216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f223716-ce8f-48ee-9136-d06cf3786c91",
        "cursor": {
          "ref": "87dc0faf-2862-4a68-bf41-ff54a1b2ff68",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "9d8f07a0-2c7d-4223-8b3d-2ca4dacd8491"
        },
        "item": {
          "id": "6f223716-ce8f-48ee-9136-d06cf3786c91",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "421a49b4-0046-4059-890f-43bf527b0dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3020ffd9-86f9-488b-babc-6fb910409b20",
        "cursor": {
          "ref": "74c55f4b-3dad-464b-ad31-dc076b507004",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "60950365-3fbe-4067-8911-0ed8cc49351a"
        },
        "item": {
          "id": "3020ffd9-86f9-488b-babc-6fb910409b20",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b7484bea-954a-4299-bb2b-d86a94c07321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5818b0b5-0187-4e6c-99e7-1894ac462a78",
        "cursor": {
          "ref": "738f027b-9680-4a79-8a9b-d005441d2f77",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "049af92e-2e95-4782-a263-c69f13c0c4de"
        },
        "item": {
          "id": "5818b0b5-0187-4e6c-99e7-1894ac462a78",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "1c1d8135-ee38-4d12-9017-9da08b2d4e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adbdd8d8-edea-4179-bcd9-0fe449e226ca",
        "cursor": {
          "ref": "acd49cd6-4167-47cc-a848-5b93de07caf0",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "1f48d440-beed-4469-8f22-28b63b456a80"
        },
        "item": {
          "id": "adbdd8d8-edea-4179-bcd9-0fe449e226ca",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2fd9c48a-49bb-4b13-b148-30bcb577664d",
          "status": "OK",
          "code": 200,
          "responseTime": 94,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:163)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:163)"
            }
          }
        ]
      },
      {
        "id": "cd41ce20-e271-45f6-be9d-b350bc1351dc",
        "cursor": {
          "ref": "6aa615d7-5948-4cfe-bbd0-208b70e197e0",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "63564a8b-523c-484f-8686-ee26a058236c"
        },
        "item": {
          "id": "cd41ce20-e271-45f6-be9d-b350bc1351dc",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "46f29cd3-2bab-41af-8dae-c6387339043d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7da7ac-4dda-47c8-a7e3-9606ae2ddd63",
        "cursor": {
          "ref": "8e6b2b31-dd02-45c6-b437-b0dbe65fd38a",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "4a9d7748-9c38-436c-b15d-8b31956cca71"
        },
        "item": {
          "id": "1f7da7ac-4dda-47c8-a7e3-9606ae2ddd63",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "770e997b-2b7f-4f11-9658-713d14c57b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a861e09-6d17-4e6b-9d3b-120438ed73e6",
        "cursor": {
          "ref": "9b792831-06ca-47a6-97e0-f21a9524d700",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e44d9264-8318-4caf-bcfd-c69962dcb22a"
        },
        "item": {
          "id": "8a861e09-6d17-4e6b-9d3b-120438ed73e6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "09261f9c-8d40-44b3-89f6-e0c2da5e9ce6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54835d29-c211-4360-b0ee-25a5f9e507b8",
        "cursor": {
          "ref": "b19ac441-02a5-4faa-a764-0647fa7cc462",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "17592e14-be01-4b23-8f32-3a3126d9002a"
        },
        "item": {
          "id": "54835d29-c211-4360-b0ee-25a5f9e507b8",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "31757a4b-71ee-4d95-afec-d2636dbf6fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ff64072-b2b0-4913-abb8-a998a08a8327",
        "cursor": {
          "ref": "669aadc2-4a63-45c3-b754-1aa6a5bd8a02",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "22ead08a-8b37-4fee-ba33-b9918e1df18c"
        },
        "item": {
          "id": "3ff64072-b2b0-4913-abb8-a998a08a8327",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "63cd437b-ed82-410f-bb8d-9431e89af53b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95fabcb6-11e1-4437-aa7e-a051f360c6ee",
        "cursor": {
          "ref": "c55b9935-eb12-4465-9525-16d6b6252a1d",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "f92b506b-5e3c-4938-86bf-a9ad84e8819b"
        },
        "item": {
          "id": "95fabcb6-11e1-4437-aa7e-a051f360c6ee",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "728f746e-669e-49d4-8a23-0d08c51d3338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bbb4a92-d2ed-4272-8df3-871cfd3fe81b",
        "cursor": {
          "ref": "e0251e7c-16a8-454f-8b79-e9ef9073a2d1",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "efbae0e4-f0e0-4639-8fa5-3ec8eb29a43d"
        },
        "item": {
          "id": "8bbb4a92-d2ed-4272-8df3-871cfd3fe81b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3a6dc066-0695-499a-9d89-bf113bef267e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01b714db-a860-4bd8-8ad6-cf3de9e9b77f",
        "cursor": {
          "ref": "3de555ff-d096-4cbb-a195-fb797d0bc382",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "deadf1c9-aec3-4ef2-a2d5-3e98906b5bdf"
        },
        "item": {
          "id": "01b714db-a860-4bd8-8ad6-cf3de9e9b77f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "5ecee164-4577-4353-9bb4-9f454b751764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2fedf5-5178-4f2d-8366-7856d7d85ab7",
        "cursor": {
          "ref": "a3d0ee17-288f-4e8b-80fe-46fb5d3b8061",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "378a63f4-505b-4ded-9f92-1dfc548f79e9"
        },
        "item": {
          "id": "bd2fedf5-5178-4f2d-8366-7856d7d85ab7",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "4663e1d4-bece-4ed4-bf2a-2b4fcd6ca611",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e35d0a9-b12f-4fd0-99d2-203f599ec2f6",
        "cursor": {
          "ref": "77efa1bb-ecfc-4a3a-8906-4e71ad37240d",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7ace5f61-1a70-4c27-a11f-eb71d1ee552a"
        },
        "item": {
          "id": "9e35d0a9-b12f-4fd0-99d2-203f599ec2f6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "eb0bf5bc-2b12-46a7-a0ea-176454fbeac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84907257-cb55-40e0-bb4d-c86c5b6c5048",
        "cursor": {
          "ref": "f6d716fd-3111-4b7a-9007-61aa5943604a",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "6817815f-94c2-4568-8202-c144f7dc4698"
        },
        "item": {
          "id": "84907257-cb55-40e0-bb4d-c86c5b6c5048",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "4aaf4236-c1a3-47c9-8637-d3a894d85b5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10718f3-e781-4f98-ba6a-67919a177796",
        "cursor": {
          "ref": "7c74665f-1298-471a-8fe0-15177ac30756",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6902546c-ea1b-4c73-b66f-329f4cf31bad"
        },
        "item": {
          "id": "b10718f3-e781-4f98-ba6a-67919a177796",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e2fcbc88-11f4-4ab3-952f-25cb60478166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29d6e554-ca05-4c3f-bb34-9f77dab7497d",
        "cursor": {
          "ref": "87ea2dbd-f2cc-483a-aa4d-6670b58a5edf",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "f7f4080b-958a-4964-92d5-655bd04fbbd9"
        },
        "item": {
          "id": "29d6e554-ca05-4c3f-bb34-9f77dab7497d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4d6425f0-8ff7-4eb9-adfa-d4c31c0cb3c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac22ab6-e48e-4b28-8b8d-483d10228b90",
        "cursor": {
          "ref": "e569ecd5-08a9-4696-986d-c131f6436bfc",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0c34eed3-035c-44f8-97cb-ebf429ec5d61"
        },
        "item": {
          "id": "3ac22ab6-e48e-4b28-8b8d-483d10228b90",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ff920dd6-32c4-420c-a940-4bb400a787a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68104dbf-9dc7-4e1e-b33b-6140ee8c53d5",
        "cursor": {
          "ref": "c24172c8-9a27-432b-9679-7b15ef708233",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "780f0bec-b010-44de-b74d-d92f345daabb"
        },
        "item": {
          "id": "68104dbf-9dc7-4e1e-b33b-6140ee8c53d5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "85a38487-e097-438f-9b50-d8dd67af9660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407eb083-1b61-4a60-a945-f7ebd351f739",
        "cursor": {
          "ref": "2c3be5c3-160c-4ba0-86dd-3e9027b272a2",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0a23d893-daff-4112-9749-c9d792c45426"
        },
        "item": {
          "id": "407eb083-1b61-4a60-a945-f7ebd351f739",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a1aec047-d6d0-46a4-a504-e2ad3dd523c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad0ee64-232c-4953-aa02-b215747e6339",
        "cursor": {
          "ref": "dca019e8-52e7-414d-ac50-bad5a8213de3",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "df78dbe0-319e-42a0-8d2f-0c6b2234422a"
        },
        "item": {
          "id": "dad0ee64-232c-4953-aa02-b215747e6339",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f65bad7e-53d1-4fe8-8b3b-820e143fc62c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 206,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03fa0b74-2426-4d3d-ad21-5baec0872762",
        "cursor": {
          "ref": "f7bc3e78-7859-449e-89dc-65a2a8e8559c",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5077be31-e4fd-4e70-917e-06f2f5520d89"
        },
        "item": {
          "id": "03fa0b74-2426-4d3d-ad21-5baec0872762",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d9eb04ad-a1ab-4f69-b376-66f60eedcf1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2bf0330-c5ea-440d-9d12-182b973f12c3",
        "cursor": {
          "ref": "e5608a10-685a-41fc-85f5-525245ab5366",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "121a3ade-65ae-4e4b-b103-f3f37d72af61"
        },
        "item": {
          "id": "d2bf0330-c5ea-440d-9d12-182b973f12c3",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "e0fe9544-5330-4771-9be2-c9653668f185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ec94c7-b0a3-42ee-88c7-5b63a5f3670b",
        "cursor": {
          "ref": "c25c2a95-94f3-4285-b710-0f4e4c6e838c",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c0ddf6ec-2b4d-44c3-8522-58bdfd38b559"
        },
        "item": {
          "id": "92ec94c7-b0a3-42ee-88c7-5b63a5f3670b",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "06162d28-4a82-4c0e-adf8-c723f928bf48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9152365d-61dd-4ccd-8105-5b539e0636cb",
        "cursor": {
          "ref": "75c6b4d2-a733-46f5-8955-30c11f0d3b4e",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b6c80d6b-c188-42b8-84e0-b644440f8adc"
        },
        "item": {
          "id": "9152365d-61dd-4ccd-8105-5b539e0636cb",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "bf5dc7d6-34a2-44e5-8033-fbc7a37db12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c52c42e-1ccc-43f0-9847-9580139048a5",
        "cursor": {
          "ref": "4ba9f97d-b5c4-48e9-b0e2-756d9d687f34",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "51e79f31-ef36-4ebd-9ba7-162fa782a813"
        },
        "item": {
          "id": "1c52c42e-1ccc-43f0-9847-9580139048a5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "73e26ae5-d5c8-4e26-8555-aeda1a2fdad6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080d873b-ed21-42d9-b331-f07b0fe5e977",
        "cursor": {
          "ref": "35a65743-2b9c-4ede-9851-da5e6b3f81ee",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "07f2538c-a662-4d41-9910-1e412319d3a8"
        },
        "item": {
          "id": "080d873b-ed21-42d9-b331-f07b0fe5e977",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e57af4da-116d-4280-b501-fc37c9aeb876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09915377-3536-43aa-a8ff-8587076d708f",
        "cursor": {
          "ref": "9bfe3951-eaba-48d8-84f4-173a0f3a80a6",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "7da01df9-5ecd-48aa-8ccb-7a9d7d163082"
        },
        "item": {
          "id": "09915377-3536-43aa-a8ff-8587076d708f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6a1e8a6b-a1e4-4b89-b7ed-421799cfecbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a48cfec7-5a4d-4740-9948-3b223aee1c8d",
        "cursor": {
          "ref": "5234fac6-9b9c-4969-b42d-ce4b84743d73",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "ee57f956-6a8c-4c20-ae24-a883502124a4"
        },
        "item": {
          "id": "a48cfec7-5a4d-4740-9948-3b223aee1c8d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "1b1ee6dd-5701-49b3-87e5-4a6d2ff11ed9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e5d03ae-e6db-4da5-b2e3-41bd0cea87b0",
        "cursor": {
          "ref": "8bb791df-aa63-43ed-83ff-a196826babfd",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "cf48a64b-9a2f-4b88-bfe7-76eb3a5c2d15"
        },
        "item": {
          "id": "2e5d03ae-e6db-4da5-b2e3-41bd0cea87b0",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "03ea2f1c-e27e-42ab-b780-7015cc1d4c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25bdb403-2d6b-434d-afbc-e9db89c3da47",
        "cursor": {
          "ref": "68f6fe09-42be-44db-b29a-4f6a00986318",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "2de33433-f47f-44ba-ad9f-12fbc084fc7c"
        },
        "item": {
          "id": "25bdb403-2d6b-434d-afbc-e9db89c3da47",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e3d6279f-2768-4625-b7c0-2e627b5f3ac4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5112f774-c6d6-4f64-9ac2-5a93afc03801",
        "cursor": {
          "ref": "22cf05f4-ee8a-4ef7-9e86-c988b36b0036",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "5d5c4c1a-b218-4956-9416-8cb3a003e063"
        },
        "item": {
          "id": "5112f774-c6d6-4f64-9ac2-5a93afc03801",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "d90c0a08-02b0-4f76-ab33-f04cbfdc2612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3471b35b-7924-4687-93f6-3aa2e687c981",
        "cursor": {
          "ref": "c54acd65-d6a8-43bb-90a8-336f2d9b84e0",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8a1c7297-a490-40df-b3b1-0dadd4e53404"
        },
        "item": {
          "id": "3471b35b-7924-4687-93f6-3aa2e687c981",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "156a4135-b5cb-4569-90f0-6ebbcd177e3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675b62ef-6194-4445-83f5-760e05ca9c2f",
        "cursor": {
          "ref": "7f920388-4a38-40aa-9d97-b2b9fa544a2f",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "745539a0-96d0-484f-9439-a362b3b171d8"
        },
        "item": {
          "id": "675b62ef-6194-4445-83f5-760e05ca9c2f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f81b7229-a1a8-44c9-879b-a9e4cfdc6415",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63fcece-ffc3-4c25-a57b-ce59364afb3d",
        "cursor": {
          "ref": "c66202ff-086e-44a1-8798-5574bfb5a409",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "c84af0e7-7a45-4e78-9eaa-990e8917ad44"
        },
        "item": {
          "id": "c63fcece-ffc3-4c25-a57b-ce59364afb3d",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "cd28fe27-2007-4a9f-a90d-8eb121387216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae65ba0e-23b9-4fb5-b3bc-cf459c9ca91d",
        "cursor": {
          "ref": "4eb7471c-a2e7-41b6-aa02-63520aa09f76",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b26cebe2-c0b7-488f-83f3-b9967e33f71d"
        },
        "item": {
          "id": "ae65ba0e-23b9-4fb5-b3bc-cf459c9ca91d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "563bdffd-5a10-44e0-83fc-5083dbdf7f5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b0fc5f-26ef-466d-80da-43452aff63a6",
        "cursor": {
          "ref": "9bf515b1-97e0-42ea-8cea-f4863735d49a",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "464ef4c1-195c-41e2-9397-eb2c720de038"
        },
        "item": {
          "id": "36b0fc5f-26ef-466d-80da-43452aff63a6",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "c8a7e541-a838-4aea-aa6b-8de70552ac59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e75ce49c-a912-4e89-986d-6f0935456d76",
        "cursor": {
          "ref": "58d840c0-ea80-4bde-8a4c-28b744c24a36",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "962deb36-9b33-45e6-85cb-c7addda3d8a8"
        },
        "item": {
          "id": "e75ce49c-a912-4e89-986d-6f0935456d76",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "dd5a56f3-07c7-4d39-bd24-559bda4c22e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "891a8985-f4a5-4eef-b1de-0989599958b7",
        "cursor": {
          "ref": "e48097fa-41d2-45ac-ab61-89f1283946fd",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "396ac6a4-7ec5-45e8-ac10-c13719a9c317"
        },
        "item": {
          "id": "891a8985-f4a5-4eef-b1de-0989599958b7",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ea94beb3-6d91-4c42-9518-ebfe316501c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ca0fef-5b2a-4f54-ac87-65b8d340910e",
        "cursor": {
          "ref": "8fdfc9f0-7106-449e-b9da-dfb645edd771",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "113c75f6-b497-468c-860c-394a0f7f3d65"
        },
        "item": {
          "id": "69ca0fef-5b2a-4f54-ac87-65b8d340910e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "4095d3f6-5dd9-4c51-8a76-aa810902d9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe6d028a-c21f-4334-9bd9-26eed8a1fbba",
        "cursor": {
          "ref": "6b4e033b-59fe-4cac-93bf-a2b263f6b682",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "fa845bac-b1a6-4685-88e1-f63fc9b4f043"
        },
        "item": {
          "id": "fe6d028a-c21f-4334-9bd9-26eed8a1fbba",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "9159fbb3-cb7a-4a94-8cc6-e5e661e002d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3821c9a-fdc1-45da-8aec-8e4fef95fdf7",
        "cursor": {
          "ref": "8dea0a9d-1a01-4e87-9d35-fe150402d263",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8768ae72-658e-4f69-ae7b-9984a4136ff3"
        },
        "item": {
          "id": "c3821c9a-fdc1-45da-8aec-8e4fef95fdf7",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "ebc10820-ce3a-46ed-90a1-2744ea5a8b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d8e15c0-7c5c-48c0-b1df-21f1dd4854e4",
        "cursor": {
          "ref": "ff09351d-ae94-41a4-a538-c59d90837387",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8a178556-c616-4b4e-b5b4-144e050e9633"
        },
        "item": {
          "id": "9d8e15c0-7c5c-48c0-b1df-21f1dd4854e4",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "534fb9c3-b002-4fd5-86d4-1ed56c43535b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc6b428-e8f2-4dec-a944-e4e63897ba98",
        "cursor": {
          "ref": "e0430c74-e698-43d4-92bd-cebe59225e51",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "7cbf8e3e-1b85-470e-b262-8f7b412a8b7a"
        },
        "item": {
          "id": "afc6b428-e8f2-4dec-a944-e4e63897ba98",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f6733f58-198a-4552-a1cb-e631dd593d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d842031e-928b-46cf-adcf-816b73ad7371",
        "cursor": {
          "ref": "90ca00a2-cd37-4d36-ab21-948fafb03786",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "ef982cd7-dae0-47d0-be3d-97d7c234c5eb"
        },
        "item": {
          "id": "d842031e-928b-46cf-adcf-816b73ad7371",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "35dd197a-001d-46f4-8f2d-5e63b0591029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "329d568c-203d-40a3-8cca-74d1cfe03303",
        "cursor": {
          "ref": "4b85ca66-ecf1-42cf-aff1-8bb75fc240fd",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "e9ad7c3d-5ab8-4b3f-ac74-74589b8bc1d2"
        },
        "item": {
          "id": "329d568c-203d-40a3-8cca-74d1cfe03303",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "06b82b1b-9ea3-46c4-8aa7-7ce77aebac4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576e91ea-41a1-49d9-bf05-28fdda09c718",
        "cursor": {
          "ref": "cf32fa08-9135-4f7d-a53e-a44b172cfe04",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3292bb7f-8c44-474f-baee-4d22eaecca65"
        },
        "item": {
          "id": "576e91ea-41a1-49d9-bf05-28fdda09c718",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e635b345-efe4-4df0-8174-1b17eebcd11c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1787f4a4-4a7d-4fc3-a7ae-b908568297ba",
        "cursor": {
          "ref": "bd74aa7e-092f-4133-a578-f16ced9f0c1a",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7a4f2911-c5b7-4f38-99aa-0653ba4dd86b"
        },
        "item": {
          "id": "1787f4a4-4a7d-4fc3-a7ae-b908568297ba",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "84dbc42a-b42d-4b25-9a93-3adc85315bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b13efc67-e587-4452-bc61-46933df3a455",
        "cursor": {
          "ref": "d64bfa03-eccc-4fe1-b00f-97caa0e70ae3",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c5d1f2a6-1bef-4f8e-8f94-75ddf6d82cc0"
        },
        "item": {
          "id": "b13efc67-e587-4452-bc61-46933df3a455",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "f525d945-49bf-4f4f-af0a-b18092870f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab293f98-6aa2-4a6c-a13c-ecb91914a2b6",
        "cursor": {
          "ref": "1747a8a6-17ab-49e0-99d4-4d01277b7b3e",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f538c038-21c1-4480-9bdd-f84609874b03"
        },
        "item": {
          "id": "ab293f98-6aa2-4a6c-a13c-ecb91914a2b6",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c61681ef-2d4c-49ab-9b9b-0e495e2c1ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3525d9f5-5d35-4e1c-a765-0196ba7b7f26",
        "cursor": {
          "ref": "a90db769-1a3b-47f6-8566-b8ae1e2d62b1",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "85011758-482b-4735-bdc8-c2f392a74121"
        },
        "item": {
          "id": "3525d9f5-5d35-4e1c-a765-0196ba7b7f26",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "895e6ae1-c53e-4395-8eb2-fe2c60ba2ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72f472f6-e762-4278-90df-fe8df2d35d3e",
        "cursor": {
          "ref": "9ffe8996-c56c-4924-8c41-318e24bac8fc",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b1bf0acd-a9d9-40c9-bdc3-450a9055b680"
        },
        "item": {
          "id": "72f472f6-e762-4278-90df-fe8df2d35d3e",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a74bd74f-815e-4980-b651-357f6d26609c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b179c40d-57af-4872-ac10-169eb39db4ef",
        "cursor": {
          "ref": "04127753-bf37-4ab8-b9a6-3b2121ad3cf6",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "45e4027b-fa8c-4160-9690-5c0a819b6d8d"
        },
        "item": {
          "id": "b179c40d-57af-4872-ac10-169eb39db4ef",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "cce57d95-9120-4427-9f5a-c23067eca3f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75c68204-2b04-4902-8782-cbc58aac21a0",
        "cursor": {
          "ref": "a30c3424-59b0-4364-9e30-7f4dde953910",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "c2d54fb0-0615-4be7-880a-09048f096343"
        },
        "item": {
          "id": "75c68204-2b04-4902-8782-cbc58aac21a0",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "39671f53-b14b-4104-b58f-b316830bf552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b9ba992-e715-4c19-ae7b-07976010a109",
        "cursor": {
          "ref": "8a6ed20b-6d1e-4fe1-9e35-21838df7109d",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5b4d1b35-afe7-4679-89e4-feddd41e51ac"
        },
        "item": {
          "id": "2b9ba992-e715-4c19-ae7b-07976010a109",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8051d017-71c9-4f2b-8b8d-8a87384a0249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3db4ffbe-f753-44d9-a6d2-5d7f7fab90ff",
        "cursor": {
          "ref": "86087e00-9635-410e-865e-59b54fbdca91",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "76090600-be9a-43a5-b78e-7c2a1159deea"
        },
        "item": {
          "id": "3db4ffbe-f753-44d9-a6d2-5d7f7fab90ff",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6a85e172-f48f-4a0e-ad47-1b5d99930a87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbdf0ab5-7bad-4f86-bafd-c1729e1dbd08",
        "cursor": {
          "ref": "2527225a-a2b0-4fd0-838a-d12f25f703ef",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "ac16b66e-aa28-4e6a-bc94-85a045b01852"
        },
        "item": {
          "id": "fbdf0ab5-7bad-4f86-bafd-c1729e1dbd08",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "946c9dd5-14f4-485d-9d16-e7514fbaca7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de21fa39-470d-48ca-a9c5-b6c794807805",
        "cursor": {
          "ref": "84b9dad9-da06-4fea-a33f-4e5b93085a5a",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "fd2e51a5-8f36-4287-a2e2-6d037361b85b"
        },
        "item": {
          "id": "de21fa39-470d-48ca-a9c5-b6c794807805",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "b2d6d95b-14da-448b-938e-296fb06ac1d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9419bc9f-1932-4414-9970-dddfd9af1551",
        "cursor": {
          "ref": "802e752b-e180-4c1c-b101-455d830f04dd",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "faa96831-2fc4-43d8-8689-fc4b2dc46f97"
        },
        "item": {
          "id": "9419bc9f-1932-4414-9970-dddfd9af1551",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "936d7ea9-6064-4dab-b3f5-ea569e4b79a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3855b74d-c801-4af1-8873-773bac5f23f2",
        "cursor": {
          "ref": "74acb2be-2c63-44d9-8612-065453fbb576",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "70a63c47-3e5e-4bf2-8903-68962498820e"
        },
        "item": {
          "id": "3855b74d-c801-4af1-8873-773bac5f23f2",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "83445ec4-843f-4229-a347-02d2fcf9b2c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a63828c-32bd-44b2-ada3-65529400921d",
        "cursor": {
          "ref": "aa737bad-1c7d-4136-9012-6eaf4acdd34c",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "d207efb5-464b-458c-a767-033453546def"
        },
        "item": {
          "id": "1a63828c-32bd-44b2-ada3-65529400921d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0699a0bf-b4e7-478f-8321-13a14f08f02d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "033954f1-2eb3-460f-9327-26c06794cfc9",
        "cursor": {
          "ref": "99d9a113-dfc0-4e0f-916e-609a8b8d6b96",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "a7ad2517-bbea-4988-a0b9-5a56dda0b2ac"
        },
        "item": {
          "id": "033954f1-2eb3-460f-9327-26c06794cfc9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "8ff82e46-18de-45fb-9991-65ea1b6b4fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fba816-4e1e-4a4d-aea8-95ead3af3b7c",
        "cursor": {
          "ref": "7760af68-820f-42d5-8e66-a7d717f77843",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "2f53651e-03d3-43fb-944b-37d12466c3ea"
        },
        "item": {
          "id": "c4fba816-4e1e-4a4d-aea8-95ead3af3b7c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "93536aae-ce2a-40d7-8d55-dfb228b74215",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e758a0f8-61a4-4bc8-b0f3-f6a9adcfbefa",
        "cursor": {
          "ref": "56c4e8a3-bdda-404f-919d-9c2e54936825",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "27d883dd-6f7c-4837-957c-8b147de48763"
        },
        "item": {
          "id": "e758a0f8-61a4-4bc8-b0f3-f6a9adcfbefa",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f2fea58d-b568-4b8b-9954-e5200fa6ed3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5784f77-3776-4ead-b5f3-038bbe2d13a6",
        "cursor": {
          "ref": "b8ee140f-afd1-4b9b-873c-bb6c9be75e94",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0400dd66-fa55-496e-b594-a2ca7d99403e"
        },
        "item": {
          "id": "c5784f77-3776-4ead-b5f3-038bbe2d13a6",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8cf7df19-314c-4d86-811d-d94f6ba6a4cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e97d3a-b407-4a3b-af8e-5827ba6b10da",
        "cursor": {
          "ref": "8e8ad192-1e66-4e17-9f3d-2241a401c6ca",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "3f85cd7f-e5d8-4035-b03d-f7172f9e83fc"
        },
        "item": {
          "id": "85e97d3a-b407-4a3b-af8e-5827ba6b10da",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "db1ec9b8-b68b-4475-bd02-67b7ebe9ba88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5246e311-a845-4756-a881-147b763329ab",
        "cursor": {
          "ref": "5b3328bd-0a2f-4408-b852-9236ee7c5865",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b7f16b82-927b-4306-8930-b9872277cf83"
        },
        "item": {
          "id": "5246e311-a845-4756-a881-147b763329ab",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b5369bb5-bc9b-4d20-9a54-67e44feca5da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b26d02-a70b-4443-b3d2-58cd52d803db",
        "cursor": {
          "ref": "80c8ddc9-7912-424e-b818-4dfeef741eac",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a0c750cd-69d6-40a1-b9eb-d3a0be754bae"
        },
        "item": {
          "id": "e0b26d02-a70b-4443-b3d2-58cd52d803db",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "b07c89c4-6d76-4171-92e0-ccd131762e35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a355994-6361-4828-a554-4c284a551ede",
        "cursor": {
          "ref": "e7da6692-8523-41e1-be8a-3455fd682b16",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e13f381c-2311-4c9d-8b43-ae01e8126187"
        },
        "item": {
          "id": "4a355994-6361-4828-a554-4c284a551ede",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "abe52825-64af-42de-b54b-699d1443dcf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d825995-00a9-4090-ad06-d2d0b9d0c57f",
        "cursor": {
          "ref": "e3bc05fc-6ba8-4352-b313-6d07b37c73d7",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c52e15ff-6fcc-4776-a0d7-cef2fa175c2b"
        },
        "item": {
          "id": "3d825995-00a9-4090-ad06-d2d0b9d0c57f",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "57834d4a-51dd-4e23-8a70-6b069b742f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4d36ca-c4e5-4f73-aea0-6617b6f47e3a",
        "cursor": {
          "ref": "ee1b7cea-f6b2-4f6b-a5dd-36b1158d7e3e",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "cad94ba3-690b-4791-92dc-602a81b75e5e"
        },
        "item": {
          "id": "bd4d36ca-c4e5-4f73-aea0-6617b6f47e3a",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f675cf29-2307-4218-85b0-b719118ab492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f18ec7e7-af21-45ea-a804-998b42f0c232",
        "cursor": {
          "ref": "cb6fcf06-4d33-4d90-9f68-b1a37a252c06",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "cc425a83-d5c8-4200-b355-0d7f2522be03"
        },
        "item": {
          "id": "f18ec7e7-af21-45ea-a804-998b42f0c232",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "169cea13-73e0-4c02-95b1-2a001fb81e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f87eb51-3ebb-4964-ab20-73766d53e5dd",
        "cursor": {
          "ref": "b23c634f-1fe4-4ba5-85af-c41cbb6d9f5f",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "f5d2fe8b-9cbc-43cf-afa2-da9ec11173af"
        },
        "item": {
          "id": "8f87eb51-3ebb-4964-ab20-73766d53e5dd",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d41e214c-c9b9-47b6-942a-a9802159bdb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 139,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfef7a1b-e509-402c-81f8-b2a910640071",
        "cursor": {
          "ref": "79e854ef-f506-42ce-bb3b-ba41eb3f017b",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "c39c4c82-e0c2-47b9-9bb6-e09ab604ff2d"
        },
        "item": {
          "id": "cfef7a1b-e509-402c-81f8-b2a910640071",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b4ae5b8d-c79b-4a3c-9cbd-a8524d4eb89e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361540ea-ed30-402a-b46b-0b6763a12623",
        "cursor": {
          "ref": "f8b6fe78-2b98-4478-be4d-047aceed8f28",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "80239e58-cc05-4b1b-8353-2ed9aefe32e0"
        },
        "item": {
          "id": "361540ea-ed30-402a-b46b-0b6763a12623",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "455dad39-d9aa-4dc5-890b-0df34bf66e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee67403b-32af-4fb4-9aad-5493d580c64e",
        "cursor": {
          "ref": "8d9064e0-5e81-4979-b36e-4f844cfbce82",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "effed116-1a1a-4217-b430-6a43bc810126"
        },
        "item": {
          "id": "ee67403b-32af-4fb4-9aad-5493d580c64e",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "769be962-e5eb-4ce4-9444-3fe066dd1234",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e432c9-61ff-48cf-b2ac-e18a13d66d40",
        "cursor": {
          "ref": "c2d65fad-016d-4d61-8f34-909eb14f249e",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "a7bc945f-cfd2-4768-9361-334d3108bda0"
        },
        "item": {
          "id": "98e432c9-61ff-48cf-b2ac-e18a13d66d40",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "16f901eb-f98a-4970-a8f9-11d479dabd80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec627c8-a81f-462a-a851-36f767869cde",
        "cursor": {
          "ref": "bf14ba33-611a-4878-a4fc-9969ce59a7ec",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "ebe349b0-697e-4d6e-b89b-7438f68fb017"
        },
        "item": {
          "id": "4ec627c8-a81f-462a-a851-36f767869cde",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "8c0caa4c-6249-484f-b12a-32597522fb47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "363702b8-7a5b-4689-8c03-b4facb5b729f",
        "cursor": {
          "ref": "8c4647cc-544b-42a8-981e-459d5167ce2e",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "337de20e-e8a1-4f2d-ab95-f9577042e469"
        },
        "item": {
          "id": "363702b8-7a5b-4689-8c03-b4facb5b729f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0b16c51c-ae30-4ae9-a451-e06ce484dbaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e71e4434-9cf5-4904-9d68-a43d13972fad",
        "cursor": {
          "ref": "0ad16033-d5c7-4916-8449-858771f9179a",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "6f822326-4910-4a0e-9b93-535f3c2f3735"
        },
        "item": {
          "id": "e71e4434-9cf5-4904-9d68-a43d13972fad",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "db2bb237-6173-4702-8ee8-1a3f03862684",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1919913-76c2-45ef-ac52-29617927e4de",
        "cursor": {
          "ref": "e8fbab65-c963-46da-a2db-1a5cabd8f589",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "28a09811-3c66-4164-b91a-c1d3c227f555"
        },
        "item": {
          "id": "a1919913-76c2-45ef-ac52-29617927e4de",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7b1e67cf-5dd2-4ac0-bc94-f4f49b391fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27fec7b-4d76-407d-93a7-ee2ddf4c459e",
        "cursor": {
          "ref": "a1887915-2acb-4933-ba9c-2ce2985a2c28",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "ee838953-38c2-457c-9304-fdd21280ca1e"
        },
        "item": {
          "id": "e27fec7b-4d76-407d-93a7-ee2ddf4c459e",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3e0bb7fd-f055-40db-bdd9-9c3fc5c52cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ce81460-84e0-4fc9-b98b-48f1568046c9",
        "cursor": {
          "ref": "d0ca8a9d-f7d0-4a8e-bd85-b1c56a12b089",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "8339c118-8c7e-4821-906d-109a19ccda6b"
        },
        "item": {
          "id": "2ce81460-84e0-4fc9-b98b-48f1568046c9",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "29d513be-4d76-4bc3-8359-9126ee9da551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0204c702-d77b-40ea-95b9-8252e7da71c4",
        "cursor": {
          "ref": "ee28572d-57fd-4426-b254-012fc8e9a1ff",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "c53d6f7b-014f-45b8-b40a-402f495740c3"
        },
        "item": {
          "id": "0204c702-d77b-40ea-95b9-8252e7da71c4",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "26cc5f91-95db-47a4-8af2-4a6464dac051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5f9960-e31a-4116-8e06-627ffe5bfd3f",
        "cursor": {
          "ref": "1c87d48b-5448-4b24-80f0-8fb60394877b",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "9549cb3e-6b7b-4652-9f33-4b75be5b0167"
        },
        "item": {
          "id": "ab5f9960-e31a-4116-8e06-627ffe5bfd3f",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "57b4f6b0-d59e-41b9-b00f-99fb224a7de8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad79b7cf-a7ea-4cc3-a2bc-2e4ed1b20fa4",
        "cursor": {
          "ref": "de0a8a98-9978-4cfc-9e46-70c30086694c",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "5563edaf-fd5a-4177-be69-8f66860f4762"
        },
        "item": {
          "id": "ad79b7cf-a7ea-4cc3-a2bc-2e4ed1b20fa4",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "42c8420a-9dc9-4180-9781-02d15bd052bd",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "93974c08-ce9e-44a6-aa4e-33b08b269b70",
        "cursor": {
          "ref": "2f2d40a0-0e45-488a-8ec0-664f55387119",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "ad8d6f4e-b97c-4ca0-934b-1d78168a618e"
        },
        "item": {
          "id": "93974c08-ce9e-44a6-aa4e-33b08b269b70",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f40f3b8e-164b-44cd-8138-3159e7624586",
          "status": "OK",
          "code": 200,
          "responseTime": 2320,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f54fc5-bf59-4650-b216-948a55972608",
        "cursor": {
          "ref": "28aef1a2-1125-415a-9e53-b9445bc91282",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "cbd23a7c-a7c8-46d5-a5e2-60dd55f8ed72"
        },
        "item": {
          "id": "a2f54fc5-bf59-4650-b216-948a55972608",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9d34d208-561d-4119-a35a-c13c5fbf2731",
          "status": "OK",
          "code": 200,
          "responseTime": 2250,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8f8346-bf22-4d57-a1bb-85b58bc87342",
        "cursor": {
          "ref": "f1149077-4bcd-4c9d-bf1f-229b801d76aa",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "eaeb0aa3-5002-456d-bcf5-b12d957d9401"
        },
        "item": {
          "id": "ef8f8346-bf22-4d57-a1bb-85b58bc87342",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a7e252e3-354b-4b74-837a-d1f4cd8277b0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8f8346-bf22-4d57-a1bb-85b58bc87342",
        "cursor": {
          "ref": "f1149077-4bcd-4c9d-bf1f-229b801d76aa",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "eaeb0aa3-5002-456d-bcf5-b12d957d9401"
        },
        "item": {
          "id": "ef8f8346-bf22-4d57-a1bb-85b58bc87342",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a7e252e3-354b-4b74-837a-d1f4cd8277b0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 28,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf6c84fb-f23c-4145-807c-a382977f7cf8",
        "cursor": {
          "ref": "87eeef47-f4ec-4129-98eb-2b0a893afb82",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "19efc342-4daf-4ad9-a2ec-f1afb1807062"
        },
        "item": {
          "id": "bf6c84fb-f23c-4145-807c-a382977f7cf8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "95d4d866-8d02-490c-b2be-b7c72ea04509",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec10c62-4992-4b81-bbd2-7efa683a0c44",
        "cursor": {
          "ref": "f1ee5f65-5f25-48f9-883f-ee7cc2b50e5d",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "aa47f121-234c-46a5-945f-4b0313569cab"
        },
        "item": {
          "id": "3ec10c62-4992-4b81-bbd2-7efa683a0c44",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "7d9470e4-00b9-4f3c-b87c-182e32b1248e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}