{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "16840efe-dee5-4fbc-b1ad-b99463360574",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0d173501-bfd1-46c1-953d-4991f9a8a1dc",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "11edf6a4-fa55-42df-9cd8-cac9290f463f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7c502bb3-a78a-43ca-b5db-8310768eaaa5"
                }
              }
            ]
          },
          {
            "id": "c93c05ab-e404-4749-9dd7-ba31659a09b8",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "11fc0d97-ac69-44e1-b3be-111679349380",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "90caadb9-f2d7-45c4-a805-b2580c8b23da"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "16e283a3-08d8-4063-862a-cef2d3836d52",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "66f1bf05-5900-4d24-8db8-a6b6a32c04d3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9c36aa82-8cdf-4a88-b837-3ebb3fc77af3",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "173daf23-c715-47d8-b574-2d03749c7748",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "591666d6-6f97-41d2-8a26-1c0ce7ace205"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e17b6416-e288-4227-ad89-de317ae953fe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cc171105-eb3f-43ec-ba5d-953a2db4642e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "744b89d4-8689-4612-815e-4631ca3b0de3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7c1588da-ad74-44c0-b23c-4ea8b1f85d1a"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8f27dda-f490-4408-a1f0-90f683ffcca6",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "fdb3d338-d7da-4b25-bd32-e5582d4d9ee2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8c365d1b-9193-4477-8097-96c5f1b69000",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2a2535a5-f1af-4f58-82a3-5649a56d285c"
            }
          }
        ]
      },
      {
        "id": "b42f1059-8625-424d-809f-c5bcd3756625",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "9a1335ac-d311-40fa-8616-9dfaa6f790f8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "27d37a5b-4f53-42d6-8f34-ad46b656458b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "38ba14ed-a924-4256-b661-3e2a36b200a4",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a475a82-dae2-4955-9024-b7f8f95b94b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ba63f61f-03fb-4bbe-af56-434b2c5c5fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ca26f4-86cc-4118-8f47-2e33f2c8431f",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da7ea16-f771-4a23-a8d4-b04198212312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b37ac24f-2abc-4248-a2d9-c80e0a6a4c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03eefa5b-8f21-4a4b-9645-8620caca64e9",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "727fd808-af02-4f02-8dcd-ac87f218d9b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d8552e38-dac4-438c-94c6-260e804a0c05"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7bc06855-ab6d-461b-9373-76adf8ef9b5b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c6a793ed-28ad-4ba7-ba43-7c4f7c455f6d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93482d6a-041d-4678-8492-13b709a77f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b903d482-0217-4e71-9ccc-d3745164ac67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb8595a-9f65-4338-b395-ed42ae515c64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d95f344e-9837-410c-a26b-ebef4ad7233d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7425cd68-bffd-4ab9-9915-6091cf56f388",
            "name": "Positive Testing",
            "item": [
              {
                "id": "79285f49-584c-4942-8f0c-d281e53b94e3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dde03c03-f505-483b-a428-67f4c442bda5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "47ed2e7a-dd9c-4300-aebc-ae9259ac9198"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f44f8606-5282-49ad-91b0-06a62f101437",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "616e626d-f7b6-44db-bebe-7db85bd01f77"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60ff80c4-dd42-4454-8b32-8df36f3a8b4d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d1c8cd3-5304-4a52-970d-39c9a7d2af93"
            }
          }
        ]
      },
      {
        "id": "ad864dd8-1495-4f44-8008-1e074cdc68ec",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6b3730e9-a7a9-42db-95e9-ea0c1b28b83f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b7dfb657-aae6-4bd5-bb76-d40e4ad414f2",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "35f84220-2e72-420d-8b92-da6cf671778f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7efce5b7-f6ae-42a7-8903-c7ff870ec7a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c537a3a2-91cf-48b1-bcca-b082245ebd14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e34e216-b6ce-47d3-a298-16f2df38ad94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f6bf4a86-1bc1-473b-8f0b-f7ecbba7d22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e10ebd-e18d-466a-a91f-0ac4cbcef881",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51cf6b2f-3326-4a53-abe3-004c69c3b513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b863477-2897-4945-a064-c629774c5542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e44ba17-bf37-4e51-bb05-70faf4bea519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6a35c79-b085-473b-b557-fc271b65c064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb15b7b-25b1-4130-be84-5813c5d9139d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6093c73b-57f5-4b22-8cb0-e8e31dbfeb0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee5686f4-5fb3-4e71-828b-362704a90250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41feb9bb-aaf8-4b21-8523-e2722d17a715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04899711-f948-4e93-bb42-3a11cb19e481"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0fbc7c2-ed3b-4831-91d1-8505ea31b876",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "411fb2f5-cfb7-4f3d-afd4-2d2ef023182b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70ad83dd-b076-4c4e-a461-c96355adab7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b205c1de-6fe7-460c-8c14-9d57790ea07e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99e07e5c-399e-4eea-99c6-c26b6c3876da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7dd6138-510a-402b-9d1d-c84e0463bf6d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf1820e-ad80-4174-8951-ae7643a970fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfc64dca-8bab-4b2c-aa1a-03f46cf03d73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2bd7ec7-bf2c-4808-8cf0-cbc5e05772c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b2945d0-1561-4707-87a0-19efa587ed9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9ad932-924c-4d4d-8325-b9d5e72643ae",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e902e8-8f9b-4c72-8d36-e0d4b59f5307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c9ebb01-1507-43a1-b58f-8119d2a0d87d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad65fe81-fea6-45d3-aaf5-d80b4525c366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b90ef35-5d8d-4e93-854a-ad607f8e827c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a745966b-a97b-40f1-beaf-e61433b98a3a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d3c487e-707a-4fea-b84a-81a2c501cac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "644fa783-fd6a-4b39-aca9-e8c605e3be19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c912f47-976d-4822-8d3d-742f5e25057d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "38875ab6-efa2-4edc-8dd8-ca8a2a1fa7cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666613c4-bf41-4c03-91c3-463d5a02fc03",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c3cdcf-7bf6-41d3-99db-f0c717a19a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0834294-0456-454f-a4c5-239f1d92093a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac483568-a8fb-4930-8c2f-32afcf7e7cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d4d3ec3d-1864-4db3-ab7f-2cdf163699c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed3b612-6700-43f2-9b09-d595463e9847",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7c4feb7-30e0-47dd-bb96-719a086e6436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d3b6a7-d10d-4031-aab8-31cfc562a9ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29368a30-0dd4-4a86-87ee-ba7e0a7dca48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "efbc805e-e425-4d63-9ab6-57dcd281eb1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19eade9c-ac24-4bd5-a7ce-146aa9d7a6cd",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0afe17f1-de43-4a29-af04-f851af08c158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7a22148-809c-4cf8-b9e0-e3a99723ef8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b964ac5-d290-4ba4-bcad-fb6d16432c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c803413-3bd0-4624-bd9b-f9d897061965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1a3253-1531-4341-bdb4-d23c6560f672",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eedb4b5-17b9-45cd-9f73-5c6fefabe75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09a2baa9-1962-4cf7-853f-b8793fe104ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa50889d-c3fd-4cea-9aaf-aea001880c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "513b02fd-897e-45c4-a982-d3994e6b5247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6b0861d-b417-448f-8482-df9ae11f74df",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f8cf2c7-5ba1-4e5f-8fc5-62fb3742384a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64f563ee-7ab2-4e82-a5a6-9fe3f18546e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fefac205-9178-4bac-923c-62132e09e219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9f8c7de8-54e0-4665-be72-4b71b11a2c0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b183090e-e9db-402a-ba2d-61406d57e72d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "604129cb-aab0-43a2-b25f-d420ef33bd81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcfcd319-4bb4-4675-ab01-cdf870b853d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4205d71-f4bc-4b4c-80af-6a016c39a9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "365133b2-8a58-41dc-9287-fadf2a756511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0472c8af-dc2f-47ae-8faf-88cec8aaebd2",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e93261d-c9bc-4254-882a-0ba726be8b97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "333b0fe7-3b91-47ba-960b-d8f54f82924c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2151d0b-de7d-470e-8f3e-9b78a93f544b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "81cf748c-2b38-4266-a6d6-53c1fb9cd253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b69674-47b2-40fb-87e7-5b9c1fa40020",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0166b313-b323-4ca9-afa5-263d98f3e416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f97fedb7-85aa-4b41-b75f-9fee4f6012f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e155bd-694c-482f-bbb7-0383e13d9a1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "916ba3a9-d1c2-44ec-a6e4-ea269223287e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d4ec6f-c12d-4c7a-9fd4-f5a302b679be",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65037046-ffbc-4f62-a65a-f0467505b7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60844074-0e54-4c92-a2bd-9da0cfcf1b92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4db8e30-8839-43f2-a8a2-bb582d26b1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7090b30-e985-4d2d-a01b-f897c1f36528"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fefa653-4888-484a-a14a-2a16fd7824ed",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dda18052-100d-4387-8206-c6b877069b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f5cdf6-3928-47ef-9f99-e3b278b4e4bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9220dffd-6e8b-4c48-ba53-37da26b47c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "67b904a7-cd8d-405e-97a9-9da911531307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f09d13d-ff84-4f65-a665-98525035232a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2262b26-75b4-4f7a-93ee-403263cf2a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c8f8607-26bd-413c-8945-18429a898528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449ad666-1f91-43b5-9fee-8dedb6400f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c36e70f5-d379-45e4-bbf3-b8b012facead"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fb6358a-1b5a-4890-b292-b74d4cb29c8a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d596ddae-aad6-42ea-8ff9-79e60ff8a021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70b5eff6-0aa9-47c7-aecb-15e8189850b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5c50708-b957-4c70-b006-5945fb2941be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "574f57fb-918b-4872-ad4b-aeee05d6c978"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18ba3933-4337-4069-a571-6bf1a70c09e7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e277dcc-7c2d-4713-80c6-433e8e445828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5d9dc11-083e-46df-a635-d218ad777e38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5107ff36-247a-4dea-81de-602b36d62cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab11caee-1b97-421a-9112-9948ced55062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7860cebc-e8b4-4532-b3b2-94b84fecbc3c",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4515de-4444-4430-afb1-d806f2cee94c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3342142f-6ebc-494f-9277-5829c6d430ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10922976-779f-4522-963c-13495bd5bf5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "503da2f8-9823-4e53-9c9f-59945f834888"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9906cd19-9d90-4f61-ab49-236dd3ec85f4",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc3bb18-a54f-4ac2-89e8-890d1069b067",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a95f9eba-fb60-491a-bbf3-a73a58863d8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e94ec48d-24c2-453f-ac1a-e0c5196ca605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e588cea4-f866-40b7-8192-e403877b5e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39aff591-34a2-42e4-8bf5-21bc112f2386",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a85eb26-9133-4dea-9808-e650f62b1d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1731ff34-28b6-4c32-871a-4e5fdd558723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e6ddc6-5b7d-45ad-b58d-76ba71f75e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e894350a-96d6-4623-8439-7ab546d5926e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a4e7da4-e9c7-44a9-a3d8-25cab10d92f9",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c0b8e60-9133-456b-9ee5-4e1f74091d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd326b9-49e3-4b16-b102-d4c7a1dc1e86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13cb7548-470b-4c6e-84a8-a87c6397aead",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "57d014f5-4ff6-4a81-8863-25897d074a69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21bec8b2-9e08-46ec-bd6c-dc4084195a08",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03817287-0e8c-4ce1-b435-dde2f02be9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffe52147-3b95-493e-a2c5-22177f3fbd33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8730cf-4296-49fe-91c5-bd8238543f98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "047c2d59-c2d3-4384-85cf-85be811cd759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a6bc304-75f3-4773-a01a-2be80339750a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95297396-58d7-4db8-b3ed-9207457568ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c5e7fc3-61a5-48f6-9e18-f48e6472d012"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7e8d070-b506-48a0-8dda-fff990426a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0ec7293-7541-4110-86c4-d89551b00d32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fef11b7-93b3-4fd1-a367-84b7e4d88996",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82118c03-1480-4195-baf6-942180f0ea98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0e1d4b7-cccf-4976-89be-13bbf0a4cacc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "076ca95a-b4f5-469c-9385-e1c6898c8b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f6b1915-028e-4c8c-8890-20d17fa09121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b982474f-c2a6-4844-8652-865d7d70fd8f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09cc9d5c-142f-4c9c-a10e-e74fa7646a41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d023e38c-6082-4e80-805a-fb178019e6a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca506aa-e5bb-4c07-bfde-8e4fc70a024f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f9da8fe-71bc-4025-a525-202a259c83f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d3357a1-e1ec-4424-a2ce-7f32a51f3f0f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2ef057a-346a-4c03-87cd-477bf54ec587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ea225d8-40b4-4083-8498-ade7a2844ef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6c3a9c-e836-4840-abe8-fec618f461dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "52230731-2ecd-406d-bbd5-79b2a0526a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "381d88f6-547e-400a-ad8e-f6efeee87bd9",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8453d4f3-3019-4ce1-a410-8b5a9138dc34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3237df5e-a6ae-4cf4-abed-f254dbe76520"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df294372-a317-4e49-9175-404a65ab4270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "4479e110-32ef-4be4-a88b-d0224f4364ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "657297af-d1ef-4b47-9f0b-ce862b2eb543",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "455efab6-e908-46c1-950a-64ad8d6d70a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4608b047-0f9b-492a-9255-6ca12d907bc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf2bdad-ba62-44b8-b27a-135633da32e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f99d8eb-6e26-4748-82a4-bf6304741c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54253cb3-5887-4b69-9c91-bf56dc9780e0",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6d1152a-1740-4ec1-9367-6492c1ba3a68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ab13454-9535-44bc-8423-3f25bebdc132"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8240c565-1f42-4ead-a72d-851581559d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "90be1eab-d3a6-4441-8626-c6b6c91ee0fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41d1ed06-4bed-4a58-a34e-87b67e8aa87e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8387df79-011c-43e6-84ef-65a0bb3ba138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90d20039-c79d-48f2-b1f6-ed98bcdbf872"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f040df00-13b1-4548-8403-0caefa398f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "25398050-2f99-40ef-af20-fcd75d98081e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca784644-8ad6-4d7b-ae4f-f31f129fd559",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ac1202-8c57-41df-a2e8-0dd4be538166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e108dac-a1d1-4652-8b11-416422c93d0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3222122e-ac09-4375-a7fa-f7a89ec3cdae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "90d89d99-d38c-4748-8dca-a5b4c853ec12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f82e5a3-b126-4d79-b108-e14965daf29d",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b31980a2-e584-4528-9824-ef7b9d8e79e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4fb6080-5c2a-49aa-ab83-d3cbab861d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fcfce6b-b181-474e-885f-078c4cb996be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "2d10e404-605a-47d9-bfc0-44e1bb0a9f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a72cc7-f6bd-4e23-a42e-d5be32ceccbb",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89714ee7-838f-496b-aec5-f1952545e758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "00abd158-577a-45c1-b721-d185810783c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914e2833-ec96-481f-8174-8f83c94c47ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "69a79970-2263-4c2e-a001-219b6e7cb0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6735517d-7490-4374-9631-4429844d298a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75b47f8-f01e-4a93-8421-e115c38f3f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62650ee6-d029-4a8b-b43e-96ab54d11900"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12cc9246-3a79-4332-8aaa-11a3fd4c9f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0d2ea32-a86a-48f0-9f64-7bde048367bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f07df6fa-6c9b-4ad5-976f-3a262b835249",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7b71095-22b5-4cb7-8a46-c5463668ac3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "853955f7-5d9c-48b6-97cf-f3e60520063d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4fa22c-30b8-4310-b08d-8bed965fcac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bf8e12c7-5b6c-4778-9620-ba0b6bead1bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c14bfaf-fe75-4548-a789-9e221de90bf1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c036f91-0e0f-48f5-acdb-06b2794fb747",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed7594d-a768-4e3d-aa25-a159aa82754b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20e89c2c-d48b-441f-853f-4de43eb19aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "28310798-4563-43f7-adf6-3963be46a3b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837592e7-ce96-4a4c-9124-76e5dfe43217",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f55e83c5-4c8a-4a16-b35a-cb46f119ea32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13955ac2-4d6b-4948-938d-e9723032e4fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93f2393e-fe8b-45fb-967d-29ce0d0489dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c60446e3-e4a2-44c0-a8d0-33e287d4828a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed15bde-03d3-44a5-985c-b8eeb5761609",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3922e001-8d57-48a2-ae82-7b480c2d1e39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f977c829-078f-40a0-b271-9c9eb16f1329"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473b65a3-8e6b-4910-8a2d-a3e68a1006dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "963c33f8-3f19-4126-867c-3d5e4c8ab2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "479cb963-353d-4f4f-97d0-05da0cc69cc6",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d94bd214-de72-464a-b745-ca345e8a95fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e05abb4-b36b-4969-9838-d6046479dc4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaf3d3ff-776a-4a70-8327-14822c7a794b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "887f3197-14fc-4163-9a0d-b213b00855fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7108a6b-6ba4-4b51-9d0e-964c21b2b079",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdcfee33-8aea-4bac-a1bd-77ccf2183496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23287c2f-f8ee-49eb-ae2f-c01d541da261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a142f0a-783a-4fa3-80ea-ed34e98159bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ed71aea1-a244-4e69-9224-874aa54030f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0700abe8-1152-4d95-b0d4-d0d4de810431",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a285df-4c98-455a-a638-4d9797f3a16e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd1e5b11-2c9c-4196-8af9-fe7acb51e98e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be63295-a9dc-4c83-897b-53f1454ec8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ca86af9-c797-483d-99e8-a232679ce900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87d0221f-c322-4a8d-b415-122537739a3d",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d953d6a7-9777-472b-b5f5-71133fe06980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a78bdd4-17a2-4932-ab99-20ef578586b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0f2871-4183-48b9-9a43-a04a03309393",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "372bb8dd-ff6c-450d-9276-a2a3997d18e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38e913ae-9d21-4652-8f32-7d55ed9f8646",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44c16ea7-d0b5-4338-82ce-7de87b9c6ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a859cd-82db-4e74-a17d-d5bf53413f46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e45eb8e-4a96-4f75-bba3-61073dffbd08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6095a9e3-67e8-4481-9eca-76f14247b0f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67274ab-1bbb-4fdd-a0e6-110902af340e",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8812c221-875b-4a8c-9c76-59210abeb890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee60b742-b01d-42aa-925a-ae57150e609c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44384524-84f5-45fe-8844-866286898d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "41a419e0-751c-48f7-8a3f-e097543bbd37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04e05b8-70f4-41e6-9e39-45777f15e978",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6b2c9fd-b704-46e0-bc2a-79698695644b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b9669ef-63c4-4ab4-ad36-a95c3257d76a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b94ed6d-9ef5-4901-a6d2-b611f6ab0f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f18144c4-79ee-490b-92d6-524fae195ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04dbb5cb-135d-48c2-a248-cc556a76fcce",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "923f4030-4cbe-4474-ad64-5fd82563bca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57f14793-abc6-4d81-8df0-16f4ca677392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172ce068-dec4-4e42-80d8-87aa738c2455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6c5b78f-ceda-4324-976e-4bf02d1fdee0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f842fd6f-b42e-41bb-b2de-eb438ec93bbf",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "775aee92-c83c-448e-8635-9b23a84ce8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51f9e348-3ce0-410d-80f6-966954506803"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c42bc737-d701-4081-8886-074dcb20bde1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "065bf1e6-567f-44da-bc2d-882e24f69097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1b5d78a-5eef-4f1b-b03b-d3d8826151a2",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7791c46-83ea-4659-8cb4-f66ecae5ff7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d08351a5-4cf2-4f46-a1a7-e5121294f74b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0391f14-7c88-4a3f-8aff-fd996f9b0dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d6dd5fa-423c-42df-9211-0aea51c56fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc993378-08a1-4488-af6a-174cd12382e5",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc9a1495-a161-4a99-8292-b11de655bb38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e09af6c1-a614-49c3-a966-8f1fdd901c6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f468a5be-1771-4751-b18d-6088d8c81abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "473aa529-379c-42a2-b8f5-e014af7f647b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ceb71c-f6fd-4469-bf74-ea0c43ecc324",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46980543-6e99-4d34-8211-4d450304d178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d51895f4-8991-4db1-8af2-ad481a688354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "529e2121-9428-4544-a1e6-0777bb835b1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e8b649a-a801-407b-9a76-73996f8bf8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20fc5cec-9e12-4bab-bd00-ab6ce129b9d7",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a352455c-bd00-4450-b2ce-a29b611cef78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37861412-19ec-4c10-ad8d-9356a4349e1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "778cd04e-6c2a-424b-acff-eecbcbcff49f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1663a0c7-fd80-45e3-a954-0d02c4694491"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45042ee6-56b4-46a2-bdbf-8336ed038b27",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da24e21-bcfe-480a-a153-7bdf6f5c8e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "485bad8f-33f1-4fba-846b-a69ca5369558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97ad2c6-8269-419e-a13b-d2f9174b70a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1eaedb11-97c7-4813-a18f-000b4480c52c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38be9a8d-cc7a-4d8f-9453-30dca9ca9694",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9c3c8aa-43d5-4d19-bc02-2e17c91414bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7372bf7-b460-4e61-91de-ac9dc0e8f9c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e15e03be-206a-4cb3-9b2b-a4455be93a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "2fa0e82c-fc5c-460b-a835-015856b2ab70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06af7a6-8d95-4457-be23-b1d0c9155e1d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e28645-6f71-4598-81c3-5b5bd80d74c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ba5bc24-e867-48f3-bc3e-72447739e074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996a9cd2-7db6-4c78-8b24-7805ffa87514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc843775-380f-4bdc-ba1e-ed96e7c1750d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e422aea-b2a3-430b-b632-e46e8a463461",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ba29ca-414d-4bdc-98ed-4afa15bd5691",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6b39ee4-2e74-4a45-8e2e-a54b94142133"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9ef5f46-705e-4e60-9d36-c4cfe82e784d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "82c2d378-9e1f-47a2-95bf-50fa5025813b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "417dff47-2fa6-4d10-a1df-f7c91906213c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80498c79-5901-4d6c-bd33-fd5ba1938d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b92de2-0531-4145-a37c-7b9fe1c00496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "601a1605-d4bc-4367-9cc8-4d65a57c7c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "44fd0724-cd20-4900-9b37-40a0e98929a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27a5daf3-38d8-423b-92d3-6f8869f11a25",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "711ddaa2-5c3b-4518-9bdc-45c89a5f8a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f88e0e1-d718-4a20-802b-e1c6c3eadd24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f84d0d4-8a77-4713-87d7-cebad7d3545d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bd42d4ee-3873-46ef-a086-19d73bb30e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09432ce2-931e-41c2-8ead-2163fd835921",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84537df-f224-47ea-a998-1d9eca931533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72394d96-8aec-41fc-886d-2998ebb103a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf1e60d-7ad7-49a8-a931-585b0fece96c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfa21265-7cbb-4bab-8e07-e1ffceeed6ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b6bffb-4fb0-43f0-bfdd-0759223d28ae",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14d6ed8-b153-4ea2-9356-d4bf1914699f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c5a5fb1-f9ed-4b5c-9e74-cd57b930ee7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d980b1f-78f0-4dd1-8be8-411a1ef9769c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5870a8c5-60ba-4b12-9193-0062b3363a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7bb927-d44a-411c-9260-6819dd6cb6e5",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6379f99a-9c0c-4959-b2ba-066d53f15fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9561f0ad-b69c-4c25-a1a1-51dd61c238b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c210868b-55ee-477f-96d4-35a8049a0e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6c26743-efa6-4792-ade1-411719f1a09c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dea8769c-b6f9-4c45-8d8b-ffb7f1241e47",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c821c33-0231-4d33-9c31-f94bffb31b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b80a86b6-36dd-4d70-8d20-bd62d5f23f59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf86c521-4aba-454f-8a1a-f84ed0625904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5545b5eb-bb5f-49c0-9b08-d834429f1afe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a81807b7-d7e5-4cf6-b9d7-68eb4fbdd7bc",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a0fc5b-7396-4b22-ad59-229ebae697d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e0dadf5-0e82-438a-affb-9eccf5a05e2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0c2100-e5a3-4e86-9bf1-7f2ac2dad9bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7c839df-d9f1-4e41-867b-81b48f14159e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1cb868-79b2-495d-a1f4-e01899cf9910",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0288c3f0-9302-453f-9727-5f9c92c96f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cb7074f-3b53-4745-a1d2-d09fbe9a74f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae94d17-42ee-4556-a084-309920e3fb69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4967f6e4-9065-4cb4-a582-c3878c3d9820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "802c4624-64e7-4e1a-b26f-c478756c7c16",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c74f906-e2a0-407b-9647-3df4ec712c2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f5f5fb2-203f-4d57-851c-fe492e7cc8a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73967436-5f02-4695-a7eb-ca5fa79730fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "90fe0786-7b68-4ed0-9dad-fd34c157d163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db707cbc-6d73-4877-a30c-41dd8d6ace3a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74ea7082-b75e-4561-9421-b9326a958ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c70ecbf4-51ed-4367-aa8e-0c3d5134306d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e4b51a2-345a-4fdc-95d1-a7dff4f6cd47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab469d53-320c-4ac6-b5a8-a0ae717b99e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf93ddbe-1205-46fd-aa4a-749529c65a3b",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceca5955-9d3d-43eb-8c3d-0eea74545b6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc93d743-324f-413b-955a-0cee5fc22e82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49849011-dcf5-4b6f-9c99-1de8796dc63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5540dc15-e7f2-4b05-8dca-3aee99239247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ee24bb-87ad-489d-b351-8480566c71bc",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e969a44d-6e5b-4af9-b7c7-5c90f10e8375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d88e9a22-3a42-407f-9cd9-3b22e4b29ea4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07070e6c-024e-4d34-86d8-b89c3a2f1083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c304587-79dd-4c4d-bf88-b3d6d904d773"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43d15a1-95f2-468d-95d0-394825c22cb3",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1b7ca2-01b9-49c7-b703-80c7caa63d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7edb6e63-374b-47c7-adbc-6802033cd917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6f395cc-d2e5-4e57-9293-409b4184a27e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a7179da-dd52-45f4-9fca-32197df1ce0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf19f22-1dec-44d8-b730-7d0e83d18d4e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82c35c8f-1b42-4038-9d74-59395750898f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d462b70c-682e-42a4-b280-4975655baa54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b949f47-2c43-4005-bee0-66ccce99aacb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fee68fe-ff5c-43a3-99f0-ca0c430eb8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d20f7a1-637e-44c7-85f5-7910878a0fbf",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "172a66aa-7086-478d-987f-ab433f1bcccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "846da259-d557-49e5-8455-37bc2ce39787"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "292ffb56-3ba8-4efe-b7cc-ed160e4b9525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "93ca1701-b704-4a00-8f0a-1d692d70d293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa5c9c12-3713-455c-8440-2cce55fdaa60",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f17b5b84-70ac-4f63-819e-267b84628bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea684f53-8b08-455a-ba7f-22b7049cc51b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14eb0c29-71e6-4035-b576-5efd255b0bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d971c92-7c3b-40e1-b8d1-02913ce73777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837cbff8-052f-432a-ab2b-da9730a77911",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5839287-6316-4943-98df-8c18dd0ace45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92515bd9-11de-4fe9-a711-c22d2f9a5bbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f63fcb9d-5f25-489b-8179-01b0cedbdf18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "900d6f76-65f8-4cd3-a1f2-9925861eb18d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3df1f08-edc5-4dc9-9a32-3d51ae42a73b",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9691095-e731-41d7-8aa9-d657bb5f4513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99716512-5b44-4ce4-97a2-2769a850b41a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf7142e-1ea0-4c05-919a-4e6a55f218b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a14227ec-b325-45d0-8ca3-f8f2ad4b9bc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7b8a278-6bc8-491d-9d86-6f783d2141e3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f2f2d60-2dd6-42ae-8158-35385c5d84c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc4427bc-ad52-4d47-baac-0a7fe06ef524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ae42a3-8fa7-4182-9c06-d21b94d4bdfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e9afe30-3188-4fb8-b440-74e85509a1bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26c6c777-37ba-408f-9ad8-38ac9286c3de",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f003763b-9e88-4cd5-bb48-ca8384059017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d57ae770-cfa8-4334-a80a-cf32df9b3d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bccab82-f332-47e6-a719-23e1ff2d0f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fcffa79-0ffb-45ec-b5eb-1f0325910d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9331102-a19a-4d1e-b330-f9b99e869389",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8caf143-6e71-4736-a800-40613ee9cfeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6240f32a-d9ed-40df-892f-50176db5a4d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22cff963-3ffb-42fb-952f-9ae6ab824bd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9af1bd34-13f3-44b9-b8fb-f903f26b53ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbd112b2-82d5-4694-9d8a-4b2c5ab4fe09",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b56f5b99-7672-4417-b29d-bb738aea1111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e28a4da-9054-4798-97fe-a7d382fdda20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6f3f2d8-cffb-47cd-a525-6ab625556bbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a443b391-e579-466f-bbcf-4d6ce79c23e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51e39a28-daad-48bf-9740-f240555feae4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef6693a-51a1-48c7-8830-472aa2a99101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de5640ec-65eb-4dd4-9678-126e8699c0e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c53413b-ab67-4501-8642-5f537d03af40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "65a97e74-3ea6-4b3a-a36d-a54570304e99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f82fc3f-5ce8-4afb-9528-9e1285009678",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11328a6e-7fe6-4272-8f35-bfd71b8ea407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "442b48fb-f2fc-4682-ad69-de97cd7f38e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7d7c90-ed95-4fec-a7ac-d9e711dd50c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b79792f-7dbc-4f13-bd30-0f8c0c667e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "198fb443-2a58-457d-a6a2-4052521e0451",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21b50a2a-7eda-4f22-b0de-97c433c19e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ef9eb80-9599-499b-9c8c-57157e79ede6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6515d093-ba45-4777-be43-2d90b57786d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "113cbda4-1e3d-46fc-9b25-50e13e6c373e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1edf1d0-84d7-40c4-a66c-66a0daedf20d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d747549-ff11-4d7e-85a4-cd8dd1497654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da66b488-6c1c-4e24-a495-e537f1223abd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec8c063-8c07-4df5-a704-76f2d13f5840",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9261562a-fd12-4c08-b594-100bf759bfb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5afee424-c5ce-41c4-9234-0d608b1bd791",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a3f7bd-bd8e-4caa-a20f-ce804c8919af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4fc87c7-bc5f-459c-8e2e-1f8f1435cb7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d526d5f-5f28-41f9-a1f8-42439c505656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f71d3bb-1ce7-4754-8e9e-a4fcecd5e4c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a33b8d-4e9b-417c-b643-656d3504ef07",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82db2525-342d-4a1c-b9e3-0825da0e14d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b8c6453-f8f2-452a-8746-ef2c5030068c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45d71099-410c-419d-a0d4-8b1016c0af13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "56dded33-0a53-4542-a9e5-91d393c60ffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "528c394e-c76a-4ea4-8e10-9e346b0605ca",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e840a5-02e2-4342-8bfc-62056cd3aaf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d83d5d83-d5b3-4720-86a8-99b89370c42f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1fa9463-725c-4cd6-9820-db1f776f3a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd14991b-d839-469f-90d6-e4557fe0d9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24abcdbe-48f6-482d-ab5b-3aeed512b46f",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c3d2a0-f71e-4a06-8469-ec70b2572a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78adc1e3-8bf0-4ca5-a0b2-af452a356d22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "435df985-8a77-4ae3-8046-652d94074673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "05df38eb-0919-4118-bb77-4f1b9a3c79e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1edcbe0-862c-45ff-a0e8-492b468a433d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ae3010-8de2-4d3f-bbea-56735966d516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b01bac65-fb69-4995-8b37-a316d9424ca0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b2e80f-9e07-47d9-9c78-eae218eafea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6cb79256-269a-4b63-b02b-1a080ce3bf56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271509d2-c245-4bf9-acf6-18245329cc4d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50c44458-157f-426c-9a39-96c1ba994994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be188cde-7c96-4d50-9eec-c27f5da33aa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03cb8ff7-9d39-48bf-948d-40a03154c50f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e169b3b-262f-4383-a35e-69eb683aa04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21085ef2-5908-465b-92ed-f92a681ba8fc",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bbd5522-058b-4e5f-b6e4-b61f1d324dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed6bdeff-6881-4fa5-8775-3156b37da372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6497d02-70e3-4b26-b7e8-31f0bb5c9dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "04c4342d-9bb3-4bb3-a2f9-99ff21566707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041085a9-b12f-4279-98f2-aaaa72906263",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a83ae3-012d-483c-86a7-9bec26825856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "8508414a-e9d0-4b97-86ef-a1d14a3eb85a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af49cb9e-fa95-4d43-a16f-e82b17c72f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ae7b567c-974f-40b6-a1bd-c8cd4f1cd67e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e39d69b7-de2c-4da2-bac7-db339eb08ebe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3096f9f6-b957-489c-b6f1-04cda94f57e1",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d615f2a5-7af6-42fc-8b23-a2550cf0adb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23915349-eee5-4723-9626-8dc477561516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dc0bd29-c472-44d1-b224-eb48d46a4133",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "706e20f4-b2a9-4627-9935-02f72403e0a2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66c01076-0351-4772-bdd7-de9ab9770b9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd5729dd-6c92-4651-b6f6-9d3d1d3dfb39"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c58ce5c7-416d-48d5-915c-72f7848e871c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45e36115-4de6-4706-8c0a-9ab4bebc8f04"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "51b670d5-e284-4d88-a701-1d5631bf38c6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f6ce4aa1-940a-4858-bb6b-83424adb6ab5"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "abadb713-5cce-416d-b2d2-03c0d4098c43",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "24006c54-5aff-44e5-8a40-501f77d870ee"
                }
              }
            ]
          },
          {
            "id": "d1a9a396-d34e-45f0-949a-7e0b123f598b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ecf9977c-20b7-4e8c-9b89-a142dcb2e5e6",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "6267e004-dfac-4fa1-908f-faa73e244138",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d12c6e1-c36a-4ec0-9919-ee46d526c560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "da06f212-5668-48b9-b6d8-ba47e1644f92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc123130-e6ba-4cbe-a7bf-ed490f113535",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29f1cfe7-7455-41b1-869f-a0519aa68ad2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ec34536a-8511-46e0-94dd-ee1ad59dd403",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e225bd41-22d6-4d07-afdb-a18f91f3de76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "14daf193-e938-4edb-b220-b4a1da391af1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1b50dab2-e6ef-4e93-87f0-39b46afdff20",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5c58617f-e2ef-40e2-88b2-1610b8fee23d"
                    }
                  }
                ]
              },
              {
                "id": "bbf84425-a259-496c-bda4-9634ff6ae464",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c752436c-924d-43b9-9eea-f6ae71c32dac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "abd6037b-aae1-4dba-8532-e4b65d0da93c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "46affd1c-c6cd-4654-84a5-73db6225b38c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5457cc07-2c66-49cb-87e4-93298e294e4b"
                    }
                  }
                ]
              },
              {
                "id": "b6604411-c508-4ecc-8acc-977060a63e76",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4980c81f-7840-41b7-ae99-646f9188120a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1fe85b13-0c7a-46a3-bc3a-5fa344c4259f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b395349d-1c77-4396-bf13-386cd4d2649b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f91d41a2-3955-4eca-9688-7dbc1b39f9e2"
                    }
                  }
                ]
              },
              {
                "id": "a97e1420-4ec2-45dd-a28b-ca68aaf06d74",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4458e5c-ef8e-4f84-80d6-60768bafdc64",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b7db31be-e818-48bd-8c57-46ae29401ba9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2116bcae-0735-458d-8eb7-2181fcc8f0fb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "577be166-6fdb-4bb7-aa67-680efcce7594"
                    }
                  }
                ]
              },
              {
                "id": "dc00379d-50f1-465b-b2cc-26b5078def7d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffc0e46a-b8cd-40d9-a6e4-b59f98de4835",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cc984a79-d58e-487c-a655-133e4d0664e9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06646538-7fd6-4128-bb29-d8dd9a21a7dc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "fd84f183-0177-4f64-bf32-2c1e66474950"
                    }
                  }
                ]
              },
              {
                "id": "c9ad3775-ec84-4386-83ee-f727de80f03c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "acd11079-1532-4cbf-8960-4119e672d878",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8c6d3e83-b3c3-4b13-be6c-7f30a0838689"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a0f5eabe-b8ec-482a-b401-da0edf815d0c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d7e92923-ae9c-4ba8-bc9b-ed8329d96142"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9f744920-cf4d-4e0e-91b9-622510a2e167",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b969f2e5-e07a-422f-879c-850dcd7c5bdc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "96cac4ea-3b1d-4e37-8458-6b84ec262ed6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1eb50fe2-b826-4980-800f-be09c8e79223"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c50704e1-e481-4145-9548-06d395d21fbf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "0fe16426-1052-4e89-9323-378e9ff27338"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9618b3d1-eddd-46dd-b0ad-d916bd269a8c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "08d0d8af-0447-4c2f-9735-e978e8e65910"
            }
          }
        ]
      },
      {
        "id": "a576bb99-5bfe-4c41-b0d3-9253532776db",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "ac353680-2274-493f-8ff8-afc8f7e9f71e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4def1fe3-7280-41e2-9ea8-cefbb776b75d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e4e9669e-ce65-478b-bdc7-79f1650699a7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f41163d-d6e1-450c-9584-26d0436fecbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b4b608c-9ec1-4ad4-a7db-de7cd7d3c80a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bf73059-6937-4d08-9cea-c3207d25d6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f75bdab-2a62-470e-8539-80e7b006d4fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cd36c73-22e1-4d2d-8a47-0d4bdcc3a9b5",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a9a70a3-9b2d-49b0-800c-da3ae6a34753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb2ad31-f288-4d52-abab-d06581c59074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5244badd-57ea-431d-ab12-647d53a1cb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "27a19e28-91d2-4e90-b9b8-408cbca473b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c342de2c-fb1f-46e5-9373-1d562f19fb87",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfa96f57-ff1c-480d-a3fd-25652e6c8e51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7540bff-4a0e-4efd-94d3-69df7bcf346c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf9fe00-a9c6-49d2-a9f2-8f93d9b651d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b8488c0-9c21-4220-a096-f26dfa0aa406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "005c45d8-148a-4f3d-a01b-1a6f0c4abe54",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb7eaf9-7afd-47d0-9657-ba5142ec14b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83011343-128d-4f40-a661-0e9fbed7c291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ce5b9f-8a9c-4659-902f-554f62eee443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ed8469b-d9c8-4c7b-8cb9-a38dbe957614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5113c60f-fcbc-4000-878b-c40f00d5c598",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daacea4a-2f27-4274-a45e-3b2472f7ac93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e75e7371-8783-4598-8c3a-9d4c2183b5e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5b306a-aae4-4523-8657-ec1e61a9e07b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5365053-0718-4cfe-a319-ea480fae3892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "218196eb-a425-4435-a9c5-664c0911b726",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88ddd32-d7f3-4241-80e4-702dd869b979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d353d901-6579-4002-b59f-0896bcf96309"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53badc57-4906-4652-9a6d-8af1a5819e30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "47e08e53-9241-4156-b0e3-113bd491b8f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb64a226-5dd8-4ce8-a773-312f9d7f6ba1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db34437f-3b57-4647-86c7-eafb67223dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38de96e8-787d-4e1f-94f3-3849b6f67b9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da2678a-7eba-44e2-8f8d-81167fa6dfa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c9b6765-cc99-4918-9436-e1c4dabc63ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e90c1ab6-e022-4deb-937d-ceeb98a33ca4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f2b07a0-ec67-4758-9ad0-fcc3a9e60f62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e006040-85e0-4189-b26c-493f788c6046"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376e138c-b1f1-47fa-b7c6-af37ad6371de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da97b00a-7405-41cd-b8e6-a50c50b0d93e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f404df2-94e2-4076-a991-436e6a04367a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3fd2e1-5162-4914-8a98-ef4f498269b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44408d6f-9b70-43a0-869b-0adacb1e3666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da1b4097-e083-4aec-9b83-d2dd1a7bf543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "21b41ae5-bad6-45f0-aefb-267d390e09b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6ddd95-cbb4-412d-b83d-a5eb9919dc64",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fcd24db-d2aa-4403-a708-b474ff58fba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb4b104-13bc-46db-936c-dad7f17151d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed82c735-198b-4bcf-b2de-90083711125f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f777db36-2d1e-4831-b7e2-5a800fd0900d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32c89df5-04ad-4d2d-a826-053e5ccdfa90",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62dcbdc8-5d66-4215-b854-e755ecc327ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bca70fe6-8753-4fd0-9f9b-e4d7ea015e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f00f6e2-9ac8-4da8-826e-3abd48569c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "04c555ff-18bd-4691-9228-3148a12fbdaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01cc7183-3b75-416e-b805-104e6ec186c8",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8779309d-b45a-4931-8f3e-37028c0a89e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0871696b-8ddc-4b83-a083-0e97f4c628b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db00141-2f3d-423b-90e6-e741c2eb75bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8e36c33f-d286-4d1f-a475-71db1a449595"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20539700-da9f-42c8-9193-352be668f5ba",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95ce457-6ae7-4bed-9fd4-18295d4f4dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5c97d69-ae42-47a2-b4b6-eccedf61ae4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d29ff0e-ad4c-44e8-8b05-bd876543bc5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "11df1bc6-6cc2-4cfd-9f6a-09ff54136a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "722ae44e-5f49-4b85-8100-a74c029fc65d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee173e7-74f8-4637-bb83-87c29d33f925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73cc8d6a-4aef-405d-9320-d5f30c9479df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "faa70bec-8ab7-4255-8f09-66ee493bcefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6943892-1bc7-4886-ad92-6cf33b8fe02a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413b26ab-9289-43d6-99fd-5fb02480e719",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d18b6e14-4d29-488e-97b8-b6e4150dcd86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad7aea27-391c-4ddc-892d-05951374956e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "216ef0bb-b2e2-4f5d-98aa-efe640667fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8022448-eb6b-488a-9439-c46ac16a6870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9236272c-be59-4903-b773-40f8e984cb0f",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8537725-cada-4430-9153-fbbee6741df8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68e84941-384e-4542-a4e0-b605d45594c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f36b792-dc27-4336-8cb4-122adfed2481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bdeb630-da4f-46f5-a1ac-fdc14a7743d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e270e35-9538-42cd-8a80-3d0103e72e4f",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bbc9645-6023-489a-b7a6-a7df31b81c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67dfe792-96ea-4c30-8f4a-2acd89870418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da39dced-40fd-452b-b8c7-6bbf955994df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "aef660b5-a8a0-436e-b7d5-45da4efe4fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "796428e2-ddbb-43ce-aa42-7639da00e264",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e48bbb7b-b918-487e-a455-857185447da9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51de78d6-745f-4ddb-bfaf-ce71a1ab6b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b659576-8095-45b6-9393-fa86d2b51db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d522d071-0959-4aa8-9310-ed43797c59bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f839a98-e8d1-4c1a-8528-2ef775e9fda6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b32ef96-4296-43b3-a67b-5c0d7c02c8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc7387bf-8c83-4ac1-b7bf-bc9f0afb3317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440b8952-ed6a-44cf-9e1c-284c8fa47bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b1e39d4-165e-454e-bb30-601debd7ef09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6cd3f2-9130-4b96-b086-4881bfe4a747",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef64bf9-336d-421b-9056-465899ae4e8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b192a584-07fb-4d25-ab71-d83fe09690fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e8bd55c-d237-4307-ac30-48e9cb9eb5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "490968a0-bdbe-4fdd-820b-50ded1016dca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e95db2-45f7-45db-bd74-b1bcca0151af",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8084019-fca3-4360-96a1-455948cce300",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7930c552-7646-4d33-99b5-1dc7f9e00e75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d336c5-f7cf-4114-9eb5-2f8e53dc6261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a433355-6c07-4779-bc4b-5a10088befc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f58984f-d8a4-48e7-8ff0-0bfb87450fcd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2301875f-b4fe-422d-8398-a878e3d3cbcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cc7675b-66cb-412e-9aba-68d716c8af12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a78f043-8a8c-4980-a33f-bae1ea22913d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b77acda8-8db9-4061-a3c5-38a6d9355b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc863531-3ec2-4d8d-911f-538d32c8e248",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "444b5d55-a06e-45cc-8dd7-75a96df74646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53413a0d-d817-4869-a6fd-9eb7141e29e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f38d9cb-6192-4553-91d8-47244259e83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf08fee2-c7d2-4861-a73a-5de7f79b14ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa6c69a2-2c6d-4894-9cbc-e7cd990b03be",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79ceacba-baea-4c65-9e81-8f60301e04eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90924c0f-418c-46b7-96aa-7413106befff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8785749a-7991-4a02-9867-063e04325468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b499349-7b1b-4932-820d-3c4233c663bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f89a9a1-580d-4fd7-bea3-d54c5f42943e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b6ab47c-32ef-4ff1-bc26-c9ab330c6c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86238c0a-0fb8-44d6-ba3d-7bb0ffad10fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa342458-3768-4c11-a3f4-70148fde65ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b67aab8-8c90-44ae-b92f-511bd924d8ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff467d61-fe20-49cd-be5b-ab6591745988",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "251c09e3-0002-41bc-97df-8b714e1c47cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bde6277c-16a8-4a5d-8342-bb5908462b98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a25428-92ba-499b-85dc-774194050e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46eecb76-876a-40c9-813f-cedaaf0806f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a94933-8f4c-4e15-ae63-9f4a97142a27",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c842fc7d-7427-4e0d-9780-9d0ef1d222d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4381c425-801d-4d3f-ae61-b5c1707f2d87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b581b3b5-ecf3-4895-9658-779fb77be3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1f236d2-b54c-4cd8-b656-a9c56124c853"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2ac4e62-9ac2-4add-be59-2b3a2d13591a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3502b0c-8a5a-4580-ba98-d6458e08c7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8c32eb1-031b-4ad0-ba31-ee98821de220"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8764b12c-9588-4edb-9c31-ec9d978b58b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "795b27c9-9df9-4ebd-ad1e-8c1b78c8cd24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "502743c9-2c69-4a6c-a810-dffcb5f00a93",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf89ee25-c6f6-43d3-9d70-eef1b0e7aae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "671b9456-a2fc-47fd-bbc5-7f0887dcdaf9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ff43f0-45fd-4fd3-82da-e023c7cd9ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "74d7db91-77a7-4ced-9229-9ea5a21c308a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa91eb9-3cb0-4b7a-9bdf-faa9a8eb95ae",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5c9c2d-0480-47c7-8a23-d609b1bf3472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ca5a525-c490-4282-b1bd-e08c4f1e9230"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7c3334-5755-45a4-bfe5-6ba12788725a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c2bcc52-2242-4f8d-ace8-855bfa81e0d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a496a814-22aa-4c48-b4d3-6b3d0876b53b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d6d2cf-3f41-43ac-b615-c099f696370b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8306305b-751c-47ad-8219-813828440e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c064ff51-8c54-4921-8bb1-dc85525193cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1568678-e49c-4986-83c8-15bab9f8292f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7bbfd5-30df-46f7-b460-233f9735e311",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df9b861-673b-494f-af9b-f14eb00d0c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90413f20-0a0c-432a-b674-0c14a2072423"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c987830d-7a9b-40b7-b337-5d76ffc48335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "511ce579-860a-4073-91d5-2ddd460cb062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53e63c86-5874-4ed2-aad5-007295f6d6e0",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9b14d9a-66f1-416e-a738-1261ea33e0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e06ecf0-b744-4cfc-8f78-8d9e07891b03"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1f4d24e-cf92-469a-b4c2-90eff2def8ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b39bbd4-4e27-4d37-a03a-838093d76469"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e5a0660-2885-449d-b72f-90586727ce74",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e54866-c0f3-4248-b614-170a93e9ebd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6ddea6e-3ced-47ca-90c4-efc6377da189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bce9e56d-4f93-44f3-a430-86a632ccb086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dabc11c-1436-4966-a2ab-a252c4c79d67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99c5f35-e377-4a4c-b6f2-805780aaab2e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3074e935-4a3b-4e2c-92f0-27c1ac2c0fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05af7277-1a62-4bbf-9a87-dcb7e2cc5d37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de5a8241-f3da-40f3-8fc3-0a7b5608473b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "191ccaf4-ec33-4649-a888-e36cdb62528f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "072dac3e-fd79-4bad-84de-af895ebdd511",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b75f66f4-fb52-4637-9056-86a12f959391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b75e2e9e-bd40-4d8b-bc6d-e9c8ef5f0d50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01435e27-ba7f-42b1-83c3-5c3e578e9e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0191d970-a18e-4203-ba63-6a402fa5b700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99388e24-9d92-44a1-8295-735b9fc6570f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51074189-f617-4909-8657-38bb55cbd640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b81f1f4-a8f2-4f96-a3a1-7d6d477d89e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49c4d02-e27f-4da0-86cb-40662f35e6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "802b4a5f-6987-4a32-acae-ec1fa1f52bac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7f505a65-ff09-46bd-9936-186fa379e8fa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4e00b25e-ed2f-4727-98de-cd93c73168ba",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e77a3df4-146e-4b21-a73e-33a832f7b95a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "11903e3a-d13b-474b-a36b-038dcff25712"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab33593f-9d01-484d-8c1e-ed9a4ba8c0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c4525cdd-fbff-4de8-9d5e-951dccd9f358"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "457c42f1-d2f1-4cca-85d5-1489dc6f04f7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c23672c-1bb1-4e65-b8b9-dbd807e0cd67"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d57206e9-2958-413a-bdfa-48ebaebda9a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1500ca84-083e-45f4-87fb-8eb33478e8cc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e425aa65-d9ac-4901-90f4-ce87239b0023",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1d2b87fd-710e-49bf-b555-42a185d0a72f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "caf2db6f-fa3e-4a29-aca8-1651c874dfe1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a0be4b76-6419-453b-ad8c-3b6ee64ec9e5"
            }
          }
        ]
      },
      {
        "id": "73067ff2-4b6d-474d-8e97-29e102a324db",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "378b9015-9064-4055-9d05-4a7c81b3e649",
            "name": "Negative Testing",
            "item": [
              {
                "id": "47e63cbb-4d28-4ec8-a0e8-f0efece55b36",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "61d451cf-3d61-4c92-b377-f8a148c413bd",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "581bccec-5d53-44ab-80ba-09d0060c524d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c319bfdb-df48-40af-ba2f-5f75392f5d85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1cb6d0a-826e-4578-af5c-5de7fddc535e",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7417e2f0-a5ac-40ab-8f96-7d089fcbac7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64aab2ba-2d51-461f-add7-159bc49a5e55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbf94fbd-fec7-47f1-a84c-5c665d35f1be",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ac6803-2d11-4dd1-9627-08490ba11635",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ece714ac-0b42-4353-9055-46d7d07150ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e1a8ec-e82b-4393-ba2d-602c31b91dbf",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf240daf-759c-4951-8602-11c84cb39620",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf8b2f32-1099-4bcc-aad8-ae7a86c4dba3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2595ca4-d6b1-490b-b046-3b23f112d9be",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "863dec96-ba71-4200-9b55-7f35f980198c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b384b243-575e-4f1f-8842-23b558261973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d312e37f-d586-4aa3-b2d2-974589d0ce3d",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fbe2444-4384-415d-b42b-ce4211f9fce8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e40f2b4-a923-41b3-933e-3a6e96447abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e09f275e-13a6-4dfd-8efd-e913dbbee400",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60c6f61b-399a-4a2c-853d-8c151f06d573",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee4317c8-f764-4d54-8a2d-b26c5291db06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55579c4-d8d1-4a58-9772-24be532f8dd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e00b8a9-c172-4870-bbbc-4bbf6c823af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc2fd2c-495a-4eac-83fa-baeaa4bde6aa",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d94180-9da3-47f0-915e-c888b56517ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2197b5d9-2702-47cd-b950-8fde7600077f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8c44153-c0a7-4cf0-b122-72d4c2e16841",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2cf96d3-66b1-43a8-b3fd-128f5e87fb20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e67ecc9-419e-4c55-b65f-b6447572397b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e807b430-0c42-4125-b2cc-4093ef5d2a5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44ff9002-d373-4d07-a5a7-5b3979d28f21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d4df281-31cd-41a2-b835-b4ca8989dd64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b4e959f-8e65-48c8-ad43-6c9e445ace85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d44596-8a2c-4946-8823-a2c9dd008c2e",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3afb5c9e-a7d2-4880-8c4e-bc843d484fa1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b84dfd67-442a-4525-90e9-26bddf16a4ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29214ea3-ad9a-4518-95a8-02134d1c5365",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31a969ef-6458-416e-925a-0922459620a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b7bf5a4-f8e5-4e5c-aa47-93e36a8fad63",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f993665a-d8ef-479c-a5e4-03910d2efd7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa217d4-cb90-4f0a-8cc3-536bc545ee21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b959dc-12f6-4ebd-ac1f-8307004f22fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c59ac77-d212-4bdb-8ad3-50b17e1e5d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c44a25d-0dd8-4b1c-bd8e-15b3340fc807",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a3e5e45-1ad7-4d34-8e44-ea64c8320568",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91efe619-05ac-44a2-af84-0c47b7c24af3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "742335f2-3651-48dd-b454-6ef539e7f614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f73b40b7-2227-4c25-ac8f-d5aa87a913f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133c49b1-e89c-4442-b1f8-47343b8902e7",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc0c837-8fdb-471b-98df-c0bc65de55f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7eb49b15-3be3-4086-8d86-c43fd3b950c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11686533-95ef-4440-80cd-9f05e2e1b9e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8906dc72-f7c5-41ef-a1b0-5e4829faceb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a22d59-140a-4337-9d66-92a1615ae022",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ba4563-70eb-4bf1-b09d-e698d0ae0dd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53e4f2a5-7f19-45b9-b007-3290b3f7df8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d41bcb3-c73a-43f4-b5c6-29f41d613cfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3f98683-6915-4284-b0bd-5a7cddbc4f4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eba03777-1613-4a42-9fce-bb759db6fd7b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e30932e-7c8b-41ed-977e-1e2d7173f6e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1313f18-580b-4324-9ae6-f1af5306263c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ead76477-2dbf-42c0-bc7c-13003f2a895a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6e2b2b8-22d4-4d9c-b049-10396b39112a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a42f1ac-120f-496c-936a-07fa5c0479d5",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb1a5ba8-3b58-4926-b54c-694ff68c43ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c2ad9391-05ac-4593-8fc4-e4dc14b44fb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55fff672-25fd-45bc-9be8-98b4111cd2cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60cf8f95-03f6-4b6b-9529-5c9e1844bcf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5828e346-92d8-4ac9-8101-44062e264fda",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bbb6496-2ae8-483c-baae-7574aa65d585",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b64e59-7774-4de8-b0d1-acd81d698a78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d01b0fd-656a-415a-8860-3f2e122d54f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8ad50c9-d7e5-4e73-a91a-306bddb415f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6596e063-b1ec-4b08-a836-2db05fa952b7",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1012f3-69db-4134-b0ea-c068b5c869b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ecb6236-2a1f-4d44-8d03-6c9c3c0ca3ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b10aa16-70ce-49ef-9c9a-735fab87f870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ad14ae-8180-4fc5-96df-40fc578c8af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ce58cc-6be2-412e-a803-cd52dcb6e97d",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e162f0d-6883-4091-b284-b8a2497e9cda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ffadfbd-9cbd-4fa6-a3ad-dd92cb9ed7d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92cee36c-a755-481d-88fb-a44e452dc1f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9793c8b5-5e32-4f55-882e-6e21c211dadc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96362d5c-9847-4c1b-b609-45361d1ce0b7",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1edd8f7-469e-445c-a771-f03ed5c037b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "125ae57a-3507-4d15-b841-8fbc674b59fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08b7b324-84c2-475f-8614-7b3599f91d6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c76a3cdc-abcb-4e4d-9244-1a1c38dd0f72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a9f189d-9c62-4762-b8f4-e64c4d716cdd",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f36b238-be7d-407b-97f1-8edf2a4be38e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eafae0a5-6bc7-4666-b1a4-7ff9b47d4a70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b24d74-f386-4c4d-bf80-6c81ff576934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bec943de-62e7-4550-a549-aa2be52ef11b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c38608d-a132-4b17-b8e7-1746922b49f0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed8c2ba-db31-409e-96c4-0e888feda2ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c102cd8-7bef-476d-b909-6ef577adeb05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "015ca53f-f328-49de-89fd-f8ac857f386d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6877d239-f70b-4bd5-b1ba-c51a8c78cf0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7fb1148-1bed-4544-a79e-c63be671c472",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0362f172-c0b4-4e3b-bc7e-02faf8e270fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4416cec8-1ffb-4da9-9948-991798c4b440"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a393d9e-14a4-4110-bc64-95c9ee8df752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8090a09-e6a0-4e03-a239-806352738db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b80ddd-1400-4d8b-962f-afadfb5d4898",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bab4c3a-1cf8-437b-932e-f7663aeefa48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a1ccbf3c-945d-4748-b096-4ff3084e95f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f690ee1a-2ec8-4117-91ae-b3a08fe6aac7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac7623e-3510-4c60-b89d-f497a656136a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ddd2806-bd16-4610-954c-6db5aef9792a",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "552c181e-8c88-4622-a03b-422d938c0644",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a44f5d3d-c630-4de8-9571-81c62389448f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77f4141f-34f5-4fc6-ba70-584c86e2ca52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b68e279-1cd4-45fa-88b8-b6e457949148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113d0ec5-69d7-4fde-bef2-905c92788bf3",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dba55c8-4062-45d6-974d-db900f26bb20",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51c6b91f-7195-4107-bb9d-be06c7cd5fef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "432d30ec-b072-4088-8dd9-0be4e5934429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1917d033-5d7c-416f-87c3-2adb275db7f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbbdc966-5e21-4f08-9c49-776b2dcc4366",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93fc2212-be00-470f-bd61-83824c0bb83c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5383bbd-3c8b-44c5-bbf8-c7b2b76c2b84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22febf10-2b73-4d12-80fe-169b8e810c33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "788bfd99-e11c-4d1b-b15a-37d11806eac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40cb44f5-3b06-4343-abff-1543680e1ac9",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f81ce2dd-6a17-4b41-bcc3-e51189c277f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08f6bf60-2950-438a-af05-197667b56496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e086f91d-a03d-4578-9974-648e3e1e2dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "407d830e-8e5a-4993-bf9a-9b537e4c018e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd694153-9abf-4df4-b7a4-efaae1a680b6",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2498e8b-d88c-446b-a774-a56acc5c243b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40f1ca41-81f4-412b-9ad0-d9abce6514d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36a2766-bee6-47fe-82a8-37d281056c89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11f79384-d555-4fb6-853d-03f9e2a27c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17fe825b-583b-48f5-b861-8e981625f921",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d99ece-233b-42a6-97d5-e985b3d2dc47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5424a49-a55f-4a26-9b7b-15034d6d9c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3601c9f1-2b09-4e28-b854-3a73c892adb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24ac4fb2-4cbc-4716-a74d-c497121aec9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b5b5e9-7adf-4892-988d-554eca45917b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f041d16f-b672-434c-b7e5-d075ecc010a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9968a830-8b27-496b-911d-cb20d76bdaac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cadaaffc-f4f8-4e05-90d9-8d7f69d01549",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b751da0-14e0-4124-a836-ec738b7fc1ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc9c7e9b-b686-4bba-ade6-e6b666d266a3",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14506c1f-4edc-466f-9692-c574b7fd2225",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42cfba37-f8f3-4ed3-b67d-ca30035feea2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be285c6-824b-4df3-b520-670e6afbda99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1770d586-1038-4b17-adce-40b12f4152d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "196d1a60-15fe-4524-83d3-cf934f92f890",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e405bdf-ec85-4cb0-b49d-05738250958d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6741ef54-b722-4968-9f3e-59caf2a12f1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dd838d4-9e4b-4c0a-889f-4048d67df21e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3abddab-b334-42b7-821e-7166c7df2312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980d05b3-57eb-428e-8f90-4b4e1b1ee36d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8fe8dc-0cf6-4246-acac-2062b58dc9e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "708e75f8-e0a5-4482-9aba-5c0811cdc95c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8ae946-9c66-45ab-bdd8-a7c3a6233fe2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b546080a-4099-4ede-85a3-00b655f7bd28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5c3f0b-5f67-43cc-ae7f-9c6fabe89757",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727494d0-b2df-450f-8d96-3b7a462c8be4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b3a6c9-97fc-42e9-8acb-b59996752de7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "720b3fa4-29ad-488d-976d-dcc80469e12a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e040f3f5-0826-4f8a-bf49-b0ab2d4611d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "166dbe53-7e0a-4da8-a24d-3c6fb5902b35",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0cfc1b-2485-4f5c-a991-17e446bb652c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c75d0b0-39d3-4377-bce3-499588e568fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e50a482-4e02-40f1-968b-d2cf1251f0ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30792dd8-75ec-4cdb-a43f-28bbf6451c0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d163b75b-f839-40ff-a45a-5524934cbb45",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9668e17-4434-4da0-921f-1d88f031b44d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96cb8171-0554-4fb1-9708-ab8637af2519"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f11dd2-5a6f-4763-b1d0-9f84902714d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50cbff67-55f0-422a-be79-f58113fefb8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa071048-abe3-4efc-ba73-423d009c91f0",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24342e2e-ab77-420d-96da-e78b67ab14fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d93a35e-17c5-4cfa-89b2-9fcc00a69553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e31ce84-4b46-461e-98e1-1b334ff84d98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2b2ac2b-659a-44b8-8573-7ed1382013ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffd19451-8c68-4d07-91a6-b36aa19572ea",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944cb387-0369-4499-873d-3462ffa1524e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ffd1ef-783f-45ba-bce5-c77ef5d57c49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f932973e-4552-45f7-9a2f-ea3d21b21507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d5feb06-245a-4701-8a45-7321bc085c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bad2fd4-4311-49c7-b7dc-549c8fc6a29c",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ff1afe-0563-4b18-b89e-90459009a754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34a9674e-c150-4e67-8c7e-2292d85ea7f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "455cbba9-4237-4082-bbc9-47a6b41d1599",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4100c426-222b-4073-8532-25c5c6fc05a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07cbe051-8621-44f2-86f8-d8f75312849a",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "442df0da-743c-4816-90cf-86fd6a3d8cd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89f517b4-f55e-4268-b6fd-e0eb329b091a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf53b40-52e8-4929-8d9a-3e8658d83636",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bae13fef-4cb3-4610-b560-373e9280b7bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aede0b92-1088-4e75-a243-e7389ab415ac",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ac42df-5a00-4398-9d4e-a755d92eee44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b8af3ec-0823-49b1-9e44-7d0a7a216772"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c9fac5-b8e7-47c8-92bd-bb14d608dc4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd5d93d-caf4-401e-aa00-9faa23ac8ce9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9df2c04-cdc7-4228-afd9-f0015e24b333",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623a0aef-fea3-4a80-904e-369e6c019261",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2fe2de2-5138-4172-a939-6cacbd3401f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba429fcc-da50-406c-95ad-92eea75f6eb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a06e5ab4-12d0-465a-85aa-70da34be9ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca209063-7151-4411-bb45-125732aa007f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "506ceeac-ec76-4179-923e-098fd4c487c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9e4bb96-0411-42b0-86c4-9c3c99c9c462"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5272d07d-ae56-41a3-b902-6e023ea6a2f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9f1b56e-8dff-4d47-a630-45c176371430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a02423c1-21be-41ee-85eb-20ff2fffc682",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea41651e-7d9c-43b9-a434-9ce18cbd2181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9340cbf3-d241-476e-a03c-236f2df47508"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7386d085-2ae8-4208-8534-25524c490da8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f3010ab-b097-409b-b1ba-f0ffb8c50856"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f951af9-f9f8-406d-af7f-eb1d6278a4e0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e02b45d-2ccd-4940-8433-cf108fd6c944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "098e8a27-943f-45ac-9c75-9fb42293eeae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3219cd70-5b89-4042-b02e-a96086338260",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78d43756-1a54-4ce4-a3d2-5ebb2a0f6b6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4cb043d-b140-432a-b8ed-13e8383fa745",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71e9d0a9-8015-475b-9dab-a8c739c72265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69b5bba6-7cc5-4ae1-b4b7-ac1b81e83987"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb02092-64a8-4dac-ada3-f7b553c171cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d761ddda-f64c-4459-9c5f-4d0ba0de7d45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede6a763-1223-4d9f-927a-9b8eeafbed41",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ac4f6d-9160-4bec-9381-7a955406d2d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f069f5b3-f5b6-4776-b74d-82825b97839f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ee740f-9ef2-43dc-99e5-485de859904b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "059e30de-95f6-4b04-affe-4a7c854113ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27b4266a-1fa7-4aea-a036-f402a15c9c33",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7e227c6-9f0e-4820-be7d-8c605cec8c57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "729cd61a-2532-499a-a119-38739d066e49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2977236d-8f4e-4ddc-86fc-f170f25da12b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f34602-f13e-40ec-965e-a94abc0efb6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33562fd2-aad6-4e0a-8bbf-064551d17065",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1641cd0b-67ad-470c-880a-5a1f5cea0cbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfddc2de-0b4d-448a-a83a-98fcea0477d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58066d0d-8fc9-4065-856a-72e91b8b8eb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "101ffe88-3dc4-4916-92fd-71748e688309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cdb2319-805b-4d98-98d8-017c9e57583f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d142b9-a307-4e1f-ad7b-42e6f71c0d2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4906494f-2de5-45b2-94dc-2ca30b0add80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9255c8da-3e15-4c7e-b434-50ce1d0f3f04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "170b00a0-f55d-46ab-acae-135f80745547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3406723f-1e28-42c9-a25a-26d9069f8de3",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bbb12b3-6f9b-461d-b943-1d3f73cbede6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad4761d7-5785-44ea-a147-0d60189bbffd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c84b0c8-685a-4185-b12f-91487dd59975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b762d589-9e31-4c6c-847c-c5fed7e129da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14804c5b-b72e-4925-b310-982ffa825b49",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76785ac7-0bc3-4c50-aead-693f998b9982",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69351907-e04e-4e2f-bc39-d7e4cb26fe35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bc4d934-6757-498d-8e1b-1c1913ffa3d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "166fe391-1bb8-4370-ac0f-cc7b39e8ebf7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05d6311f-0cac-4d9b-93c5-b1a1f47e8de2",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833b4945-27a7-4a90-abca-169dfcd1a8aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5eeba9c6-981b-45a9-9e36-cb9c30aa30b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "918f690e-f78e-411d-95f7-2817c37c7b42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e3e97ea-ffd4-41a6-bf53-b548b722cfd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e44ee0-3d64-4774-9624-32d2c8db8ff5",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91b67db0-60d9-464f-b54d-24148e444604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa63b4b5-8e5a-4684-916f-4b485b8e2c9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50195b4f-60c7-4699-843f-e1a716253f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2497e7b8-c7b6-48fb-b966-d52f14f69d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67c88ac-de48-43eb-a4f6-697d2f517b0e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c0322e-59e6-4ee7-848a-aefbca723eb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36689a70-3c0f-4d7b-9b6c-217c02a29c45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ca41d5-e68a-498d-8340-24da9212dcc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b73e5f2b-1d36-4bc3-a845-7c5b65f44d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "180416ab-12a9-43c4-9e68-ab758610741c",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bbdb57-aacb-4fce-9c06-a58657d71876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f4a62b-5afd-4629-994e-431de27415ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df6837aa-dedd-494e-947b-08b3a08d0e22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e815485-26f4-4c4e-b1b6-e368f8b2c59c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11c0c744-7870-44b7-80ef-7826a2d0cb6c",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70975401-0cc1-4190-b6b3-97afd4c7ac32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e1bbc3f-1592-4621-aed0-13662cb98953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae9efe3-52f1-4db5-be52-ee780d3129a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be50248f-1fa0-484a-87d0-83cbbbd9e3dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7451dd4a-ab70-4679-9aff-18efbbdb5d02",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45504aae-b407-41d8-b49e-b0e7b9dd673b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd441426-2795-4fd9-a47e-21967ec84708"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "779af4ef-72db-4d02-b9dc-92f197e7f24d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20f86e7d-1859-4c17-89c9-ec269d6dac39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f76d14-1888-450e-9dd8-f45651d31f0b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77e42336-029d-4b67-a0e5-24fb22a47d61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3106c419-5366-4c61-94f2-8bc3c0bea540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de72f9d0-9b3c-461f-a905-6bb8eb29bc58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f60987c4-b0c8-49c9-aa0c-9d64726e04a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64c77d5b-b695-43f7-a1f0-1c872ad274f4",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa00c46b-d87b-4326-9fc2-48d69ce66d03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05fd80b9-62e0-4ce1-b2dc-59fb2e666119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7cc17e-4d5c-47b8-b7cb-b24fd9df05c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4423bb32-9e2d-448e-b926-d8ecbc92b497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f88323db-db52-4621-8ecf-17c22e69ec52",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c82bd95-0807-42a7-ae1d-a4d7dd482dbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c13f876-3979-42fb-b526-662c9bb3868f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7266d2-6ad2-4499-9deb-fcf1edeae2c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b478d83f-82c9-47bf-9e2c-29e90b17a734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2271f9f1-8a2e-4b6b-b5b0-0d6afcbc5b39",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a217197-75fa-4cc6-8505-d4855350a7fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3935c1ce-b259-48f5-8cb7-ec05a685cf6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae67d1d-8c8e-4e5d-9829-c2d31846182c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44b884a8-3eca-45a9-a061-e791593e2d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b7d4909-1780-423c-a849-ef4c4be9616a",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee5cb8d-bb08-4469-9dfc-a402cc920af5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8050998-4375-48db-88d6-15734dedb540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "988ca0fe-3484-4347-ace0-686547111f23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "217ace62-73c8-47a1-b05c-205a38b719bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "267ff5cf-1009-4f9e-a550-86db2e08fe7c",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3e35e5-05b3-4725-a0fb-4eb190a98a69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "336ed428-0073-49c0-925c-e9402086127b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e9a84a-598f-489c-84c1-bce2b04ae2a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d059da7a-9f8c-4d9b-a6b1-306072bb6694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "266a1c25-61c9-4ac1-98bd-f97f04c99207",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf900286-7529-4421-8bc7-6ac0e059c9c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ada540e-f2ad-45d5-99a6-bcc9f3ecea83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a2f76dc-4bb8-4793-93a6-5cd29632a40a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2dd5362-ca53-4992-9ea1-9e2cd31aa451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca12118f-02da-4021-b5f7-34587b3d089e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4e30de-7edd-460a-b931-ffe41f598dc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26c8d3f8-aff7-4c45-9da7-5e52fd2c0eaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05101ba8-02ba-401d-85f9-7f4056d603ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "926e5926-c059-4107-b5d4-a06fe65c88fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8107d4d-7f63-43da-a2eb-2183b3707ed1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176f840b-b083-4f8e-8847-d63f4910916c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c08d51c4-45ef-4f2b-b3a1-2c80a6c47099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "778661bd-465f-4b43-8329-cea78f960ef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49b86891-d87d-4821-802d-07cb06169094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0f33ee-afa6-47e2-9cdb-35e04a35c2e6",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c98f56ed-3c02-48fa-a5a9-066264d911a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fb4c959-28ec-40e4-8a24-d7078c96903a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c162d3ce-30f9-4c6c-81ef-21e41f6323ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9cefd60-202d-423b-87c8-844d1e54be96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c18501e0-9552-4f1f-b874-4a6883840879",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8db3a22-9aa4-4f31-9be1-9ea4a536cc35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f9d4c9cc-59f7-459f-a50d-91ac07b0f471"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2102f5e1-8b3a-4ec6-bf36-788bee187b78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f570544d-6234-4350-ae64-7783510b52e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f04aa1-f51b-47bc-b601-3d9a4d993665",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48806f74-63ba-415c-98aa-ae1725493800",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4267ffd-04bb-4284-a1de-8dbd9d4e5dfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c0693d-1c95-40b1-a1c5-4db0024282f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3372e9a8-d39a-4d0f-810c-4871db1cea92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d7c57ff-8655-4ac9-870f-cffa4f73d012",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76bebc46-31c9-41a8-99e9-169519c57c87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26d23abb-6add-49de-9447-daf096f744fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dda3386-d4a8-4335-b119-5ed974ae5872",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe9bb2de-c3ae-4e97-9c93-48c39b83810a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44a02519-1a4f-49f3-9f24-cea6dbf49532",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57bbabd5-15c4-4100-a17b-ed3ebbdf3e3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd795580-eec9-4150-bfdf-bbea30a6d1db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a67640c0-f77f-47f6-a2f0-767d8801aaf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "353ce342-7b02-4b23-a799-1274880e185d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2684d618-cc6e-40d5-82be-e5276f81f124",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f38f564-dbb6-4e70-a1f5-768ac873a8df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4649a815-5382-4ea0-863c-5d165eb8047c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8d454c-7057-425c-9662-7ba798d02f50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad6c7b96-a43f-4203-8f91-759dad51b78a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fc9573b-1713-4b60-aaf4-64ba73e61f46",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d445ee-3916-4013-9eba-eda16eec5bcd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de0831c7-2443-44e8-b297-894d790d1f24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aef43b85-4d61-4c15-8faf-ab748deb250d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5bbee56-7bae-4976-b2e5-e13c2cc7fb53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07266b3-8575-400a-800a-dee3166a02a8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c56fb176-8e66-4843-bec5-0f308af9bdb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd5395d3-23a1-4f68-b0c7-8b6eb73f31ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0be147b-0612-4d5a-b6c6-40cf56e7174b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a73fa9-6748-4e0a-a9cb-83ffe7b89692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8311a494-a25d-4289-8973-cb9fc6331d47",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67724345-78e6-4cad-a039-b9d603410ff3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79bc7793-915e-4081-bfd4-0b0bc8c985f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6de7f29-ebf7-4358-9658-5d4c17ccb6fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff45ceaa-670d-4c8a-93a8-5d5b5d7cb3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cdcfd01-a7d6-481b-b98c-06fa69572bae",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a770829-0f67-4328-bba3-50965390f310",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a778fad-690b-4f4a-9bd2-8737e27f0983"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba34cc21-c7e0-4fd9-95f9-3799eb4803db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c16cb09b-430f-4fdc-994e-2b048f8979c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91929e91-c71f-4a20-a436-542527a71107",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4961a72c-eded-4424-bced-064e25f1e346",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "840e41eb-89e2-4301-9e06-c89cb11aa438"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac795ca4-220a-4d2f-ac7a-b5ea22411625",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5806fa6d-b5d4-428b-ae23-790d51711c06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b7a72ff-4521-437d-b774-3749d0dcecf4",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad6de674-a7a7-4c2b-b38e-42c76fd031ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ddc51d8-6180-4c3d-90b1-0db11e6c7183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9201a12-7d7c-4a78-9d97-12a8f9352438",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d3d5daf-7db3-4534-8c38-7ecc1b341eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc23f72-07af-49db-8989-e461d5197547",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3cc330-ab09-4d66-b611-db0bd8ef3722",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84a8b9be-5069-4431-b6c0-a9f9f6410b35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5ec6116-a9a5-423c-a16d-9f4c6f7c24d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1163bb2-27c7-4095-ae89-a67502472702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c041f8fd-10f9-43d9-9164-a91effc98274",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98def2cc-dad0-4307-8cc1-c5ea72080e36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91c9ab6c-a808-4cde-975b-94dede738874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3965a731-20da-42a7-9c50-d2d9b7383d3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d62779f-e41c-41f9-a199-9bfa9ba535b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4ea2d3-1991-4293-b70c-49a67425f05b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5e9d19-2e94-4e2c-9820-6089dd1f83db",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "948715f9-0cf2-409c-85ee-f892786cbd8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2c75a8-3a86-4fde-8029-258c66c3ee71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bc106d8-b500-4dc6-8640-c442fbdddc06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab1fa024-33fb-42bd-9daf-395949e659bb",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a5740c4-5b2c-49d2-8f04-6e1077d22396",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10028a6f-6308-44e6-b2da-642c6578f140"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbee904a-1a7f-4edc-ac38-4df43e169722",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be4dbf4d-1e0a-493b-8191-4abb3614b87e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dd1316d-c9fe-4c9e-a75c-b9b83426ce82",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307a8c20-4755-4d48-b5e6-66b6385048f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f833aeb4-5eed-46df-9f26-c5dac69708c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55bd69ea-3e3b-4eec-b049-eca80c3e7e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1215aca-22a2-40e0-8529-f9f6256ec581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e0cb0c7-e3b7-4f56-909e-7fe830aa2509",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c8c6108-a049-4f52-b504-403c0d766e69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c6614b6d-4823-4347-af8d-c57de9f6317a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fd84b19-5eac-4307-8c25-91ef07f6e0d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76d77706-a88e-4830-b910-72682fc5e00a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c9f55b0-b063-4ecf-a77c-f81e3d5b790c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941b392b-7474-401d-9960-28ce00bf198f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac8175b9-7d0c-4074-b2e2-02b2670de827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0128c4c8-a085-454f-ab1e-921b7850e16d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac5723bb-9813-4cda-9638-e36d0b85bbd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37219ce-df4c-4daa-987a-c5d14e694dfd",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e06b11c2-1af1-4543-a4a8-a849fa79d570",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6196d3a2-c25f-4454-aa87-a4455412abd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55aba068-6d31-4148-bb18-3a467441c900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80377137-8ff4-4fd0-b225-476cea18adba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9b1c4e-f748-4bb6-b897-3cd15cbadb37",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bd3a137-4a9f-4b8b-b30c-ceb71dc4f93a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6f0a28a-5698-4fe4-992c-7eb94e8b9f07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47be6a7e-4ae4-4952-a911-e8c1bde89f41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2424aa2f-cad6-4153-aeb7-b2915c1933d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be41fca-25d9-4eb9-b756-dfc8cfacda74",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27f25813-f497-450f-8a1b-c9550e2bc5fa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7736536e-af87-41ec-a039-fb0fdb00c2eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf069c5b-8d96-4d59-8883-7552698178ce",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2c4ec33-92ba-43f6-aae9-a4e7c29f4238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f020fb26-6d3f-49f1-94d2-1766e531629a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d173d230-964f-4d98-9ef4-af2bbe057099",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05497e05-6c21-4fb7-ba6e-0515a12ef867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b22ce50-71d2-4aea-9317-d1c707a671db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "384bd647-72ed-4843-8e73-c7ae233ae802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d4786b0-007a-40f0-a959-1f817f1692fa",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bdf7cd9-3797-40b1-bbb4-b96acf057086",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f43aefb-d42e-4f85-b23f-5887d18d6f7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c5a35d2-8447-4f9c-8319-2e945d2f4dad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3daf5a4d-fc39-482f-8599-b6f1ffd327f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcadd16e-9300-4414-a352-8e0fdb31f9a6",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a773a6-0400-4833-8f66-4760842aa9bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10ddffc3-9a78-498d-bdb2-aafc37d452a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3880b697-fd1f-4d0b-99fa-e9e7ec41b533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c7a18a1-cb2c-46a4-b017-6cbdecf0732f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3e9ca60-acaa-4ae5-97d3-62ce5e59d615",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2373a19-8471-4acd-b24c-50bea343b4a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "973a8f81-c618-42cf-b124-71385ea39040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b262a5f2-78b4-48eb-b9fa-f769f05bf26c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e492b36-de65-428d-a6e5-d2c6ecec2ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb71ac4c-67d6-48a9-b424-55dfc14c0277",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f973f44e-2979-4227-a16d-b1651084500e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a675e623-007f-4d6e-a227-ecd78fa80062"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f002b9e-2062-4031-a3d8-8be3c6134e77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13e05271-4e0a-4e24-889a-2d786d5f85a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80559990-77bf-429c-82c2-2ab0af076df2",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbbcfab7-3f58-4327-918f-9ff66042efa5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f2decdd-1a26-4e96-84cf-e5da9112cc81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb47ae60-cac5-4e79-a032-81df6b7d3283",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad53fd66-de01-418e-9b9f-a21e9411c410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f312e1-c5ac-45a0-aef5-554cc6a63d95",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dc26f40-5094-46da-b6ab-21ce149ab33e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdb9a581-2f0d-4ad7-82d2-f8315fb1e5ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8b5601a-998b-4571-823a-3f94ceacdf97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8cd3bc3-1740-402a-b290-b1d2344647fe"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2fb601ee-d88a-4e09-b807-6e40d24090b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0cbf6420-4695-46a5-8cca-20cf084a4930"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "16f2440a-573f-421f-9c45-e2dacb1cb3a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "414c6bec-1c8e-40ed-badb-a2c8e06df5ab"
                    }
                  }
                ]
              },
              {
                "id": "b2dd98df-b95e-4df6-97fe-e88e99b8141c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f23ea40b-9694-4445-9716-ec4cdbd2d9e7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "788705a9-51ae-4d2f-8175-8fad7e197e4e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "48c18d07-5cfc-48e8-ba71-35d0a7edacfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e839464b-1587-4f37-a80a-49fd725c3baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "753f0cbd-c331-4e32-bc3c-5f597fd639ae"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10c113b8-02ed-4e5e-8d51-7fa30db933a5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c5869846-aa8f-48f0-9891-527ab0daef0e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "05fe32ba-ec6d-4e24-94be-582f99c1e215",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "918b61e7-509a-42ba-9d83-793d24632eb6"
                    }
                  }
                ]
              },
              {
                "id": "967da7f1-ddb0-4a12-b11b-aad0e1cea6c9",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9ca992a4-dd09-4d50-ad52-2dd4f0807b7e",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d8d076-c32b-4263-99d0-d74c93740f65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "820f939f-75c0-4bd9-9b61-bceccef79a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d3353a-7fb2-492b-91ba-c3a2af504244",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "252b2279-2835-4c2f-b452-6155281fdd07"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "db76f5d9-cb42-4e1e-a71f-6743fd686acd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d482faba-ec2a-493b-bab9-8a02e0d2b5ac",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d80d7329-60c6-44a5-aca6-41cdb43596f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "fa12a0e9-9e6e-4af2-a3f7-a45fee5b3764"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9bd7f45d-0112-41ef-8aa7-014d6574905d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "138889d7-1d51-4f55-87b6-95d5f5e9362e"
                    }
                  }
                ]
              },
              {
                "id": "3b599feb-24d3-44d0-bc1d-ea048c9e3a1e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "53a9743e-eac2-424b-ab76-358e2abc6f59",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "6f1581cb-52af-42fa-8e11-1e3a655973f4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dadeea21-20db-4f31-ae45-42b9755b4800",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0167254d-ad34-4d34-8626-8cfc496e244e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d153dfd9-4866-4f6f-8ccf-aa311669129a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d77a52f0-b752-48d7-b352-fc2b3037f581"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2824cf2c-a192-4b30-bff8-46011958f2b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "89e3cf43-2522-472d-913c-3ee4caec575e"
            }
          }
        ]
      },
      {
        "id": "a20ad904-247f-409d-9831-5d684ea3468a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "09c5b42e-2139-4c91-a6d5-c3f9b2c661c9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "443b6f64-faac-407c-baf9-0c203675aace",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a3daee55-4073-4cc2-b73a-2bd214231fad",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71d1ba2-980e-4736-95e7-acb4b5f47c66",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c508bb1b-d631-49e6-a5ad-0e70cd5bebef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8afa6e6b-5536-42b0-be32-439413a104e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0edd413b-9233-4e84-af6b-557ce85413e6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02b4e42d-edb6-4b58-a1fb-d4aa91cb949f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f5b3165-3906-4f36-8a96-2f7f03c5433e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fce2dfb-2f7f-4699-b4ee-af853ac61fef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48582972-673b-4610-bc7b-49d08dd1d26c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "30e1d9e7-d964-4681-8e33-cc2016c4d2b3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "bc3926fc-c574-4d82-b31d-e5c436240ff1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12e2e73b-7d14-4a32-b1b7-916b108b21f4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c5e6862-b3f8-492d-9956-8503fabe462e"
            }
          }
        ]
      },
      {
        "id": "f197af52-50a6-411a-9472-e59e2ee4bda8",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "611efe36-02c4-4432-b5c8-835356c3fc9c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c1c23cb4-82c7-443b-b81b-7a4892123b11",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "067db581-f833-4d51-89db-ff89ab87fc66",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4fbc40f-0ff5-46d6-b706-6c327eeba95d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7bf85b12-1f94-439d-ba30-3e0e9af04c11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1acc146-dfd8-418f-8b5b-ae693612e11c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dc045923-d7b2-40e8-b990-88fec69079bd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0fcf8933-f56a-4308-a51b-40d593d0597d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a6993cb2-aef7-4e61-9db9-9e79f9b180a4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e195a87a-5806-424d-9d2d-b32a9d4946e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eedb26a3-8f16-41b4-88ea-08b7b518482c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "29335799-7e94-4bfe-832a-bffaadeb1529",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "19612769-9fe8-44a8-933b-9306ae930ec2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ecee81b7-f906-4d4d-8acd-807ec7e8ba0f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d54315f-95a5-4aea-a073-57c187979fd7"
            }
          }
        ]
      },
      {
        "id": "8d7244a2-f078-412c-a445-c2243a73c878",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5a797230-7b7f-4ba5-883a-c535c93aab67",
            "name": "Negative Testing",
            "item": [
              {
                "id": "94048d42-f7fd-49dd-8cce-33dc1aba7dc1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7b99cd75-c775-4430-940a-de1905383634",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1b794ec-a2c3-4a57-9e38-3efde6cada87",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "92f6ea5a-8a66-4804-a541-f078b6a2c244"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f11c9a5-87ee-4cb0-8bad-432aee92be4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "639924e5-33c9-4141-8a69-4dff499e9635"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ce7aba1-0233-45c3-9654-97e12a7c13dc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "528cb374-dd95-47c3-a1ef-29b1f291df5c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "17a6fd2a-6a73-492e-bba0-81f1a4bd04bf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7e58c3a-3db3-4e67-ad5d-75ed0a5634e1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "561c0366-c91d-47b4-8e6a-2c9cc6658bef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6a8c1ffe-fd21-4a7c-8f67-6b9f1b72caba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e9ead3bf-b5cb-4a7b-a552-e790f188375b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d647210c-d885-4008-8931-f6c435e87ca8"
            }
          }
        ]
      },
      {
        "id": "5abe3d58-522f-4cc4-9259-e0eb10465f51",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6d6606bd-93f4-4877-8f02-1548672edfa2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "89438811-7ffb-47b1-80dc-e57a2cecc197",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "05ca460a-b81c-41ac-ab46-4a1ae8391cd0",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "144ef629-5b3e-49c8-9b8b-f92724d71bb0",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ff3c383c-bd0c-4df7-a393-7535739abd2d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 8.285714285714281,
      "responseMin": 2,
      "responseMax": 774,
      "responseSd": 51.931939149764794,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1725669714999,
      "completed": 1725669725103
    },
    "executions": [
      {
        "id": "0d173501-bfd1-46c1-953d-4991f9a8a1dc",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "a30ded34-a245-4eb9-8b93-4074886c6434",
          "httpRequestId": "fcc62f9c-50c1-4522-bda4-5cdb57dc1d23"
        },
        "item": {
          "id": "0d173501-bfd1-46c1-953d-4991f9a8a1dc",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2bff9c26-b101-443c-85a8-4441ce4ee81f",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 0
        }
      },
      {
        "id": "c93c05ab-e404-4749-9dd7-ba31659a09b8",
        "cursor": {
          "ref": "82e3cf76-1fd7-482d-bc4e-d43fe058c84f",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "2f2d2f85-eae8-43f4-a347-197ca3c283ba"
        },
        "item": {
          "id": "c93c05ab-e404-4749-9dd7-ba31659a09b8",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e14a3cc1-5d44-4cf4-aa63-44ed58bcaa85",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "9c36aa82-8cdf-4a88-b837-3ebb3fc77af3",
        "cursor": {
          "ref": "c1880409-eaac-439f-8491-1f035428511a",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "60c37ac0-87c4-459c-97c7-d64e135e69b1"
        },
        "item": {
          "id": "9c36aa82-8cdf-4a88-b837-3ebb3fc77af3",
          "name": "did_json"
        },
        "response": {
          "id": "dfb7fa88-ed87-4afe-8d04-376b1e46aa67",
          "status": "OK",
          "code": 200,
          "responseTime": 197,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ba14ed-a924-4256-b661-3e2a36b200a4",
        "cursor": {
          "ref": "ad735e5a-79e8-489a-8ca5-9ef916f7ef75",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "676d0072-895a-427d-b70e-14ba2980dbc3"
        },
        "item": {
          "id": "38ba14ed-a924-4256-b661-3e2a36b200a4",
          "name": "did:invalid"
        },
        "response": {
          "id": "42de07d8-3834-4eaf-b4d7-543ff9b29555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ba14ed-a924-4256-b661-3e2a36b200a4",
        "cursor": {
          "ref": "ad735e5a-79e8-489a-8ca5-9ef916f7ef75",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "676d0072-895a-427d-b70e-14ba2980dbc3"
        },
        "item": {
          "id": "38ba14ed-a924-4256-b661-3e2a36b200a4",
          "name": "did:invalid"
        },
        "response": {
          "id": "42de07d8-3834-4eaf-b4d7-543ff9b29555",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ca26f4-86cc-4118-8f47-2e33f2c8431f",
        "cursor": {
          "ref": "0c5dc4d5-6c21-4cf2-a7ad-58e97ff1d627",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "1f956ff6-fcff-4783-81cf-17d20ee410f4"
        },
        "item": {
          "id": "22ca26f4-86cc-4118-8f47-2e33f2c8431f",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ac6be810-0cc3-4feb-aae1-4aab028c1523",
          "status": "Not Found",
          "code": 404,
          "responseTime": 40,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03eefa5b-8f21-4a4b-9645-8620caca64e9",
        "cursor": {
          "ref": "4597be1c-13d2-43aa-8370-83a6244fffbe",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6248c479-bf3b-49ac-9a73-6d968e1471c9"
        },
        "item": {
          "id": "03eefa5b-8f21-4a4b-9645-8620caca64e9",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "98837417-bccd-4e95-b8c8-547a9cc1a620",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a793ed-28ad-4ba7-ba43-7c4f7c455f6d",
        "cursor": {
          "ref": "4ec20bf0-15ff-4cff-9f63-56702b1a2ce8",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e0357387-0787-465c-a21a-f805741e4d5e"
        },
        "item": {
          "id": "c6a793ed-28ad-4ba7-ba43-7c4f7c455f6d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "53583c37-b5e8-4e37-98dd-4c3e0abeb50e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79285f49-584c-4942-8f0c-d281e53b94e3",
        "cursor": {
          "ref": "a2cb50af-2d10-4ddb-bbc0-9324fd0eb75f",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5668b398-cf14-4916-858c-bb2b208ace6c"
        },
        "item": {
          "id": "79285f49-584c-4942-8f0c-d281e53b94e3",
          "name": "identifiers"
        },
        "response": {
          "id": "eaad863f-6788-4abd-937e-3ba55da872bd",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35f84220-2e72-420d-8b92-da6cf671778f",
        "cursor": {
          "ref": "3d2f959f-3d55-4078-b3e3-9606f59d4d2f",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "466745f6-ae00-4361-93fa-1ca465ec7072"
        },
        "item": {
          "id": "35f84220-2e72-420d-8b92-da6cf671778f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "40de49f4-1be4-4adf-8d78-1ad72a9aecdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e10ebd-e18d-466a-a91f-0ac4cbcef881",
        "cursor": {
          "ref": "61077e78-8b3c-40f4-a8f3-90255e2f6ce2",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "765eab2f-76fb-486d-a850-2971fbacb298"
        },
        "item": {
          "id": "b6e10ebd-e18d-466a-a91f-0ac4cbcef881",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a5fd9f43-566f-457e-bed0-2b619005a502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb15b7b-25b1-4130-be84-5813c5d9139d",
        "cursor": {
          "ref": "0797efd5-bda2-4bbb-a16d-95eec67642db",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "3148bc41-e039-4fcd-8680-6de0160c02eb"
        },
        "item": {
          "id": "bcb15b7b-25b1-4130-be84-5813c5d9139d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "3287503d-b442-48dd-b4e0-0457d0facff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0fbc7c2-ed3b-4831-91d1-8505ea31b876",
        "cursor": {
          "ref": "24369618-27a2-4533-8e11-06134d8dc210",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ccef2367-9b06-4e68-9775-bd55e0cfab06"
        },
        "item": {
          "id": "d0fbc7c2-ed3b-4831-91d1-8505ea31b876",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4790e5eb-ecc6-443f-ba4e-50cd0a8be854",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7dd6138-510a-402b-9d1d-c84e0463bf6d",
        "cursor": {
          "ref": "6e8d8915-e81d-497e-8cb8-7bb78bca91b1",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f6493ecb-2e0c-4232-8678-788d665b8d7d"
        },
        "item": {
          "id": "d7dd6138-510a-402b-9d1d-c84e0463bf6d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "857626e6-201f-4bc3-9d7f-1c980e935fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9ad932-924c-4d4d-8325-b9d5e72643ae",
        "cursor": {
          "ref": "e293ccec-20d8-461a-b32e-3c085fa8bf03",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "643e958e-582b-48c3-9259-72650b495f08"
        },
        "item": {
          "id": "ee9ad932-924c-4d4d-8325-b9d5e72643ae",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2a3b0bdc-f77a-41dd-8d1c-c4bc2f9f14ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a745966b-a97b-40f1-beaf-e61433b98a3a",
        "cursor": {
          "ref": "80573be6-9c93-4d0e-a011-1bb793eae6b3",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4b4688d2-0c3c-4bec-b156-645a08cd318c"
        },
        "item": {
          "id": "a745966b-a97b-40f1-beaf-e61433b98a3a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1a8e8d96-03a9-40c0-aa2b-efaee0eca1b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666613c4-bf41-4c03-91c3-463d5a02fc03",
        "cursor": {
          "ref": "773a6efe-192f-4d03-a440-26431bf7866c",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "9d40e604-8d4f-45be-941e-b995b2a4d8ec"
        },
        "item": {
          "id": "666613c4-bf41-4c03-91c3-463d5a02fc03",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2da67467-5643-4dad-8a75-10781bae8853",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed3b612-6700-43f2-9b09-d595463e9847",
        "cursor": {
          "ref": "9159bf7d-e9be-4d57-9576-d6d4b8bf9ac9",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d65a694d-d5e7-4747-b3cc-d859ebd459e2"
        },
        "item": {
          "id": "1ed3b612-6700-43f2-9b09-d595463e9847",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "375b4fc6-3494-4f12-aba8-c4697bdfe336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19eade9c-ac24-4bd5-a7ce-146aa9d7a6cd",
        "cursor": {
          "ref": "25866503-b472-45f4-89fb-389db0ce23fe",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c4903540-3a3f-441b-b74f-e5e228f9b3d7"
        },
        "item": {
          "id": "19eade9c-ac24-4bd5-a7ce-146aa9d7a6cd",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "8603a88c-d8fa-43b7-8b07-3fc2d56f6ff4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1a3253-1531-4341-bdb4-d23c6560f672",
        "cursor": {
          "ref": "9493de66-2b62-46c9-976d-ec4389257b2f",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0b33d011-7a23-4935-a009-f4b9aa82fee8"
        },
        "item": {
          "id": "8d1a3253-1531-4341-bdb4-d23c6560f672",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3477d08c-9a97-42a2-84d0-fe51e721b836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6b0861d-b417-448f-8482-df9ae11f74df",
        "cursor": {
          "ref": "4d9704da-961c-4451-baa4-f3dee00526e3",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "63d91d34-85b0-4ebf-ad1b-dea3040700a5"
        },
        "item": {
          "id": "f6b0861d-b417-448f-8482-df9ae11f74df",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "ba03ccb9-d629-49bc-93de-e4d07e05f040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b183090e-e9db-402a-ba2d-61406d57e72d",
        "cursor": {
          "ref": "1a201b2a-7603-4889-8aca-5c6a2548400e",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2544320c-bc37-4870-aaed-dcc3f7658cff"
        },
        "item": {
          "id": "b183090e-e9db-402a-ba2d-61406d57e72d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c2798fc2-f0a4-43f0-8b67-214dec3da23c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0472c8af-dc2f-47ae-8faf-88cec8aaebd2",
        "cursor": {
          "ref": "6057d041-7ebe-4f9f-b10e-b09329699cf6",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "0a1a204d-5c7a-4142-a6ba-aa895b35594e"
        },
        "item": {
          "id": "0472c8af-dc2f-47ae-8faf-88cec8aaebd2",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "bf06a92c-53c3-4ef2-9a74-b9b5e24e0521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b69674-47b2-40fb-87e7-5b9c1fa40020",
        "cursor": {
          "ref": "bf5e0cfb-f98b-4be4-b536-310e6f831c79",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "47b94652-41eb-40ca-b06d-c4bdb3e304da"
        },
        "item": {
          "id": "72b69674-47b2-40fb-87e7-5b9c1fa40020",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a744aaef-f784-4549-903d-a797027a768e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d4ec6f-c12d-4c7a-9fd4-f5a302b679be",
        "cursor": {
          "ref": "408e3a0e-0149-4edc-96f0-8be3a11dffb4",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d107f950-2d28-403b-8fab-a5971e16a673"
        },
        "item": {
          "id": "c6d4ec6f-c12d-4c7a-9fd4-f5a302b679be",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "862925a5-d59e-4563-bdf0-6a4a908e0976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fefa653-4888-484a-a14a-2a16fd7824ed",
        "cursor": {
          "ref": "d37ee4c7-0bb6-405f-a987-7bcb60ad4af4",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "87947f56-0876-4727-a1fa-90476dccf04f"
        },
        "item": {
          "id": "0fefa653-4888-484a-a14a-2a16fd7824ed",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1894dbf4-d58e-42cc-aae0-3b452fc6a485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f09d13d-ff84-4f65-a665-98525035232a",
        "cursor": {
          "ref": "b2c05368-dc81-41a2-880f-ee1321cfb806",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "02c437ce-f2a6-45b9-93b8-a2ec8c6b4641"
        },
        "item": {
          "id": "7f09d13d-ff84-4f65-a665-98525035232a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4f528017-0226-4731-b5c0-56ce4c5fcd03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fb6358a-1b5a-4890-b292-b74d4cb29c8a",
        "cursor": {
          "ref": "c4537f5e-8a5d-4a4e-af22-95edc1115f9b",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "88172cad-e1f3-4c63-9b87-85768cfc11d4"
        },
        "item": {
          "id": "1fb6358a-1b5a-4890-b292-b74d4cb29c8a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6634502d-0fcc-434d-84e8-c54f15e883f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18ba3933-4337-4069-a571-6bf1a70c09e7",
        "cursor": {
          "ref": "4fe335db-ca0e-447e-850c-d8045bd868ad",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "46d83f25-d655-465a-bdaf-f9a5c7eec19a"
        },
        "item": {
          "id": "18ba3933-4337-4069-a571-6bf1a70c09e7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "dfe6c3ab-6270-48a6-a407-bfb8c74a3d67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7860cebc-e8b4-4532-b3b2-94b84fecbc3c",
        "cursor": {
          "ref": "b23ba7a5-5a61-4743-840f-88bd62a06150",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0fe6245c-a2c3-4a27-8562-7b420ea944e7"
        },
        "item": {
          "id": "7860cebc-e8b4-4532-b3b2-94b84fecbc3c",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "98e011f3-efdf-45b1-8e11-f92a6b71f191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9906cd19-9d90-4f61-ab49-236dd3ec85f4",
        "cursor": {
          "ref": "8779b123-133e-4c7c-83d3-ccc19dd07eb1",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "d9402346-56ef-4858-90a6-90107bb819dc"
        },
        "item": {
          "id": "9906cd19-9d90-4f61-ab49-236dd3ec85f4",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "c67b713b-fb44-433c-98e1-2c2e50466fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39aff591-34a2-42e4-8bf5-21bc112f2386",
        "cursor": {
          "ref": "a82822bb-4dc7-47e9-8312-9e04f254105a",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "243ccc16-75f2-46c6-ae4e-8f070e817605"
        },
        "item": {
          "id": "39aff591-34a2-42e4-8bf5-21bc112f2386",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "dd4b3065-46dc-4493-9fda-f54591ba7903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a4e7da4-e9c7-44a9-a3d8-25cab10d92f9",
        "cursor": {
          "ref": "03983e0a-09ba-40a7-9b5b-b60e49ac4453",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "d7036566-6283-4878-a71f-b1cf1e9a9c15"
        },
        "item": {
          "id": "0a4e7da4-e9c7-44a9-a3d8-25cab10d92f9",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3679b271-7064-41b0-958c-dca8d74c55b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21bec8b2-9e08-46ec-bd6c-dc4084195a08",
        "cursor": {
          "ref": "e93f3e35-dcba-403a-bc63-268e84ff79bd",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d98a74d4-ecc2-4d0e-9590-c6ac0677c6d8"
        },
        "item": {
          "id": "21bec8b2-9e08-46ec-bd6c-dc4084195a08",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "7ecb26aa-8a33-47c4-9bff-eed698a2134b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a6bc304-75f3-4773-a01a-2be80339750a",
        "cursor": {
          "ref": "cec7684d-f9d8-4682-9e55-e544715b8490",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "6c2d78bd-125f-45e0-9027-a922ac829797"
        },
        "item": {
          "id": "3a6bc304-75f3-4773-a01a-2be80339750a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "38eb0139-7aac-4fbb-836e-126cee922024",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fef11b7-93b3-4fd1-a367-84b7e4d88996",
        "cursor": {
          "ref": "731a2a0c-3d9b-4a2a-8ed0-c2d17ef908f3",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "cdbd5fab-2b6e-4cea-b7e2-59d4deb156d9"
        },
        "item": {
          "id": "9fef11b7-93b3-4fd1-a367-84b7e4d88996",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "743a66ac-174a-486c-82e1-bd148b24ccc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b982474f-c2a6-4844-8652-865d7d70fd8f",
        "cursor": {
          "ref": "6dd63db3-fbd3-4379-a62a-186fb6a04ca6",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9eb42936-8604-4d7f-9b61-83a840b1319f"
        },
        "item": {
          "id": "b982474f-c2a6-4844-8652-865d7d70fd8f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "4e706b9b-5888-4e2c-b6f6-a18d1c2174d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d3357a1-e1ec-4424-a2ce-7f32a51f3f0f",
        "cursor": {
          "ref": "52e024e3-123d-431d-b3eb-757e7d1c4f4c",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8718ddfd-4f5a-4715-82a2-3c18420ee745"
        },
        "item": {
          "id": "3d3357a1-e1ec-4424-a2ce-7f32a51f3f0f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "dcf49f34-e35a-411b-a1d7-3cb4d989f561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "381d88f6-547e-400a-ad8e-f6efeee87bd9",
        "cursor": {
          "ref": "bf4b4e54-bc6d-4cf7-9527-3cc1b2d5ae11",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3c537257-5419-485e-95ce-6152437a1054"
        },
        "item": {
          "id": "381d88f6-547e-400a-ad8e-f6efeee87bd9",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "71ad38bf-c676-4841-a781-ccad10379bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "657297af-d1ef-4b47-9f0b-ce862b2eb543",
        "cursor": {
          "ref": "022d8735-51c4-4c0b-acb5-18671ff86850",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "31f8590c-9117-478c-b3fc-11aad638d558"
        },
        "item": {
          "id": "657297af-d1ef-4b47-9f0b-ce862b2eb543",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "92a844ae-6fd6-4314-91ab-f324cc09d569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54253cb3-5887-4b69-9c91-bf56dc9780e0",
        "cursor": {
          "ref": "4486351c-048c-4228-968e-16e418fe45f6",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f8da6388-d8fc-44eb-af09-e92bc0ace986"
        },
        "item": {
          "id": "54253cb3-5887-4b69-9c91-bf56dc9780e0",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "8e00b3d3-f926-4b00-8502-f21db7549926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41d1ed06-4bed-4a58-a34e-87b67e8aa87e",
        "cursor": {
          "ref": "0bc38373-5ff7-4078-8a3a-2bc6793cbacb",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "443b9db8-6175-4ead-92fe-93300e5e41dd"
        },
        "item": {
          "id": "41d1ed06-4bed-4a58-a34e-87b67e8aa87e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "4773061e-a97f-41e1-9528-73a32ca429fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca784644-8ad6-4d7b-ae4f-f31f129fd559",
        "cursor": {
          "ref": "710fdfd1-6826-4808-82d1-1d008e230d48",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "1d4027d0-9e62-4e8b-a4ad-096962969c4a"
        },
        "item": {
          "id": "ca784644-8ad6-4d7b-ae4f-f31f129fd559",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "48fc2d3d-7f72-4ab4-85d9-029e0273c1e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f82e5a3-b126-4d79-b108-e14965daf29d",
        "cursor": {
          "ref": "e4fccc8b-cfea-4d1e-83cf-72079c4fd997",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "be76fbd5-2b59-4e61-89d8-1dd2d43e7a0e"
        },
        "item": {
          "id": "4f82e5a3-b126-4d79-b108-e14965daf29d",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7863fbf7-d3a1-4af8-a7b3-b32c844a66e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a72cc7-f6bd-4e23-a42e-d5be32ceccbb",
        "cursor": {
          "ref": "746c842c-9e73-4bd3-a9f6-d7b54fa45c78",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "71886948-0cf3-4966-ab4a-b73779030386"
        },
        "item": {
          "id": "b3a72cc7-f6bd-4e23-a42e-d5be32ceccbb",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "33769af3-41f1-4996-b756-d195e6ef3f92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6735517d-7490-4374-9631-4429844d298a",
        "cursor": {
          "ref": "cf105fbb-2ef6-45d0-aeca-94b3d8d83d2a",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "005868fe-e06d-43af-8cff-ecb1b7f988ea"
        },
        "item": {
          "id": "6735517d-7490-4374-9631-4429844d298a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "dcd17b30-1d88-44e4-bc1f-2eb00ee50017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f07df6fa-6c9b-4ad5-976f-3a262b835249",
        "cursor": {
          "ref": "c3f0f6cf-d35a-45a6-ab57-cac86b95ac82",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "cc3a5d18-2448-4ae9-addc-bcacfdae9993"
        },
        "item": {
          "id": "f07df6fa-6c9b-4ad5-976f-3a262b835249",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "bb3dc09f-1ca1-4ed5-b9e0-4894985eb86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c14bfaf-fe75-4548-a789-9e221de90bf1",
        "cursor": {
          "ref": "7982ed10-7740-4e89-9375-84ed2dbb7589",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "dc91ab58-8fba-40d9-80be-373bfd38fdd0"
        },
        "item": {
          "id": "9c14bfaf-fe75-4548-a789-9e221de90bf1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "745bc08f-a304-43f8-bc94-0934a3439143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837592e7-ce96-4a4c-9124-76e5dfe43217",
        "cursor": {
          "ref": "0aed4be5-6212-4039-8d2c-56b3f3d2a201",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "50ba10bb-ddb7-4a00-9163-48fd7f912044"
        },
        "item": {
          "id": "837592e7-ce96-4a4c-9124-76e5dfe43217",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "4f4e5c9a-120e-4030-91a5-ae0cd0a3bc4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed15bde-03d3-44a5-985c-b8eeb5761609",
        "cursor": {
          "ref": "d2a0981d-578e-4049-aa76-402d6018cddc",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "bb747f2d-c102-4c50-b8ed-244d6d8c96f8"
        },
        "item": {
          "id": "aed15bde-03d3-44a5-985c-b8eeb5761609",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "478b98ad-17f6-4db1-983f-32e22a70ae1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "479cb963-353d-4f4f-97d0-05da0cc69cc6",
        "cursor": {
          "ref": "480f8f1d-afd3-4f3b-b99b-25602637d161",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2484037b-fd52-41df-879a-cc7258d5f4e9"
        },
        "item": {
          "id": "479cb963-353d-4f4f-97d0-05da0cc69cc6",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "193f1fea-23b9-437a-9d6f-67a7f1584385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7108a6b-6ba4-4b51-9d0e-964c21b2b079",
        "cursor": {
          "ref": "fa1c4db9-9c90-465f-8bd6-22bd572fc625",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "6d782acd-6522-4e6d-ab2a-629d93a21ac6"
        },
        "item": {
          "id": "d7108a6b-6ba4-4b51-9d0e-964c21b2b079",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2c0b8a1b-39e7-4171-a577-afa726bbdef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0700abe8-1152-4d95-b0d4-d0d4de810431",
        "cursor": {
          "ref": "261e2a0c-3a10-4d88-bcdc-1ca6369e82b7",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "d5a2cff9-c50a-45a9-8e5a-d9e58e09222b"
        },
        "item": {
          "id": "0700abe8-1152-4d95-b0d4-d0d4de810431",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "a381b8ac-fcaf-404a-a533-7bf5de3a9dfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87d0221f-c322-4a8d-b415-122537739a3d",
        "cursor": {
          "ref": "8f4115ad-c559-4d9d-84a8-3f4302176c96",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "dc6eb7b8-0b46-4ab5-b2fb-dc4ddcbcc495"
        },
        "item": {
          "id": "87d0221f-c322-4a8d-b415-122537739a3d",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a8642cc1-038c-4f20-b7fe-f5dcc93dbb09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e913ae-9d21-4652-8f32-7d55ed9f8646",
        "cursor": {
          "ref": "b3eab659-d9bf-46db-abe9-95ad0e65758c",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "e69e3492-6174-4cc1-b037-b6294f5807d6"
        },
        "item": {
          "id": "38e913ae-9d21-4652-8f32-7d55ed9f8646",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "aa7c92fd-1f14-4c91-b37e-640e9da3bedc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67274ab-1bbb-4fdd-a0e6-110902af340e",
        "cursor": {
          "ref": "54aebac0-dea8-4797-a453-68a6d5bea5ee",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "515e6d51-6b03-4211-892c-c71492594630"
        },
        "item": {
          "id": "f67274ab-1bbb-4fdd-a0e6-110902af340e",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "57b33c6c-1624-42d0-b204-7371f510d622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04e05b8-70f4-41e6-9e39-45777f15e978",
        "cursor": {
          "ref": "7368a15e-eaf1-4e04-93be-cfa53540c793",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "213f63b0-c916-4a9c-a3c8-f4acd4068fa4"
        },
        "item": {
          "id": "c04e05b8-70f4-41e6-9e39-45777f15e978",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "737fad50-bdfb-49e1-ac1f-c7ece3b9571c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04dbb5cb-135d-48c2-a248-cc556a76fcce",
        "cursor": {
          "ref": "da1446fb-90aa-4506-83ce-f70bd0ca331d",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "5f8eabe4-1f80-4427-8e5d-885d79181ca2"
        },
        "item": {
          "id": "04dbb5cb-135d-48c2-a248-cc556a76fcce",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "af753a9c-05d5-46d9-9c9e-5e714d561396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f842fd6f-b42e-41bb-b2de-eb438ec93bbf",
        "cursor": {
          "ref": "4f29702b-6bc3-42a6-968c-4b9badeb0482",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d973aea4-d737-4bb1-bee7-d11c64630372"
        },
        "item": {
          "id": "f842fd6f-b42e-41bb-b2de-eb438ec93bbf",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f6a9b6aa-eec2-4ee0-8b46-670ecadab14e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1b5d78a-5eef-4f1b-b03b-d3d8826151a2",
        "cursor": {
          "ref": "88aff7ce-15d8-41db-82d5-80d5987f4b29",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4cd1ab36-6c55-4aa1-a0e6-8b7d673275db"
        },
        "item": {
          "id": "a1b5d78a-5eef-4f1b-b03b-d3d8826151a2",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "8ffc9645-1e7c-4bf7-8c7a-3f320d899fbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc993378-08a1-4488-af6a-174cd12382e5",
        "cursor": {
          "ref": "9ec925db-4f24-4c44-8019-40589660792f",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ef2f6b5e-7c8f-4f54-ab74-596d45b72ab2"
        },
        "item": {
          "id": "bc993378-08a1-4488-af6a-174cd12382e5",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "75911021-f14a-4b9e-bb24-15f0d09c8331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ceb71c-f6fd-4469-bf74-ea0c43ecc324",
        "cursor": {
          "ref": "f4f6dc40-9081-47cf-a98b-6c5b0aa12dd9",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "b9fb8be0-9590-4bdb-a711-1feb503c7a9f"
        },
        "item": {
          "id": "a6ceb71c-f6fd-4469-bf74-ea0c43ecc324",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "da9b7482-425b-4187-bb6d-73f892b7ce9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20fc5cec-9e12-4bab-bd00-ab6ce129b9d7",
        "cursor": {
          "ref": "3ecbda75-a081-43ad-a4bf-3c3e0cd6f517",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "0064006f-f709-40ad-9f0c-3fafc9e2430f"
        },
        "item": {
          "id": "20fc5cec-9e12-4bab-bd00-ab6ce129b9d7",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5706b5e2-2e31-4dd6-8058-05c36f805ec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45042ee6-56b4-46a2-bdbf-8336ed038b27",
        "cursor": {
          "ref": "bde35b8b-162a-401c-959f-8bd8fbc2c4dd",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "0ef01cc2-c2cb-4b0a-859d-8c42cedafd5e"
        },
        "item": {
          "id": "45042ee6-56b4-46a2-bdbf-8336ed038b27",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "886038bb-6e84-4a98-ade8-f255872b005d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38be9a8d-cc7a-4d8f-9453-30dca9ca9694",
        "cursor": {
          "ref": "6174ec0f-71ac-4fa1-b004-b4fd9273627b",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "1575aac6-98d4-4b8e-9e92-718a92066d4a"
        },
        "item": {
          "id": "38be9a8d-cc7a-4d8f-9453-30dca9ca9694",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "270c7420-aa73-4fed-820f-4e6287aa1605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06af7a6-8d95-4457-be23-b1d0c9155e1d",
        "cursor": {
          "ref": "50713145-2721-4524-aabd-9942fb55d5b6",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4b974d56-8c83-46b8-aa12-e28b8f51b414"
        },
        "item": {
          "id": "f06af7a6-8d95-4457-be23-b1d0c9155e1d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1af4dd06-592f-484f-93d2-2634dd004b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e422aea-b2a3-430b-b632-e46e8a463461",
        "cursor": {
          "ref": "ed71d71f-7817-4b6f-9ae9-4f3537614b94",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "90cb3f32-c346-4189-bb45-e4af1aef84cd"
        },
        "item": {
          "id": "6e422aea-b2a3-430b-b632-e46e8a463461",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e1c2f2ee-86bb-4fc4-ac45-b04ec8c15536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "417dff47-2fa6-4d10-a1df-f7c91906213c",
        "cursor": {
          "ref": "0c70a036-aa79-41b2-8656-ba31603149f0",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "03c56172-84b4-4c22-bc67-836879b4c649"
        },
        "item": {
          "id": "417dff47-2fa6-4d10-a1df-f7c91906213c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "e763bc57-e477-4672-a93e-2e976b3c6db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27a5daf3-38d8-423b-92d3-6f8869f11a25",
        "cursor": {
          "ref": "1194b3ef-2cf5-4365-88a5-6f58864a8116",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "09f637c3-9d9e-4e41-80e8-17be04e2d9b0"
        },
        "item": {
          "id": "27a5daf3-38d8-423b-92d3-6f8869f11a25",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "6b7daa95-8b14-4e35-8437-9b27145ebd4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09432ce2-931e-41c2-8ead-2163fd835921",
        "cursor": {
          "ref": "d682a6f7-b1df-40a3-b3fc-22369ff02ac7",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6f6d63a5-003b-48b5-9f47-54320775f55e"
        },
        "item": {
          "id": "09432ce2-931e-41c2-8ead-2163fd835921",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "aeb004e8-eac6-4762-8798-5f92bfdd7b84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b6bffb-4fb0-43f0-bfdd-0759223d28ae",
        "cursor": {
          "ref": "7a890d00-580a-41e1-9ff3-c3dbcb8c1f86",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "791b0e52-259e-41b8-8d98-a1e421583000"
        },
        "item": {
          "id": "14b6bffb-4fb0-43f0-bfdd-0759223d28ae",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "51dde894-23c6-45bc-a804-e684936d3af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7bb927-d44a-411c-9260-6819dd6cb6e5",
        "cursor": {
          "ref": "73458727-80b0-4ef8-9cf4-b1f135a65291",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5c1b2ba6-1866-43c9-8855-9c40a7645878"
        },
        "item": {
          "id": "fb7bb927-d44a-411c-9260-6819dd6cb6e5",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "b0cb4e73-de84-45e1-9466-10c3cd879c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dea8769c-b6f9-4c45-8d8b-ffb7f1241e47",
        "cursor": {
          "ref": "84b36556-ab78-4a15-9808-3fbea8641fdb",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f60615c0-3787-4cfb-af16-702162bc5b16"
        },
        "item": {
          "id": "dea8769c-b6f9-4c45-8d8b-ffb7f1241e47",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "be540f75-2e9a-49fa-b64d-2e9e2156dc58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a81807b7-d7e5-4cf6-b9d7-68eb4fbdd7bc",
        "cursor": {
          "ref": "fcd7b48b-6f6c-4ac6-bc92-0f2639f6f914",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "af844f3a-87b8-4f07-a0ba-fc404d90a355"
        },
        "item": {
          "id": "a81807b7-d7e5-4cf6-b9d7-68eb4fbdd7bc",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3fa0ae7b-674d-49b2-9887-3aeea254152a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1cb868-79b2-495d-a1f4-e01899cf9910",
        "cursor": {
          "ref": "292484cd-51c8-4d7c-8049-313f4c6b67c6",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8c3924e6-2be8-4ffb-8aeb-7e81087b912b"
        },
        "item": {
          "id": "9e1cb868-79b2-495d-a1f4-e01899cf9910",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7a21365f-7bbb-41c4-ac07-0138d138304e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "802c4624-64e7-4e1a-b26f-c478756c7c16",
        "cursor": {
          "ref": "710b755f-c8ad-4900-af63-e129ca56e593",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c450b55d-561e-42a5-960e-eaf62b55be43"
        },
        "item": {
          "id": "802c4624-64e7-4e1a-b26f-c478756c7c16",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "eac52dcb-09e0-4e28-9929-bcaf67756578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db707cbc-6d73-4877-a30c-41dd8d6ace3a",
        "cursor": {
          "ref": "a594e162-7127-410e-b093-b6678dc7b895",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b89d88e0-d780-47bc-81e6-a7e74745c42b"
        },
        "item": {
          "id": "db707cbc-6d73-4877-a30c-41dd8d6ace3a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "099fd922-d8a7-4387-aeba-5bd20b1be1b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf93ddbe-1205-46fd-aa4a-749529c65a3b",
        "cursor": {
          "ref": "33f29d66-9e45-4d17-bda4-626a68890edf",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "c43aafce-17e8-44a9-bc28-f3e928973a25"
        },
        "item": {
          "id": "cf93ddbe-1205-46fd-aa4a-749529c65a3b",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "919ed53b-d9a9-4194-9571-3150bcc855bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ee24bb-87ad-489d-b351-8480566c71bc",
        "cursor": {
          "ref": "5ee8ac0e-0b4a-4b25-9f49-302266b17186",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9c075ff3-bc7e-45ab-b900-e6e5f0d17883"
        },
        "item": {
          "id": "60ee24bb-87ad-489d-b351-8480566c71bc",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d68f955e-8b5f-4592-b496-cbce22460c07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43d15a1-95f2-468d-95d0-394825c22cb3",
        "cursor": {
          "ref": "80ed800a-acda-4141-b3e4-c2a509c84c47",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b15e04b1-4658-4963-bdd0-1cd6d992f783"
        },
        "item": {
          "id": "b43d15a1-95f2-468d-95d0-394825c22cb3",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f0445096-71af-4e5f-9fcd-c5006725b9c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf19f22-1dec-44d8-b730-7d0e83d18d4e",
        "cursor": {
          "ref": "c6a566a6-afdb-4f11-9c1d-6c2e98329e0e",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "041aa55c-ad5c-4ffe-bdc2-8a0664341e45"
        },
        "item": {
          "id": "ccf19f22-1dec-44d8-b730-7d0e83d18d4e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "0a4ec2f8-aabe-41c6-b903-08d5529a1b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d20f7a1-637e-44c7-85f5-7910878a0fbf",
        "cursor": {
          "ref": "ac8c0816-57f0-4284-a09e-b92a58a2ac8d",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9541f735-ebac-4f5d-ad4b-61f9c7a0e154"
        },
        "item": {
          "id": "6d20f7a1-637e-44c7-85f5-7910878a0fbf",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "a0bb7117-afa5-4210-9df6-4e918e564271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa5c9c12-3713-455c-8440-2cce55fdaa60",
        "cursor": {
          "ref": "d6f845dd-14c1-4f7b-816d-5fd7ff73ee10",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f11ba5c6-41ec-4f21-8143-6ac15a65f0e4"
        },
        "item": {
          "id": "aa5c9c12-3713-455c-8440-2cce55fdaa60",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "8ad07ff4-9400-44cf-b9e4-b6ef14ebdfd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837cbff8-052f-432a-ab2b-da9730a77911",
        "cursor": {
          "ref": "ef8ef888-1fe1-4bd5-8160-f67d9da52447",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "11036d56-5cc2-457e-9de2-a057decf4d7d"
        },
        "item": {
          "id": "837cbff8-052f-432a-ab2b-da9730a77911",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c6a0cb90-4320-4de8-9405-111fd58940ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3df1f08-edc5-4dc9-9a32-3d51ae42a73b",
        "cursor": {
          "ref": "50c46c71-6b6d-44da-8c8e-9493a5b22325",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "8f6c9ab0-338e-49a0-a192-15b407cd649f"
        },
        "item": {
          "id": "e3df1f08-edc5-4dc9-9a32-3d51ae42a73b",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "24e0a8ea-4b75-474c-979a-a0661b5af813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7b8a278-6bc8-491d-9d86-6f783d2141e3",
        "cursor": {
          "ref": "bf681dc7-3687-44fb-8dcb-682f73d4fde8",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "283fda1f-b5bc-4a96-b5a7-7f16e0d64e5f"
        },
        "item": {
          "id": "e7b8a278-6bc8-491d-9d86-6f783d2141e3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8bfd49bd-8e02-4784-9559-5c767a278bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26c6c777-37ba-408f-9ad8-38ac9286c3de",
        "cursor": {
          "ref": "e03de629-c00d-49cc-b000-fe50d3f9082b",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "7fc92b69-61dc-4798-bcf5-26285c30b6b9"
        },
        "item": {
          "id": "26c6c777-37ba-408f-9ad8-38ac9286c3de",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7de64220-8b2b-4645-984b-747f88efcd9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9331102-a19a-4d1e-b330-f9b99e869389",
        "cursor": {
          "ref": "bd08f6bd-8841-407d-9a7f-235bd47cf619",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "10adb793-eda4-4a43-aada-2e0a5cda212e"
        },
        "item": {
          "id": "b9331102-a19a-4d1e-b330-f9b99e869389",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "87bfa55e-a758-451d-b6d6-860f859993c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbd112b2-82d5-4694-9d8a-4b2c5ab4fe09",
        "cursor": {
          "ref": "ce5d189b-eebd-45b3-be64-4dd6c6fc24eb",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "4020d4d7-8d5b-4bca-8efa-f08f39ecb39f"
        },
        "item": {
          "id": "bbd112b2-82d5-4694-9d8a-4b2c5ab4fe09",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e5143694-b853-4159-8dc1-df4bfde09843",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51e39a28-daad-48bf-9740-f240555feae4",
        "cursor": {
          "ref": "d185ade3-9623-4171-b664-f19030a21a74",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "701f94ea-0e77-43e0-95f8-c837f0e47c9b"
        },
        "item": {
          "id": "51e39a28-daad-48bf-9740-f240555feae4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f25c6d2f-48e2-4b92-b0ac-217a3990fde8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f82fc3f-5ce8-4afb-9528-9e1285009678",
        "cursor": {
          "ref": "e3ce0821-2402-4f63-b31b-31c5af3dfa17",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "18bc38e9-a915-462a-a024-b6590a0f7d3e"
        },
        "item": {
          "id": "8f82fc3f-5ce8-4afb-9528-9e1285009678",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "5f18a88a-c8be-4f2a-b589-f831727fdda3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "198fb443-2a58-457d-a6a2-4052521e0451",
        "cursor": {
          "ref": "fc8f7477-6a7e-4920-aa29-6e82b7f5359f",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "ae4ce9d1-842b-4bab-852b-8e499203f568"
        },
        "item": {
          "id": "198fb443-2a58-457d-a6a2-4052521e0451",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "474cc9e2-dae6-4997-8cf7-3d5852e30c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1edf1d0-84d7-40c4-a66c-66a0daedf20d",
        "cursor": {
          "ref": "4bbc442b-a074-4e96-9643-a8b4b6e0993c",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "6a7504db-bd26-4aff-b7fd-41c27012c6f7"
        },
        "item": {
          "id": "d1edf1d0-84d7-40c4-a66c-66a0daedf20d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "a57115cc-0d43-4c81-a88c-2047192c1116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5afee424-c5ce-41c4-9234-0d608b1bd791",
        "cursor": {
          "ref": "f285d835-31fb-4db3-812c-3d986bfad457",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "04a09aec-0106-4130-abe8-e3f0773c2500"
        },
        "item": {
          "id": "5afee424-c5ce-41c4-9234-0d608b1bd791",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6e662b1a-26cb-4cac-883e-13dd3e5808cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a33b8d-4e9b-417c-b643-656d3504ef07",
        "cursor": {
          "ref": "a01ccbe5-231e-42c5-a5d3-ec934c3f9bad",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "27b586ee-d0e4-4027-bc46-39ceb72a87d4"
        },
        "item": {
          "id": "a5a33b8d-4e9b-417c-b643-656d3504ef07",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "d48d8278-e044-498a-b25b-f3f4230eaf16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "528c394e-c76a-4ea4-8e10-9e346b0605ca",
        "cursor": {
          "ref": "1671dce1-313e-4741-8deb-2d19350e55ec",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f2a676c9-63b3-4816-ac7c-296f46449461"
        },
        "item": {
          "id": "528c394e-c76a-4ea4-8e10-9e346b0605ca",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c0c5efed-4b13-44df-a7e3-5e0af763c13b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24abcdbe-48f6-482d-ab5b-3aeed512b46f",
        "cursor": {
          "ref": "1eb286b4-d803-4bb3-9faf-475ee405ce3c",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "5ccf8ce0-f947-4a4f-95a1-fe6b8b5d6cf4"
        },
        "item": {
          "id": "24abcdbe-48f6-482d-ab5b-3aeed512b46f",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "64debc1a-cfb9-4c41-939a-c0326bcd2097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1edcbe0-862c-45ff-a0e8-492b468a433d",
        "cursor": {
          "ref": "4bad0595-c7f1-4fa0-a7ed-64c62f887b81",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "836e1c48-caa1-481a-863c-14e456dff7c5"
        },
        "item": {
          "id": "c1edcbe0-862c-45ff-a0e8-492b468a433d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "0bae22d3-7209-4d0f-9260-fbe3b15a29f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271509d2-c245-4bf9-acf6-18245329cc4d",
        "cursor": {
          "ref": "6069ed9e-b894-4352-b733-553ed0f8c29c",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "2a176b8c-fce9-4ec3-9dd5-1844b6d8ae13"
        },
        "item": {
          "id": "271509d2-c245-4bf9-acf6-18245329cc4d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a2af1473-e706-4ec0-97c1-e807e162676b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21085ef2-5908-465b-92ed-f92a681ba8fc",
        "cursor": {
          "ref": "80096ec1-0f43-4651-8e72-040b23b2dfec",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d7a16eb7-53ce-444e-816a-97fbdcf926e7"
        },
        "item": {
          "id": "21085ef2-5908-465b-92ed-f92a681ba8fc",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "245012cf-536e-4c7c-a751-62bbe210d3c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041085a9-b12f-4279-98f2-aaaa72906263",
        "cursor": {
          "ref": "827e4ac3-aad2-4f2b-9fb5-9e0f876b75d7",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "61a1f2f5-21b2-42a8-bbb9-dc6bf0f1a09b"
        },
        "item": {
          "id": "041085a9-b12f-4279-98f2-aaaa72906263",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8a71c4b4-569f-449d-9056-9ae31a116f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3096f9f6-b957-489c-b6f1-04cda94f57e1",
        "cursor": {
          "ref": "217c4309-b5e1-46f7-af6e-1e350076adb3",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5e90816a-0816-478a-b9c7-5ab9d855b1bb"
        },
        "item": {
          "id": "3096f9f6-b957-489c-b6f1-04cda94f57e1",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "f430067b-0625-4b34-8d00-b776f1aa329a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6267e004-dfac-4fa1-908f-faa73e244138",
        "cursor": {
          "ref": "f7328acb-9ba2-4ea1-8319-c8217075a491",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "b3cdb9d8-8561-4fe5-99aa-34ea50e2fa71"
        },
        "item": {
          "id": "6267e004-dfac-4fa1-908f-faa73e244138",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "7409e0d8-0e45-4589-b1e1-4482b09fa447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "ec34536a-8511-46e0-94dd-ee1ad59dd403",
        "cursor": {
          "ref": "e32ed1f5-3b4a-41d6-8bd1-52fec2fde075",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "cc59e5cf-d90e-4051-8b08-03be2ffb9325"
        },
        "item": {
          "id": "ec34536a-8511-46e0-94dd-ee1ad59dd403",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1da34555-c25f-44bf-b563-5ac3ab4b6288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "bbf84425-a259-496c-bda4-9634ff6ae464",
        "cursor": {
          "ref": "81eca9c1-8aee-4182-8173-f9af34eb8aa6",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d4563512-ec8f-441d-9623-295b3e92d22a"
        },
        "item": {
          "id": "bbf84425-a259-496c-bda4-9634ff6ae464",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "85748199-d6d2-4747-9b18-ea6da3ab2295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "b6604411-c508-4ecc-8acc-977060a63e76",
        "cursor": {
          "ref": "86374d0b-04ed-490d-a795-545597435370",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "6405e7c4-56b3-454a-8db5-08034899e34d"
        },
        "item": {
          "id": "b6604411-c508-4ecc-8acc-977060a63e76",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "fc76d82f-958a-432d-9406-09b29cd078ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "a97e1420-4ec2-45dd-a28b-ca68aaf06d74",
        "cursor": {
          "ref": "671db6b5-8f52-4696-a482-ab9ce2ad0207",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "473b890a-2e1a-4a87-aeee-cfb64692dee7"
        },
        "item": {
          "id": "a97e1420-4ec2-45dd-a28b-ca68aaf06d74",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "fb609a31-5b79-4424-901f-7dd985b0f701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "dc00379d-50f1-465b-b2cc-26b5078def7d",
        "cursor": {
          "ref": "d46f5380-5f11-448d-948d-efdca3ef6d57",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "83ab4a5c-e495-44d1-8142-430e2cb8061a"
        },
        "item": {
          "id": "dc00379d-50f1-465b-b2cc-26b5078def7d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "eb33ab45-8d5e-4d12-be1a-ec796fbe4c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "c9ad3775-ec84-4386-83ee-f727de80f03c",
        "cursor": {
          "ref": "37027f96-3ce4-499d-b57c-1b482c6b77ea",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "48ac069c-ec6f-43e3-9d80-3bdfb9661e82"
        },
        "item": {
          "id": "c9ad3775-ec84-4386-83ee-f727de80f03c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "36e798cd-c2d7-4fd5-9b52-2feda5063bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "e4e9669e-ce65-478b-bdc7-79f1650699a7",
        "cursor": {
          "ref": "b21eef1c-ad29-4cbe-851b-0016084014cd",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6f6d4af3-9a08-4f28-ac40-4038176215ef"
        },
        "item": {
          "id": "e4e9669e-ce65-478b-bdc7-79f1650699a7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "05ce8765-9d18-4f8e-af01-59a725000767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cd36c73-22e1-4d2d-8a47-0d4bdcc3a9b5",
        "cursor": {
          "ref": "98c04ae9-6366-40b3-b73a-5d492955373b",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "9cc18300-de2f-4015-b0b7-9247b4f697e6"
        },
        "item": {
          "id": "3cd36c73-22e1-4d2d-8a47-0d4bdcc3a9b5",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "942adb9d-6faa-46f8-b2f9-eccd7560a87a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c342de2c-fb1f-46e5-9373-1d562f19fb87",
        "cursor": {
          "ref": "032d182a-a36f-4324-a2c4-5b38d8e5bcc7",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a9916cbd-7d50-45e1-be56-0f3da684f4e9"
        },
        "item": {
          "id": "c342de2c-fb1f-46e5-9373-1d562f19fb87",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "ec391626-1c92-43c7-82f7-9f62f7185baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "005c45d8-148a-4f3d-a01b-1a6f0c4abe54",
        "cursor": {
          "ref": "b2280dca-41c7-47ac-8077-4c6a0ab061c2",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "6922faa4-d1e1-41f3-8e8b-2568040d0ee9"
        },
        "item": {
          "id": "005c45d8-148a-4f3d-a01b-1a6f0c4abe54",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2ba4ab30-073c-4dd9-b7d5-ca9f616256ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5113c60f-fcbc-4000-878b-c40f00d5c598",
        "cursor": {
          "ref": "263298b8-8307-4bb1-abbe-2223eacbe9b4",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "ec657339-2f27-4a5f-a005-04c76764a3a7"
        },
        "item": {
          "id": "5113c60f-fcbc-4000-878b-c40f00d5c598",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "1515e523-bc6f-4d24-abad-35c53b37da23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "218196eb-a425-4435-a9c5-664c0911b726",
        "cursor": {
          "ref": "7c01a746-8575-4b65-a8d6-937960d2b4c3",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "10b13fc6-897b-4483-b563-cb050fe6b3b7"
        },
        "item": {
          "id": "218196eb-a425-4435-a9c5-664c0911b726",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "740ef886-22c7-424b-ac8b-42ff80602660",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb64a226-5dd8-4ce8-a773-312f9d7f6ba1",
        "cursor": {
          "ref": "73ef0110-c53e-4a53-8d57-385bad7a4928",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9b2c6ed4-2f31-4bbb-beb7-25e87ddaefd7"
        },
        "item": {
          "id": "fb64a226-5dd8-4ce8-a773-312f9d7f6ba1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e9f5a86c-5d17-4829-8e81-84984360a312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 212,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90c1ab6-e022-4deb-937d-ceeb98a33ca4",
        "cursor": {
          "ref": "5d9b2441-1bf8-4ae6-ac8d-823065889620",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "02971669-0121-46cf-b7b0-d49e8d090a41"
        },
        "item": {
          "id": "e90c1ab6-e022-4deb-937d-ceeb98a33ca4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d6397212-7e0e-4eb5-90d6-d265977c130c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f404df2-94e2-4076-a991-436e6a04367a",
        "cursor": {
          "ref": "bd57e35b-81ae-4b88-8d7d-85e708c1dbd6",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "d6e05936-0467-4cd5-9f76-4978100accc9"
        },
        "item": {
          "id": "6f404df2-94e2-4076-a991-436e6a04367a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "9ceb5bc3-016f-4093-8853-075e23cbb293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6ddd95-cbb4-412d-b83d-a5eb9919dc64",
        "cursor": {
          "ref": "77fd655b-b993-4a4c-8ba8-6e3d9ac6d9a9",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "051d2a61-9668-4f16-8618-566b1a473db8"
        },
        "item": {
          "id": "0b6ddd95-cbb4-412d-b83d-a5eb9919dc64",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "7227ea46-5b41-4c09-a2a5-1477e6f452d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c89df5-04ad-4d2d-a826-053e5ccdfa90",
        "cursor": {
          "ref": "0704d041-a7f4-41a6-9373-0e310ad4f956",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "55764d80-861d-4e50-ad5c-612eb8449771"
        },
        "item": {
          "id": "32c89df5-04ad-4d2d-a826-053e5ccdfa90",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d733c702-6d3f-483d-be2f-43c80b2ad80e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01cc7183-3b75-416e-b805-104e6ec186c8",
        "cursor": {
          "ref": "87fabe6a-126e-4146-be50-41782783b13f",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "418a3fa3-44f6-49e3-95d2-f52a36f84a11"
        },
        "item": {
          "id": "01cc7183-3b75-416e-b805-104e6ec186c8",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f0a00172-ebdf-413c-add5-4fd705dfe730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20539700-da9f-42c8-9193-352be668f5ba",
        "cursor": {
          "ref": "f9a88ab1-e923-41a6-a772-b94bd3c0790d",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "32a2265f-575b-433a-9267-94700a6ee338"
        },
        "item": {
          "id": "20539700-da9f-42c8-9193-352be668f5ba",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "8c89f396-eb6c-4b72-a1dd-137fe1d89d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "722ae44e-5f49-4b85-8100-a74c029fc65d",
        "cursor": {
          "ref": "19bc85fc-440b-4ac6-bab6-290e48f5017e",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "dd0b7cbf-6260-41f8-a716-3cfc2cf65a40"
        },
        "item": {
          "id": "722ae44e-5f49-4b85-8100-a74c029fc65d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "8aa83b28-5364-40eb-a5a3-6464258ca1fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413b26ab-9289-43d6-99fd-5fb02480e719",
        "cursor": {
          "ref": "7b6aaca6-98b5-4800-880a-84b4d58df8f0",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2fa91c63-2b60-43fe-863d-49f4dabfb873"
        },
        "item": {
          "id": "413b26ab-9289-43d6-99fd-5fb02480e719",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "62222eec-3f93-46f3-86a8-bbdfe596101f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9236272c-be59-4903-b773-40f8e984cb0f",
        "cursor": {
          "ref": "b433a2bc-1c52-4ca6-b6dd-2103a6c7c9a3",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "9ece624f-c1bb-46e9-8eab-cb82000bdf1e"
        },
        "item": {
          "id": "9236272c-be59-4903-b773-40f8e984cb0f",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9c4d43b1-832a-47c6-ba89-6e4da6a9c53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e270e35-9538-42cd-8a80-3d0103e72e4f",
        "cursor": {
          "ref": "7cb62daa-a30a-4027-afd2-c183afe5d7e4",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0df9e7a9-478b-4e4c-91f8-70b150f9d762"
        },
        "item": {
          "id": "5e270e35-9538-42cd-8a80-3d0103e72e4f",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1357848f-5a0f-49e9-b0de-ed44ef3fab01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "796428e2-ddbb-43ce-aa42-7639da00e264",
        "cursor": {
          "ref": "b0d6629f-5a3d-48bc-b6a6-5bdbd83c6345",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3abf2063-52ef-4a2d-b251-17cff120995b"
        },
        "item": {
          "id": "796428e2-ddbb-43ce-aa42-7639da00e264",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0a0e9ee1-442e-4cd5-9d51-ed5d672a0bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f839a98-e8d1-4c1a-8528-2ef775e9fda6",
        "cursor": {
          "ref": "cc84c0cb-9702-48c4-ae1c-3336fb1b9151",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "84a4fc95-4a07-46e1-a584-d052503f91fb"
        },
        "item": {
          "id": "6f839a98-e8d1-4c1a-8528-2ef775e9fda6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "40bb8917-0f38-4e2d-9a2d-70586fc84dc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6cd3f2-9130-4b96-b086-4881bfe4a747",
        "cursor": {
          "ref": "4c5f148a-dd65-4404-b40e-cac670101f99",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "4b08e597-315a-48bf-b847-61a9fca45174"
        },
        "item": {
          "id": "be6cd3f2-9130-4b96-b086-4881bfe4a747",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "2d413449-1eac-4465-9ad1-5b6fd0f8a43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e95db2-45f7-45db-bd74-b1bcca0151af",
        "cursor": {
          "ref": "9397d62d-3908-4a2d-a226-e478ca0525a5",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "77b16367-54e9-4bd1-92e8-80dddc9f1d97"
        },
        "item": {
          "id": "b3e95db2-45f7-45db-bd74-b1bcca0151af",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ac01756b-4e67-4689-a44b-fda1ba9c8ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f58984f-d8a4-48e7-8ff0-0bfb87450fcd",
        "cursor": {
          "ref": "5b041ecd-d603-405d-9362-b280c2434740",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "cbb3a3aa-2620-4a9c-9cf0-2cb902cc1081"
        },
        "item": {
          "id": "5f58984f-d8a4-48e7-8ff0-0bfb87450fcd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1165d374-38b7-4416-b668-9a2393fbef02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc863531-3ec2-4d8d-911f-538d32c8e248",
        "cursor": {
          "ref": "010fb46a-3c94-4ed8-90eb-5cf5d804354e",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4c47ca18-a6a2-4a51-93e3-3e4363db7643"
        },
        "item": {
          "id": "bc863531-3ec2-4d8d-911f-538d32c8e248",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6a84347b-bdca-43d1-b20b-f34a19df9c60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa6c69a2-2c6d-4894-9cbc-e7cd990b03be",
        "cursor": {
          "ref": "708e70b5-c7be-46d2-9962-f9622548ae9a",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4f3fc9df-a85f-44ec-973c-cc085e2d234c"
        },
        "item": {
          "id": "fa6c69a2-2c6d-4894-9cbc-e7cd990b03be",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "894715d7-8a61-4fc0-a731-41a3fa30f919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f89a9a1-580d-4fd7-bea3-d54c5f42943e",
        "cursor": {
          "ref": "f9862ab0-bcf6-4fcf-8fa4-bbe2174f15f3",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "bb61ee9c-85f4-4629-97e1-a80e4f37cef8"
        },
        "item": {
          "id": "6f89a9a1-580d-4fd7-bea3-d54c5f42943e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8cf42567-6394-43ed-be05-6f13d4c01ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff467d61-fe20-49cd-be5b-ab6591745988",
        "cursor": {
          "ref": "b41b97b6-4d72-4ad0-ad2c-21d2e99f3187",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1c9c8c6d-8c16-4ef8-a2d4-60151d4fb631"
        },
        "item": {
          "id": "ff467d61-fe20-49cd-be5b-ab6591745988",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "10c3d1ec-5ee3-4048-bd1d-e02a0d2ee616",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a94933-8f4c-4e15-ae63-9f4a97142a27",
        "cursor": {
          "ref": "4e65fc7c-3c42-4a55-8b6a-0403ee7e6538",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6789310e-fec8-4cf1-b88a-1ea27b1eeb9d"
        },
        "item": {
          "id": "39a94933-8f4c-4e15-ae63-9f4a97142a27",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4831d327-cc4a-44e3-aeb1-f67e22410d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2ac4e62-9ac2-4add-be59-2b3a2d13591a",
        "cursor": {
          "ref": "f005cfcf-ea41-43a1-a0f2-ca1071cbc9f5",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "787b0ea1-9f31-475d-9ad8-3c56724626d4"
        },
        "item": {
          "id": "a2ac4e62-9ac2-4add-be59-2b3a2d13591a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "f0bb26b0-56e4-4f13-aa8f-9bf815861fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502743c9-2c69-4a6c-a810-dffcb5f00a93",
        "cursor": {
          "ref": "b63e49be-b05a-4161-a688-bf9ecf42cebb",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "0ecace52-43e0-47e8-84f3-c71cfcd2641f"
        },
        "item": {
          "id": "502743c9-2c69-4a6c-a810-dffcb5f00a93",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a00992ad-f765-4a9f-b1d8-5a1ec12b7c55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa91eb9-3cb0-4b7a-9bdf-faa9a8eb95ae",
        "cursor": {
          "ref": "2a677e9e-076d-45e9-9f6a-8beb72bac687",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "ae696913-8ac0-495d-b699-472c4078ad97"
        },
        "item": {
          "id": "0fa91eb9-3cb0-4b7a-9bdf-faa9a8eb95ae",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "76e34700-88f5-4972-8a93-07ef210c552e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a496a814-22aa-4c48-b4d3-6b3d0876b53b",
        "cursor": {
          "ref": "5bc981ff-cfb5-46b9-be7c-4775125fdb7e",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "5212dd30-fa67-414e-a68b-93bbb96a1000"
        },
        "item": {
          "id": "a496a814-22aa-4c48-b4d3-6b3d0876b53b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "557c2e4f-8bae-4552-8b28-a292a0237f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7bbfd5-30df-46f7-b460-233f9735e311",
        "cursor": {
          "ref": "cde6a377-7bd8-4292-a090-9ae01c14f908",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "bc0ba34e-4874-4ec7-8699-09c28f57d63c"
        },
        "item": {
          "id": "3c7bbfd5-30df-46f7-b460-233f9735e311",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "15098f12-1f92-4501-96f4-7efddf61367a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53e63c86-5874-4ed2-aad5-007295f6d6e0",
        "cursor": {
          "ref": "f582f064-c7b7-4cea-9e98-b94cef45da20",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "802aa0fa-e45e-4bcb-be8a-88cd039fcda8"
        },
        "item": {
          "id": "53e63c86-5874-4ed2-aad5-007295f6d6e0",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "372084b6-a213-489f-8f9c-8d8f740309ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e5a0660-2885-449d-b72f-90586727ce74",
        "cursor": {
          "ref": "7f22e07b-9f11-4326-bd46-efa95d7387c8",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "aeefdb73-e9af-4f97-97d6-daddb9618893"
        },
        "item": {
          "id": "5e5a0660-2885-449d-b72f-90586727ce74",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "0f04f319-b007-4581-a161-fda53a71f8f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99c5f35-e377-4a4c-b6f2-805780aaab2e",
        "cursor": {
          "ref": "0a5e0380-0a78-4b43-9b2e-3b48f010aea3",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6f2e10c5-815d-4972-bf5f-9e039e4973af"
        },
        "item": {
          "id": "a99c5f35-e377-4a4c-b6f2-805780aaab2e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "44c7f65c-1143-4b3b-9472-6c9ce6ac006b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "072dac3e-fd79-4bad-84de-af895ebdd511",
        "cursor": {
          "ref": "164e3b89-8903-466c-8220-ff1c9f607707",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7a1bec08-1621-4ad2-9377-c053a236cab3"
        },
        "item": {
          "id": "072dac3e-fd79-4bad-84de-af895ebdd511",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "b112ec5d-aa42-4798-985c-431dbc166085",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99388e24-9d92-44a1-8295-735b9fc6570f",
        "cursor": {
          "ref": "cb864188-d6a9-4f3a-a0a9-b55a8fab5d13",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f71b54e1-ec94-4bb2-a270-55a0b6aa617c"
        },
        "item": {
          "id": "99388e24-9d92-44a1-8295-735b9fc6570f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "e2f7fd42-4ebb-4639-a463-b2bf1b9b6a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e00b25e-ed2f-4727-98de-cd93c73168ba",
        "cursor": {
          "ref": "81a12f44-026f-4914-8c9b-2ef9fe8e23f1",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "edc81cfd-7518-4413-825c-3967bb30beed"
        },
        "item": {
          "id": "4e00b25e-ed2f-4727-98de-cd93c73168ba",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "7fe27373-19c9-4ce1-9884-deda3681faea",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d451cf-3d61-4c92-b377-f8a148c413bd",
        "cursor": {
          "ref": "c59d1022-ec0c-4050-bb57-ded02febe748",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0d2791fb-0d34-442f-8c40-a1aa0186c5d5"
        },
        "item": {
          "id": "61d451cf-3d61-4c92-b377-f8a148c413bd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "51d69b87-64a9-4f77-a74c-03641dff4719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1cb6d0a-826e-4578-af5c-5de7fddc535e",
        "cursor": {
          "ref": "5822e40a-0fb6-4b89-86d1-912eb1669c14",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e3d989e5-25cf-41cf-8540-71ce879dabda"
        },
        "item": {
          "id": "b1cb6d0a-826e-4578-af5c-5de7fddc535e",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "88390816-86be-4593-ac6c-ea8a2046e20a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbf94fbd-fec7-47f1-a84c-5c665d35f1be",
        "cursor": {
          "ref": "3448690a-358d-41dc-b496-f58a5be582a2",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "9b5fe1aa-dede-4a1c-9237-7cc6d9fd3baf"
        },
        "item": {
          "id": "bbf94fbd-fec7-47f1-a84c-5c665d35f1be",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "14b9fbe2-882d-4d54-bfd4-8a431000beab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e1a8ec-e82b-4393-ba2d-602c31b91dbf",
        "cursor": {
          "ref": "2ea26d34-0156-4354-9df8-215db12b18dc",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e1f65b38-32ad-49f8-b85a-7372aa06976d"
        },
        "item": {
          "id": "b9e1a8ec-e82b-4393-ba2d-602c31b91dbf",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e7d5d232-5527-404a-bc46-b713f1f3651b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2595ca4-d6b1-490b-b046-3b23f112d9be",
        "cursor": {
          "ref": "3bdfc59e-8daa-47dc-870e-e3ebb44e5609",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "9180afdc-a2f6-4cce-ad5a-b14179feedd2"
        },
        "item": {
          "id": "d2595ca4-d6b1-490b-b046-3b23f112d9be",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "50509ce0-9c5d-4eb0-ab26-32e49064f866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d312e37f-d586-4aa3-b2d2-974589d0ce3d",
        "cursor": {
          "ref": "d5863f96-e027-42b7-b1c7-0bde03ca5820",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d3d2c2b1-593d-44d8-a448-0144d567e844"
        },
        "item": {
          "id": "d312e37f-d586-4aa3-b2d2-974589d0ce3d",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "4a9c8e4c-95e3-40a5-9733-6e91c578ce35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e09f275e-13a6-4dfd-8efd-e913dbbee400",
        "cursor": {
          "ref": "be22a200-e635-4093-94ad-1f3b1b6bf4bd",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "fd5d6360-49d9-4c4e-ab79-67462a207e53"
        },
        "item": {
          "id": "e09f275e-13a6-4dfd-8efd-e913dbbee400",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "cfde72e3-64c9-4c92-965f-928ce628d0c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc2fd2c-495a-4eac-83fa-baeaa4bde6aa",
        "cursor": {
          "ref": "35bec95d-4a23-472b-8e38-1b7d4771b71d",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "135a128c-aef1-4756-a165-800b5e653b73"
        },
        "item": {
          "id": "7fc2fd2c-495a-4eac-83fa-baeaa4bde6aa",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5f55eda5-5288-4c3a-b702-fdb3e5887816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e67ecc9-419e-4c55-b65f-b6447572397b",
        "cursor": {
          "ref": "9c9545cc-2bca-406f-999b-f23ae31ba353",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d2fb2313-7060-47a2-a91f-8706d7fa75f9"
        },
        "item": {
          "id": "0e67ecc9-419e-4c55-b65f-b6447572397b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "06599f02-dc72-45e6-bb16-aff09ab686d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d44596-8a2c-4946-8823-a2c9dd008c2e",
        "cursor": {
          "ref": "6ecdd0da-8f5b-4d1d-82b4-1cd3f7ed6741",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "9e71c022-03c8-4d90-8414-521fe722a2b0"
        },
        "item": {
          "id": "a0d44596-8a2c-4946-8823-a2c9dd008c2e",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ac5b33f7-2cab-47b8-a9fb-605326d25302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7bf5a4-f8e5-4e5c-aa47-93e36a8fad63",
        "cursor": {
          "ref": "5f736322-62c8-4be5-8da0-1a9d1de49a7d",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ff1e4b87-7579-4d71-911a-7384230c56cd"
        },
        "item": {
          "id": "0b7bf5a4-f8e5-4e5c-aa47-93e36a8fad63",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "0449fb8b-aa28-44e3-94fc-a373ddb9f129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c44a25d-0dd8-4b1c-bd8e-15b3340fc807",
        "cursor": {
          "ref": "3a8439ae-cc10-41cb-8c9d-9d1502add562",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "9e5b77a9-ac8a-4e19-a0df-b5e2cddd162a"
        },
        "item": {
          "id": "2c44a25d-0dd8-4b1c-bd8e-15b3340fc807",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "55f7669d-b661-48b7-8e96-4e8d29640806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133c49b1-e89c-4442-b1f8-47343b8902e7",
        "cursor": {
          "ref": "fc6535a9-e8ba-4727-959b-f1b994d6d0b0",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f152aa9c-4f35-499e-b03c-13e5103d5b4d"
        },
        "item": {
          "id": "133c49b1-e89c-4442-b1f8-47343b8902e7",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3ac7e5fe-2bb6-475a-987c-82f6288d3017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a22d59-140a-4337-9d66-92a1615ae022",
        "cursor": {
          "ref": "2588f6b6-d513-4c0b-a8cb-2238fdb78a73",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "bfcf89d8-3f5f-4d74-8ce5-6562019dd881"
        },
        "item": {
          "id": "93a22d59-140a-4337-9d66-92a1615ae022",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "d147a5b9-8597-4b01-8b5c-312e7ddc0f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eba03777-1613-4a42-9fce-bb759db6fd7b",
        "cursor": {
          "ref": "41125650-22e8-49ac-9f48-3eca31d708ec",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "9eb96629-3860-460d-865b-e9a5498c22ed"
        },
        "item": {
          "id": "eba03777-1613-4a42-9fce-bb759db6fd7b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "59ca5a29-744f-4477-9134-715677bbd879",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a42f1ac-120f-496c-936a-07fa5c0479d5",
        "cursor": {
          "ref": "203d6712-c6fe-484e-b6aa-c7088a2e244f",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "6f43b423-3239-4807-a6b4-9b5152c1a995"
        },
        "item": {
          "id": "0a42f1ac-120f-496c-936a-07fa5c0479d5",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2e312cf8-df43-4031-b169-c66866e46778",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5828e346-92d8-4ac9-8101-44062e264fda",
        "cursor": {
          "ref": "315b4bb6-6b85-4dc0-a116-4cab36334f1e",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "662199aa-01bb-41f4-91ff-f3440be695d0"
        },
        "item": {
          "id": "5828e346-92d8-4ac9-8101-44062e264fda",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "dabe989f-0a02-41b0-823d-8eeb092c94dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6596e063-b1ec-4b08-a836-2db05fa952b7",
        "cursor": {
          "ref": "bfba1817-4a8f-47ee-94c0-c4207740e928",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "95b5c781-2956-416c-8bb4-42c3d8239175"
        },
        "item": {
          "id": "6596e063-b1ec-4b08-a836-2db05fa952b7",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "75571d33-cd53-4986-9441-73a24e18f585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ce58cc-6be2-412e-a803-cd52dcb6e97d",
        "cursor": {
          "ref": "18bc6f49-5451-40ea-901e-53518984fb79",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c297f677-0518-4e91-b4cf-022509d2a696"
        },
        "item": {
          "id": "73ce58cc-6be2-412e-a803-cd52dcb6e97d",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "a496b899-4a3a-4ee3-aba5-d3113d00df6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96362d5c-9847-4c1b-b609-45361d1ce0b7",
        "cursor": {
          "ref": "2e223d7b-6428-465b-8e58-eaa3af7a96d2",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b709cc46-d239-490b-a6ac-a7c19d048a2e"
        },
        "item": {
          "id": "96362d5c-9847-4c1b-b609-45361d1ce0b7",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c46cd5b6-4750-4bf2-9e6d-8b8024139a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a9f189d-9c62-4762-b8f4-e64c4d716cdd",
        "cursor": {
          "ref": "97537c7c-94ac-4bb4-b61d-701367753175",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "fb5e684a-b01c-45e3-86f8-6e50c113dcd8"
        },
        "item": {
          "id": "0a9f189d-9c62-4762-b8f4-e64c4d716cdd",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "900b7dd9-dde7-49e2-9640-6e71ae01d581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c38608d-a132-4b17-b8e7-1746922b49f0",
        "cursor": {
          "ref": "b67e603c-84a8-4829-b277-d6f51e152ddf",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "22ae0afb-1d48-49b3-89ec-995b8fa74b8b"
        },
        "item": {
          "id": "9c38608d-a132-4b17-b8e7-1746922b49f0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "579fe955-8e5b-4370-9870-e70cc5ac7626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7fb1148-1bed-4544-a79e-c63be671c472",
        "cursor": {
          "ref": "9a643dcd-32dd-40a9-b2ed-7bd3f36deba2",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "c9c59faa-2c3a-41c4-bd7d-dba7cfee299a"
        },
        "item": {
          "id": "d7fb1148-1bed-4544-a79e-c63be671c472",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "22807c66-9fb6-4eb7-8339-cc249c758246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b80ddd-1400-4d8b-962f-afadfb5d4898",
        "cursor": {
          "ref": "5b6e8a75-b871-4f97-87e1-3ba9c4016a83",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6492160b-d80a-4f8d-8956-5fd570b3f6ad"
        },
        "item": {
          "id": "38b80ddd-1400-4d8b-962f-afadfb5d4898",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "e82badcf-51b1-4664-8140-db056e114d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ddd2806-bd16-4610-954c-6db5aef9792a",
        "cursor": {
          "ref": "df757994-21f5-41f6-9dad-25672fc363a9",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d25ab15e-eb19-48e7-93b6-a4db68edb831"
        },
        "item": {
          "id": "2ddd2806-bd16-4610-954c-6db5aef9792a",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "2060efa6-7185-4c9b-be34-06ccec6a290a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113d0ec5-69d7-4fde-bef2-905c92788bf3",
        "cursor": {
          "ref": "f4f2bf70-dbce-4eaf-bba0-b10aea9c331f",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b264523b-0720-4140-a137-bf2d5847b970"
        },
        "item": {
          "id": "113d0ec5-69d7-4fde-bef2-905c92788bf3",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7910fd59-2105-43c8-a897-29957f9e93e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbbdc966-5e21-4f08-9c49-776b2dcc4366",
        "cursor": {
          "ref": "ce26f6b9-2ec0-41da-9433-2b36b1e02880",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "bd6ec8a4-339f-4bb2-bcbb-ef22e69976af"
        },
        "item": {
          "id": "bbbdc966-5e21-4f08-9c49-776b2dcc4366",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "807fea29-9a0f-48ef-adcb-d084777508ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40cb44f5-3b06-4343-abff-1543680e1ac9",
        "cursor": {
          "ref": "8ec8256b-fa3f-42c1-b81a-9df92abd6209",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2958690c-9026-4463-a102-07650e09037a"
        },
        "item": {
          "id": "40cb44f5-3b06-4343-abff-1543680e1ac9",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a062e742-4b63-48e9-b069-a46cafa6d747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd694153-9abf-4df4-b7a4-efaae1a680b6",
        "cursor": {
          "ref": "5967f320-6a9b-4655-b547-4e084a2f0de5",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0d09121f-e410-41fb-a2ea-4981f97ea482"
        },
        "item": {
          "id": "dd694153-9abf-4df4-b7a4-efaae1a680b6",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3a1af165-a1a2-4873-a1c4-ce07029e3e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17fe825b-583b-48f5-b861-8e981625f921",
        "cursor": {
          "ref": "7f95f581-3102-407f-89c0-9beb8df7c8ce",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "bac5af95-995d-48e7-b837-b9de3f64c657"
        },
        "item": {
          "id": "17fe825b-583b-48f5-b861-8e981625f921",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "81091112-35ee-4e4b-b8d3-f16f25ae4d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b5b5e9-7adf-4892-988d-554eca45917b",
        "cursor": {
          "ref": "f4ed00a6-602f-4b9e-ad9b-e10fc75da699",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "020845c2-54e3-4f3c-8797-9de70847ff66"
        },
        "item": {
          "id": "28b5b5e9-7adf-4892-988d-554eca45917b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "835f27ac-43ed-427f-a28f-ebe8df4411b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc9c7e9b-b686-4bba-ade6-e6b666d266a3",
        "cursor": {
          "ref": "80df099d-ed24-43b3-a319-2a62f6170784",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ee990273-2ae3-46be-b78c-5f2e0320ac17"
        },
        "item": {
          "id": "cc9c7e9b-b686-4bba-ade6-e6b666d266a3",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "4ff9a9b9-f23e-432d-99ef-ffd5f44fd5fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "196d1a60-15fe-4524-83d3-cf934f92f890",
        "cursor": {
          "ref": "37f93a36-c192-46de-88d4-c6c6a6ddfebc",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f6666645-9331-4f1c-9814-39c522118bc3"
        },
        "item": {
          "id": "196d1a60-15fe-4524-83d3-cf934f92f890",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ea05a45f-a66c-48dc-91da-b972309f7d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980d05b3-57eb-428e-8f90-4b4e1b1ee36d",
        "cursor": {
          "ref": "82c88e7c-2c99-4745-816f-cfd3c1d72493",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d689eed3-5e59-414c-b9aa-63f670bc3549"
        },
        "item": {
          "id": "980d05b3-57eb-428e-8f90-4b4e1b1ee36d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b469a600-8816-435b-9078-a54c13f6760c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5c3f0b-5f67-43cc-ae7f-9c6fabe89757",
        "cursor": {
          "ref": "c89371dd-fa44-44cc-b002-eaaa25e26699",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f475401a-4f47-4b9c-9067-7db34064b9a0"
        },
        "item": {
          "id": "ec5c3f0b-5f67-43cc-ae7f-9c6fabe89757",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "6424bf15-188d-4ffd-b1f5-2a6223e450b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "166dbe53-7e0a-4da8-a24d-3c6fb5902b35",
        "cursor": {
          "ref": "e34315b6-1cfc-40e5-92cf-3231cc68054f",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "21e40ccd-efc1-4616-bc73-7b3f6af1d23e"
        },
        "item": {
          "id": "166dbe53-7e0a-4da8-a24d-3c6fb5902b35",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "89368327-4e2c-47a1-8bd0-5e2b17d8492b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d163b75b-f839-40ff-a45a-5524934cbb45",
        "cursor": {
          "ref": "8211d767-442a-4c11-ab57-c07f74a41fdc",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "93ba4422-b220-4b23-9bef-b106e247fbcf"
        },
        "item": {
          "id": "d163b75b-f839-40ff-a45a-5524934cbb45",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "c435fc0d-38fc-4237-8752-348706b239b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa071048-abe3-4efc-ba73-423d009c91f0",
        "cursor": {
          "ref": "da123714-c4eb-4a33-8612-e739203a8bac",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "be53cbc7-0726-4dfe-8128-fb0e4a4d1f02"
        },
        "item": {
          "id": "aa071048-abe3-4efc-ba73-423d009c91f0",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6a51b66c-d0c8-431c-bb91-43be2a03713d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffd19451-8c68-4d07-91a6-b36aa19572ea",
        "cursor": {
          "ref": "7565c61c-e690-436a-ba8e-fec6b6ca1b4b",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d7a7f169-bc87-416b-b2bc-07fa52f9f5f1"
        },
        "item": {
          "id": "ffd19451-8c68-4d07-91a6-b36aa19572ea",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b0e151b6-8d21-4b50-a268-1d10025a254e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bad2fd4-4311-49c7-b7dc-549c8fc6a29c",
        "cursor": {
          "ref": "f766b6bd-b0d7-4068-b1f6-823175853617",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "be71793d-d7ce-43c0-ae04-92c55848846a"
        },
        "item": {
          "id": "5bad2fd4-4311-49c7-b7dc-549c8fc6a29c",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e9623bca-192c-4b71-997b-1ea4adae083a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07cbe051-8621-44f2-86f8-d8f75312849a",
        "cursor": {
          "ref": "632ced14-fe85-4c01-a97f-b21ee9737aab",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "776a1564-0fae-4731-9750-30bca5c8ad97"
        },
        "item": {
          "id": "07cbe051-8621-44f2-86f8-d8f75312849a",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "de7ced78-edb9-4ce0-ace9-b1f16003aba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aede0b92-1088-4e75-a243-e7389ab415ac",
        "cursor": {
          "ref": "cf3402d3-64c3-4e85-8d03-e480bfb3c8e1",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "e11dd025-f91d-402d-b1bb-b747e4a93683"
        },
        "item": {
          "id": "aede0b92-1088-4e75-a243-e7389ab415ac",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7a894d46-3cf4-4ac6-8948-e0fb369dd451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9df2c04-cdc7-4228-afd9-f0015e24b333",
        "cursor": {
          "ref": "f0ae6630-fcdc-4832-be66-91850840b9c3",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "984d12fe-9dc2-4467-b327-32059654c1d3"
        },
        "item": {
          "id": "b9df2c04-cdc7-4228-afd9-f0015e24b333",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ec845225-32b3-4350-a256-a00a9ce76ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca209063-7151-4411-bb45-125732aa007f",
        "cursor": {
          "ref": "d278ac69-91e8-4579-b4d2-ea1a5fb960e2",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "9473bfc3-1d75-4340-94e0-380038fb5633"
        },
        "item": {
          "id": "ca209063-7151-4411-bb45-125732aa007f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0ce6d01d-21c1-4ea3-8feb-d3159fa56d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a02423c1-21be-41ee-85eb-20ff2fffc682",
        "cursor": {
          "ref": "4e150c58-2856-4624-82c9-fed7c9bc5fb9",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "272a5229-b868-46bc-b0ca-dce4b7b5fe72"
        },
        "item": {
          "id": "a02423c1-21be-41ee-85eb-20ff2fffc682",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5bbffa20-ddb7-4fb5-9a8c-8723a22866da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f951af9-f9f8-406d-af7f-eb1d6278a4e0",
        "cursor": {
          "ref": "8a96f229-5da7-497c-a99e-d1320d6a9df9",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "0c7f3c3b-7ab9-4a04-a38c-8896097d9eec"
        },
        "item": {
          "id": "2f951af9-f9f8-406d-af7f-eb1d6278a4e0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a9c4a1f9-0876-470b-984d-a540b51ee22a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4cb043d-b140-432a-b8ed-13e8383fa745",
        "cursor": {
          "ref": "c4da786e-0583-4f90-a9e3-79520e1c68a4",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "fbefebd7-f0b2-47d0-af55-0f937c56e063"
        },
        "item": {
          "id": "c4cb043d-b140-432a-b8ed-13e8383fa745",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "28b4475b-8a96-45fe-b85e-ad8e736e4525",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede6a763-1223-4d9f-927a-9b8eeafbed41",
        "cursor": {
          "ref": "cbb173df-9718-4c25-b62a-36820dfaa98d",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "f00e24bc-9945-4e59-806d-7e103accb52a"
        },
        "item": {
          "id": "ede6a763-1223-4d9f-927a-9b8eeafbed41",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d216e9f2-2047-4b36-9b27-c67512b5a028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27b4266a-1fa7-4aea-a036-f402a15c9c33",
        "cursor": {
          "ref": "cf16c345-2647-44d6-80d2-e0e85ab60ffb",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1c93fc97-e08d-426a-a386-9537a9f8d09e"
        },
        "item": {
          "id": "27b4266a-1fa7-4aea-a036-f402a15c9c33",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "39addb70-5707-4587-b0b9-c776a8d8aa8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33562fd2-aad6-4e0a-8bbf-064551d17065",
        "cursor": {
          "ref": "5f0d7438-5cdc-45ec-a52c-e63bec912135",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "4cea5371-64c7-4400-9292-339cea7c27b3"
        },
        "item": {
          "id": "33562fd2-aad6-4e0a-8bbf-064551d17065",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "4c7d27d2-ecd8-4d96-9512-6a0ec8e5783c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cdb2319-805b-4d98-98d8-017c9e57583f",
        "cursor": {
          "ref": "f568e284-fd16-4717-9549-fd34f87666a6",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "2d97fd4a-5a8e-43a7-9457-336b54186dfc"
        },
        "item": {
          "id": "1cdb2319-805b-4d98-98d8-017c9e57583f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "85708401-f3c1-4003-8404-7c3a088b1139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3406723f-1e28-42c9-a25a-26d9069f8de3",
        "cursor": {
          "ref": "0c6c7586-71a2-490b-b294-fc109a1814aa",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "257dbbee-d962-4c2b-99cf-50b4dc56d320"
        },
        "item": {
          "id": "3406723f-1e28-42c9-a25a-26d9069f8de3",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2468a516-dc18-49a0-b7c5-c0f78f3cc090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14804c5b-b72e-4925-b310-982ffa825b49",
        "cursor": {
          "ref": "7292741e-43e7-4009-9a08-c152430c306b",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8a5a1e84-5348-469b-aa5e-041f4cdc8cca"
        },
        "item": {
          "id": "14804c5b-b72e-4925-b310-982ffa825b49",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0a4e1385-d961-4692-a7d5-68ccdb177900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05d6311f-0cac-4d9b-93c5-b1a1f47e8de2",
        "cursor": {
          "ref": "bc3dc487-9009-4181-88d2-023f7ca0a93e",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "774dbc84-c288-45c5-b90c-07075a51ef4e"
        },
        "item": {
          "id": "05d6311f-0cac-4d9b-93c5-b1a1f47e8de2",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c82a4db3-81a1-495d-acb6-bd5110e0d64d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e44ee0-3d64-4774-9624-32d2c8db8ff5",
        "cursor": {
          "ref": "a7f94e39-0380-4d9f-9098-07f3d64cc3ff",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "2638d930-12a6-431a-911e-74ddccddf1fe"
        },
        "item": {
          "id": "62e44ee0-3d64-4774-9624-32d2c8db8ff5",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "5ff83ed5-8964-476a-9a85-521663114501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67c88ac-de48-43eb-a4f6-697d2f517b0e",
        "cursor": {
          "ref": "dbcf8771-1bf2-4e60-bf11-f16c1328a63c",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "bb6d6aab-7cab-434b-8e7b-346d5368e591"
        },
        "item": {
          "id": "e67c88ac-de48-43eb-a4f6-697d2f517b0e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "05d2ff86-47bd-4c62-acd8-938d615f76b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "180416ab-12a9-43c4-9e68-ab758610741c",
        "cursor": {
          "ref": "05c7e260-c5d0-4ed0-b5f4-6de0d1be9a8c",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "24198e95-2059-4322-ab46-863fcce21c37"
        },
        "item": {
          "id": "180416ab-12a9-43c4-9e68-ab758610741c",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "62213981-3bc5-4add-8990-d145e7eac2cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11c0c744-7870-44b7-80ef-7826a2d0cb6c",
        "cursor": {
          "ref": "9c450b3e-6d43-4525-b3ec-dae02c5584ad",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "76c5d00a-a256-472e-8bb6-57f5f93ee81d"
        },
        "item": {
          "id": "11c0c744-7870-44b7-80ef-7826a2d0cb6c",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ad9de5db-2abb-4f9a-8c47-7f237ea258d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7451dd4a-ab70-4679-9aff-18efbbdb5d02",
        "cursor": {
          "ref": "9c7fb8a8-c5c2-4611-a59d-526e97a25b0c",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "126b5ff9-c188-46e1-84e7-b84601e73748"
        },
        "item": {
          "id": "7451dd4a-ab70-4679-9aff-18efbbdb5d02",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "de4a402a-056e-4665-bf44-11e387f33f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f76d14-1888-450e-9dd8-f45651d31f0b",
        "cursor": {
          "ref": "5bf2ebbd-cd39-4744-b147-dcf3f69c2720",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "62ecb52b-d383-42a8-a570-540fbe9ce8cb"
        },
        "item": {
          "id": "b0f76d14-1888-450e-9dd8-f45651d31f0b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "db7d27f8-e90e-4044-9205-6a348f1750ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c77d5b-b695-43f7-a1f0-1c872ad274f4",
        "cursor": {
          "ref": "f99ffe4f-99e5-4e0b-a31b-479a5a65b4f5",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "80ca6224-226e-40e3-b5d0-73ff02a99903"
        },
        "item": {
          "id": "64c77d5b-b695-43f7-a1f0-1c872ad274f4",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "8096a5e0-ba82-491c-a347-ba11acdf82b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f88323db-db52-4621-8ecf-17c22e69ec52",
        "cursor": {
          "ref": "d87dd565-a1cf-4d69-a3f7-bfc46060996f",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "2aac6556-620f-48e0-aaf3-71c372ac1851"
        },
        "item": {
          "id": "f88323db-db52-4621-8ecf-17c22e69ec52",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "47b95c36-acf7-4087-aac3-c89feb916a58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2271f9f1-8a2e-4b6b-b5b0-0d6afcbc5b39",
        "cursor": {
          "ref": "9618a023-ebc6-4031-a142-f838238313aa",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "8ae9351c-29ac-4af7-b9a8-31b52897803c"
        },
        "item": {
          "id": "2271f9f1-8a2e-4b6b-b5b0-0d6afcbc5b39",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "0d5550f4-14ff-4dfd-b337-09e74b3b378c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b7d4909-1780-423c-a849-ef4c4be9616a",
        "cursor": {
          "ref": "2dcd0770-34f3-403d-8ef1-cb3aedc3ad77",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "ba437d96-8d80-4395-adbe-1102b607c206"
        },
        "item": {
          "id": "3b7d4909-1780-423c-a849-ef4c4be9616a",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "d9f00152-1f8f-46bd-9af4-a039de064462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "267ff5cf-1009-4f9e-a550-86db2e08fe7c",
        "cursor": {
          "ref": "d6111917-e391-4d28-9cf5-7bceb9feb6ad",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b242dbf0-d0a7-4215-9bbf-ae567a3fbf09"
        },
        "item": {
          "id": "267ff5cf-1009-4f9e-a550-86db2e08fe7c",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "b8d1e10d-38c6-44eb-b0dd-71dd76ebebb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "266a1c25-61c9-4ac1-98bd-f97f04c99207",
        "cursor": {
          "ref": "e3d10300-97ff-4362-8a83-19467b1e9659",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "139018ad-ec8d-4103-998b-2272e0a3c36d"
        },
        "item": {
          "id": "266a1c25-61c9-4ac1-98bd-f97f04c99207",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "02b13892-0537-4267-ac09-86ab86942e0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca12118f-02da-4021-b5f7-34587b3d089e",
        "cursor": {
          "ref": "953768f1-bb52-40d1-b068-96fa9c2d93a8",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "305909a5-a16c-45ca-8216-f4ed110f225c"
        },
        "item": {
          "id": "ca12118f-02da-4021-b5f7-34587b3d089e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "a6c562d9-05ad-446a-8d5e-8782b344d9f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8107d4d-7f63-43da-a2eb-2183b3707ed1",
        "cursor": {
          "ref": "73d2b7b4-5382-4b40-9385-c915d4e470de",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "76cf24a5-dc7e-49d8-b8fe-20d093ab595d"
        },
        "item": {
          "id": "c8107d4d-7f63-43da-a2eb-2183b3707ed1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "85325a68-0b27-4a66-b8b8-d7aac10fba6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0f33ee-afa6-47e2-9cdb-35e04a35c2e6",
        "cursor": {
          "ref": "424880df-47d5-47b4-a626-62ed92555aee",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "173984bb-ec54-4ce9-8c6f-7bcb6bba8084"
        },
        "item": {
          "id": "4f0f33ee-afa6-47e2-9cdb-35e04a35c2e6",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "46fc05c0-cca3-408e-85db-7112aa212b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c18501e0-9552-4f1f-b874-4a6883840879",
        "cursor": {
          "ref": "e424b2bb-bdee-43a5-8588-aa4f4b20ddc1",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "c760de5e-f49c-4cc3-8b76-7bb6054a68bd"
        },
        "item": {
          "id": "c18501e0-9552-4f1f-b874-4a6883840879",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f988cfdd-93f3-4a27-9bd4-7a19e949d7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f04aa1-f51b-47bc-b601-3d9a4d993665",
        "cursor": {
          "ref": "90d4e64f-257f-46c5-8662-0f2b56fa6781",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d9e8515a-fb21-44f4-814d-0f6cc77f7a63"
        },
        "item": {
          "id": "94f04aa1-f51b-47bc-b601-3d9a4d993665",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e553443c-d36b-45c1-bf23-4b672e2058d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d7c57ff-8655-4ac9-870f-cffa4f73d012",
        "cursor": {
          "ref": "cfe3d27a-2620-4ca4-bee3-b070430c41df",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "a114a6c1-1857-42f0-a11e-5f325c1fc6c2"
        },
        "item": {
          "id": "8d7c57ff-8655-4ac9-870f-cffa4f73d012",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5d9f1d78-04dd-4843-91c8-1757d7df6c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44a02519-1a4f-49f3-9f24-cea6dbf49532",
        "cursor": {
          "ref": "ff26e8d6-2b31-478e-83f4-97f0a5984e85",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "aff434ac-5ea1-49be-9359-bc6a19c90ab6"
        },
        "item": {
          "id": "44a02519-1a4f-49f3-9f24-cea6dbf49532",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "1ac151f8-5697-4dda-a2c2-7999f36f674c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2684d618-cc6e-40d5-82be-e5276f81f124",
        "cursor": {
          "ref": "6cf37928-7cb5-4281-95ba-8dae2d040b7e",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "a554471c-8d92-4394-aac1-b39dcf178bc4"
        },
        "item": {
          "id": "2684d618-cc6e-40d5-82be-e5276f81f124",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8bfa6932-93ca-4b13-8e12-bab0dd4b8276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fc9573b-1713-4b60-aaf4-64ba73e61f46",
        "cursor": {
          "ref": "87b81f9e-206c-4f84-a656-180dcfc16c03",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "f7d7e38e-ca77-425c-8cfb-496f44140042"
        },
        "item": {
          "id": "7fc9573b-1713-4b60-aaf4-64ba73e61f46",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "bd0ac40d-d08c-4ef4-a389-1cd032130a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07266b3-8575-400a-800a-dee3166a02a8",
        "cursor": {
          "ref": "225249d3-2ae9-4f32-9ac6-426916b5cb16",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "f7bff079-fb95-44e6-a891-a4359e7ba5e6"
        },
        "item": {
          "id": "c07266b3-8575-400a-800a-dee3166a02a8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "706cce2a-120c-421b-b3d2-4bb53e09522b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8311a494-a25d-4289-8973-cb9fc6331d47",
        "cursor": {
          "ref": "82f43e73-7494-4253-b261-76f580ca2de9",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "31a4deb1-81ae-4c3b-845c-648cd80d733c"
        },
        "item": {
          "id": "8311a494-a25d-4289-8973-cb9fc6331d47",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1f4cd812-668b-4975-8a71-3cddbd03a31d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cdcfd01-a7d6-481b-b98c-06fa69572bae",
        "cursor": {
          "ref": "ff303ebe-2ea8-41dc-a919-f564d6e5663d",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "b9ad97c9-cb65-485f-a97e-a8da0e7df464"
        },
        "item": {
          "id": "4cdcfd01-a7d6-481b-b98c-06fa69572bae",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "0baec0d7-2773-4995-baf5-c969c1d3fc65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91929e91-c71f-4a20-a436-542527a71107",
        "cursor": {
          "ref": "4ad5d55d-e6b3-4cd3-913c-be1feef3cf0b",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "4d5bc7b0-23dd-4159-82ee-d84ff13b11f1"
        },
        "item": {
          "id": "91929e91-c71f-4a20-a436-542527a71107",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "cbc2aff4-76ce-4805-920f-3f8fb2d8eeb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b7a72ff-4521-437d-b774-3749d0dcecf4",
        "cursor": {
          "ref": "14ef5aad-f0b3-4572-942c-3c1ac9f653c8",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "30047b67-0859-47b5-aa52-1fb46fa49fa1"
        },
        "item": {
          "id": "2b7a72ff-4521-437d-b774-3749d0dcecf4",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "bacfbb74-c60d-4b74-8c45-262921e01a90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc23f72-07af-49db-8989-e461d5197547",
        "cursor": {
          "ref": "193bdb81-7917-456a-bbff-afd8a4e9691e",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "d4f882de-4698-4a16-8a03-72e714cae34d"
        },
        "item": {
          "id": "1bc23f72-07af-49db-8989-e461d5197547",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "cc8430b3-e943-4216-aa2b-c2f3c4cb98c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c041f8fd-10f9-43d9-9164-a91effc98274",
        "cursor": {
          "ref": "c1931847-7f56-404c-a3d2-3351d64c3506",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "6c26ffa8-60ec-453f-827e-4d6d50c18872"
        },
        "item": {
          "id": "c041f8fd-10f9-43d9-9164-a91effc98274",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "c02c3497-f262-4f79-af78-e2b6466cfeb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4ea2d3-1991-4293-b70c-49a67425f05b",
        "cursor": {
          "ref": "f7abd4f1-916d-4cad-8b15-10a642d9026e",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "e485760f-e214-4f48-8313-af8ae0aefa20"
        },
        "item": {
          "id": "fc4ea2d3-1991-4293-b70c-49a67425f05b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9d42145a-3f9d-43c5-92b2-10509e73bee1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1fa024-33fb-42bd-9daf-395949e659bb",
        "cursor": {
          "ref": "c2054aaf-2cd1-499b-ae74-330688d93f85",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "df729114-a99c-4f81-a245-aa6f2eace14a"
        },
        "item": {
          "id": "ab1fa024-33fb-42bd-9daf-395949e659bb",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "68e0fb8e-88fa-45f9-a38c-98050b8b285b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dd1316d-c9fe-4c9e-a75c-b9b83426ce82",
        "cursor": {
          "ref": "5f0140ea-390b-49f2-ba29-e7a2bfa0b330",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a6c7c5d9-feb4-4dea-84c2-760b95a0250c"
        },
        "item": {
          "id": "9dd1316d-c9fe-4c9e-a75c-b9b83426ce82",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "0d921115-8c89-41ee-8c18-6c734e5944c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e0cb0c7-e3b7-4f56-909e-7fe830aa2509",
        "cursor": {
          "ref": "3529d9ef-bee8-44bf-880f-2481baa669f6",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "cf0485c0-5450-471b-8b7b-d6433bfab765"
        },
        "item": {
          "id": "0e0cb0c7-e3b7-4f56-909e-7fe830aa2509",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "933109b6-addb-42c7-83d9-4498fbf78185",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c9f55b0-b063-4ecf-a77c-f81e3d5b790c",
        "cursor": {
          "ref": "d4998687-aa6a-42e4-b459-9d9c091f0040",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "30c089fb-094b-4266-893b-c92d781256ce"
        },
        "item": {
          "id": "2c9f55b0-b063-4ecf-a77c-f81e3d5b790c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "e763f547-9c74-423e-8b64-baf8b3a9a190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37219ce-df4c-4daa-987a-c5d14e694dfd",
        "cursor": {
          "ref": "14bc9c39-7f5d-482c-ae89-59f21efd4539",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5c2aae4f-ec57-4eab-8936-cfedeb964ebd"
        },
        "item": {
          "id": "a37219ce-df4c-4daa-987a-c5d14e694dfd",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "ee339ca8-5360-4e50-9f0b-40655cba2437",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9b1c4e-f748-4bb6-b897-3cd15cbadb37",
        "cursor": {
          "ref": "d4e15e18-5cab-4521-ae04-7effc77b3352",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ed867a47-6205-4cff-8465-87912d09aeff"
        },
        "item": {
          "id": "6c9b1c4e-f748-4bb6-b897-3cd15cbadb37",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2a5adb6c-0b57-4379-85ec-ff6dd4e158ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be41fca-25d9-4eb9-b756-dfc8cfacda74",
        "cursor": {
          "ref": "081bc652-2660-4085-a7dd-94213a6e7445",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "4d771159-df0f-4294-b830-dc645c03ae0f"
        },
        "item": {
          "id": "9be41fca-25d9-4eb9-b756-dfc8cfacda74",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "65d5e29e-9eac-42d8-ad7a-014bddf88058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f020fb26-6d3f-49f1-94d2-1766e531629a",
        "cursor": {
          "ref": "d09f0cc5-4976-40e0-8d3f-25c54a260d8c",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "161ea0b2-349c-488c-b7ef-da7702e36af9"
        },
        "item": {
          "id": "f020fb26-6d3f-49f1-94d2-1766e531629a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b597df6d-9fa1-4d0f-b56d-6caba86e80a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d4786b0-007a-40f0-a959-1f817f1692fa",
        "cursor": {
          "ref": "8d1ee676-ae7d-423a-b904-72036a166cf0",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "6a463110-76a4-4118-bdcb-16323c242c55"
        },
        "item": {
          "id": "2d4786b0-007a-40f0-a959-1f817f1692fa",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "94b0df5e-d080-4a16-bafc-6218c28cc002",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcadd16e-9300-4414-a352-8e0fdb31f9a6",
        "cursor": {
          "ref": "4a7aab84-bf53-462d-b573-39a1bb0beb96",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1834c1af-64ee-4601-aff9-23718b96446a"
        },
        "item": {
          "id": "fcadd16e-9300-4414-a352-8e0fdb31f9a6",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "cb42f41a-4de5-4424-bb11-a3eceec33c6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3e9ca60-acaa-4ae5-97d3-62ce5e59d615",
        "cursor": {
          "ref": "6d2a69db-9306-4b8d-852d-3758d785600e",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "a0dc1ea1-8f1c-44d0-9d9e-e50d48fc4494"
        },
        "item": {
          "id": "b3e9ca60-acaa-4ae5-97d3-62ce5e59d615",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c0446b20-5896-4533-bb46-11fff7760c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb71ac4c-67d6-48a9-b424-55dfc14c0277",
        "cursor": {
          "ref": "48be1549-87c6-43ff-bdd3-8ac1ecfaa3b0",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "689e94b8-4d84-4c75-bdef-e81281dc9c79"
        },
        "item": {
          "id": "bb71ac4c-67d6-48a9-b424-55dfc14c0277",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "82714523-9186-47e5-bfe8-c0efb1ef8295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80559990-77bf-429c-82c2-2ab0af076df2",
        "cursor": {
          "ref": "c4e0a11a-1a76-475a-9072-0f11befc6284",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f43aa934-7703-46ef-b8bc-4e8e5c2bac72"
        },
        "item": {
          "id": "80559990-77bf-429c-82c2-2ab0af076df2",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "24798c14-4eb5-4684-bd73-a7279bac2ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f312e1-c5ac-45a0-aef5-554cc6a63d95",
        "cursor": {
          "ref": "4cdcc758-cb2d-4328-a548-7ad2022073f2",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b8bbf6b0-4c1c-475d-acc6-d3f2911cdeec"
        },
        "item": {
          "id": "d7f312e1-c5ac-45a0-aef5-554cc6a63d95",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9296bbdb-ca10-45a7-8aea-3077487384ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f23ea40b-9694-4445-9716-ec4cdbd2d9e7",
        "cursor": {
          "ref": "809b54cb-d403-407f-ba2a-f5063c043923",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3ec7ba2f-0e12-4b68-ba7d-b3438b0cdcde"
        },
        "item": {
          "id": "f23ea40b-9694-4445-9716-ec4cdbd2d9e7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "23b3fcc7-22ed-4ac7-8008-aede38132b22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ca992a4-dd09-4d50-ad52-2dd4f0807b7e",
        "cursor": {
          "ref": "71f4192b-29f5-42e1-a1e2-aa5798f84047",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "02f2e425-48f7-4084-8ca3-e4344cc1aa2f"
        },
        "item": {
          "id": "9ca992a4-dd09-4d50-ad52-2dd4f0807b7e",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e306c5e8-28a0-4628-92e3-7c97e5ac9b98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "d482faba-ec2a-493b-bab9-8a02e0d2b5ac",
        "cursor": {
          "ref": "080d4134-e5d3-4492-90e4-da8c90647deb",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "03ff9c31-e3d2-4d7f-8b85-354d74bfa39d"
        },
        "item": {
          "id": "d482faba-ec2a-493b-bab9-8a02e0d2b5ac",
          "name": "credentials_verify"
        },
        "response": {
          "id": "2db74502-f6a6-4ede-b7dc-0afd6c9c13aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "3b599feb-24d3-44d0-bc1d-ea048c9e3a1e",
        "cursor": {
          "ref": "c750a9ca-436d-4d36-b97d-6603cf7d642d",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "e9049474-f8e6-4f2b-af13-4301428474d6"
        },
        "item": {
          "id": "3b599feb-24d3-44d0-bc1d-ea048c9e3a1e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "5df2b92e-7213-404f-ab1c-c83db2c989d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "a3daee55-4073-4cc2-b73a-2bd214231fad",
        "cursor": {
          "ref": "b0661c37-8c10-410e-b705-0feecfd993fb",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e304c6ad-285a-4fe4-9059-ad320eade022"
        },
        "item": {
          "id": "a3daee55-4073-4cc2-b73a-2bd214231fad",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5e6fe418-4b3a-460c-97d8-c912b9794c44",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3daee55-4073-4cc2-b73a-2bd214231fad",
        "cursor": {
          "ref": "b0661c37-8c10-410e-b705-0feecfd993fb",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e304c6ad-285a-4fe4-9059-ad320eade022"
        },
        "item": {
          "id": "a3daee55-4073-4cc2-b73a-2bd214231fad",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5e6fe418-4b3a-460c-97d8-c912b9794c44",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067db581-f833-4d51-89db-ff89ab87fc66",
        "cursor": {
          "ref": "d32c63a5-f95e-4b6b-b882-8c4466c9656f",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ea8f8154-9851-4928-b67e-ea9a8109ae74"
        },
        "item": {
          "id": "067db581-f833-4d51-89db-ff89ab87fc66",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "089c1fc7-6b2a-45b2-8482-e62c9dfadda6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b99cd75-c775-4430-940a-de1905383634",
        "cursor": {
          "ref": "f8a8523d-2303-4ebc-a997-b29918bc48f2",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "69f68a77-b01f-436e-9bbc-279d21101440"
        },
        "item": {
          "id": "7b99cd75-c775-4430-940a-de1905383634",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "5be66127-78b4-4e6e-93d0-c85762334560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}