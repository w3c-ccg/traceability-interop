{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "5c7c510d-9323-4462-a345-65c6cdf384c5",
        "name": "Clear Cache",
        "item": [
          {
            "id": "9737a977-810f-46e7-b1d9-16c76455e3e3",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "48f63be0-9514-44f8-82af-db7b2c628d48",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5a83fd30-ac64-418a-960b-be8d274dc195"
                }
              }
            ]
          },
          {
            "id": "a8bd6b61-a815-45c2-bd92-8b85eaefff07",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f3553b1d-4789-42ce-9931-4cbc8d3a8947",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "7e4ccece-a873-4537-adb1-6a8efd2564b6"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "4a271eb0-c617-44c7-a070-643065a615cc",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "726925b0-5810-43aa-833c-c7365bedb037",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3815f3f7-9139-4dfe-9483-7a1126edc635",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f983f9ba-5d22-4eaf-8522-8d4b7cb9f83c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9dab0ea3-377d-4b4d-b0d7-ebae39bcf754"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e2e5a1c5-34ac-4436-8db0-cca3dbabd3c5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0d002acc-db77-4c31-a805-cd9ba443a0de"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "21ae229c-3339-4f92-989a-4852d1d650f1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "076aeb51-18d6-402a-8b4c-17214a44736d"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1d5e7735-b861-42c8-8e43-08b9060322dc",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "59a837d2-001d-429a-945c-7adfdf4e638a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a7aefe5d-f1ea-415f-9f94-0a06e9dc8c3c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b37e86fb-2ab1-442e-8981-ca262a4340e4"
            }
          }
        ]
      },
      {
        "id": "e532dcc0-11e6-44e4-9b12-345d90f077ad",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "5b084b14-cc2e-4d43-9606-b459143b8655",
            "name": "Negative Testing",
            "item": [
              {
                "id": "38372391-0a43-42a0-ace7-90916a304665",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "da1933d1-ec3b-48b4-8e7e-54729a4f4fb0",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8614f17d-42d1-496b-b5b0-e4d8b504907f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5ecaea61-f023-44ad-aede-bf3ec37723d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1194d526-e035-4038-a049-35dc7c41d8b0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d56bb1-e9d1-4fe9-a277-9b974aa4e3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c495741c-fac1-4815-a2b3-b241021d9ffa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15599633-67f0-4271-ba71-36dd6f95d9b8",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67634a3a-ef78-49ba-97d3-03070fcbe985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d7277a2-6fdd-4504-aa05-2e6fa67be88a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5dec9fc9-fbae-4725-afe7-35f216a1ea54",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "35de7bd0-9c37-45f2-97e5-dc07984165d0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc235aa-397f-410d-8d24-5f31473c7d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06701dd7-0e1d-4938-9831-7e3c6aafa740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eaf5669-3e41-4b80-afbc-8adf1a7c0890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dccb94f-79e1-4669-9299-f034b81d44d9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d1d8e498-a9b6-44cc-8c33-d1f925b00a6f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "20b4ac14-20e9-4c9a-a329-4ee58e7fa7e7",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2fd0879f-d99b-47af-9261-6c4467f1f39f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "88b964d8-a83b-434d-8837-e96dd272bc7a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "24f34d46-b493-479b-b368-732dbd53f7c4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5afab364-19fd-4e64-bf9b-12f976158be3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7cd6f8e5-0e8b-4489-818c-799fd83e4742",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d049bb4f-b9be-4f5a-9f02-5d75ee89804e"
            }
          }
        ]
      },
      {
        "id": "06e2a15b-14ca-41a6-a87d-dc971e0b3e6d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2d66e556-0a41-4bac-8797-9787e15cfdf9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cfcd606c-73f2-4fa1-a48e-544ad7a34520",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a01d2b2c-cce7-4260-9847-154bcd37decc",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a264c8e1-268e-4a10-94e5-949d9e70bf19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6364ef18-1585-4c72-a22d-795f4ff595ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1aef266-5d27-40a9-b223-56bcd8189f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7f2a978-8893-411a-b286-1c5793c89c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e773a8-8b49-45c6-bd05-af456f3c3bce",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b74dcf-7408-4b48-8f9c-0a7315c82587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf8da6d9-17e9-461b-a547-c92920c4329b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fbd6641-fc09-417d-a20b-af8c0692a746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20c7bd38-861f-4b85-ac31-59272c75e8e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d16d98-c9f0-4933-9a56-b0c0a245813e",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6391062a-c33a-41e0-9e13-1463508e09e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bd1bf64-8182-40b8-b61d-97f1bc1f59bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3a69e46-44df-4872-b0ab-52d810315a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "78835e5c-2361-4378-b5e8-089ae4963629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35b80c74-bde2-4b4e-988a-caff299c6c6e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb68978a-b033-4fb8-962e-507e4030595a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "592632e5-dadd-48ea-8c3e-87ae4e6f7aa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a233a7-8656-48e5-b4aa-8c384a711b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e16291f6-5418-4903-be01-e0ae9b90ab79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8400e047-a8ab-4976-8668-6c1ce539e5a1",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd97bfc7-406c-4991-b0bc-de8f4279a806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a932fc17-e30b-4c44-993d-cbedb820d43f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7cd0130-fe98-4ebb-8105-542bb71c7496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca8be972-7ef0-4106-a345-b84ab084d50b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "092d245f-d0a6-4858-aa64-cf73a1941c67",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09150514-38be-49bf-a84c-314ad54ba72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1411f0b6-aecf-4b8c-a1ba-cffc47b45f9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98634794-e571-4af5-bd00-5bc460c2a340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "069866a8-4ad5-48cc-9890-b326e6d9c118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec3d49a-8de0-4ae6-b2a6-add82c30a0b8",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6164bba8-506d-4055-9cf5-e71006da9128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd64d2a-52e5-4f59-a980-79ba9184d99e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6877f13-cbb8-4b5a-8732-c3dd9befd52b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3af5f142-835d-4a87-9772-08a5f47e1b66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d461ac77-7b8c-4973-a4b9-ff24bd6f099c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a197e5-a7d7-4b54-859e-17a84c3e2cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4a37176-384c-4874-bf20-1ed8bbb209c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e36957d-b895-44d8-a342-44f75eda320a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7deaa51-d7eb-4af8-a0e4-9e8b3f24c9da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53877dc2-0351-4902-8f27-6df899fc5ed0",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e11f07c-16ff-419a-bbf0-1b502bc62ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "134dda12-6b77-4ed2-830e-08ef3bfb499b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76d14584-c0b8-446f-bd29-ff12b2bebc04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5ed71a3-9b1b-4ac6-9a42-2ae5a46757dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5582c7e0-d23a-4f9c-8fbb-810f93177d00",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cceb384f-bc27-4d6c-9b38-5cc2bef6fdaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "438800b2-522e-4d8c-bbb0-c36f024e4c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7c73ca4-e309-4f9b-82f4-1a6c70ea2b86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36a36b94-8fcf-46e7-bb03-b5e7b3c9f5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1324a372-9540-4f5e-a1e0-5987a46a4af1",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f2b366-867d-4e51-8eb0-7c168b9a59d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb9e43ed-3b78-44a4-85ff-a4846d8e6fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b005d8f1-4c4b-4699-b957-4bd66c30d9f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9dfb731-d444-4bfb-9d0a-ddce5141f96d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78bcaf1-4348-49f6-b55f-e07a7e9954ef",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5acf7e22-459f-4ac4-9434-1f1f74f4763f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c90b8b89-1640-4a76-a891-dfe619488604"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d627d8-ae51-431b-993f-998ac139ba75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c5508eb-745e-4849-976c-e4f6a5e170bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d6e52b-c9bc-4bb8-8551-c4d1d5699da7",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59024e84-bdee-43bc-bc94-c1db977b20c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54b5488f-e231-45bf-8eba-67fb075601d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3cae016-932f-4791-892f-a8c45179694f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ae7aab6e-eb80-4960-8050-f851a56c2673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbce7cc8-89ad-4b51-9517-f4f6a2630f5f",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66342f90-a89f-4302-9daa-8f793a3cbb12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96400577-eb18-4ea6-94a7-fdd319767921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6ec6c2-51b5-4a03-a4b2-d9077caf7ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59118ae7-859e-4a5c-9b56-b6cf1fc1fae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4414cbc-379c-461c-9fa1-d1875a3e21e5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c86138bb-9581-4d76-bff6-c9aa8b12fdce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f98efe5-195a-425c-adf6-cafecb88625d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c0bab6-5c64-45a5-bf73-981760891590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e66b197-9a67-4f1b-b1ca-a5ed108fea66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae18810-abdf-453b-ae26-1f41e3c41e95",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c676c482-81ec-4fdb-b56d-fec17a94953d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "053c9a1e-3ecd-4802-b548-87a36857c94e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81232f9b-0615-4eec-b5c9-594c75be1bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "148e09c1-ab29-4a24-ba18-ee827ad3992e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860663f2-6e48-463b-8482-e9051738f75d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38489369-5a65-4ae1-91d4-78ca93f83a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c920f32b-0d4a-48af-aac0-e601a54567bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7c85766-268f-4a05-8857-8fe6c8bbcdca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61a86120-6bbf-4150-bf03-03daa76659da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8cf2f6b-4f0a-45f9-a9c4-9f0d0c35133d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a8a775-259a-471a-9bf1-c10d26465344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5f0b47d-e769-4e20-8f8d-8fa60299c1d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e48c885-b8a1-42e9-8f25-722acedb703a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "05a5ec91-32a6-4b45-baed-2a0b2eaed513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f0775aa-4d64-48a4-a8bf-526a01ac2f96",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a6e40f0-51c7-43c6-985b-365975d719df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d06c816-6b52-4f9c-a661-166883a2cc54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbb5bf6a-3b88-44c3-8963-9deebcebf66b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ffe91b7-fb68-47da-b3f7-95a66f2e67d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4b641f-81f8-4ac9-9a7a-5c5a66836d43",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7622fd09-bdfe-4650-90fa-57bd583a1bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe6414f-1666-4667-8eaa-ce5687b51c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a666e2ba-ce3f-475b-a511-f7d7bddccc4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "476236a9-ea89-4579-a47a-3437223d1a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd69c06a-9bb4-404d-bd87-9bb6086cc4af",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6348629b-989c-44f0-917f-483001790779",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0630b092-7d02-4078-9f3f-f7a55962e39c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "322e9945-17a4-4866-9d35-9aff24b268cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a56a4569-ac27-4bed-94f6-ce95b5ea1028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d51479-4027-4bb4-8a00-2005e4ad2089",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f31c16-0ad6-4ce6-8134-8026f60459f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fa81680-7a4f-4635-ad8a-0858faca47ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a80bce2-abc4-4602-a9d8-2a94247535c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "418e3bbe-0bf2-4501-81e7-c7dcabffba71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa17ed1-0c09-4d77-a9d3-98b0e4f5e500",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ecc7e5a-3f2c-4fa8-9a63-bb7716bb9b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc4187b9-6588-43a8-9766-889f13097abc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e715f21-e92b-431c-8521-e0f14e629c8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "342a6662-c152-4218-8d5f-b3399b934d43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "814d1357-d960-4e47-8334-c6d4403aa7cf",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e8be52-08fc-4270-bd81-4a63fb7c8baa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "904fd88a-cbaf-4065-824c-2d09f8fcdb73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a46637-1daa-4d98-a187-c537097268a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c19db1e-f9e5-4c63-8cfb-2020c13758d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d18d43c-f4f1-418b-a287-d88586126399",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8faa4093-3c6f-403b-abfe-69e00c9fe483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e528242e-edb7-458f-9189-541b0cec2a26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94edadde-188b-42ab-9daa-b1f42c5f275c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba1f254-443e-451a-8eb0-16b51f7d83bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdf99361-1649-4164-bd7c-51b41dc856da",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1bc50e-16fa-48b9-8fd6-78c72122ce90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16ff1b10-67a1-490c-9bc5-77fbb5b4e83f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf53513-eca2-4999-9c07-0e5e99470b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f382d263-cf05-48fa-9167-9e598b9cd8d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e30ac23-d529-4c73-9dc6-a4234615516e",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48e78a67-31c5-4adc-bbb9-5ac3925da3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c748a903-43a8-4f79-ac17-fc3169567d73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3b55e6-432a-4699-b8ea-9b9cc5eda7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "59bfae9a-d980-4584-997e-f85a05bbef9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080b2fb8-f15a-49d5-aa0c-733de633a6e1",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dad92c4-ec07-49c3-9fbc-3fc7b512f504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a12dbaa8-0324-4255-80f0-371ba36fbebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43d9822c-7db9-4c00-bef9-dfd1ad1ff6b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "09efc2a4-1384-4b9c-9de2-2c995ede6d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6ac00d-fce1-4846-bc16-dee94f7532f8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9965a17e-0e83-45a9-8332-ba7fd490a7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "062abe50-309b-4098-96f9-92892d62b293"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "756a7e21-ff3a-448a-b509-dc6892e7e6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b87d499-152e-4268-9675-1a984c3d2e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d2fe905-f277-42bb-8939-c54a1303a69b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3192c40-ee5d-499e-9ae9-62f2e9651ef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04e46e96-bfbb-426e-8778-8b002e0989c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06bc6e0-6545-478c-8c51-48ddc9d64920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "72f22a9a-be84-4bf0-96f6-5ec54efe5838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6148508b-d198-4745-b3e4-5c633fd9113a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "915fe07d-b0e5-410a-b8a7-92810fc0d653",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f21b4726-8faa-4ad3-8bdb-522533c46c8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f45de6-bd05-47b9-8f8c-289ed94f2c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "859baa22-37e8-4d04-b22f-ac4fda318edd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a7a0ff-4fdd-47f5-bd52-47236df347a2",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52811955-e232-4ebc-b80e-bb1abeacac4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee5487c-6501-4705-b320-8ae9fa9c23c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16ef7d32-0bcc-4ca8-871b-2b60ceb70f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c8d1e23-8e84-4b27-9c58-640f48d47054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b06f22e7-865f-4a81-9658-e95c3f3d5008",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "992cae9a-409e-4c0c-9f81-d8120265ab4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f4a2ba2-3b2c-4a53-b21e-995b8b7684b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93441c8-0a28-4cd6-8615-71cee6279ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc86ff66-e7b1-4a18-ac73-6fd7b7c13676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9014f0af-a650-438b-9e00-ffa24bf8c1f5",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b95d7ae-ad1b-4240-ac49-7f155ce397b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19301531-b519-4eb2-8c5b-faa82657b158"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc5130d-b953-48f3-bc45-fb5d79826d71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d1a61bc-61c4-43e4-9e6b-e273ee60f56f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cfd4fe1-ca4e-46db-83c5-314a475b24fa",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "940f8c28-0923-4afa-92b9-0d4369557697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e13ca37-ef62-485d-bdd1-2261dfe3c154"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "441d12fc-09c8-4618-a5f5-b0b24480644c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "edb44dd6-7f24-4f60-b056-da43b5347edc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec9bcf9f-80ff-474d-b45f-1433e05b8a49",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7262fa8d-ce0b-4919-b102-fc2a4650749c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c57e5b8-664d-49d1-8ca8-1e4be31d7436"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0c3c6b1-349c-45d7-a6d5-ac18a2c31fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2082d144-1cae-4264-9986-2a0de0e46804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c63bdd9-3084-4437-b509-b96d029a0d7a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "061b7f9a-13e1-4993-b2b0-289188256d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d5a4bd-0212-444b-ae3a-330fffa210bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eda302b-9867-4be5-9e4a-e7d6b151ee5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bf5338c-b0ab-432c-9cdc-b465a6019251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3d5d5f1-9c38-4c65-a61a-138a357280a3",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ecb3626-e153-4e3c-a896-96f4d7434cd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db5b9723-b906-4e41-8e47-7930e45d15e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ecc05ad-7042-46d7-8d87-3a2ec3700621",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9fc794c-1a78-4d76-925d-c4fdc7739433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f20856-115b-4e2a-8293-7cef5ccf3379",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c58108a-340d-467a-ba6e-039e9abadb02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "681f7ee2-380e-4ee8-8797-c09264bf365e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8325219-e2fc-4d4a-8dab-50ebcd0f697f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0124a128-e1e5-499e-9812-6b2bd5b195fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354c419b-72de-44f9-a205-3d00b49ee4e0",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb269a7-0221-4dbb-ae31-39db12f3b03e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaed4ab8-57f2-492f-87fc-e9172444b2bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a9b9cd-63e9-40d0-87ea-48b10dff1641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a0ca375-87c3-4609-ad75-8a2b00a4f3f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "713b4a12-0f0f-4e17-9ee4-464f6804c277",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "179cca9f-fd42-4005-9f2f-e25433ffef45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "073dffa4-326a-41db-98c6-fb316f9a41fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59abf13-4888-4166-86ed-f7fda9d41598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "6bcb825d-5bb0-4bb8-9c49-b52cba005a57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5610b92-b256-484d-88e5-9d331aa8c41e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3a845f6-20df-494e-a0bc-3bf1e0b830a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bb5e97b-e74f-4e1c-93ca-79f988256746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05799f2f-7780-4e47-a330-c6d23a586002",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3a712b70-7161-45ec-ba6d-ae7324b1d9ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "522942dd-7474-4630-8681-57aaa011653a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ee0078-168e-46ac-b5bf-6fc4c3fd1132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a19a67fc-26f2-4e7e-a8c4-add2f563c7ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5c7eec-76e6-40e6-a86f-d433a9aa5302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d49631c5-90ec-49dd-b107-e0dc1262ce4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce2a3e1-62c1-4946-9f0a-24d5a6c67d0a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3674b7c-5d99-4e7c-bafc-7f4c7b4a23d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e42e15f0-42d5-4561-9d22-664ee239a8e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1551da3c-c8dd-4755-b3af-1153ca928fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "04b02e5d-8cee-4a9a-9b3e-1b17665c5cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbfa0fec-f3dc-4b22-b9c1-a772da11b2f6",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "223cc1eb-718d-4625-868e-a1ef288dae04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "829b4a55-0dfc-48fd-810c-8385715e4a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9a109a-aad7-49e1-9cc9-69c5a2b7bfed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc8b182d-b7c9-476c-9d2b-d908703843fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aec20b3-680f-4088-857d-3cf6ef3c5b94",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "929b1147-05dd-45c9-bf26-3cf936122c54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1e4cdad-a3a0-43a3-8387-89cccfda7d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb5178b-a1a6-4570-8d72-991a4aadfdf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bf5df0b-e547-4dd7-806f-ab16b74409ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8172c2cf-a6ae-4a85-931d-965bdba35a9f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12680950-ae06-4c55-bfad-4b3124a91200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "682ff15d-a17b-40b1-9213-e1525d72afc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "def1f633-cc88-428e-8765-472680d350f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "755f92e0-fb35-4a7b-b521-94ef88b14742"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2cc3322-fb0f-4d20-8f37-f4e70e869e70",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa31002-b825-4e5d-b490-ba6803787060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c165aa-3a56-44ab-96f4-5d0e5cb70d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18d7a825-0ffe-40e5-9795-017b6472ca02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0af939dc-7d13-4a01-92ef-d405e5767cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e64fa0f-bc73-4d3f-b4e9-79fac6a49841",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa24d051-f2d4-481f-aa82-475b17683376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac880fe-b91d-4f9e-b5a9-a57a32e18817"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1393a52-5dd5-47ca-9a1c-dfd908eaeadb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "23989475-a355-4fb3-90e9-0ccef724261c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e421ad44-d9ce-482b-8398-8c018c616f45",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca575255-cfa3-4b67-87ea-e5a8b1e42586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0d7e915-28ad-4c47-8d44-b88e2bdf535f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd920f55-de52-4491-8ad3-884376499d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a36b427d-b6ad-4e89-af4a-23471e3928bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2b340c-78a1-442e-81e0-4e38d20b3c23",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26beccd-933c-491d-9a44-b735e199c656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63c1048b-b42a-4a34-8bf6-a26735bcc427"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef69754f-fb6c-4bd7-a4ed-445a76ac933d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "522476b1-869e-4090-85c8-8e2949a94600"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18bced4f-edf5-42e3-b093-0ac291eb4cce",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a395f95-ac96-4c95-baed-f88cb15c922a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41d055ca-e898-4451-b2e7-b0eb6ae9f18c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1606fe7c-49e5-4153-ad62-696803d1ae9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e44fa9c9-2fdd-4c4c-b4dd-e5e52ef37003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c0d9fdb-0c95-46c3-8265-8727d3c110e8",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf881fdd-aece-4612-a699-9e1881b19dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "215cd074-f3f8-43ed-a521-a3bfbf649987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449f2fdc-cbc4-4faf-a9f6-7821850a583a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f553670-fea5-419c-96b1-0b7e764d6bb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414aa223-2b51-42a3-8d9e-9909f14e3717",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c4e96f-fe37-41b2-9a87-918d7f6db6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00366faa-045a-4963-a688-4c934b3a57c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e10106-ef44-4166-85b4-18146f5b5520",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "095ce6eb-2b10-4f4e-9b45-976bfa2fce3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "146b2414-1624-48db-a7c9-5ef66a9802e8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b63be53c-d8b8-4a40-9a65-edfccb40af7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "575968aa-ef74-4e28-8437-0ef2538c2537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8c4dbf-a348-4d21-8172-1df5404e8a2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "60e7efad-cc3d-44a4-b192-fcc540d35511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aafdf825-d9c6-4142-84e8-0a055a04d2b2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "216825cc-8251-43a3-9d3f-0cc12cec27db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96ff8be4-49d8-427a-983d-e0981e9bcc6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95e38d9-8269-4600-a4f3-7a3a3b4abf21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e3eeefa3-af57-40a2-b1a7-4161d95ae631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84599521-2647-4b72-97e1-8b9a449c1082",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3b1832b-a2e1-40cf-93e8-86d980c47719",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01366129-6f85-4c89-a726-049cb2806752"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b9716b7-c1a5-44b0-b5f7-13ef949a75f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4b97bd1-244e-462b-a88f-e3a8dad4a152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f07fcf0-4b1c-441d-ba5e-66c1a98e3182",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6b4c2b0-449c-4298-bd7d-187884dc2ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb6d2322-7507-493a-9ad7-22671b73e52f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4c5bbb-2bef-4678-89a9-c5b34f741f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bca5fa2e-005e-4bd8-87ed-39e84d844b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a36f576-e821-4717-afac-9f7a1da458db",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6f7da9-2eaa-40b1-afeb-0efa70f820f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e53b49-3d45-403e-8840-1ac5b135a13a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33ed7006-a14f-4570-846a-b5669c946c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "972bae3d-74f8-4df6-b874-3686c9d3bff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54dd03a-f62d-4180-95a1-83061183c2e0",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "772c26c1-fa72-4ba4-9dc4-f0d5ef9e4117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06024af4-67ab-4ad7-b017-1d00937f9d9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f562a929-7fa1-401b-94bc-e919a8b5cb23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "54d78931-2775-4ea4-b57d-033926bd44e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3a7052a-5194-4dda-99a6-7629bdddf477",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5356a1a4-820f-461b-9336-8615e85ab572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e69f1eb-f1b7-44e0-92b9-304ce9659027"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c4916e4-efb2-44d6-8e63-4b41bacbe108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b11913e6-e3ea-4d8a-9d38-f590d82dc15d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78e0ff7-72b0-489f-804a-6b1455c7e1d6",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fe6c0bd-ce23-45b3-a6df-3adf7ad1e4e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e5bd8f9-273d-4190-b886-f1806e1e3ed4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41bf8a7-957f-45fd-8978-473e7db1785d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "af76dd5e-dbce-485a-a9e4-ff21e103e497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18dcba65-8e0c-4130-bb2f-b64fcb619073",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b98d5b-0301-475e-8bd8-d37ce4669916",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80397bba-3721-47da-83f0-90409f303501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a816a16c-ed99-469a-a01b-8510203c8744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "96b52aac-352d-4559-9394-c35fcc939c16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c31865-1c03-41b3-9113-4a8f75131943",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "825cb6e5-a25d-4063-bf97-97639e32c49d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2acfc39d-d8b6-4fb8-a518-79e0a8264350"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908860ff-fe41-4dcb-ab28-4896d3bf1eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dbd08fb-07b6-4840-9561-f28ccd99cfb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebd8cde3-8c8a-4c8a-bb8a-280a8cd5e446",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad85a77a-5d4a-46fe-96f2-fb67b6741d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f291f55d-2d60-40fb-9fbf-8bc7e48acd25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3d83ed-45a6-465a-8239-78c7fd7eb6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "22b0a76d-0daa-400c-a032-eb45ea349b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a2d73e-589a-4557-99e0-47d9e1fb212d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9b209b-f568-4b3c-96cf-6145acdc102d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e136b0f8-7909-4439-9cc5-7d4defa9e7cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3539811-306a-4c44-82a0-95b851cc8013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2303c066-47a8-40bf-8e70-5e17393f5fe6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "797a32b8-68eb-423c-9429-86086d926e09",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae3c37ef-bbf3-403b-a341-abaaac156bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd2dc2d3-4e20-4d11-af4c-bc8c6b96bd30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1e22ab-4176-451a-bd2e-571bd5d3a6d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bd38c9d2-83f7-4422-9439-64aa9c93761b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6eae6f-0a40-4dfe-a714-1bdeac612214",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f003151c-fd18-44aa-9b44-82a3c3f5c7b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50c7350f-8214-4637-a03d-5bc9eab43c1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8ba8ebc-ea7e-4431-b946-61b385af036d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "a0276f91-0167-4344-acc9-d37d4e55e42c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2999b1b3-6a70-47f0-ab95-c46deb6d8a3d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7466f884-3de4-48ba-8723-e8a89c8c8ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b832f33-a4c8-48c5-8a46-fcbc61a668ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84a36f4a-c1f8-4938-8037-44dfcdadf875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "21c3437f-07ee-479c-a61a-434e4f0ecf94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f870b3a7-4111-4da5-bfd3-ff6bdf02e91c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e03ab7-bafa-4b49-9e9d-88b1e05b4333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b7b559-17bc-4aca-b632-beee268cb7aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b6429e8-5030-46a2-a9e9-7982af1b9f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fa0e0ac-f2f4-4eb4-a23d-2824ebd3fd76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02607ec6-d9a8-43d3-a247-69caeb18f2c7",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "112a3f32-90d8-4ef2-8977-90e3cee228a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7495f1e-146c-4f92-9236-741b90328dca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30d786f-e25f-4605-8156-fd6322f52894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8120b1b6-ae2a-477d-bdb3-fe8e99ef3887"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5239c0a3-1eee-41dc-b925-c3e8c866e2e1",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74199ac6-1f3e-48d7-86a4-8ab7e5038b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8dbc3471-f659-420a-bc5d-c5d52355c713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c66dd63c-0eec-4c7c-8e5c-132dcd2097ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54cf40ba-fc50-42ff-9a92-b506826e6038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb64155-62e0-4f96-be37-d157ae99fe52",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "854a7608-32b9-4f85-a651-83709711c0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "525ca3d5-1e29-4ded-8ea3-81802000f5c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6d54c5d-b4ec-425e-96be-594f6c7cedd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7604211-e247-4636-a7a7-2a2afd55ee02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801c6e1f-82ef-4878-a1e5-7858ecc3a0d8",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dba5ff3-30f3-4e32-acfe-4a6984ad88ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2629404f-7797-472a-9b31-e08f835fd382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82699701-4640-470b-8d52-be3b6210df12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9b104370-23e5-4990-8734-2fb3589e61a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b2e9ba1-ba57-40f0-b1a4-5b31499053f6",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32cc6a79-1c57-466b-b454-3c50c37716ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3463c882-e7c2-4af5-9070-dd42a2e6785e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5dc5b86-fc23-4e70-ab76-0542c6e7b090",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9bd3e7e-0d22-4783-84d8-3578e26ade84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73fa99b1-26ef-402d-ad7a-d8d664fb74b8",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4967dd16-f37a-4082-8ab3-bb3dc0fa923e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f061227-ee79-4ae8-ba70-6c7d0bec0bb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2eaa143-2bc3-4d03-8efc-e5dcd8dba9b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b8ec1c8-4c8d-4ac8-910b-783917be74b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d477b69-f75b-4d36-b2dc-28e359453214",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5cd9bd-80e2-4f12-a3cf-9941a30c0e7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49fb605b-5999-4151-a716-75ec5311e301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88194c88-2ec4-43f3-8f51-17cf78a6e56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3c7c251-1dbd-4b87-b05f-4421fde3be5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b38929e-0bd4-43c3-b6e3-5151853455dd",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b245a98-748d-40d6-a981-ffd7b7c769b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32460a0f-70c5-4ec1-93af-856253a9a386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8a94776-c0f0-4f2f-9b4c-5901bad4d262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "952466b0-0eca-4ac9-9382-08d91248e8f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420e0efd-67d1-4d50-abdd-f6a2bb1e4b39",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc530f23-c10f-4c12-83b8-a1a12de516f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "965eabf9-1cfd-4819-a0f8-37d058156563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a0179a3-b19c-4e03-a00c-099bd1055eb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f5f5542-908d-498d-86df-d7a1cbad6ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b564649f-95f8-4ba0-93df-bec58784c487",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a421a3-41c4-456b-b871-172fcb30c96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad5565dc-420b-4865-9a7b-9df88444b802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e073f6d7-8b5e-4a0b-a468-19b56fa3e787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ac4027b6-4f32-4666-8fa3-307c8132ec01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe990ea-8370-405a-a11b-4ab02ec52946",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32bced5f-042a-415c-bce3-832a2e6c7a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4e6fd96-ded0-4e39-80c2-54b8302f8041"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2defdec-b1be-4f4e-b1ef-fb2e975aec4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d18e40e7-1a74-4307-bd7b-64e248214df8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4f7c8c-856e-4c08-b15f-3fe744d732d1",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0b4b58-93e2-4793-9df5-65005837e4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3876f1f8-bbce-4750-8869-82171756a4d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02dfc51a-5ef0-4e09-a60e-d2c0ca9b83df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb229fed-4529-45c7-9c46-add178812068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88b0287-3d9e-4c62-b6db-e5b3534c7424",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f26b68cf-adcf-4fb8-91cb-d56dd6afda9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8192c0b-41e2-4a02-8816-8a3e82ada282"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630a74b4-01ba-4321-be65-a50c657690f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "48d16342-dc77-495f-b54d-8a92a4283dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fab47e75-6cb0-4820-b051-a412653e276e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50db1b04-8639-45e0-b90f-7e0c7d044423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4feff267-73b6-4581-9693-a907e00be3e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4093c8c6-9d8d-4eed-8ff5-d0a2a7ecef1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f29e758-e104-4e36-952a-4fcf40221936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4e27c8-9d95-4876-bc7d-8350bb59b12e",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "686c1259-e3e5-4c62-9812-f43d9cc53c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8341e6d0-3f2c-4783-8fef-32ec2740596c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119bbca4-40d5-4414-9fb1-082c5a8c4a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5c7c5919-ccf2-47bd-815e-ff7e7c326aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "822284a5-1e5b-449e-88d1-0d61bc44e60b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61eaa20f-01d8-437d-87d1-19d20abd4953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdae13d8-23bf-4523-81e6-8c1826684f1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "048e0d1e-0de2-4cc6-918e-f28d496ce641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "42cf62ba-2286-4585-983d-1aac29a6282a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dccc44a-28c4-4547-b6dc-31e294ae6e63",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89eb54c6-0eee-4dde-8dd4-ed653164f9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a39c56e-a979-40e4-a44d-50febdb7149e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d17677-573c-44a4-a6ff-97f58cd7c2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ee35516-3bf7-4203-b075-86b2a6e7e183"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c2b7e34-a6b8-4f3e-83a9-6c29d7cc42a6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ea1c241-1f9a-42c7-bf05-bf5610258132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cefb3945-35ed-48e2-9b6f-2e97e082d177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46cfb115-71c9-4170-a3d4-2da451070241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e2f8ff5-2a97-4358-b03d-f2946f4a9591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fff8cce-3103-4b17-84ce-1bf701c77ed9",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5226f059-7bb5-4223-97e2-0f849acb6959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e12ba375-240a-49cc-888a-a875d24e4a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e71fc33-6aa4-4c00-849d-b971eda8495b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a83f1228-bd3e-472f-a38a-341d217a31be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f58202eb-1765-4028-a336-2c927819baaf",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6e53829-789c-43f0-9108-c40091c6433a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1c6ca15-f910-415e-8b5d-5308a9e934af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc207170-017f-4cc5-9d78-f6014290332b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ee6c424b-23f0-4afc-ad8d-608fa77c31bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce391c64-0ecf-4852-bb47-296d3b8f2034",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ba06b8a-322b-43f9-90e7-0a2d6206a198",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6678c490-395d-40f2-a003-9ea7a2c17e23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c0c61d-c306-462b-bfb9-ccc7257cf1fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1668fd03-09fb-438d-bce9-9630a0732e1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "409c8eec-7e2e-461d-a46c-fcfb2f2391c6",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb89dca4-e55e-4e50-bccd-09bdce44f56e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "02e5ca08-16c2-4b85-a81c-77340f3a617e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cabbca1-5a95-46a7-860e-fea3c2f462a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7605446d-a368-41e2-b62e-52dc0b8e37ef"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a8c06486-c974-423d-9085-599b6fad9bc2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b11b336e-5553-4f6e-980a-9e0260384358",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f68305-8112-4b26-bbee-62b1af649c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd2a9b52-1982-479d-ade1-258c66eb8b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ff9dfd-7d60-48b6-b8d4-451babb328ef",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ad87435-4273-4bc4-88b6-60c3b4f16b33"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "37cf9e55-4540-482e-99d9-f1f416505c36",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5991f9dc-60a1-4456-88dd-c47cd7f261b7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "55b7d184-0962-4f66-8239-3ec7668915a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab8762ca-e9ef-4451-8410-62c9caac86d6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "431def81-8471-458a-91c3-59a68b8dd84c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e908eeea-004e-4c76-a850-d2ba5f0ed70d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e9d7118f-407c-48de-bfe4-3cabd8905f69",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "85dff602-ab33-4b9a-bee8-1dc437cce7f7"
                }
              }
            ]
          },
          {
            "id": "b61abf14-49a3-41c7-b651-64de5b7fcd0d",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f2629d57-b01d-4936-83a1-22e1cc16651d",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "00103325-c82a-4997-98bc-d4ae868c2abf",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5348770e-f6f0-4a06-a80a-0d346e442055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "346edb97-94e9-45c2-8f75-c6511118760a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e92991-db67-4ae8-94c9-383380028df6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aae5932-f73b-4676-9830-5bd3f185689b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6d7c3e2e-dccf-466f-847e-2b65a96a0837",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "51b91826-c4d5-4915-8e26-a15c75fca6dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bd3f3740-8916-4232-ba58-09e9afe3ab5b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "032c5fb7-2a42-4922-ae2e-418bf839f669",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5616f960-63e8-46a7-b6b3-e8a80169be03"
                    }
                  }
                ]
              },
              {
                "id": "ebe08454-d21a-41e9-a3fe-850f73024bb2",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "914fc63a-7a5a-4f9a-8967-7167df3ab9a4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "64bb4c5b-719c-46aa-aa55-dc7033ed6f28"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8a12ff3-bf2b-4749-95d9-b488af6d7eba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6c16a53b-d8e1-424d-8877-634c9a6eb1a3"
                    }
                  }
                ]
              },
              {
                "id": "04684459-2137-4af5-aa50-4365554b29d3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e5b6a56d-d940-4f73-a07c-f1342f56c953",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f890aa13-4f1f-49a0-abaf-122486dbfeb4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1d7458e-0aeb-4196-8761-2cda48ffdfc2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a76ec341-27dc-4331-8982-2909380511ee"
                    }
                  }
                ]
              },
              {
                "id": "368a1715-6f8b-447d-87b3-6562147d8ba0",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dc4d5fb9-29a5-4fba-8f88-4f47ccfb8e20",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7c1c615c-5052-41dd-9bb4-eb3271f2a0c0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "205f4a70-fffb-4b53-a7f7-e816dec54379",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "266c52f0-32dc-4494-be09-3b2599ba3035"
                    }
                  }
                ]
              },
              {
                "id": "a5fee4a0-47bc-4b29-86f8-8b4b966e326d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a483933d-ffbc-4409-a536-459732a2edde",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3ade98b2-c052-4a92-86e9-06513462995d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "256fbc2e-f313-4cec-83aa-ea28d91b9cee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "839ad6f4-e635-471f-8d63-ccbdc98f18bf"
                    }
                  }
                ]
              },
              {
                "id": "604a1c02-5350-42df-98c9-af89d3aaafd8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "da57489e-c439-4964-b3d1-a2934057e33f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "310bdf77-08bb-40c9-9a5b-e1cca4f78c57"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5026790c-496e-438e-ad51-c8160d12f47e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "364d9694-8d8c-4f6d-bda2-1959da68e903"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5ced2c2c-0f75-4838-ae82-8c6e5cb9b190",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "57064149-3d6b-46cd-99aa-298cb898d978"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0fec4452-5032-4019-8c57-06316cf4df49",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e98eee5f-7eda-46fb-a06e-449c8f0f8a3f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "80c25a98-e0e8-4578-a084-2ffd052a4cab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9cdd3ba9-a55b-49a0-9590-d6c6814032c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5d58a8c8-35aa-4b5d-88a0-7eaf67f40172",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8e43f502-9941-4e01-8feb-46013e68bd4b"
            }
          }
        ]
      },
      {
        "id": "d29b3f16-4477-49cb-a055-cc5ab122dcc0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0ed7ec0f-ec20-4206-a20d-9ffdc5acba48",
            "name": "Negative Testing",
            "item": [
              {
                "id": "922ad6a2-f648-4e6f-85f3-614b819a4644",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "664725dd-b858-4159-9f79-ef0cd74ab894",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a690669-0592-420d-b441-fc0a3b444fbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8be64c0-0606-4354-a892-4da0252769e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "094a5c2f-1b7e-48a9-a8ac-8b10c4ed1350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8805a83-8a02-4576-806d-dcc06ba3f101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "743adc0a-9e0f-4221-9ae4-9b68604ddf64",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4807bb4a-657b-4c1f-a05f-97ab8238c540",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d365518-de50-4fbf-b760-68f6ba710804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35bc041-0c22-4393-8e60-90f9898de0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b134ebd-68d3-41fa-8e16-026d1fe83918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "786a8b4c-3214-44b6-b32c-cd6a28f63273",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12dbfd1c-201d-4037-9fdf-909957b83e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11afa83f-d778-4432-aa1f-ae2ac67ad7e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eae1c61-8be8-4df0-abb7-bed1b1b355a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "32247569-5a7e-41c7-b9b7-573025ddaa2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73deebc2-8226-489d-b933-d0a50d7d07af",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcb6318a-997e-4d77-9565-ea981ee78b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eeff779-9919-491d-aa9d-654509d99619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c1295b0-785e-4ac7-b4a8-9f52841a32c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e4658be-d482-4082-9723-88bf4eb0fac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934a7bd0-1467-4b29-9d61-00b815bc508d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c426ca4-ff89-4385-af0f-e1f808853f77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3366caf6-537e-4f36-afe5-eb97f1e7b1fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2faf6009-08d2-48bd-98da-57b8d331b2f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2711496-63dc-4fdf-a91c-e95db73ac44c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "807c61c4-0354-4cd5-b743-2b1b545fc3d8",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b547b05-a81d-44c3-bfda-15ede0ed611d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3c8fc4-a0a0-414a-8b46-1876b7f50b31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4707c0eb-e059-4eec-8e36-4c7a409a2eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d12758f1-7925-4cde-bf0c-f73e44a7f7fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d17fb3ec-453a-4273-bab5-d694f4d2de70",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7eec4b4-aa16-4706-8f88-e492a2b2ef01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b138e78d-67f3-45e3-8ba1-f9ea1805261f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74db0218-83ac-49e4-a830-9f35993420c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5500bcc-3855-4c01-81f5-d0430556b835"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29646a9-452a-469c-a39a-469d9144bfe1",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fa5b505-122a-4957-8342-d47849ce966c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e3d227-72dc-4dc6-8331-179c7b3b1858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f1535a-5556-4160-bcbd-945298a7f0de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "04ebd240-795a-47b6-a403-6737d3f74f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a56a5a5a-eb16-4bb3-818c-1c2c4598e3a0",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19036cc5-09fa-4276-b37f-a8567270498e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f3f361b-239d-4a15-aa54-cb9e63adbb89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "081a073e-3521-45b1-a7d6-5f1effa7b4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "91fecedb-84f7-40a2-a85b-304bc2849c61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6e130b5-6a5c-4207-948c-c804517d31d8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3180b891-7e14-48b7-97ef-8f4e840c6932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f178d3-cb06-4c31-bd73-982248f7e42a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe3456d-3068-4317-b7c4-24ff095b28bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10aa6da7-5f69-459b-92b1-154dce1891e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59ba2468-ccc7-4c7d-b51b-fb3a0a485331",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9722fc61-bc3f-4e13-a649-a4a444f5748a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff6bf92f-0897-4805-8500-a8ce5afde3b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a83eca9-119e-4aa2-bddc-6cb6e049e065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "69246a78-99b8-48a7-a1c2-3a538bed4cde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23cfa2bb-4ed1-4f4e-b075-e621bdbb7321",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a8b504-e5d0-4f78-920d-4eaa726405e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b77a4d8-912c-405f-aff6-1e30c980684c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca2b3b0-d282-4bd8-88bf-fce45f1f5f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a6b50b53-8c73-4f75-b132-e51e41dcded4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de43a8d0-d7eb-44cc-a315-ab39021b472e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a13af11f-81b1-4f8c-b9d2-39a7a0242f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6407cbe4-9be8-449a-b8bb-70a573f031ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d3a12e2-7a52-45ed-a5a2-b147ec5ad28c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecd838ec-cdc6-4bd5-9651-c259179e89ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590ee5a5-9d3b-4acb-8895-de5d17af831d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c4974d-c6bb-4aa7-baab-f46d3c772011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6bb00773-d4ea-46e2-8836-a8c708fe700c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4454a85-2d33-4884-8bfe-a47e2d96d753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "66e2342a-6488-4a87-bbf0-ad6517849a65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c35003a-c03f-436a-af23-556d34f45880",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd4ac0f4-0454-4402-86a5-2216022d2ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbaa1417-f7a7-40f6-910b-4f61056409e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311ef903-b5be-40b0-991f-8cf9949dc5dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "63095d25-3000-4c92-a1bf-bc3dab2bc8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ae696f3-33db-458f-855d-eb915469f33c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b94d19-924c-42dd-94a9-9e8fbe4cc321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c6871af-c03e-4f66-91ef-a5cfa39abc7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c555f071-89a6-4336-9528-f647601e2ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e3bff9-87b5-449a-a7c3-e19bfcfb5f38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31ff8f78-8e0d-4107-bea5-e4b36afea80b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0ee2a8-53d7-4cbe-a271-d7c6881f4d38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38169a59-ea52-4f7c-8ddb-77fc0d5c288a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63912f21-83dc-48e4-8429-43cf8c312771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "34603b78-1a92-4128-8e42-bde5cecdd1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce1ba94d-cb6d-49ef-8a02-1f38d3550c12",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a115f3ea-4bae-448b-91ff-98a0a2e08f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d365e91-8abc-442b-8670-7d948dad051a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be204dff-ac2d-47a0-8b70-4a5975614363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2bdcf6c-9d7e-448d-8180-d416e60c4537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee8f19a1-6ac6-4b07-be4d-1d03a26c9ec8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0722e5cc-437b-4637-988b-8d8bca842a3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d180fdf-f63c-40ae-b2f7-63cf8b104dc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76431e7-4041-4b5c-9ea9-5eb504714d57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f96e6bd8-609a-432f-836d-64dcc279ad5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cefcfab-1d14-401c-8004-aae9e5d9483a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4ff573a-1384-44ae-909f-63ae9c7fb883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6fe4210-fe6b-497a-aad1-5a33651bcddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8a74c4-66c6-43c4-8fd0-a250bdd1fef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a359f1d5-b936-40fb-9e26-90c68143c76b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b563eac9-a361-4c38-8fec-cfcaaea8678c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2999e264-8d06-4251-8830-07034ed87cde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d076de31-43dc-4adb-8fbf-206b9c727d29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d352b03-db44-41af-96ba-35221f768295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "83d74615-d5b0-4892-a07c-a12806f472d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cc905f0-4672-4fe2-8a3d-bf0ac1336696",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "311ede64-ad24-490d-b598-12a12762807b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00a13649-a11a-418a-9def-62fc7e19948b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270e0f8b-862d-47a8-a42a-d9bedf252c95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "71870593-c3bf-471d-a529-bc594c1ba20c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd447ab-8d2c-4579-b980-095d7846712c",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5d2313-7505-46cf-9a8c-79cd54f84d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acde3220-c8cb-4be7-86ab-0128f845f67e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b46840e-898f-4313-aac6-7e3baa33110f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9242ccea-f63c-4eef-af0b-589cfc6d30d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da62a2e3-e8d8-49a7-8ff4-7338e02fdb44",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b3d8a5-30e4-4074-9548-33991f48a666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2adc0336-1f64-43f4-8611-123e20f564c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb0b4fc-d929-4781-91ba-5dbf8b020243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d406a28c-a658-49ea-b570-36a47eb0fc03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c64cefd9-15dd-42b2-9100-732d4a30ee39",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "243cc226-ec37-4049-b44f-f51fd7e05b5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a059cba-bede-4063-8467-9683be6542f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "994b471b-a607-48cd-b628-8fc13458be2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e02ddfab-0b56-4132-af73-495f13e4b9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed6f795-1276-4138-893f-97cbbd5c6e81",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e64f5fa5-a4e2-4d33-9255-27b910bb8b6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "943d559b-2c2c-4715-81a9-580c85450548"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "955aed8a-f7b9-4df5-bb61-cc25577477ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f906cc01-d29f-4bf8-9b37-73fa8e017a08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b698055-3685-4b51-ad2f-e24195cf8247",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65b8858e-ceb7-416d-82f4-e5eedaffd4b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b077ebb6-250e-4691-89e1-fbae9f6751ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dec2951-0ca7-4775-a15d-ee1de396e22a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d207523-adb7-4f5c-b042-ba588f67edd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb75c31-dd36-4da0-90ec-2d3755f939c5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad86d9f-8c8e-4fe8-aad4-f94a1247bc2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d860bdf-8612-4b03-adf6-7312ae8063cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c27e4a85-005d-44d9-aa80-51b078c40e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11cb0873-a313-4ee3-a225-fcbd8a03467e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ce2c20-73d8-49cb-854e-8b28af617d4e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e72cc0bf-8357-4708-af73-ad738323892f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "340ec835-ddb3-4e61-b80e-16947a8af521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b67c6895-b050-46de-9b8c-65cee804798c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a853e1dd-7206-4d75-acb4-6fedc40c727f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389f5cb4-8292-4101-baf6-876da7fce3f4",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bebdff5-bdc8-427a-8949-15a2e8a7fcdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d214f4c-be2f-4972-acf4-a0a8dd723fa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "439c88a7-71d6-4fc5-bc86-0af9d971fbdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b655b327-7e08-4ba0-9a6a-041356f1e31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c3c56e6-5914-4bb6-93ee-5c1f6c1ff44b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ec3267-3fe5-4ca5-b8c7-f3691b098cc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce8a7b7c-e0d4-4575-b8bc-4efdb134d2df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe44603-64e2-4d64-ac73-8c5d4e3753aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b9a6b2-5578-41e1-877b-ced481edcef8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa769d3-777d-4471-8bd2-65cfd0861ffa",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2526adcd-fab0-4904-abdc-853cc14bc483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0012d2c9-1ef1-4d42-8393-3f11c6f2d00f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "100702f5-db5b-406f-8b37-2dcff894394d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dcce12f5-3f7a-4ac6-827e-25b01e1a7f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25b5b50-e6c2-4bc0-97fd-31745ff66653",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f00440e-42ad-448f-adb3-b95a05b54825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e33c1fa1-98a0-4bef-86eb-a37db7f81971"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd4ec1aa-32d0-4711-b20e-b9ee25ead78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfd26a84-54dc-4e63-9967-0b04117f4240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41cc442b-aa9c-4b6c-b00d-0c97654d234f",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42bae4ec-9de6-4405-b23e-51f32778930b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03551982-a4d5-4396-bef0-33bec9fa77ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e031c7c-c5a1-478e-be6e-ac6a2f915e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13fc0c8e-d1d2-4b79-b735-363b95de075a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442d9465-db20-41ef-8201-4a00f17537cc",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a36d7a8-3017-46c4-b7a5-bf35abf3d7ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "730e3f2c-bb3a-463b-ba4c-e83064c1c5b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb17a8e7-e17c-4c39-8478-b0ce8faaba50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4525a6f-43ed-4ad9-b5e0-aa326a7743ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc703d4f-bd6f-4314-9a64-6ad4fde7f792",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e644a57a-4e8b-4104-8cc5-2e723dcf05df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c87404bc-7742-4e82-994b-252448e8862b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f70ac917-0f33-420c-a251-3b8a9e824a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "952987ae-f64d-4733-afcf-51c628235351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061a4493-bb54-4013-a11a-6a0bcb9ea537",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c08bc11-61e3-4ba6-a73c-52885518244c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f56635ff-05fa-4301-bbbe-030e17c9565a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7a8f1e7-d56e-4ef5-bca9-3d831edcd267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69a7386f-4109-4a7a-a7c8-27bf466563ac"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a3955784-26ea-4b3a-a638-0a265e6cda6d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7679af00-3860-4611-8298-458af8a51a57",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6907dce8-0b36-4b25-9d8a-ac726332fd7e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7a7f9566-5450-4da4-8eb7-5f8fa8f3f2b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "881342c7-7078-4f54-854a-2c4c33d87665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "577ee6fd-bd03-40d9-a90e-5927eefb482b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8196f1e5-a3e5-48a9-ba35-ee56308c1862",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3ca1a3a2-3bfb-4855-8bad-4696eca387d0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e09da2ae-13cf-4801-b412-1e23b4a99a24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f792684-c73d-41ca-8aa3-aeaeb1e0e826"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "925c39dc-7da7-420e-892f-1490fce57e5e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "66fd45c6-1618-4b33-80b9-3c9f0f8d5e63"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1384e6ad-a245-4644-8a8a-0a8e7954fc7b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0149d5a5-f1c4-4c06-800b-2b8c518b11f5"
            }
          }
        ]
      },
      {
        "id": "3216c970-0ff3-4e59-87be-b3451a2e965b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "062ae24e-6845-4dfa-b48c-10e4184f8288",
            "name": "Negative Testing",
            "item": [
              {
                "id": "71f594d3-af22-4972-9d77-65bcc9c6b9b6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "09d6312e-f4f7-481b-9edf-a6c64b0538a4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "932b7116-ee00-446e-bae9-8bf35e876a1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba06485c-0385-40b4-9e94-118490b334f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb6e23a-c97a-4298-afc4-8cf10365e7de",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b188ec5-9fae-4668-a636-3a2824e4c0a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c0537e-c7d8-478a-8d0b-50b4a7e66178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a77163d-dbb2-4dfb-aedc-a691f1f66624",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08df5de-899f-482e-83ce-7631b3ad130f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b74c44-b214-4e81-b733-dd1dc1a91bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f63ed4a-f786-4169-9202-d59f9fe7e17e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5b0e777-34a2-4a84-b9ac-85cf6027b879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d1fadee-1ad0-47cf-9cf8-3d2f943cceb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a32e8eb-f324-44a1-819a-73248ab76f1f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3c55d5-0aec-4769-89cc-06cf31197d5f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7191253-bf9d-4227-9067-4bb9357c2b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30297376-bf89-4719-898e-41725abbae95",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2824fd42-be06-451c-b3a6-221cdde7f755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caf74373-8857-4f7c-8be3-fd3a1fa6cbf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "484dd711-68ec-48ad-93cb-fbd1f1341f44",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66dc5ba-1b62-4c8d-9d61-b14a6cf1c138",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73880e6e-c8c2-48f5-8be4-12e50a45b7e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2f91906-84a2-4983-a72b-2729cf756e88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92ed981e-515b-45a7-ac4b-0c1233c0a7cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "698e54c9-0464-4b14-888a-f594f0fc2a7e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f6fe0e-6e60-4d36-8d70-9a73e013108a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e98c625-d89a-4dc4-86da-10ca0fd8850f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "126f9fbb-e63f-465f-944c-ce98a77feeeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fca65b4-1856-4d7b-95bf-e50c48c14625"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f245d568-99a9-4c9b-803c-baaaf29275f2",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed652e4c-53e5-4724-8771-3ae795e90c6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "827be767-9c72-406d-a278-a5a5c4a8e9bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4e1eab-7c3e-4c1f-9838-ab37ddfe5bd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0144b68-0995-4739-8f96-d0ff90a4c7b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bba9d39-7a6b-4b8e-b78c-31cbd1d1c619",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a1c734-3525-4aa7-9167-db6b18da0f5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "111bedbd-0221-4935-b3e8-fb85c6677e09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2713d81a-d272-491a-ba9d-5820698aee53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16e7afc9-534e-45d6-b4ca-58e6f0b5ac59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6956fd23-8985-4794-972d-4827876cb176",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f75ba0c5-da5a-4d14-9acb-61d4ab74fb86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8db46b7-c5ad-4c30-9d23-50140229d88a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13fb685b-7d39-42cd-b209-59b8cf63fc23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf1685b1-8e9d-42ea-8076-f623b8dbf8d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cecb0b1-202f-4995-bef4-14d46c579f38",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675d1a6f-9c3b-4471-84c4-d6dcc1ec1ae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c08ce549-e618-4094-a3f9-60ba29c47c54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6dca95a-3e4b-4151-83b0-5ed7e7c22425",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08c6527d-4aa6-4476-b0a8-4a0f62dc6198"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54a03684-2a79-46ec-924f-d4485734b663",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e6ea2a-2662-4bab-b04c-113937e64dfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92034248-df9a-43ee-bd7a-39c5562c43e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "723e5729-97e1-4a62-8430-48da40eb5af9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "080f03d2-ca10-4647-9887-a7529e995ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9278efe-1e82-48f3-91cb-d988c7ba8f7b",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2081d41-7e1d-4ee4-a7cf-e454b5967d6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21a49151-c5ea-4017-9e5f-c12e67cf3eb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca64802-443a-4267-ac52-25436bff948e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b84a1382-6292-4d1d-a581-8e6671fab658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e70a60e9-3e81-4a1c-bd15-b0340fc0a8d0",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a04e0d0f-74fa-4b53-9915-b29528bc79e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b3773b7-6abc-496f-875e-b814143fa01a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a74374-f077-4ace-b476-1803b03da1e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6787ff32-f051-4983-94e1-4b9bd6818d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608cbe51-f349-4c63-941a-966830cbb204",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d25c4c02-c78f-49ab-a00d-191caeed6aa2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f7c657e-e14f-42d1-9943-cbc12c934f48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ee18a0-3071-400f-8f58-362b720648b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf448c58-4545-4211-8c63-155b4eeaface"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc23729-2a5e-4a65-b479-d88c0cb4a361",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec490ce6-6b98-496a-ba3a-e51cfaf5555a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b9d8bf6-978f-4059-b108-9a379be5dc7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf00b15f-4985-4fef-b2ba-716aec26fa60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88240097-9c44-4ad8-9d48-191028d27afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdc9d430-f81f-482f-8253-f20a4263a3b8",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11fa8f3b-8bda-481d-9d0d-1c19ea4ac928",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1d41889-da5b-437f-b579-ec839b1aaf83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "906bbfd6-772e-40cd-a4e5-59115d7e8638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd2b2f9a-0c1f-43ee-9b66-cf3bc6e78bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b17628c5-77cb-4f4b-958f-5266b3c0dcdf",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f071a4e7-24be-471e-a05b-4b164cd52acc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acb5305c-c250-44a3-9d1c-02952f3a664c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6923fa5f-b4c8-466e-8aef-6f946e89556d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03795d6e-6ee5-47b2-9461-a6639e76f16d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2945ea63-7499-42f6-a15d-774f706fa4f5",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c1e8ca-a9a4-4824-88c5-a456db8bff42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25ad6977-80cc-44ae-bc6f-29bbf8c6df4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f79e33-55f9-4861-b5de-d1613ad09b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffc98bd2-2758-40c4-b74e-20107fe7a13f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fdaa298-6ee6-4fd9-9055-e4897449fc31",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0302a94d-101c-4151-a9ee-a83aa922280d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b200b144-2bce-4b65-8e4d-e3742eafeed6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f52210e-5cce-4f4c-adff-30307d703645",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84384ff5-9c48-4894-a3b5-b4ce3553bec8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b7534e8-0e51-42d6-beb9-b1427ecf72f6",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b52cf598-c3b6-48ac-9984-0d8df268c3ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad191a4d-3665-4cf5-8ec6-d8547b88232a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0844609b-8947-412c-a0ba-bfa5deeecf8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a417ebb-d8c4-48d4-b6d0-59556f9cbab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2df99119-baab-41cf-af46-792ba9704db9",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f56378d-36c2-48b6-a487-f214daab94fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca49b3c1-4a27-4115-8ec4-59eeea7993b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f614550c-4fbb-409a-97c2-9db3e50f3c33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33b937fb-377e-42f2-b696-86ee99e75c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b358904d-30e5-4879-b254-0a0c841a0806",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92c7137d-4616-4f89-92f8-7f0934b8fddc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "521860f6-7e5e-48fa-a87e-acec1bbbe3ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ab2df3b-cac0-438b-8a43-8f9da2a5ea70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c26c86dd-10b8-4ba6-84d4-1a4dd36ceefa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e8e560d-0d3a-4d3e-aa46-376eda6e6f01",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c358e9bf-a423-4e3e-b29f-78db39780ded",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0aa0bb9c-3903-4abf-ba23-6650fd6a253d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30d68741-2a29-48f8-bdef-f486b18702e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "923c8b8c-7691-41d5-ac0f-6f43577c125b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec6250be-61f2-4d9e-b1a5-c2f052509c26",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b15e7e8-81e3-42d9-9cca-7450c421e171",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "522933aa-28d6-49fc-b9e9-4ca1c497f101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "feb5836a-63e8-46b8-824b-8484cae1171d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1ef198e-aeb0-4c7d-89d2-6c69288b9df0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51751f5-f09c-4247-9457-9a5af8c66c8a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c14ee2-0eb6-4836-9b91-69b3ac74ac50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b232fa6d-6b20-44f7-93c9-b8d602c94692"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "368494f9-c7b6-4ebf-9edc-83d5d5e82310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "790c4f60-7107-456c-8a9a-872c5862bd95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2dca9e2-16e0-4890-969d-d59913c54e34",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71cf0a7d-9bfe-45f2-ae06-aefa221a70ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "241e1a5c-5bc6-4f4f-9ee7-36ca16c35bb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57c4e6e1-3394-4640-a6bc-30fd71961644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d38124c-9428-4277-9e8c-0accd8835ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36b2f02b-4285-4323-8b4a-835a7ca52a80",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48cc023b-1227-45bf-9701-df91c65af934",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d3e945f-64d8-4229-9d55-86c8a7cc1867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a495a833-a444-4c87-9ac4-2352df837311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "183be94e-f27e-4cf6-b414-ebebb562e8df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb29d42-68ca-41b7-8dfb-40793eaeee0f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe9db960-baa1-4865-8a6c-5912208dfbae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15ab616f-f259-4969-821d-91b551e4b2fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c48747-3198-47eb-9e8c-051d174e9e8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b848a191-26a0-4c05-9633-84c885a6ea5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd7c8679-be09-4031-bc1c-705e6ae6072b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8b7dc7b-dc11-4238-9523-9891b615785b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56e777ee-9d05-4776-b252-3b580f7518f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1781708d-b111-4a47-b5aa-5d589e5cd4c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5523789b-e7ad-4def-93bc-479affe66b3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382d069d-4746-4062-a6d0-db09ae8dc27e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d8f28e4-fdce-400e-aa4f-1572ec431af5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3e6039e-4113-410e-93ee-9c3b7735e704"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8037b4b9-5044-477b-b6f4-3661993500be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac8e4a4-7a29-47e9-b72a-7c0ca9687ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e549353-e7b5-4fd7-a738-a69d9b8288fb",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "946e1a40-20da-4023-84e5-e11a9226e97b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36e2393a-539a-4748-a70e-ea560800e6fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15878f58-681e-480c-831e-7fec845686f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d1cdaea-d9c6-4d7a-abd7-12aea4de0b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd80617-3958-4e98-a159-711fbcc2423a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "396dab46-8d42-4970-9a0f-34332ea30fce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5809e40-4b8a-46c7-bf01-d5c953a928c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7d896cb-f1cc-4a51-8042-61c5bcf8d1c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7abb387f-06e1-400d-a20d-8bf93e4d0ef2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29366f80-8b50-4152-8676-627dcad8e3de",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db571902-b73d-4e8b-a20b-a75acbaaef02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca387859-6c41-4dd1-9c9f-691e278f4c0a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0695f7a-4e23-4285-bd16-2dd8928f175f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd4043ba-9978-4056-8d48-7fb2668a4dcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6885a6-0f6d-4d6e-a00e-3bf616746fec",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c13c9ea-dbaa-4d5e-80e7-359fec679999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc036fdb-ea7c-4228-b8d7-7d45d4db4af7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c958500-c575-4594-8f24-df53d549888b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7043d640-2135-49c1-891e-8967a747bebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "575328f8-6365-4206-a5e9-de62367df2f4",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd3fc501-5359-48d7-a2f9-faea73e056ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "544780b8-31fe-4611-b47f-00a21ca68c49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8ccb87-b80d-45a9-b0b1-952b4f1c65d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32dbc768-73d0-4cfb-b638-bca5e32e0629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78b56daa-11da-451b-a027-b46e9b49c288",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1902ef7d-73a5-4402-b5c9-922b9eaf97ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71e099fe-d8f7-4789-b1a5-a5085aa03978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95207300-6a70-4bf1-afce-61a0765b1a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e73ab53c-8bcb-46d0-9fb5-2c77b443174d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19663b4e-ae2c-4102-b98e-083d1c98e86f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3707c991-cdc8-4fb9-b810-3ecd0da8e156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb792ece-c8ca-430e-802b-84bf9fad57c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "455f69f1-b361-4ffe-9c58-7fa43d10976a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eddf95fe-7227-4118-a97f-b0f3a267318d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52eb048-7450-4a3e-80ac-cca5233794f4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad1b02d5-e61e-414d-a5da-fb066c8a5033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1cf7a445-ed3b-423b-b63d-e95673f279e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53193815-dd49-4e9d-9887-a284ca63bfff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30f71f58-172e-4700-ab48-7ba23a01843e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff734a1-afc2-4ea8-92ab-083a109a4283",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe86f5b-cebb-490e-811b-baa09c2b8964",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "505c0966-5bf1-4d34-85f9-82f96ee3ff0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d7278a8-5ad0-4b15-a9a6-63cdea8639c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d8163b1-9c7b-4ffb-9f0a-5f470ef6067f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86db24e9-c16f-4cdc-8b6a-d56c60c57dcc",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "748fff35-3f58-4b6b-8ca2-4f31676720e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68c6fd00-5645-45a1-93e1-3eb205b9e653"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ea9976-d58f-453d-b4a1-e9601c1e8cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05e698c1-dbab-4275-8899-a37d90f81838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b359e007-7757-4008-9e10-ae71307b3b9c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e78d01-2df3-4f46-915e-42fe24659936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db8045eb-5829-4bef-ba2e-b00ee13931b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec53c98a-749a-4221-8392-d84c3d055219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebbed9a0-12b0-4145-a93a-2d38ba4c250a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad34eff5-eb7b-491d-b55d-69f230445be8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d28f970f-ef04-4a79-9947-1d356d5ccf87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d844e8f1-c20b-4494-b089-95f45810990c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3a11be3-d9a5-4ba2-8f80-bdc43735b840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a12982-c7d5-4e71-bafc-f5cd31c481ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e43dba-5aa7-4f22-ac75-e498f1f95541",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e4a98e-c15e-4293-ac10-928e0ff94f47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d715e61e-76eb-4985-9a2f-f54db9d114d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd42e2fa-4f89-40a0-a0db-2799e5cc638f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de3e25fe-1786-44db-9787-475dcb07f9c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68da460e-0be8-4ffb-a86b-1efa069b2dd4",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d105f46d-bf84-42d0-8cf5-ec1ba2b503b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bd94b88-bfd7-498d-93c4-d5361a39dac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb19fc99-4b40-48b6-88bb-0ec2c8e73654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbfda34b-f095-4a2b-b6e5-eb5a0c84270d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "666f36f4-0bba-4f48-9f1d-f21ebcadb662",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2c09d39-4a4d-4d26-aa72-a4d25750b3bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "726baf79-bc23-4527-90e8-8755a5011f3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef706efc-9d02-43f2-aefa-4ea90dfb1fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97e2a7d4-d5a3-4fb0-9c67-130734243714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc9ffbb-1aab-426e-aec4-9df4f925ad53",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12f57e5-0a4b-4742-a400-65036aecee9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c598964-b367-40e9-b60a-4a04926ef179"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ef4385-d6f6-4945-8734-8650e373fd5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d967a1f7-64b4-4e47-9313-c8107ac967d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b43fb4-fa81-4d84-8311-7f4ee9c65044",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22d19c1e-33af-49a4-b9f6-7940f8299cdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7ad8dcc-e3e1-46a3-89d8-cccb382d0bfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85115fe6-575b-4a9f-919a-bd1cf6c4ae23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1e43aa7-636a-427f-b7f2-9c6dacb3abab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e472224-d866-401e-a29e-c11a913a1a72",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97007c51-7687-4bbf-8b0e-9b4e7730de00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f4c22d3-e031-422c-bfca-681f4d8bb563"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab951d24-f126-484f-8e15-7d022cded901",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "facc051b-0370-4982-b7fc-4a524eb5132c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6f9211-467b-4d2b-9607-45b90f786b88",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d9e2dd9-ea1b-4c7c-8df6-a8c22573af46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c83992ef-d2c3-497b-b99b-351412d379c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7b6e95-134d-4484-a082-832ab2fd4437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4545956e-28dd-4f23-9cbc-516a31ec42ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea7800cf-c34e-4f07-88fd-f4a93fc5eb18",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6632addf-7a38-4072-969b-9573702b230b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7647c4fb-3cba-4356-921f-f76d6745ccf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c06dd867-ffcf-457c-8855-b84035bdfe0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1586d1df-762f-459e-87c8-9ad3297b37c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a503e53-510b-49cf-a049-cd84061bf24d",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d941c8f-f0e3-46b4-bb60-56b896acf391",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cff6a7c8-e6c3-4179-a83f-8cc4a95827c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f8aa04-d7dc-4221-9fb3-5f41793f5c83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70bc0686-cc7f-42fb-ad39-e26574cd9af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb394a7-6a8c-4d65-a7f6-9994e0c0fac6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d979546-c2cb-40ca-9a14-9bcc7ce855ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62177db6-962e-41ab-822b-177e38ac936f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece75f68-f044-4264-bcc9-70a120859056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14f393b6-2548-46bf-a447-b320063f5eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c0e231-b159-4b77-8a73-3ab843a4cf06",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e6ca765-d7fd-4c1a-9a5c-97b126b0c3e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "018f97ab-9337-42a6-b1ed-207924c656ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2ea047-0840-45dd-b6c4-7ea73a64675b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cbf7bde-01f6-4803-b6f3-9c0a32716aa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909a8db8-162a-44f2-adad-0d81eb5ef61d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11b2ec03-3305-4791-ac4e-836926d7e61a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c386693e-f719-4fc0-b9d3-5f09de7a510e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e4344e-71cb-449b-a19b-ada01760e81d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b0fe9fd-cf21-4529-b6cf-2e590309631b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50a8dcdc-73b1-4620-9d5f-886b8f0a0f06",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8550ea6e-02a3-4ac2-901b-5a26a7b84d31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d89b38c-f132-4ac3-938f-c25ec01f5f8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5484714-4203-4b9d-aab9-736531f62831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0efd9367-03be-4388-9fab-41f36e0004dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1166fd8d-0cee-4119-bef8-d7174e6951e0",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "435a7f6f-a534-4b0b-a40b-52e06c8dcabe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9766680-2a37-49ce-9db2-fb45276abfed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85970270-ef00-4e69-9b2a-c630ea30c71c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6656b4f-a2c7-4652-a110-dd16620c4b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c94c5c6d-93f7-4443-86c8-95e8ec66364e",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "917d8bad-6692-4ed8-ada8-edad8bb75c25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f1654d8-14f5-4689-94a6-8192f196e36c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7272edfe-466a-4007-acc7-8e48325e52a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3860feeb-cb5b-4e8f-9135-890b20f53d36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27d03ba8-17eb-491b-848a-a59b0f0da51a",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdc8ae60-5b3e-4e49-a4d9-454436df2c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc6bb0c7-4164-4f95-8148-258b8de24d3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db7461b-7b13-4d21-bd76-ad5c23250479",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b1892f7-6c30-45e8-913d-aec723254436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b355ef95-6e1d-42ec-918e-76900951e4c0",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470aacb4-2ea7-4bfc-8b49-68a3f9246726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac3be710-3d44-4432-b0dc-1f7b6bacfa76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a4839b-c03e-4ea0-b9bd-ee4e61ed3548",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ae3147c-c0ac-4f69-ad64-8ef94f371659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16bcf85-4489-4ebb-9d3d-0da88acbc9d8",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aab6b8f1-d10c-4f30-a13e-3dce78d95868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb953bf6-1562-482c-a90f-610c249f7a84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "772df733-d96e-4ff2-93ac-1ec052948632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "817200d0-1a70-4f5d-9741-01acc35fa6f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad0c469-fc37-44b4-8e7a-f3432e6c24fa",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6579cc2e-5498-457e-bdd6-a9cf3e884927",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c385ad3c-806a-461b-9001-291a51f3ff3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81bec678-2362-4009-82cc-d5766309d43f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edbd54db-c222-4f68-8f11-d24af8913ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67076bf-425c-4b1d-820b-39ec1282e4b3",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d143b0-8d85-4629-aa9d-5a30e9eb74d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7522f06-791c-4fe0-b085-dddb7ec2d7a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7637242-9db6-4ef4-981d-4ef8e4aaf313",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39a534ca-3be7-4450-839e-a96a09301a32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9737f0ac-a6bb-424f-843a-31d435ba4346",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a33fc60-49e2-4af9-975c-c05da1cb86a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07480852-3111-4c3a-a9d4-c6fbe9bae87b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff25b47-9e49-4a08-be2c-cb0c1d7962ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f3afc74-01bf-4689-932c-9510c5b3022c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ff4a79-d2e7-4f6f-8f49-e5875cfee820",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3dfd47-603b-425f-9f55-6835beeb4156",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b50aeba4-cfbe-4ac1-8848-0aadc3762bc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f4338c-b235-4ece-b390-dbb13de60352",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "146769fd-4d39-4682-b293-f387c4481a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff604b2f-ad24-4eee-9bcd-5188ba1aaff4",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de186175-fdae-4150-bf12-d1d3a70afa6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63540fbe-d420-4733-af23-0eb4f3dc59e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bce29299-6675-4728-b691-82149bf3ecdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39f96bb9-b2f6-48a3-ad70-122262be179c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f18d9c-8432-45ec-b25d-6f518912fd22",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e443de7-1ff4-4037-913f-c80fd35d780f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8b8f283-db27-4285-bc25-26c77c4c8553"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9df60f6d-fae7-4058-87f7-1fc4edf0b713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf11195b-45c3-41f8-a4b3-9a881cebe82a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "604531a6-5ca0-4b22-b90e-c063b16ec980",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3b214b-f3e0-4924-9a4b-5680df44c52b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e44b2188-a3b6-44f7-a86e-1f9705f29ea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64cf470b-f5ba-47c8-90bd-2dbcebaad9db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cf20dd8-f872-4b42-8faa-ce8a38610841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b36056-e721-4b21-a703-f8959b23c41d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3e68350-4467-4e54-9b7b-18246317f581",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f17a9b31-9085-4892-a00a-d5aba32272f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d8ee3f1-6580-4a0d-ac04-75fe402bdc3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f919fe1-db77-4998-bc21-d5c5f1e34482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdcc366b-a2f5-4473-b3ea-24ebd307a8bc",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "487f2531-f236-44bb-b742-a71ad6600e1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9435b0f8-7f2c-46e1-a591-603ee522eed0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "644054d6-d123-4c6d-838f-ff65492c616e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "307bc209-4a49-4d7c-9453-91c3557b0d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f18634b-2c7c-4565-90bf-be1b17a6fe39",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf42740-3b28-4d5f-a83b-9628e2e47a84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9241308f-c452-4ea5-addd-6485cbd022fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06a39f98-cf8a-4eda-8f45-68d2978b1bba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd776dc-e8f9-4826-9aaf-10b84ba3a4cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4037cd4a-bf4f-4655-b550-8b5c26685373",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83c84cfe-6051-495d-aa09-47fe3b6c089b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c57d4f0-6641-4e47-b7d8-9db36b45b19c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a842fc-da2e-4bad-95db-49beb82cdc6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e2200f0-e3e6-4f67-abaf-c4e7fa921848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ea6148-ca0e-46ab-b15e-d1cb3ff431d2",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e38654bd-f9ca-4159-b78e-198a51173691",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d6cba5f-5ab7-41c2-beb9-9c3eabf97d14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bef97324-9b8d-4728-b6c6-4a92155bdd8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ffdcdfc-c819-464d-807c-f5e5278d29f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659094ff-eefc-4e72-b2b6-628f5a1c36a7",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81571a61-ff8f-48a6-a67d-88f53e1a1e0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19ae2529-addc-4be3-aaf0-0f9239c2b680"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88df5773-6d27-460e-b69d-e1b1f8636844",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a16adcc2-7737-4ee6-b264-9722f804b452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea95d45-f549-4354-98f9-0dbca14914c1",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660e52c8-a7e7-4379-9832-c8f2fbbbcf78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d3c82d4-c5f3-4457-a9b7-177a35af8e0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "486c40c2-e57c-4aa5-acb6-dbb9b224242e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91e9875b-735f-4e2b-b0a0-1507de5fbeb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9666d6ed-83c5-4389-b29a-c7fb2f27d54e",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1031bb64-de58-45bc-9f26-31183a76aaac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71a4f4b0-1a47-4286-b54d-dff1cb137c6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa084cc0-1f77-4122-a8bd-998a3be2cc06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73fefd03-1cd9-47eb-8944-6f7fe6862b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b032c84-f182-4c76-af95-9688992021d5",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad5ee60-9ab7-4d87-b525-8cb921f315a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23cc2015-bab2-4d21-9e07-22fb163426ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6bc099c-eb4c-4532-8396-8ef0a289735b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63b104aa-ff21-451c-ac96-4514778f2e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2357e54-720d-492b-b2ec-fedfd3168ec2",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76d4178-6fb7-47fe-bce6-4c0baf5d54f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c63dafa5-3935-4ec9-afb0-b66bb303fb35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83f992d-8a97-410d-9a78-5aa4611d2230",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d33fcd16-15a2-4211-8684-9cc971a45a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce21a72-3c12-4757-adf3-3958af8f5c00",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6eae49-ca1a-4c7e-83ea-f1abffde7145",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "363bb420-a2c5-430f-b8ec-e9d4235bb7fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "167b9a41-8659-40bb-81b7-aaff9a349fa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e128021-e319-4313-8314-57b8e4680189"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d78355c-e8c0-4b8a-ad88-5ff3800960a5",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1d24135-8794-4f0c-9c3e-5a32ab2ff93a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "150f3bc2-10b6-4acb-8b43-dee55bbd8f20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00221235-470a-40f0-ad76-190ad153f860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "edc73052-90cf-42d5-9447-e0cd4f67d99f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3154172b-3cf5-405d-b269-d23cf4e9e5a9",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8210787b-2a81-43a8-bfac-7dc6a82ee4d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd3fb853-c7b6-45e9-b3b1-9824c3e45632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f030bab9-8e3e-4de0-be9c-c91dee52dcf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c98658d-397a-442b-94bd-f5a99f748da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c129383f-34bb-4578-9f7c-79798a342ed5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aaa94e0-acb8-4fb7-acdf-3167918203d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2d345a7-7bf6-4b93-ba29-7e79dc27305c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17824e2-0ae6-4127-b907-f6feaf34850d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b95393de-3ce5-4144-a9be-c00efe3c3b6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "540981fa-4ee7-4b26-8d5c-81c3890dd87c",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7837c34e-f47a-4754-bdaf-2233baa074f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8283a8f6-3c11-48f2-8823-7f989551c543"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "494d28c3-d5a1-4cf6-807a-c103d05343e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5268e606-d841-4f9d-9eaa-d8470163d40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42c30bf-770b-40d8-b332-c7b1e684c0a8",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91dd14df-c6ce-4fbd-9557-a1da1f62ecca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d72f999-2bc2-431c-bcec-a266f8372347"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24ef5ca5-1410-40a1-8931-51f3696fb9f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e442ae27-b3cb-47fa-b181-4d660fb70d8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5971f2cf-ce60-438a-9fb0-720d506a95fb",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08c6a0b-a8a9-4f62-af2c-a3d308b062c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f323b55b-adcf-4f5d-988c-d2ae149412da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b2e895-b368-48ac-8259-ee6c8b7cec0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc82c67-c51b-43e2-b598-aa54f1b48aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f8456b8-885e-4e79-8d97-06e3b39b78ab",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47482c6d-56dd-46e6-9ccf-81619bd4fc7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28c40348-2956-495b-9df3-dadd9e601165"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61064616-4230-404d-ad5b-cc9a0061c9ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df93d45c-98ac-4739-8ded-33a6d8dacb89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bc73525-035c-42a2-b35b-363a25370b4d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1810c284-1718-481f-a655-409cfb03cb59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24e00191-1223-4230-a52b-664d19d127f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd033d19-6331-49b9-85e8-fb04320a75ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3088852-3276-4bd0-8b39-7234b122d51c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f4e8f6-bda6-4d0b-8537-cb87e39068cf",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09c6440b-ff43-4475-b1d1-12e225d43eef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4127fc02-f769-4b9d-9fdd-faad640f4f1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b247cd7-8a5d-4289-8259-a3e994b48218",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1daf07e2-295f-4b3f-8082-8fe3be8d0c50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8734f18e-6b1a-4133-9b44-29996f37e297",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a367e9e-16e9-4d74-bdc7-9353398f1000",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a955406-7cc2-409e-84e0-fb2fbd835cca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd32c00b-4dad-4e4f-8807-0fff9bc4486f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e5e5edf-3989-4ec7-8c16-01e0be13723a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6b6b9c-ee67-4c4c-8c0b-f9b36bf69bcb",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc577046-fdaf-41cd-9647-db568c7baf2a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec7add4b-660e-41d3-b9c7-0c4ba81e35da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe063e6-6e5c-4092-8c99-2034c4c25c80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba4ae53e-a6bc-4e95-a44b-5dcf7a2b948d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abe89d28-8080-4751-8841-42c1e7ff93e1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "460ace7b-fc48-4e38-9683-bf27720cd081",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92e9ffa5-948c-4807-ac9b-5c2907789d97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "107d14f4-504a-475d-bcda-53b000bf1fae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88385387-8b2e-45a7-a6e0-9fef996fe016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "069badee-626a-44ad-a021-a327f34e1e2b",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d335c2be-fca4-46ec-b990-5a0f24f7cdca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c18f1494-9c7c-420f-b719-9ef001d158de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd24de58-2083-4c6b-897c-5219ae9839ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb68a81b-63d9-42c3-88b3-9136381f66b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5a836e-4305-460c-a4ab-656bca7cc9e7",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86201c36-2879-4d30-a59c-1abde3581757",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d125676f-42ac-421a-b00c-5c2e2226c94b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "412ce38c-26de-4c71-85d4-22b7bdc79350",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "536ac567-7bff-40ab-868f-0989282ef70c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9a5951-3f64-4f2e-b953-87e23d0ed250",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c52c3c02-4cb0-44ec-a44a-c7ac076fe1d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "639faf0f-c989-4329-8c9b-ad83e2fc322e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24aca79-d716-4f62-8f2f-8cbe059077c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "990f1ffd-c512-4ff9-a5e1-7e74f85731ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0816bee-173f-4aba-924c-f1e4f1341007",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b30a609-43b1-44e7-b0ae-53017045a479",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "537ce142-5844-4365-a96d-5747492e5b37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b288408-2ee3-45df-9b68-97cfc5b653d9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e901ea77-bd63-4904-aeb1-ed428786edbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce0030ee-7328-4cab-8a41-036e747c2a99",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a6c71b-5a6b-42f9-ae9b-0161609952ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37bff33e-ec05-4640-a59d-577233683b7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f3dec3-ac8f-49a9-b965-bbfbe0f0a0b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49c5e3a4-a390-4e1b-8100-e58b129df922"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93b09972-916d-459e-86f3-46396d60ac2d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "07119aac-62d4-43d3-96b3-4e0e56b22f96"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "65a90174-905d-48e9-8274-2fccd57ed8da",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5286fe08-1f19-4ed0-9110-3c171398fc19"
                    }
                  }
                ]
              },
              {
                "id": "5313f404-0485-4afe-8fbb-1d317f0705b1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e768d7df-d4ff-4584-9092-cab9ffe26c1d",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0781510c-8274-4232-afc5-a91a28aae06d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c770e774-1856-402d-860e-7fd7e13ff96f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c4f79c-b6ee-4b71-b008-29bd444371ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5baf58be-bb61-4529-9c6c-e921b8baf6b3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa4469b9-2869-406c-bf48-ffdf70507022",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e002a23-6d12-421d-8722-107fb08831ed"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "77d4fbbb-8800-4081-9ada-3522c0b0e860",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fbaa5ea6-0a74-4ad9-9b6f-5a35842a2b48"
                    }
                  }
                ]
              },
              {
                "id": "484537c1-6989-43ac-92f3-17799e886515",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "140af0d7-9797-4e7f-bdb6-9f90287d28c4",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a1228b-affb-47f4-b4a7-9ba9ca9e66eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "1aeaf07d-3b03-4585-8ea7-3b2ed7a8b4c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69c55ba8-7b31-409c-b870-26b1e76575af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d39de84b-5f0f-48fa-95ac-a51c5d1b7d13"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "7f2d59a8-7101-47a9-912a-d548f8c59bac",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bed63401-51d6-422a-97ba-31cd1448521a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0ef7b37-bae1-47b5-99d1-1bc12211724d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "b39fe4e4-8d80-44d9-b52f-eea856ee539b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7dc78fb1-b2d4-460c-b2ae-63a6b286e8a2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "76c7a8e4-84b8-4934-9c86-a208f4efd13b"
                    }
                  }
                ]
              },
              {
                "id": "6b3f852d-cba0-495a-9b59-a0f9145d1119",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9b14db13-49c1-4120-94ea-cd937399eb7f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f93bc6c4-375a-4e3a-8e32-4e02812d145c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1ec169a9-8bad-4b28-86c9-2e539840d074",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d817d75-cb0f-4789-9992-c5aeccb19d04"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5c43ff9d-5036-4dc3-b93f-448c28397035",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "232f3e86-afa6-43a6-94eb-df9141103182"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f30b043f-19d9-440f-99fa-bbe28ac1c2cf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ed215b7c-2843-4c1a-bd02-2ee0a0fd7623"
            }
          }
        ]
      },
      {
        "id": "2cb15b7b-e4cc-4dfa-9180-8c37944654e0",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "aed47e10-19a2-4774-a940-55264502fb11",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4987ff64-b2f3-455b-9c8f-0c439dda0fc4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4e8feb85-d69f-4d8b-a581-3fec000c4297",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "239c3bc0-de83-4c18-b63d-98fcff5f3dc1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "6386bab6-0604-4fae-916d-4345b2c7aa0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f71fca-7a22-472b-8057-4cc17fadd754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2e1163e9-515f-4c30-8fac-694a4ad3cfe8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa1cd3c7-44a2-4c5d-9b40-8fcbbec842e7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6226a4a2-0731-471f-9b9b-7267406c180f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "74336667-75b6-4b52-9f19-4c8670850b4e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26fe8381-90c5-4aca-9ea5-7c1376820d0c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "72356e94-da60-4af9-ac55-b8a0f12e7233",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "8776d9d0-19ff-49e3-bc10-88ad832cf190"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6d1f39ae-cde0-4067-8928-b6e882e908f7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fc6894e4-f520-4f62-b609-43d238d8c56b"
            }
          }
        ]
      },
      {
        "id": "bddb382a-f580-4042-81da-b0e977f7132b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4164d002-b689-4d35-a540-a957fb1a150a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a0c7421c-8ab7-43e1-bcfb-d632626d4570",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "34e11281-5572-4e9b-9e93-c1406a92d4a3",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2eaeddd-da77-4220-a21c-405742da9a8b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f7f3721-7813-4662-b96c-6f71a0645074"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a4743d-9861-48ac-aecc-d992834a0851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ca0ff1f-2ae7-4658-b998-a7add35c4e0a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "314b0aee-f6a4-4241-b004-d0bfe32672b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7f970d52-8eb9-4845-b5e0-9ed020dd4691"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "718f5c38-2b4b-47fb-bbdb-1cdca61377a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "97682577-7cc0-49a2-8410-b3897cc4d582"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e260e577-06fc-4ad4-8aac-def56bf33444",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "338f8f9b-3b4a-4eb4-a459-17b194edfac8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3b54a2c3-ae8d-4c39-9104-4a6a71ee6455",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "17461711-46af-49a3-86f3-60b333d6a3bd"
            }
          }
        ]
      },
      {
        "id": "212f8320-8d99-4ac0-8ab4-2c5e8208bebc",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b50eef7c-8671-42a6-b5b0-962745055dd7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6958e30b-3f27-489c-94a2-387fef672b9f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "111c3076-1e7e-475a-bdc2-b309ae9203f8",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36aaf195-82f0-4a91-8d74-5694abf815e3",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3452560d-085e-4115-9775-6529fcf337d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35799af1-9b33-4d3e-8bd1-9dcf0a136d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7472a777-75ef-4824-901a-8b7eea5bd373"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a5d69a12-7d42-457e-95fd-1e439dcf849f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a03d3152-788f-489c-9b4b-16216da23a93"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2ae11eb2-ed86-439d-9958-8ca0fc517d81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fa58ae5e-f8f5-4132-8386-28e029316460"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ec4e6d8c-e2c3-4ad7-ae54-f546fe5f2b6e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8084202a-dba4-4e14-b696-00e185b1f59c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bbc524b2-5b6a-4b60-9064-2fe78ba0cd75",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8295180d-0a0b-470b-8176-bd2d7d00392d"
            }
          }
        ]
      },
      {
        "id": "b8045097-0c9e-4fa0-8f32-39d91aecd781",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a08f9846-d6e9-4660-9090-0d6e3a60da5e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dc27fdab-4053-4905-8df8-c1b849e2d45b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8cb35f40-39ab-4df6-a3df-9418f5bb7840",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bf6bea26-cbd4-462f-8352-8f40157492a3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "333911fc-43b6-49b9-9e24-ad0e7cb28ab1",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 439.7222222222223,
      "responseMin": 21,
      "responseMax": 14013,
      "responseSd": 2089.125199082787,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1725669719814,
      "completed": 1725669839036
    },
    "executions": [
      {
        "id": "9737a977-810f-46e7-b1d9-16c76455e3e3",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "80123586-2796-415f-9de0-401eca7835d0",
          "httpRequestId": "cf34996f-4b99-4e27-9516-14ff5eb77103"
        },
        "item": {
          "id": "9737a977-810f-46e7-b1d9-16c76455e3e3",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "1ff932ff-cdff-4917-b569-4b11a837d043",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 0
        }
      },
      {
        "id": "a8bd6b61-a815-45c2-bd92-8b85eaefff07",
        "cursor": {
          "ref": "db43b3c0-f5d0-4a83-87b2-b312b2e2b7c8",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "78867d36-ae4a-4f83-be10-624b4e2561d8"
        },
        "item": {
          "id": "a8bd6b61-a815-45c2-bd92-8b85eaefff07",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "4adafc33-5644-4ca2-8903-bb433ce0793d",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "3815f3f7-9139-4dfe-9483-7a1126edc635",
        "cursor": {
          "ref": "62bc7e16-262f-4288-8e91-0a060ba0a1a0",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "fa246099-d780-42d5-8ffd-d7822aec26c7"
        },
        "item": {
          "id": "3815f3f7-9139-4dfe-9483-7a1126edc635",
          "name": "did_json"
        },
        "response": {
          "id": "6c1ca103-12e9-4ab8-9620-111eb2a46062",
          "status": "OK",
          "code": 200,
          "responseTime": 429,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1933d1-ec3b-48b4-8e7e-54729a4f4fb0",
        "cursor": {
          "ref": "68626a14-27ce-440e-b332-49d0c4cb2f06",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e1f44ca2-94de-4ba5-a387-c8cff65abb27"
        },
        "item": {
          "id": "da1933d1-ec3b-48b4-8e7e-54729a4f4fb0",
          "name": "did:invalid"
        },
        "response": {
          "id": "fd8fd875-3279-4341-a186-2ad3439d6efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1945,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1933d1-ec3b-48b4-8e7e-54729a4f4fb0",
        "cursor": {
          "ref": "68626a14-27ce-440e-b332-49d0c4cb2f06",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e1f44ca2-94de-4ba5-a387-c8cff65abb27"
        },
        "item": {
          "id": "da1933d1-ec3b-48b4-8e7e-54729a4f4fb0",
          "name": "did:invalid"
        },
        "response": {
          "id": "fd8fd875-3279-4341-a186-2ad3439d6efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1945,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1194d526-e035-4038-a049-35dc7c41d8b0",
        "cursor": {
          "ref": "bbaf5ac0-cf04-44cd-a3f4-af9d29e593fa",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "ae4fa9cd-8cdb-4811-b7b7-d98d871dbb3d"
        },
        "item": {
          "id": "1194d526-e035-4038-a049-35dc7c41d8b0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "404fce86-0262-49e5-ac4c-83a17b42a216",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2136,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15599633-67f0-4271-ba71-36dd6f95d9b8",
        "cursor": {
          "ref": "0a28be08-1bcf-476b-9408-8e3d6bddc4b7",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "b856531e-efed-45e3-bc2f-c04de1777afc"
        },
        "item": {
          "id": "15599633-67f0-4271-ba71-36dd6f95d9b8",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "4e740d76-7513-40c1-8823-89f04454489a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1880,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35de7bd0-9c37-45f2-97e5-dc07984165d0",
        "cursor": {
          "ref": "8e95d769-4719-46db-ae27-75e89cf95afc",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "e74ccf74-c263-475f-b965-0abc049dddf5"
        },
        "item": {
          "id": "35de7bd0-9c37-45f2-97e5-dc07984165d0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "509cfe4d-564d-4144-9d64-f52e4ce10843",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b4ac14-20e9-4c9a-a329-4ee58e7fa7e7",
        "cursor": {
          "ref": "ee870b9a-ec20-4cc2-b249-38c2d6a7b9a8",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "456b062c-bc3e-44a6-a3ee-ad312fee11a7"
        },
        "item": {
          "id": "20b4ac14-20e9-4c9a-a329-4ee58e7fa7e7",
          "name": "identifiers"
        },
        "response": {
          "id": "bd028777-57aa-482a-a1e2-b0820a0c26e8",
          "status": "OK",
          "code": 200,
          "responseTime": 2120,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a01d2b2c-cce7-4260-9847-154bcd37decc",
        "cursor": {
          "ref": "d543fc9d-db1a-4855-9377-d3854944476c",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2c8fd428-e1d0-449f-a6f5-34420e6a9779"
        },
        "item": {
          "id": "a01d2b2c-cce7-4260-9847-154bcd37decc",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7ff5f3d8-232c-4839-9961-b8d12a60425f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e773a8-8b49-45c6-bd05-af456f3c3bce",
        "cursor": {
          "ref": "e290ebc7-d2da-448c-a7bd-e3d75fff2630",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "08786f9a-fc45-4d8f-ac31-b5f9378fac5e"
        },
        "item": {
          "id": "e4e773a8-8b49-45c6-bd05-af456f3c3bce",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "aaaf3d9b-3139-4e91-8990-bc14fac40000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d16d98-c9f0-4933-9a56-b0c0a245813e",
        "cursor": {
          "ref": "ea2cc91b-8748-4b61-a88d-df25809140a8",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "40ee85d2-6292-4b6e-9947-655bea8199be"
        },
        "item": {
          "id": "77d16d98-c9f0-4933-9a56-b0c0a245813e",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "97f06215-0a52-4fc4-bbbb-07ea4b6c9d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35b80c74-bde2-4b4e-988a-caff299c6c6e",
        "cursor": {
          "ref": "465074c8-ac3f-450b-b79e-3e9e1d1b6b34",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4ae034da-7783-4b66-8ed8-49fdd6b3e4ab"
        },
        "item": {
          "id": "35b80c74-bde2-4b4e-988a-caff299c6c6e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "2e274db1-9547-49a0-ac96-0177c810bb08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8400e047-a8ab-4976-8668-6c1ce539e5a1",
        "cursor": {
          "ref": "67f13d39-1b23-4b93-9d5c-daa55c1fabed",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7d53af15-37f0-443e-9065-8ce2cdecbb5c"
        },
        "item": {
          "id": "8400e047-a8ab-4976-8668-6c1ce539e5a1",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5be023b2-0be1-467f-b275-bd89e8436589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "092d245f-d0a6-4858-aa64-cf73a1941c67",
        "cursor": {
          "ref": "99dfbb74-c96d-4641-8988-0ec47586bdaa",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "41ecc369-5db2-4056-b9f0-365bb0f1f8fb"
        },
        "item": {
          "id": "092d245f-d0a6-4858-aa64-cf73a1941c67",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "3a5a5076-5bb5-4a40-932f-4f25a632103d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec3d49a-8de0-4ae6-b2a6-add82c30a0b8",
        "cursor": {
          "ref": "1788a88c-5200-4abb-b030-d8fd5da07aa9",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "4d402b71-9604-414c-9e4e-2ece5b29a79e"
        },
        "item": {
          "id": "4ec3d49a-8de0-4ae6-b2a6-add82c30a0b8",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "688e9cdf-3664-4d88-a405-dab23d51a6b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d461ac77-7b8c-4973-a4b9-ff24bd6f099c",
        "cursor": {
          "ref": "42efa9d5-d881-4b7a-8707-6cf0bbc6640b",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c79a6c14-ddd9-4067-8d60-85659f2fd9cd"
        },
        "item": {
          "id": "d461ac77-7b8c-4973-a4b9-ff24bd6f099c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0a07e680-68f4-4802-8a7f-6f0c724374df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53877dc2-0351-4902-8f27-6df899fc5ed0",
        "cursor": {
          "ref": "900f5c3a-43c4-4a01-a3f3-1249176319d8",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3eafe9f2-688b-414f-8596-fef6bb7a287a"
        },
        "item": {
          "id": "53877dc2-0351-4902-8f27-6df899fc5ed0",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "b41ae8d9-5aff-4218-a305-c857dfffff01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5582c7e0-d23a-4f9c-8fbb-810f93177d00",
        "cursor": {
          "ref": "670c198c-3f61-40d5-8ae8-6521ab6178ae",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "b084c0b8-9241-4170-959b-40bf2ce06c75"
        },
        "item": {
          "id": "5582c7e0-d23a-4f9c-8fbb-810f93177d00",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ea37de03-0b26-4977-8854-8cd89fcd467f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1324a372-9540-4f5e-a1e0-5987a46a4af1",
        "cursor": {
          "ref": "dcf87248-493e-42f1-9ee3-9ffc1e95abd9",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c9587524-6c7d-462d-b640-a41e3a2a1168"
        },
        "item": {
          "id": "1324a372-9540-4f5e-a1e0-5987a46a4af1",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "d52ac917-702e-4e0a-be89-de16e276ad15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78bcaf1-4348-49f6-b55f-e07a7e9954ef",
        "cursor": {
          "ref": "e92c92f4-22bb-4bd6-a4f6-dd32cc8d441b",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "531166f6-82f5-4c8b-9377-4cc682b31f2c"
        },
        "item": {
          "id": "b78bcaf1-4348-49f6-b55f-e07a7e9954ef",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "36a3781e-0078-458a-8f73-4248ac3edebb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d6e52b-c9bc-4bb8-8551-c4d1d5699da7",
        "cursor": {
          "ref": "dbc2adaf-7199-4ed6-a126-a2456d733a4c",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d70a590a-095e-4629-9ec3-1bf020f463fe"
        },
        "item": {
          "id": "24d6e52b-c9bc-4bb8-8551-c4d1d5699da7",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "ff9c9c84-b366-4c30-9055-28d04ef39736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbce7cc8-89ad-4b51-9517-f4f6a2630f5f",
        "cursor": {
          "ref": "9a6851b9-03fb-4185-8350-84b1647a87f5",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "61e10c46-23ae-4a27-8a2b-1d63b8353959"
        },
        "item": {
          "id": "dbce7cc8-89ad-4b51-9517-f4f6a2630f5f",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "55283819-9d44-44f5-8a58-27090f1b5a3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4414cbc-379c-461c-9fa1-d1875a3e21e5",
        "cursor": {
          "ref": "2c44bf95-1cc1-4ece-b3bd-54dc52ccc010",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "32971703-b4c0-4da4-aa3e-7781b34445d9"
        },
        "item": {
          "id": "e4414cbc-379c-461c-9fa1-d1875a3e21e5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6cf41920-c1d8-4119-897e-2ae884b81eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae18810-abdf-453b-ae26-1f41e3c41e95",
        "cursor": {
          "ref": "58818469-fae1-4037-bbca-77b3a32cd371",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "19aa49e1-4bfe-4280-a19e-42b3894d8da5"
        },
        "item": {
          "id": "4ae18810-abdf-453b-ae26-1f41e3c41e95",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "62c1b3cd-6c93-44ba-85f4-675af39a8131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860663f2-6e48-463b-8482-e9051738f75d",
        "cursor": {
          "ref": "2c4ab366-4f56-42e9-9d99-0a44b7c7fb65",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f7c5e8eb-9cb7-4e03-9507-d7bbacc4a0c6"
        },
        "item": {
          "id": "860663f2-6e48-463b-8482-e9051738f75d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8887beec-c867-44b9-a95e-96a1b306906d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8cf2f6b-4f0a-45f9-a9c4-9f0d0c35133d",
        "cursor": {
          "ref": "ad37ca04-857f-4a60-ac9b-6430d3264046",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "465589a9-3cdb-47d4-87e0-d28a49094367"
        },
        "item": {
          "id": "b8cf2f6b-4f0a-45f9-a9c4-9f0d0c35133d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "846a7bb8-f70f-4069-b3a7-371c99ec1ba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f0775aa-4d64-48a4-a8bf-526a01ac2f96",
        "cursor": {
          "ref": "01f15f61-0784-4821-9f5d-2cea10a7037c",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ca92bee5-c5eb-410d-a7a9-54e79fda91f6"
        },
        "item": {
          "id": "7f0775aa-4d64-48a4-a8bf-526a01ac2f96",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d78720dc-88a2-44e4-9e81-ab3007755e7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4b641f-81f8-4ac9-9a7a-5c5a66836d43",
        "cursor": {
          "ref": "c5909960-7d7d-4947-aadb-746046a4f722",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "023ce984-d865-4a0c-a958-63a11193ac86"
        },
        "item": {
          "id": "8d4b641f-81f8-4ac9-9a7a-5c5a66836d43",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "0e406453-95c9-4ecb-8e05-1f2eee2ad67e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd69c06a-9bb4-404d-bd87-9bb6086cc4af",
        "cursor": {
          "ref": "5a21a630-2a27-4878-b213-5ebade3b2752",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "e8b127d6-ff3e-494f-a3da-4265ec363bd9"
        },
        "item": {
          "id": "dd69c06a-9bb4-404d-bd87-9bb6086cc4af",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "82e7c910-8936-477f-9fe3-7304b3785c57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d51479-4027-4bb4-8a00-2005e4ad2089",
        "cursor": {
          "ref": "b9f76f02-184f-4993-b5cb-63aa4ab87bf3",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "cd9dd302-dfc0-42ff-ad74-5711484428fb"
        },
        "item": {
          "id": "60d51479-4027-4bb4-8a00-2005e4ad2089",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "38512d37-09f5-4f95-867a-f5105b2a422c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa17ed1-0c09-4d77-a9d3-98b0e4f5e500",
        "cursor": {
          "ref": "7c8e6ab7-000a-45d5-a42f-fa3ff0879851",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c3efcf78-7f67-4dfb-a6a6-1f28242ad39a"
        },
        "item": {
          "id": "aaa17ed1-0c09-4d77-a9d3-98b0e4f5e500",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "33d27e79-c63f-4c15-b7ce-694ba49cd6c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "814d1357-d960-4e47-8334-c6d4403aa7cf",
        "cursor": {
          "ref": "c8ebf04e-6b40-4b1e-95a8-ee0929ec1712",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "bc1b7271-c033-461c-a159-b43c6ccf0528"
        },
        "item": {
          "id": "814d1357-d960-4e47-8334-c6d4403aa7cf",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "8c885a33-81cc-45b8-94ac-3e54eb1dab96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d18d43c-f4f1-418b-a287-d88586126399",
        "cursor": {
          "ref": "5d481338-ab7d-4b8c-9a7d-6e7cb22c8329",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "2ae25da5-a08b-48df-9b02-bcf48c93cd2a"
        },
        "item": {
          "id": "9d18d43c-f4f1-418b-a287-d88586126399",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "ba1b395b-e87e-43f2-926d-b560fec1df7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf99361-1649-4164-bd7c-51b41dc856da",
        "cursor": {
          "ref": "11c835ce-6bd6-48e4-aa84-1e91ffe5d2aa",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e8c43ed7-a76c-4679-b81a-303d812048e0"
        },
        "item": {
          "id": "fdf99361-1649-4164-bd7c-51b41dc856da",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4eb982db-ed63-4b5a-9997-601a7c8487c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e30ac23-d529-4c73-9dc6-a4234615516e",
        "cursor": {
          "ref": "47006f68-13ff-41af-83af-46b6e3ea2577",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "8224e240-bc31-4017-938b-fc630f982424"
        },
        "item": {
          "id": "8e30ac23-d529-4c73-9dc6-a4234615516e",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "84f620e5-e6a7-4f2f-a316-0da383161080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080b2fb8-f15a-49d5-aa0c-733de633a6e1",
        "cursor": {
          "ref": "43ce9b73-aa17-43c1-b34a-90fbbe466ca3",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "50535e2b-0431-47d0-8c47-a26af2a0cb99"
        },
        "item": {
          "id": "080b2fb8-f15a-49d5-aa0c-733de633a6e1",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1af9cb32-f91d-4b74-a71f-340d2622088e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6ac00d-fce1-4846-bc16-dee94f7532f8",
        "cursor": {
          "ref": "c159ae12-18f9-4b27-bee7-85d8391a406e",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "a38a5bf8-baae-4d1d-9248-338f3c8d5b3e"
        },
        "item": {
          "id": "6b6ac00d-fce1-4846-bc16-dee94f7532f8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8cbdad24-b2a5-4f62-9910-3c44ca92ccc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d2fe905-f277-42bb-8939-c54a1303a69b",
        "cursor": {
          "ref": "70850e8f-0c95-4247-9657-ce011c0b7c0c",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e7df5f2e-111a-45b9-8dd7-f183db2d173e"
        },
        "item": {
          "id": "8d2fe905-f277-42bb-8939-c54a1303a69b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "fb9d56f0-2cfa-4a1f-8839-abdaa8c1867b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6148508b-d198-4745-b3e4-5c633fd9113a",
        "cursor": {
          "ref": "f916de87-d3ac-4e11-b971-9193f2c1b20e",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5709431c-939c-4d89-bbbb-15c7e5925e13"
        },
        "item": {
          "id": "6148508b-d198-4745-b3e4-5c633fd9113a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5c3893ab-54a8-4796-9c93-fa3c022a83bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a7a0ff-4fdd-47f5-bd52-47236df347a2",
        "cursor": {
          "ref": "af0d6618-54ab-49dd-9ca1-44009ac84cc9",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "e0a637a9-d54a-4d8f-8c41-e4ab5a7d3e7a"
        },
        "item": {
          "id": "f5a7a0ff-4fdd-47f5-bd52-47236df347a2",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1901dcfa-2698-426f-9d2b-d0ddf1b46bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b06f22e7-865f-4a81-9658-e95c3f3d5008",
        "cursor": {
          "ref": "ba27af05-6b9c-438d-8376-a3b1cfca85f8",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "044f2b77-3342-484e-9d22-a5d4449dc38e"
        },
        "item": {
          "id": "b06f22e7-865f-4a81-9658-e95c3f3d5008",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ad004a05-d3a9-48fb-add2-b9b488c50c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9014f0af-a650-438b-9e00-ffa24bf8c1f5",
        "cursor": {
          "ref": "45df1dc6-2c3f-4490-a913-d3b1e53431d4",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "aeead720-988e-449d-b1a4-5d4fea33cb2c"
        },
        "item": {
          "id": "9014f0af-a650-438b-9e00-ffa24bf8c1f5",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "313d0a5f-b9a0-4317-8ad5-cc9f7a7b4bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cfd4fe1-ca4e-46db-83c5-314a475b24fa",
        "cursor": {
          "ref": "9ac95f78-2873-4e3f-94a7-a654b97267ee",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "c1dd0267-6d8c-4b3e-822e-413b7247afbc"
        },
        "item": {
          "id": "5cfd4fe1-ca4e-46db-83c5-314a475b24fa",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d125fc46-e930-4ecd-86f5-3ecc6418cc65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec9bcf9f-80ff-474d-b45f-1433e05b8a49",
        "cursor": {
          "ref": "a9f3eba5-fe87-4acf-a027-f421692cc1a3",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "75d99328-c0c4-4cb1-9a34-481455c36b74"
        },
        "item": {
          "id": "ec9bcf9f-80ff-474d-b45f-1433e05b8a49",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3cd4db43-2fad-400d-bbaa-a0118ca20803",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 46,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c63bdd9-3084-4437-b509-b96d029a0d7a",
        "cursor": {
          "ref": "3289ab22-06d1-436a-9e3e-f91987334982",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "ea6d6ed9-376c-404c-9a19-f590c35b94bd"
        },
        "item": {
          "id": "5c63bdd9-3084-4437-b509-b96d029a0d7a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "311fd8dc-68c6-462f-87b8-093a8c643385",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3d5d5f1-9c38-4c65-a61a-138a357280a3",
        "cursor": {
          "ref": "ec0dd6a3-86d7-412a-ac69-5598f55e9fbc",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "5c354faa-c0fa-4f3f-b232-a0f8095eeb3a"
        },
        "item": {
          "id": "a3d5d5f1-9c38-4c65-a61a-138a357280a3",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "86513796-8fa2-4fa2-9ec1-c7df68656458",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f20856-115b-4e2a-8293-7cef5ccf3379",
        "cursor": {
          "ref": "1fc54520-3902-4eea-b09c-9048b4a04133",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "9a9df4b6-8802-4be5-a043-dc13c60e315e"
        },
        "item": {
          "id": "05f20856-115b-4e2a-8293-7cef5ccf3379",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "de48b8ec-8789-482c-aad4-1e5aedea8038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354c419b-72de-44f9-a205-3d00b49ee4e0",
        "cursor": {
          "ref": "4a50639b-2172-4a58-ba77-51da264bb1df",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "17d636cd-185e-4be2-a96d-be046560dde3"
        },
        "item": {
          "id": "354c419b-72de-44f9-a205-3d00b49ee4e0",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "0beecb16-9a26-4b30-9ba1-91b4f7838cde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "713b4a12-0f0f-4e17-9ee4-464f6804c277",
        "cursor": {
          "ref": "44a0fc3f-7183-42cf-908f-698969a15131",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ef10d9f2-d8e2-494e-b2f3-789447c3c6c9"
        },
        "item": {
          "id": "713b4a12-0f0f-4e17-9ee4-464f6804c277",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3a0c96ef-25fd-420e-ba84-908f5599b139",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5610b92-b256-484d-88e5-9d331aa8c41e",
        "cursor": {
          "ref": "e993b409-41ac-4acf-8abc-6d83fde58c17",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "d758f0e6-8d9b-4519-8c1a-157385f23838"
        },
        "item": {
          "id": "c5610b92-b256-484d-88e5-9d331aa8c41e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9e778b9b-4e7b-4a44-a77c-9714a1a9e55b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "522942dd-7474-4630-8681-57aaa011653a",
        "cursor": {
          "ref": "92b73f5e-910e-4443-bab2-7b04f588d606",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "50e72a39-26a0-4952-afeb-3cb934916f26"
        },
        "item": {
          "id": "522942dd-7474-4630-8681-57aaa011653a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6bbf12ec-7e03-44ea-a139-75d315f1a43e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 46,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce2a3e1-62c1-4946-9f0a-24d5a6c67d0a",
        "cursor": {
          "ref": "b5d5a8db-0de9-4940-a518-ed7caab1215b",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "4e9d940a-d0ed-4d31-ab44-dcf7ee2dd508"
        },
        "item": {
          "id": "5ce2a3e1-62c1-4946-9f0a-24d5a6c67d0a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "37d67f74-6b65-4cda-a7be-eff64fc34e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbfa0fec-f3dc-4b22-b9c1-a772da11b2f6",
        "cursor": {
          "ref": "9d44097e-3812-4d18-bf18-6cfd6f77c0a3",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "817f9621-28ce-4915-9a5c-c252706f5296"
        },
        "item": {
          "id": "bbfa0fec-f3dc-4b22-b9c1-a772da11b2f6",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "38327db2-5188-4b85-bd99-672f2e0dbe40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aec20b3-680f-4088-857d-3cf6ef3c5b94",
        "cursor": {
          "ref": "e06aaad6-94cf-4345-bff4-f3d103231f80",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "38304727-a9f6-495b-8e21-761afc6c9181"
        },
        "item": {
          "id": "2aec20b3-680f-4088-857d-3cf6ef3c5b94",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "24b5aaae-2095-46f1-835b-40fb52083895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8172c2cf-a6ae-4a85-931d-965bdba35a9f",
        "cursor": {
          "ref": "63d2d7ec-0897-4ab9-9847-0a56d5b3abed",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a732f102-b868-4c69-9acc-8b42682a7f64"
        },
        "item": {
          "id": "8172c2cf-a6ae-4a85-931d-965bdba35a9f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f6a79b87-054e-48cf-9dfc-943c44899f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cc3322-fb0f-4d20-8f37-f4e70e869e70",
        "cursor": {
          "ref": "f7d93f47-03c6-40d7-a3fd-c1fe88627168",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c66cc888-7249-4fe2-b1c6-834c7fda6baf"
        },
        "item": {
          "id": "a2cc3322-fb0f-4d20-8f37-f4e70e869e70",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "0197196a-87c7-40db-8bc6-49058a7850bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e64fa0f-bc73-4d3f-b4e9-79fac6a49841",
        "cursor": {
          "ref": "e24e2baf-6bb9-412f-a9fd-a56105d6c618",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "98f78b77-8424-4afa-80c0-eea82ff7696c"
        },
        "item": {
          "id": "3e64fa0f-bc73-4d3f-b4e9-79fac6a49841",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "c144775a-7561-493e-bf87-82f4ee10c339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e421ad44-d9ce-482b-8398-8c018c616f45",
        "cursor": {
          "ref": "b02dc8fc-764c-4479-9966-6212929057a7",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "aafb6966-1439-44bb-818b-72f219ce2090"
        },
        "item": {
          "id": "e421ad44-d9ce-482b-8398-8c018c616f45",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9e30ed8e-df54-4185-86bd-82fc547b4136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2b340c-78a1-442e-81e0-4e38d20b3c23",
        "cursor": {
          "ref": "a25b98a6-f91b-40f9-b3a6-5ca2615e2e75",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5977495c-d69c-406f-afd5-92f2c6bd4f9d"
        },
        "item": {
          "id": "bc2b340c-78a1-442e-81e0-4e38d20b3c23",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "f78d4a32-6321-458e-b97a-e6a2c8a974ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18bced4f-edf5-42e3-b093-0ac291eb4cce",
        "cursor": {
          "ref": "678aa064-fb72-485c-825e-5ff0e931cb3b",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "43f32440-557c-46c4-a250-46240f6eabc5"
        },
        "item": {
          "id": "18bced4f-edf5-42e3-b093-0ac291eb4cce",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b9d70379-1c45-4c71-91c9-7a24ca48df05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c0d9fdb-0c95-46c3-8265-8727d3c110e8",
        "cursor": {
          "ref": "3698932c-efa8-41dc-9586-c76f133e1587",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "955d0e60-1f25-4a8a-a661-ab4aecbdca12"
        },
        "item": {
          "id": "3c0d9fdb-0c95-46c3-8265-8727d3c110e8",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "5dd43899-11de-43f8-896f-b109f6cc6ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414aa223-2b51-42a3-8d9e-9909f14e3717",
        "cursor": {
          "ref": "81f423c0-2bbf-49f9-8b3b-805bc502a314",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "75c64765-c4aa-455a-a9ac-0716649c7a65"
        },
        "item": {
          "id": "414aa223-2b51-42a3-8d9e-9909f14e3717",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "45a6b18e-266d-483a-8327-9887099b5651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "146b2414-1624-48db-a7c9-5ef66a9802e8",
        "cursor": {
          "ref": "d578208e-2e60-4269-ae21-f3574c40be6a",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "87d87150-08c7-48c0-9d4d-e1679f5edda1"
        },
        "item": {
          "id": "146b2414-1624-48db-a7c9-5ef66a9802e8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e166e516-1245-4368-b301-856112392414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafdf825-d9c6-4142-84e8-0a055a04d2b2",
        "cursor": {
          "ref": "f2135490-ad60-43a2-a7ad-bb99472deb9f",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "c0d72ded-3ea6-4b3e-a65b-579fc9e2a811"
        },
        "item": {
          "id": "aafdf825-d9c6-4142-84e8-0a055a04d2b2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "332eaf20-31b2-42d8-83d9-698a579a940a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84599521-2647-4b72-97e1-8b9a449c1082",
        "cursor": {
          "ref": "2bcb466e-c720-4b6b-bba8-a70552229ca1",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e990392a-0e24-4478-a1c5-68dcd58aca71"
        },
        "item": {
          "id": "84599521-2647-4b72-97e1-8b9a449c1082",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "cf159064-cc45-4ab8-98bd-a7242a4416a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f07fcf0-4b1c-441d-ba5e-66c1a98e3182",
        "cursor": {
          "ref": "c9e4de7f-93fd-422c-8fb0-2dc163c6f6f4",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "866bb3d5-22ce-48cf-aeb9-8e22f49dad25"
        },
        "item": {
          "id": "3f07fcf0-4b1c-441d-ba5e-66c1a98e3182",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "49af30ff-b394-427a-af48-fba57670b711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a36f576-e821-4717-afac-9f7a1da458db",
        "cursor": {
          "ref": "cf5d7bf0-4910-4abb-94e6-97c95e2c8eec",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "eb21b66b-d9e5-459b-87cd-0e97934abf70"
        },
        "item": {
          "id": "6a36f576-e821-4717-afac-9f7a1da458db",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c9813757-9119-49d4-9b98-ad0959a0d1d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54dd03a-f62d-4180-95a1-83061183c2e0",
        "cursor": {
          "ref": "3af75fd0-945e-4ccf-bb6b-43114baf3c08",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "30cf22e7-e361-4a66-941b-c76923bdc983"
        },
        "item": {
          "id": "e54dd03a-f62d-4180-95a1-83061183c2e0",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b5fd8c7e-7c6b-4e4c-a451-e707490c89ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3a7052a-5194-4dda-99a6-7629bdddf477",
        "cursor": {
          "ref": "60b42e0d-875d-4698-abdc-aef5052d105a",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "38080633-d3ec-46e5-a570-36b86b13e27c"
        },
        "item": {
          "id": "f3a7052a-5194-4dda-99a6-7629bdddf477",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "098c3fbe-911a-4956-ac37-78ab1ed06b9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78e0ff7-72b0-489f-804a-6b1455c7e1d6",
        "cursor": {
          "ref": "37635add-a731-47bd-8039-17e68e833cff",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "88edc07a-4b77-4f96-8ae4-c61feb806214"
        },
        "item": {
          "id": "d78e0ff7-72b0-489f-804a-6b1455c7e1d6",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5ec71caa-5ff0-4438-9395-960f5fc50fe7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18dcba65-8e0c-4130-bb2f-b64fcb619073",
        "cursor": {
          "ref": "b6f5abb6-430f-47de-bdbe-365ae6ebb97b",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "e729b942-4ec3-406c-ae79-87b89edc71f4"
        },
        "item": {
          "id": "18dcba65-8e0c-4130-bb2f-b64fcb619073",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "48d4b042-f25f-4585-8ac8-37b2eb4192fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c31865-1c03-41b3-9113-4a8f75131943",
        "cursor": {
          "ref": "596523df-f21d-47c3-92a4-ce8ea9495aac",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "1533ed43-b414-4acf-8365-4400a0f18cc5"
        },
        "item": {
          "id": "13c31865-1c03-41b3-9113-4a8f75131943",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9e0ce866-feef-47b2-ab92-a9b619dcb49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebd8cde3-8c8a-4c8a-bb8a-280a8cd5e446",
        "cursor": {
          "ref": "1aec958d-b1c6-4f11-81ef-ae58c0651c32",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "85448906-ec0b-4271-9fb4-5b75447d188a"
        },
        "item": {
          "id": "ebd8cde3-8c8a-4c8a-bb8a-280a8cd5e446",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "76bc170a-7178-465d-a7cb-02897362d23e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a2d73e-589a-4557-99e0-47d9e1fb212d",
        "cursor": {
          "ref": "50bd6eac-5479-427f-975f-a530336ce530",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d0004bea-42cc-434f-afe1-77123c1b344c"
        },
        "item": {
          "id": "a7a2d73e-589a-4557-99e0-47d9e1fb212d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "74574fe2-f5ae-4628-8322-754bbf2b0d24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "797a32b8-68eb-423c-9429-86086d926e09",
        "cursor": {
          "ref": "ee5b8559-8a1a-4b04-ab16-7998e1555826",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "91370505-edcc-4faf-b6d8-2d4d98353be1"
        },
        "item": {
          "id": "797a32b8-68eb-423c-9429-86086d926e09",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "be3ac84f-db77-47d0-af99-a1fb7aa55538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6eae6f-0a40-4dfe-a714-1bdeac612214",
        "cursor": {
          "ref": "79039768-bcd9-4384-94f1-d00e8677c7da",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0adc3376-a626-40ca-929b-ec844a8f56b6"
        },
        "item": {
          "id": "ef6eae6f-0a40-4dfe-a714-1bdeac612214",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a30d6e60-c274-4a44-9900-dccbca98f1b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2999b1b3-6a70-47f0-ab95-c46deb6d8a3d",
        "cursor": {
          "ref": "c0c781c4-d781-40d7-ba53-78c22c0fa878",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a1208923-5340-41dc-abd4-2ed18b637a47"
        },
        "item": {
          "id": "2999b1b3-6a70-47f0-ab95-c46deb6d8a3d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3a5a4545-de88-4932-856b-41cda13c06a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f870b3a7-4111-4da5-bfd3-ff6bdf02e91c",
        "cursor": {
          "ref": "72ea46a5-478c-47c5-a601-9f0557ac6458",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "09f5ffb4-c6a5-44cb-bd17-df71594dc2a8"
        },
        "item": {
          "id": "f870b3a7-4111-4da5-bfd3-ff6bdf02e91c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "e3807237-9fee-48b1-a32e-79825b8da093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02607ec6-d9a8-43d3-a247-69caeb18f2c7",
        "cursor": {
          "ref": "b85d8ea0-37f3-4398-a49e-6e5d8819add2",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "591ad633-da97-415b-b952-f4b1545d8e79"
        },
        "item": {
          "id": "02607ec6-d9a8-43d3-a247-69caeb18f2c7",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9fec8655-4577-4047-b51b-07550f0fbce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5239c0a3-1eee-41dc-b925-c3e8c866e2e1",
        "cursor": {
          "ref": "773ee57c-ad28-4fa5-91dc-3c7483544d28",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "56fba458-b8f0-4367-b7c6-0ee5e8d08cde"
        },
        "item": {
          "id": "5239c0a3-1eee-41dc-b925-c3e8c866e2e1",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ec1e3168-7681-4463-8c07-6d224f989d33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb64155-62e0-4f96-be37-d157ae99fe52",
        "cursor": {
          "ref": "900e1a1d-1d7c-4171-a4f7-0434f3d0f5a9",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0be2500f-5d42-4778-98e3-823c3ce376a8"
        },
        "item": {
          "id": "afb64155-62e0-4f96-be37-d157ae99fe52",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "aa99b536-311f-4e6f-9268-80a95bd48bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801c6e1f-82ef-4878-a1e5-7858ecc3a0d8",
        "cursor": {
          "ref": "af7658bb-3350-46d5-86fc-d62a5379a8f4",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "edd4803c-7308-4ff1-8bea-9d814cac991b"
        },
        "item": {
          "id": "801c6e1f-82ef-4878-a1e5-7858ecc3a0d8",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "defe3948-6a73-4cd4-a7ea-5595a0992a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b2e9ba1-ba57-40f0-b1a4-5b31499053f6",
        "cursor": {
          "ref": "c359d71e-5817-4c98-b6a8-95139225c4ac",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "0af81381-2432-47ab-a601-3e87f57871e6"
        },
        "item": {
          "id": "2b2e9ba1-ba57-40f0-b1a4-5b31499053f6",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7c7736a5-9a75-460f-abb7-c9d9e50145aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73fa99b1-26ef-402d-ad7a-d8d664fb74b8",
        "cursor": {
          "ref": "0e0cc504-5002-44fb-88ba-8ed81ec0e59a",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "59193a19-f318-437d-bff9-41fb0ad277f5"
        },
        "item": {
          "id": "73fa99b1-26ef-402d-ad7a-d8d664fb74b8",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "8346b7c3-8118-45ab-89aa-eda94637e83b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d477b69-f75b-4d36-b2dc-28e359453214",
        "cursor": {
          "ref": "614584db-86d3-4054-ab80-537130ec9019",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4ee9f4d7-8ece-471b-921a-ac7c621a3a3f"
        },
        "item": {
          "id": "0d477b69-f75b-4d36-b2dc-28e359453214",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6853b726-a38e-4c61-a835-546ce28fd133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b38929e-0bd4-43c3-b6e3-5151853455dd",
        "cursor": {
          "ref": "3616567b-2bb1-4ed8-8d66-bc4d3b207043",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "cf855c37-498a-4d43-8058-a5a30c098deb"
        },
        "item": {
          "id": "2b38929e-0bd4-43c3-b6e3-5151853455dd",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1a179847-9b6e-4cb8-b1ec-6ae1c8bc21aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420e0efd-67d1-4d50-abdd-f6a2bb1e4b39",
        "cursor": {
          "ref": "b1ce2bf7-fe2f-440a-8526-076e954068d1",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "21b70b7a-7de7-4899-8ca3-60106feb6fc9"
        },
        "item": {
          "id": "420e0efd-67d1-4d50-abdd-f6a2bb1e4b39",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "27225638-8244-437b-bdd0-fb1a54a5a3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b564649f-95f8-4ba0-93df-bec58784c487",
        "cursor": {
          "ref": "92f30ea5-d0e1-467d-9ba9-6ba57bf4d6a8",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e306167d-d652-425f-a9e7-0428386eee98"
        },
        "item": {
          "id": "b564649f-95f8-4ba0-93df-bec58784c487",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "32c9be54-1ffa-45c8-891c-47c864d214b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe990ea-8370-405a-a11b-4ab02ec52946",
        "cursor": {
          "ref": "0406b129-9eb7-4650-a0a7-cfe044cbbd77",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7f896c6c-80dc-446a-83bf-5cc2b6131d3e"
        },
        "item": {
          "id": "cfe990ea-8370-405a-a11b-4ab02ec52946",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "1e228deb-8710-4113-8827-acc3dde3ad24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4f7c8c-856e-4c08-b15f-3fe744d732d1",
        "cursor": {
          "ref": "d5d998e9-18cf-4c19-abc2-0d0cc3cf9988",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a0052194-b611-49d7-b9d5-e97f9ff766a3"
        },
        "item": {
          "id": "bb4f7c8c-856e-4c08-b15f-3fe744d732d1",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "ad73f629-ade3-4392-b280-10cd7b9da346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88b0287-3d9e-4c62-b6db-e5b3534c7424",
        "cursor": {
          "ref": "0bef83e4-e7a5-48b9-9340-d8379f3c8a10",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "944c0324-aabc-456c-8757-196dc60527d9"
        },
        "item": {
          "id": "a88b0287-3d9e-4c62-b6db-e5b3534c7424",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d848a3a7-94f7-4446-a200-14413aed3e57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab47e75-6cb0-4820-b051-a412653e276e",
        "cursor": {
          "ref": "668b8534-18b9-47d5-a24d-87769e368e41",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9c62ff4f-ba59-439e-894a-99c349c6d27d"
        },
        "item": {
          "id": "fab47e75-6cb0-4820-b051-a412653e276e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "9d756ead-e245-4ceb-9924-a5a4f635514e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4e27c8-9d95-4876-bc7d-8350bb59b12e",
        "cursor": {
          "ref": "dc6210b6-e9a8-4923-9bb5-e8ccfa498316",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "d387f80e-8b4b-4694-b426-e67deacc996d"
        },
        "item": {
          "id": "ef4e27c8-9d95-4876-bc7d-8350bb59b12e",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ee9c664e-3946-4fa6-b67f-915d481ea427",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "822284a5-1e5b-449e-88d1-0d61bc44e60b",
        "cursor": {
          "ref": "3e50c0c5-323b-4eba-8027-ce135dba50ed",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f95157f7-f8af-4fa4-aa57-e6b6109360ea"
        },
        "item": {
          "id": "822284a5-1e5b-449e-88d1-0d61bc44e60b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "cc4a34cc-09d7-43fe-a3c7-8ce3ac15a1e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dccc44a-28c4-4547-b6dc-31e294ae6e63",
        "cursor": {
          "ref": "91328898-bc1c-43b0-a522-e4763a8e88e3",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "c27f9d10-82fa-42c0-a7fb-ca5823ab6917"
        },
        "item": {
          "id": "7dccc44a-28c4-4547-b6dc-31e294ae6e63",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "a600037b-545d-4eff-aaf5-7e25fb6e4c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c2b7e34-a6b8-4f3e-83a9-6c29d7cc42a6",
        "cursor": {
          "ref": "486b9e50-5645-4f29-9526-ad081a049055",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "2b6b3439-c008-4e63-9df6-c3c70383eb8d"
        },
        "item": {
          "id": "7c2b7e34-a6b8-4f3e-83a9-6c29d7cc42a6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c9af8ee4-c2c1-4fd1-9118-38b6a053c6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fff8cce-3103-4b17-84ce-1bf701c77ed9",
        "cursor": {
          "ref": "19e1aab6-3674-409f-989b-1a2cab8fd607",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9db4b434-f704-4f6f-8fdd-234e6f48fc27"
        },
        "item": {
          "id": "8fff8cce-3103-4b17-84ce-1bf701c77ed9",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "9406ed2b-2e98-44b4-bc3c-0e3521a15dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f58202eb-1765-4028-a336-2c927819baaf",
        "cursor": {
          "ref": "c71c9ee7-8df5-48f5-8feb-b185e0bb85f2",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "4e020e4c-58be-45e3-be63-0e5eff020292"
        },
        "item": {
          "id": "f58202eb-1765-4028-a336-2c927819baaf",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "ac9ecea4-51bf-4cd4-9110-778d3f0a22cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce391c64-0ecf-4852-bb47-296d3b8f2034",
        "cursor": {
          "ref": "98868275-0483-41bf-8c1d-4e67b9f90926",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "bec8ed6d-5316-49a5-975e-c208f44fef41"
        },
        "item": {
          "id": "ce391c64-0ecf-4852-bb47-296d3b8f2034",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ee4f8d6a-7cce-4567-919b-74638a8bb0aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "409c8eec-7e2e-461d-a46c-fcfb2f2391c6",
        "cursor": {
          "ref": "ae5c5eb8-bca6-4933-9a60-2790c7760f72",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d7fd33fa-2692-42a1-adc0-1a5f716cb163"
        },
        "item": {
          "id": "409c8eec-7e2e-461d-a46c-fcfb2f2391c6",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7d80ff0e-baaa-4b82-a906-156b10967dd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b11b336e-5553-4f6e-980a-9e0260384358",
        "cursor": {
          "ref": "f68c788b-c05f-455f-a133-40a36ce6773a",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "058099cf-e12c-439d-97c8-e9d3e60761f0"
        },
        "item": {
          "id": "b11b336e-5553-4f6e-980a-9e0260384358",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "5edb3a06-3567-47ea-a514-ac60e81d9ad0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00103325-c82a-4997-98bc-d4ae868c2abf",
        "cursor": {
          "ref": "6c5d7a48-44f5-4f2b-88b0-feaeaf92f356",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "52425fe2-920d-4626-bd96-0f14e0878967"
        },
        "item": {
          "id": "00103325-c82a-4997-98bc-d4ae868c2abf",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "57f9a10b-b8e4-48a3-a38d-95362618caaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "6d7c3e2e-dccf-466f-847e-2b65a96a0837",
        "cursor": {
          "ref": "d709abff-a105-4701-90bf-301953a8bec5",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "95c87e0b-76a1-4ef1-852c-80fa822050d5"
        },
        "item": {
          "id": "6d7c3e2e-dccf-466f-847e-2b65a96a0837",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c2f7fe16-f182-4be5-a9b4-05806023eaed",
          "status": "Created",
          "code": 201,
          "responseTime": 13784,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe08454-d21a-41e9-a3fe-850f73024bb2",
        "cursor": {
          "ref": "9b200113-6504-4486-906c-b775f9d761be",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d096e180-c807-47ae-9de3-79fc1ba32c5b"
        },
        "item": {
          "id": "ebe08454-d21a-41e9-a3fe-850f73024bb2",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "f8a0d1e8-ac72-42de-9238-8942bffc8fe7",
          "status": "Created",
          "code": 201,
          "responseTime": 13075,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "04684459-2137-4af5-aa50-4365554b29d3",
        "cursor": {
          "ref": "ce4461b1-8ee4-4c31-aef5-9133b4e072b7",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "66bf6c95-7a61-43f6-90d5-50892b61462b"
        },
        "item": {
          "id": "04684459-2137-4af5-aa50-4365554b29d3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9cc695fd-fc3b-407c-99fe-a7e26f0c9e25",
          "status": "Created",
          "code": 201,
          "responseTime": 13682,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "368a1715-6f8b-447d-87b3-6562147d8ba0",
        "cursor": {
          "ref": "735169c1-113a-4d86-8c91-d2839f008ad9",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "202510df-d174-4cab-a753-ed73c04c48d0"
        },
        "item": {
          "id": "368a1715-6f8b-447d-87b3-6562147d8ba0",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d790970f-b50b-4080-b1fa-d70ddc42cc41",
          "status": "Created",
          "code": 201,
          "responseTime": 14013,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fee4a0-47bc-4b29-86f8-8b4b966e326d",
        "cursor": {
          "ref": "3b37bd4f-d4e5-4f65-ae3c-fb0ae8329bef",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "dd7c42a8-4064-4b8b-a32d-2bfa71cc6d66"
        },
        "item": {
          "id": "a5fee4a0-47bc-4b29-86f8-8b4b966e326d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "23873ac8-a87e-497f-bbc2-e5b140107973",
          "status": "Created",
          "code": 201,
          "responseTime": 13084,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-09-07T00:43:24Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-09-07T00:43:24Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "604a1c02-5350-42df-98c9-af89d3aaafd8",
        "cursor": {
          "ref": "8734113b-f656-4fac-a951-a4f04a884f25",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "ca292be1-7efb-43d0-a0dd-3c8469d5798e"
        },
        "item": {
          "id": "604a1c02-5350-42df-98c9-af89d3aaafd8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4a733ddd-07ab-4e6e-bf2c-ac50036b510c",
          "status": "Created",
          "code": 201,
          "responseTime": 13667,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "664725dd-b858-4159-9f79-ef0cd74ab894",
        "cursor": {
          "ref": "93de8651-2908-4a20-a579-6b0db9cd16ed",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1298c44c-c537-4956-ab16-ca3678d02ccb"
        },
        "item": {
          "id": "664725dd-b858-4159-9f79-ef0cd74ab894",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "2c6dd1a3-ae20-43c6-bc40-c8fc069b2384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 168,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "743adc0a-9e0f-4221-9ae4-9b68604ddf64",
        "cursor": {
          "ref": "c6f6f044-72c5-4ae8-a513-81c4e23661ce",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "0ae39aae-0e09-4233-98f3-3f99511d86a4"
        },
        "item": {
          "id": "743adc0a-9e0f-4221-9ae4-9b68604ddf64",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "a46d42a5-2dba-4821-9d21-ce996f43ccd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "786a8b4c-3214-44b6-b32c-cd6a28f63273",
        "cursor": {
          "ref": "213cce18-e0b8-4c1a-85fa-6fb46c9968ee",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f7b9f88a-ef55-4b4b-99a4-f547f43ddd51"
        },
        "item": {
          "id": "786a8b4c-3214-44b6-b32c-cd6a28f63273",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6aa989c8-ca9e-41cb-9267-98e422e48ba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73deebc2-8226-489d-b933-d0a50d7d07af",
        "cursor": {
          "ref": "67a9ee93-4e2e-4d44-9b2f-31d9dfdf3697",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "35e8edb9-1ae7-467e-9fcd-7d913b24defd"
        },
        "item": {
          "id": "73deebc2-8226-489d-b933-d0a50d7d07af",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3bbf2b3b-51cd-4653-bba6-848e01c2892a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934a7bd0-1467-4b29-9d61-00b815bc508d",
        "cursor": {
          "ref": "47b4a76e-cb2d-46d2-8de6-6cda8adeb771",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7dfab0f0-e9d1-48c9-8d34-71707305e238"
        },
        "item": {
          "id": "934a7bd0-1467-4b29-9d61-00b815bc508d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6f84dcca-dabd-4fc8-8df9-9002275b8984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "807c61c4-0354-4cd5-b743-2b1b545fc3d8",
        "cursor": {
          "ref": "347ca800-8422-480a-9760-5c35f574a55b",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8664832e-558b-4700-8ee0-40f4435df939"
        },
        "item": {
          "id": "807c61c4-0354-4cd5-b743-2b1b545fc3d8",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "574e44db-6f80-487d-a845-c0722b54a3b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d17fb3ec-453a-4273-bab5-d694f4d2de70",
        "cursor": {
          "ref": "88c06375-0efb-4992-911a-dc105b8ff0fa",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4246a6e3-a04e-46bd-9823-b5600c4f3a68"
        },
        "item": {
          "id": "d17fb3ec-453a-4273-bab5-d694f4d2de70",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "c62fd3f9-977a-4f64-b5e8-77f112d22aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29646a9-452a-469c-a39a-469d9144bfe1",
        "cursor": {
          "ref": "5c965c8a-4a82-4222-a65c-32bde8a8631e",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "7dac8732-523f-42cd-a840-89602c5423c0"
        },
        "item": {
          "id": "d29646a9-452a-469c-a39a-469d9144bfe1",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5c19dce4-f088-479f-af04-ec300b6c04fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a56a5a5a-eb16-4bb3-818c-1c2c4598e3a0",
        "cursor": {
          "ref": "bcbb9c26-85c2-4d1a-ba5d-7f5a7b6d9b88",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b1c73cb0-64e5-4f4b-bffa-b9c0fc5c0aef"
        },
        "item": {
          "id": "a56a5a5a-eb16-4bb3-818c-1c2c4598e3a0",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "29604c3c-428e-4eed-abe0-2895ea7fbb5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6e130b5-6a5c-4207-948c-c804517d31d8",
        "cursor": {
          "ref": "95d7c531-dce9-48e1-9337-6983f535149a",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "3f30fbf3-6d3b-4d24-8723-13737ce34b4e"
        },
        "item": {
          "id": "e6e130b5-6a5c-4207-948c-c804517d31d8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "1b44e609-b61a-4ec9-b68f-10fc8ac69cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59ba2468-ccc7-4c7d-b51b-fb3a0a485331",
        "cursor": {
          "ref": "fff68054-4765-45dc-8f17-847814a4f5e3",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "984f5e4b-9c0b-48d7-bc0c-41275e451026"
        },
        "item": {
          "id": "59ba2468-ccc7-4c7d-b51b-fb3a0a485331",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "dcf26191-6c05-4013-9166-79a1a59f1158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23cfa2bb-4ed1-4f4e-b075-e621bdbb7321",
        "cursor": {
          "ref": "0e493e19-8de2-4d97-9fb4-5a56f576554b",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "e5d07b55-4d1c-43f5-b7e3-a5ea7ae7c458"
        },
        "item": {
          "id": "23cfa2bb-4ed1-4f4e-b075-e621bdbb7321",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6b4a57aa-9ef8-49de-b218-db8f9ba95153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de43a8d0-d7eb-44cc-a315-ab39021b472e",
        "cursor": {
          "ref": "8dcda6a5-edc0-444b-a2b1-685b0524f465",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "ed69e8e2-8581-4aae-890f-2a979b5efcb2"
        },
        "item": {
          "id": "de43a8d0-d7eb-44cc-a315-ab39021b472e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "fdb6a804-0bb2-4070-99a9-49d781c9bad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590ee5a5-9d3b-4acb-8895-de5d17af831d",
        "cursor": {
          "ref": "f84ef293-21e5-4e89-848d-2c76d1238dab",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "50cbfc70-9b8d-4312-b268-030de37babeb"
        },
        "item": {
          "id": "590ee5a5-9d3b-4acb-8895-de5d17af831d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "cd91449f-2924-47c0-861e-6374fc0ff70c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c35003a-c03f-436a-af23-556d34f45880",
        "cursor": {
          "ref": "955dae80-8f15-4f52-90ca-184ae957a82d",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "08f99f42-752d-4dfe-977b-e144ccd66ba5"
        },
        "item": {
          "id": "3c35003a-c03f-436a-af23-556d34f45880",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8e10aa08-7b04-409d-adab-e3381463c096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ae696f3-33db-458f-855d-eb915469f33c",
        "cursor": {
          "ref": "aecb8f10-a95c-4e89-8356-5e36f851fda2",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "d83ce43d-a45d-4e6d-8bf0-1f14a3c3ab53"
        },
        "item": {
          "id": "8ae696f3-33db-458f-855d-eb915469f33c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "97c43115-650a-407c-9b26-c770a8bfc3cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31ff8f78-8e0d-4107-bea5-e4b36afea80b",
        "cursor": {
          "ref": "d6db9892-1eb0-40fa-9845-f63cdf8385f9",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "891edce9-4e4b-4307-adfe-191c54904260"
        },
        "item": {
          "id": "31ff8f78-8e0d-4107-bea5-e4b36afea80b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "5c7af5bb-3f96-4806-8722-8037ec74ec40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce1ba94d-cb6d-49ef-8a02-1f38d3550c12",
        "cursor": {
          "ref": "da7a3284-cf4f-4882-9f6b-885460135428",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8e352d13-ff82-46bf-a67c-1bed5514ae5c"
        },
        "item": {
          "id": "ce1ba94d-cb6d-49ef-8a02-1f38d3550c12",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1fc7243f-7546-4029-a95c-0f850fdcf08a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee8f19a1-6ac6-4b07-be4d-1d03a26c9ec8",
        "cursor": {
          "ref": "98dbc6a1-ed43-4522-b1ae-423f50f7a093",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "995fe235-ba87-426f-b00b-647ed2f6658a"
        },
        "item": {
          "id": "ee8f19a1-6ac6-4b07-be4d-1d03a26c9ec8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "49d5a624-267a-40f3-96e7-de49eeb327a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cefcfab-1d14-401c-8004-aae9e5d9483a",
        "cursor": {
          "ref": "aaa51aa9-f542-4d4f-a0fd-0ac8d8ba72a1",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "30161ee3-bacc-43e5-8a2d-543065308336"
        },
        "item": {
          "id": "4cefcfab-1d14-401c-8004-aae9e5d9483a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "8e299b8b-540a-449a-8d4c-5aca46e5ba67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b563eac9-a361-4c38-8fec-cfcaaea8678c",
        "cursor": {
          "ref": "db67f045-cbdd-4ed3-932e-11239b218698",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "dc001e45-1790-449f-9695-bb9ac0dfb4e2"
        },
        "item": {
          "id": "b563eac9-a361-4c38-8fec-cfcaaea8678c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "a70ba70e-1edc-4565-aeff-d5d02daf866e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cc905f0-4672-4fe2-8a3d-bf0ac1336696",
        "cursor": {
          "ref": "91e26269-fed1-4e98-8f90-af3b8086b141",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2a1ca20f-4a55-48ff-ad2a-3c479eee5dd0"
        },
        "item": {
          "id": "1cc905f0-4672-4fe2-8a3d-bf0ac1336696",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "b3445cdf-f634-49ac-aa17-3aa16dd02d9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd447ab-8d2c-4579-b980-095d7846712c",
        "cursor": {
          "ref": "b9813d06-4fb6-4253-843e-9d1f903061da",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "904d8892-f630-45c7-beb2-4dc31a56ef83"
        },
        "item": {
          "id": "3bd447ab-8d2c-4579-b980-095d7846712c",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4d684dc2-2594-4c3b-ac87-1d45cb763c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da62a2e3-e8d8-49a7-8ff4-7338e02fdb44",
        "cursor": {
          "ref": "4080e8ce-ab84-4d33-b803-f034a56b91f7",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "aaae2f5b-b209-43aa-b5a9-c6164bbfa187"
        },
        "item": {
          "id": "da62a2e3-e8d8-49a7-8ff4-7338e02fdb44",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "54a36301-c072-4326-98e5-702126c62aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64cefd9-15dd-42b2-9100-732d4a30ee39",
        "cursor": {
          "ref": "635d000d-b585-4c67-8f13-42786759cce3",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "0f10906b-9e81-4664-b1e7-15b3b5c3f41a"
        },
        "item": {
          "id": "c64cefd9-15dd-42b2-9100-732d4a30ee39",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1607cfc6-7e77-4ba8-be46-10ee2c7d2b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed6f795-1276-4138-893f-97cbbd5c6e81",
        "cursor": {
          "ref": "a6a0e782-bd52-4613-b46e-b8eed1a47387",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "e6594ac1-1568-4852-a25d-09db0d0e4681"
        },
        "item": {
          "id": "3ed6f795-1276-4138-893f-97cbbd5c6e81",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a9abab1f-959a-4137-aa68-88fe67679a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b698055-3685-4b51-ad2f-e24195cf8247",
        "cursor": {
          "ref": "75a06033-4a7e-42a9-8251-0869a14094ad",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "9f7d5f78-5104-4bb2-a75b-e1f0752d3e8e"
        },
        "item": {
          "id": "0b698055-3685-4b51-ad2f-e24195cf8247",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "4b45b4da-2ccd-4b28-ba3a-68072ef6ba6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb75c31-dd36-4da0-90ec-2d3755f939c5",
        "cursor": {
          "ref": "88915b95-ac3d-40ad-9c4e-52d5a9984e82",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "9eb64272-b03c-4ab3-ac61-0ff11a4548ed"
        },
        "item": {
          "id": "2fb75c31-dd36-4da0-90ec-2d3755f939c5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "760d92d9-df02-4678-86b4-f558810337c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ce2c20-73d8-49cb-854e-8b28af617d4e",
        "cursor": {
          "ref": "c384e1e3-e1e3-4d7c-a088-dd88ce909a0e",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "c172699e-82bb-434a-b81d-09a2a1cb8499"
        },
        "item": {
          "id": "b2ce2c20-73d8-49cb-854e-8b28af617d4e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "df68bf7b-c452-4474-a953-d1e3b4f02a3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389f5cb4-8292-4101-baf6-876da7fce3f4",
        "cursor": {
          "ref": "465f7d97-4aa3-4f7d-9fdb-92044ac5d23c",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b90b8f9d-f77d-4a3a-b8c5-3a5be6d4ed4c"
        },
        "item": {
          "id": "389f5cb4-8292-4101-baf6-876da7fce3f4",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "015326cb-3cdc-4e0f-a57f-97ffe073d0a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c3c56e6-5914-4bb6-93ee-5c1f6c1ff44b",
        "cursor": {
          "ref": "2bd191ec-8f04-4da8-b07e-8f9a063318ad",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4eb1a7b9-080b-409b-8f26-3d22470823b6"
        },
        "item": {
          "id": "2c3c56e6-5914-4bb6-93ee-5c1f6c1ff44b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3f156cfc-0b79-4216-aab8-4f04991c1e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa769d3-777d-4471-8bd2-65cfd0861ffa",
        "cursor": {
          "ref": "63c418d9-55a9-4a0b-9c0a-a417f12543c1",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1517cb60-8ddd-45e7-b4d9-38305ff99596"
        },
        "item": {
          "id": "eaa769d3-777d-4471-8bd2-65cfd0861ffa",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "01f94883-eb26-4256-92a9-8f3d9c2061d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25b5b50-e6c2-4bc0-97fd-31745ff66653",
        "cursor": {
          "ref": "bd0b3eb2-fccb-480a-b183-88fe38122c76",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "8b581271-d62e-47a3-9e97-a656d1ae627a"
        },
        "item": {
          "id": "f25b5b50-e6c2-4bc0-97fd-31745ff66653",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "b66ff67c-1f06-4854-b0a6-2017294f87c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41cc442b-aa9c-4b6c-b00d-0c97654d234f",
        "cursor": {
          "ref": "147f9b7f-0924-4d39-9394-f2eb90fe46c9",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "cb0a939c-536d-47eb-8e91-3251f4cc793b"
        },
        "item": {
          "id": "41cc442b-aa9c-4b6c-b00d-0c97654d234f",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e755ded6-48a7-4330-9792-bd780a239016",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442d9465-db20-41ef-8201-4a00f17537cc",
        "cursor": {
          "ref": "bb337103-62d0-4eea-8ecb-5a2f34f458c8",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "d8c00463-39c6-412b-910c-93f1278e87da"
        },
        "item": {
          "id": "442d9465-db20-41ef-8201-4a00f17537cc",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ea496b7d-f5c8-4e31-ad74-ce69c5d7832b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc703d4f-bd6f-4314-9a64-6ad4fde7f792",
        "cursor": {
          "ref": "2d4f8741-79f6-40de-9cbe-891b89b4a7a3",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "392defec-d7fc-4580-a0e1-f69e87c75776"
        },
        "item": {
          "id": "cc703d4f-bd6f-4314-9a64-6ad4fde7f792",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "30a9fc67-2a2f-4af7-b994-260c3a7fe7fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061a4493-bb54-4013-a11a-6a0bcb9ea537",
        "cursor": {
          "ref": "bff172b7-f8ee-4d30-9ad5-4571854568b2",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "1dd24558-8183-4ae3-9b9b-d1d211c4e663"
        },
        "item": {
          "id": "061a4493-bb54-4013-a11a-6a0bcb9ea537",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d3536e94-6441-4649-9b51-a6c443c30432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7679af00-3860-4611-8298-458af8a51a57",
        "cursor": {
          "ref": "5eaa8540-f51c-4aea-a3ef-c7482392e709",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "3fc9bdfb-f29f-4543-bbc8-7dc234c0871b"
        },
        "item": {
          "id": "7679af00-3860-4611-8298-458af8a51a57",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5fd3c579-8114-405b-94d7-85881c0af5c6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09d6312e-f4f7-481b-9edf-a6c64b0538a4",
        "cursor": {
          "ref": "ad60a40b-83ca-4ee2-b7e1-ee6f8478dfaa",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "49084eed-8bd5-4522-9849-5ff487223367"
        },
        "item": {
          "id": "09d6312e-f4f7-481b-9edf-a6c64b0538a4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "18eb136a-3bd9-4c41-848b-518f0144bcb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb6e23a-c97a-4298-afc4-8cf10365e7de",
        "cursor": {
          "ref": "1362af3e-63b2-478c-8412-53f29a19f5b5",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "95b023db-cac1-4faa-b40b-3cd256d6e843"
        },
        "item": {
          "id": "ecb6e23a-c97a-4298-afc4-8cf10365e7de",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "fd719cc5-7048-46a6-ab2d-ce9a2a3f1fdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a77163d-dbb2-4dfb-aedc-a691f1f66624",
        "cursor": {
          "ref": "1d972973-195f-450e-886b-de2034e6fe1e",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "28b6f97a-305d-46c3-a008-c5d3b87e097f"
        },
        "item": {
          "id": "9a77163d-dbb2-4dfb-aedc-a691f1f66624",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "abd76353-d4ff-4c37-9387-7dccab741f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f63ed4a-f786-4169-9202-d59f9fe7e17e",
        "cursor": {
          "ref": "c5d673fe-5dc5-4702-ace6-86ce61a5e619",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a7b8e03f-5e5b-4514-8693-13645fa0b61a"
        },
        "item": {
          "id": "3f63ed4a-f786-4169-9202-d59f9fe7e17e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a6c297cc-0e58-414d-b0e5-83ca84abfdb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a32e8eb-f324-44a1-819a-73248ab76f1f",
        "cursor": {
          "ref": "7d462935-688f-4e65-85c7-ecee5c9101fc",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c5baec95-4b48-4ad4-b931-89e036f49b67"
        },
        "item": {
          "id": "0a32e8eb-f324-44a1-819a-73248ab76f1f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "d4a34d43-7af7-42ca-8617-652d4b38d715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30297376-bf89-4719-898e-41725abbae95",
        "cursor": {
          "ref": "4691088f-238f-4d5f-8fcc-a44390ef7d63",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "53e40af4-15cd-4f61-abbd-19fffafabc87"
        },
        "item": {
          "id": "30297376-bf89-4719-898e-41725abbae95",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "75138279-e84c-4b5b-bea7-afd1218a6d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "484dd711-68ec-48ad-93cb-fbd1f1341f44",
        "cursor": {
          "ref": "54fc80bd-515e-44a1-9495-7ed39e762b55",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7353ddcb-e34f-4991-afcc-67327a499cce"
        },
        "item": {
          "id": "484dd711-68ec-48ad-93cb-fbd1f1341f44",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "6de07319-8f83-424e-8f05-de0758be6314",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "698e54c9-0464-4b14-888a-f594f0fc2a7e",
        "cursor": {
          "ref": "ac659f96-28ca-4dfb-813d-0aad2ea3f104",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7b1aea86-328f-42c4-962c-bc1a885b4833"
        },
        "item": {
          "id": "698e54c9-0464-4b14-888a-f594f0fc2a7e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "10f41bc3-e6ca-4cc4-a40d-9e0599739bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f245d568-99a9-4c9b-803c-baaaf29275f2",
        "cursor": {
          "ref": "1024991f-5e77-4fdf-83b6-790cef0f2b91",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1c5ac257-7a47-4948-9756-d1eda10f66a7"
        },
        "item": {
          "id": "f245d568-99a9-4c9b-803c-baaaf29275f2",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "7e75dbe2-e826-41c1-92eb-5979b62ca985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bba9d39-7a6b-4b8e-b78c-31cbd1d1c619",
        "cursor": {
          "ref": "6ca0b4d9-ca94-4fe1-b72e-7918e85f2262",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "fe56ab36-94b6-4b0d-9471-9956695260a0"
        },
        "item": {
          "id": "7bba9d39-7a6b-4b8e-b78c-31cbd1d1c619",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "229e23ce-10a3-4c32-bc9b-1cc84d9f3b32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6956fd23-8985-4794-972d-4827876cb176",
        "cursor": {
          "ref": "6a9603e7-8b86-49ad-896f-ae1f9e26db71",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "863e2430-2a66-4ff2-b202-dee610342bf8"
        },
        "item": {
          "id": "6956fd23-8985-4794-972d-4827876cb176",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e95b9350-0fc0-426e-b6ad-0dfbe9096436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cecb0b1-202f-4995-bef4-14d46c579f38",
        "cursor": {
          "ref": "9c53c8da-c0d2-4656-904d-576f0656f39a",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "8ca88a0b-8e92-4fa4-9a4d-e7595f472d45"
        },
        "item": {
          "id": "5cecb0b1-202f-4995-bef4-14d46c579f38",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "478ed7d3-9940-4b7c-a93e-3c1609260715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54a03684-2a79-46ec-924f-d4485734b663",
        "cursor": {
          "ref": "4f21a05c-7b25-4fc6-9be2-5ee76fd3a1f3",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e4678d81-a4ec-44b4-91db-ce506424c159"
        },
        "item": {
          "id": "54a03684-2a79-46ec-924f-d4485734b663",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "bee86d3a-ce1c-4c98-be3b-73186397d8ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9278efe-1e82-48f3-91cb-d988c7ba8f7b",
        "cursor": {
          "ref": "d3476a76-3d0b-428b-bf97-a4cd1e01bb26",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ebbce50c-14cb-4e0e-9622-e10fcddf6289"
        },
        "item": {
          "id": "e9278efe-1e82-48f3-91cb-d988c7ba8f7b",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "3059a219-e487-45e4-bedf-564dd2756064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e70a60e9-3e81-4a1c-bd15-b0340fc0a8d0",
        "cursor": {
          "ref": "a6fd34d8-d01c-4933-9e67-a4c042b14849",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e645effb-7fe9-4516-95b6-1338921fca88"
        },
        "item": {
          "id": "e70a60e9-3e81-4a1c-bd15-b0340fc0a8d0",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "af3201b5-e7cb-46fc-b156-f14fa2f7ef7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608cbe51-f349-4c63-941a-966830cbb204",
        "cursor": {
          "ref": "edfab4a6-e977-4618-b140-aeb0b57bbd9d",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "aa0e802f-3fc9-439b-b949-4ac875e12a97"
        },
        "item": {
          "id": "608cbe51-f349-4c63-941a-966830cbb204",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "166e7f2a-a713-4166-8fd0-8e9ef45b3696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc23729-2a5e-4a65-b479-d88c0cb4a361",
        "cursor": {
          "ref": "d7d0b2c9-47b5-4077-8f9c-b8bfa4ec5979",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d00c8914-cd01-4c9d-9436-716cb7a2872a"
        },
        "item": {
          "id": "cbc23729-2a5e-4a65-b479-d88c0cb4a361",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "3f3508a9-1a94-4fe2-945d-34a6139a64f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc9d430-f81f-482f-8253-f20a4263a3b8",
        "cursor": {
          "ref": "d0c40368-dc2f-4ee6-9f79-e68cac081cd2",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1b13cc37-4d02-4f9c-844b-e5d6f5c502c3"
        },
        "item": {
          "id": "bdc9d430-f81f-482f-8253-f20a4263a3b8",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6da5ba91-d4c5-40ad-81e2-28bc5800326b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b17628c5-77cb-4f4b-958f-5266b3c0dcdf",
        "cursor": {
          "ref": "92ece7c1-ce6c-4da3-92ff-5a7c649193c0",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "52aca96b-0ad5-423a-882e-f4d2f16b79ed"
        },
        "item": {
          "id": "b17628c5-77cb-4f4b-958f-5266b3c0dcdf",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "4935204d-0001-42d5-9179-e71b392abbba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2945ea63-7499-42f6-a15d-774f706fa4f5",
        "cursor": {
          "ref": "5f69d23e-8876-4cba-bd39-26fad5de2a50",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ad938b5c-fdab-4fb0-85ee-6542673c21eb"
        },
        "item": {
          "id": "2945ea63-7499-42f6-a15d-774f706fa4f5",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "bd4fadd5-a24e-4067-83be-4fa974fbb9b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fdaa298-6ee6-4fd9-9055-e4897449fc31",
        "cursor": {
          "ref": "38acb96a-4460-4789-bd24-529dbec97bae",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a295ce7d-c526-4e95-bc4e-15bb32fb61eb"
        },
        "item": {
          "id": "2fdaa298-6ee6-4fd9-9055-e4897449fc31",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "4cb531a6-4e53-4217-b49d-4b59e67ab849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b7534e8-0e51-42d6-beb9-b1427ecf72f6",
        "cursor": {
          "ref": "f151d19f-1554-4a6c-a1b5-140529d33c5b",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "afbeef15-92e7-41cd-9788-bf97c885ab60"
        },
        "item": {
          "id": "0b7534e8-0e51-42d6-beb9-b1427ecf72f6",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "fc24b6f8-d1cb-4bc0-91c7-9ec662f61434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2df99119-baab-41cf-af46-792ba9704db9",
        "cursor": {
          "ref": "7b60c7f2-c178-49af-9673-3c40557d5d91",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "2a35a6bf-f04c-4d5d-82fa-de44a6e4bcca"
        },
        "item": {
          "id": "2df99119-baab-41cf-af46-792ba9704db9",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c8a4fcdd-6acf-4674-aa3d-4afdedc66994",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b358904d-30e5-4879-b254-0a0c841a0806",
        "cursor": {
          "ref": "78746b5c-95b9-473a-ae50-2e0f5611f8af",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "4322731c-3f47-4835-b842-f3bf4f353b5c"
        },
        "item": {
          "id": "b358904d-30e5-4879-b254-0a0c841a0806",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f1f38d56-395b-4fb3-8672-3d72f4c06390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e8e560d-0d3a-4d3e-aa46-376eda6e6f01",
        "cursor": {
          "ref": "b8382f7b-1bd8-442b-9ccb-6e3d1db2e97d",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "e9149ae4-090e-436f-9e2b-70c985231505"
        },
        "item": {
          "id": "7e8e560d-0d3a-4d3e-aa46-376eda6e6f01",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "6ae1e204-699e-4a90-85c9-63c2f76cf09c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6250be-61f2-4d9e-b1a5-c2f052509c26",
        "cursor": {
          "ref": "518de095-6c66-4190-b91e-892e780e3723",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "25d92c53-0317-45fd-a6be-8dfdbce76c48"
        },
        "item": {
          "id": "ec6250be-61f2-4d9e-b1a5-c2f052509c26",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "55ecc187-a075-4551-a269-44bf3a8a9ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51751f5-f09c-4247-9457-9a5af8c66c8a",
        "cursor": {
          "ref": "7182bdf1-f287-4d09-8072-e5eb7c3e3986",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "e9f4aaeb-e262-4fed-b660-b3fac0daeb96"
        },
        "item": {
          "id": "a51751f5-f09c-4247-9457-9a5af8c66c8a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9aeffb77-d86c-4c18-bdf4-a76501ba12ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2dca9e2-16e0-4890-969d-d59913c54e34",
        "cursor": {
          "ref": "ac6c9bcc-fcde-444b-93d3-d9d6b8df60af",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "4f49aa13-49a5-45df-82c4-e98819960f8c"
        },
        "item": {
          "id": "f2dca9e2-16e0-4890-969d-d59913c54e34",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "6a39096c-dd95-4968-a901-bfcc3bad4201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b2f02b-4285-4323-8b4a-835a7ca52a80",
        "cursor": {
          "ref": "5e7c1513-f662-48a5-b4fe-711f027a84d4",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d08dde6a-8bc2-41e0-a3b1-47e40caca642"
        },
        "item": {
          "id": "36b2f02b-4285-4323-8b4a-835a7ca52a80",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9ac226c5-ae9b-4e7d-96d6-a22752964657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb29d42-68ca-41b7-8dfb-40793eaeee0f",
        "cursor": {
          "ref": "f0a1dd12-15fb-4a0f-a692-2d1a964bed1a",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "c3ec8d9c-27da-4c6b-bb01-6c9f0b8698ea"
        },
        "item": {
          "id": "feb29d42-68ca-41b7-8dfb-40793eaeee0f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "4b9ea6ba-dab2-4e3d-a093-afb1b7610772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd7c8679-be09-4031-bc1c-705e6ae6072b",
        "cursor": {
          "ref": "e6ef3055-a522-44c4-a2b6-ead12e3da6cc",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ea588193-b18e-43d1-a959-76684186e59f"
        },
        "item": {
          "id": "dd7c8679-be09-4031-bc1c-705e6ae6072b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "243dd06c-9c89-4102-adeb-7ef211edeeaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382d069d-4746-4062-a6d0-db09ae8dc27e",
        "cursor": {
          "ref": "f23f2c86-5015-4e80-b891-89d359d20ff6",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "bdcc3795-8f94-4814-aa2b-732c35b58f16"
        },
        "item": {
          "id": "382d069d-4746-4062-a6d0-db09ae8dc27e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "65980526-b99e-4f73-94c8-1ec2cd79b825",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e549353-e7b5-4fd7-a738-a69d9b8288fb",
        "cursor": {
          "ref": "61c98f6f-4620-4138-b7a1-18c2cf480e8d",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "0c866a58-f3ff-4e75-a1be-ce28dfdfb303"
        },
        "item": {
          "id": "7e549353-e7b5-4fd7-a738-a69d9b8288fb",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "059cbd86-e590-42c7-9863-e834889c8218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd80617-3958-4e98-a159-711fbcc2423a",
        "cursor": {
          "ref": "6065aff6-109e-4893-9989-400f5b71ec35",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "0f12c015-1177-4bb6-985e-c88e90c7392e"
        },
        "item": {
          "id": "4bd80617-3958-4e98-a159-711fbcc2423a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "829fb8ff-9016-4791-8652-adb2f4194d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29366f80-8b50-4152-8676-627dcad8e3de",
        "cursor": {
          "ref": "eac4ef16-33e4-42b1-a074-9ab2c97e2b7a",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "613043b1-50c7-4371-afa7-fdc695d072c1"
        },
        "item": {
          "id": "29366f80-8b50-4152-8676-627dcad8e3de",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1180a836-67ff-49c3-8798-56d6f8faed8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6885a6-0f6d-4d6e-a00e-3bf616746fec",
        "cursor": {
          "ref": "a00dc420-50ec-4197-b93b-03c85a97e55e",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "179b18e8-5089-4959-a1c7-b2b4d6331f3b"
        },
        "item": {
          "id": "1b6885a6-0f6d-4d6e-a00e-3bf616746fec",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "cb4391de-cec6-4672-a57c-485d4c9341ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "575328f8-6365-4206-a5e9-de62367df2f4",
        "cursor": {
          "ref": "d942406a-027f-4b62-b3f9-09c52d1abd5b",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c90767e4-713b-4e7c-ab35-42e18ae68014"
        },
        "item": {
          "id": "575328f8-6365-4206-a5e9-de62367df2f4",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "73461147-ee8f-465a-bc80-f99f2721d8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78b56daa-11da-451b-a027-b46e9b49c288",
        "cursor": {
          "ref": "de33652c-59a5-4895-a4df-92423ca5c18d",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "ea5fe71d-ef8e-4935-a179-76fbbe06e8dc"
        },
        "item": {
          "id": "78b56daa-11da-451b-a027-b46e9b49c288",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d238f81e-a49f-401d-8ff1-fb20f73b9f6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19663b4e-ae2c-4102-b98e-083d1c98e86f",
        "cursor": {
          "ref": "b3284c9c-4d10-4261-b3f8-23201d0cb700",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0676e246-53c0-4eb0-b89a-9110425e016c"
        },
        "item": {
          "id": "19663b4e-ae2c-4102-b98e-083d1c98e86f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "41d44595-fe81-4129-8256-04222aec96a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52eb048-7450-4a3e-80ac-cca5233794f4",
        "cursor": {
          "ref": "28ea20f1-1ae0-4741-a562-a63cb82b6910",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d6f92c03-a901-47e0-b9de-ef3930832f29"
        },
        "item": {
          "id": "f52eb048-7450-4a3e-80ac-cca5233794f4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7248de6c-ff2a-444e-b2f1-c2de12334d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff734a1-afc2-4ea8-92ab-083a109a4283",
        "cursor": {
          "ref": "760a6be6-6f25-474b-bedd-c92d07ed5e7b",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e1e7ee6b-2c9f-445d-a529-cbd58ac8bdf1"
        },
        "item": {
          "id": "fff734a1-afc2-4ea8-92ab-083a109a4283",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "65597bb6-446e-41d8-821d-eb8459a0d128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86db24e9-c16f-4cdc-8b6a-d56c60c57dcc",
        "cursor": {
          "ref": "cf4a7c19-28c3-4681-9708-91a0acf8dd1b",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "73830783-a9fd-49f9-8473-f6aaae033e06"
        },
        "item": {
          "id": "86db24e9-c16f-4cdc-8b6a-d56c60c57dcc",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d0fd62b8-06af-4c94-a739-74baf9d9ae61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b359e007-7757-4008-9e10-ae71307b3b9c",
        "cursor": {
          "ref": "40dcdd83-b50d-4a5d-a901-12ab994a0768",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e2eb20b3-9f31-48e8-a8e1-b856ae1c016d"
        },
        "item": {
          "id": "b359e007-7757-4008-9e10-ae71307b3b9c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "df4d8532-0459-4e49-b29e-394e4547590a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad34eff5-eb7b-491d-b55d-69f230445be8",
        "cursor": {
          "ref": "3529b016-79a1-4f0d-8161-ab36936f6b2b",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "bb50f66b-b78f-45f8-9f73-f84d8dc20c5d"
        },
        "item": {
          "id": "ad34eff5-eb7b-491d-b55d-69f230445be8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d952ecff-f639-411c-ab68-08aa33ef57fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e43dba-5aa7-4f22-ac75-e498f1f95541",
        "cursor": {
          "ref": "74c5a106-e1e6-4c81-aa22-7cf96c084bae",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "84cebe05-673d-4e1b-a34e-e12bb1a9e743"
        },
        "item": {
          "id": "d5e43dba-5aa7-4f22-ac75-e498f1f95541",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "353b5d10-55be-4649-ac73-bb11c7e38e89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68da460e-0be8-4ffb-a86b-1efa069b2dd4",
        "cursor": {
          "ref": "50523848-f860-45ce-99d6-fed0698595a4",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "94365318-0fa9-46f6-b697-df59ba857838"
        },
        "item": {
          "id": "68da460e-0be8-4ffb-a86b-1efa069b2dd4",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "834b8507-b307-4ef6-8ed2-f8345ceac3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "666f36f4-0bba-4f48-9f1d-f21ebcadb662",
        "cursor": {
          "ref": "04cc980e-8d12-4909-89b9-99ced018266a",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e22cdeaa-d83f-4087-abc3-a965e5d11c6d"
        },
        "item": {
          "id": "666f36f4-0bba-4f48-9f1d-f21ebcadb662",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9620fb9f-c13f-4aa1-b7b1-75f7188d3ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc9ffbb-1aab-426e-aec4-9df4f925ad53",
        "cursor": {
          "ref": "4315238c-3ffe-4eaf-823f-0216f1beb0d1",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4bb6501a-c8ba-4bd3-8d4e-10b1a9269c9b"
        },
        "item": {
          "id": "fdc9ffbb-1aab-426e-aec4-9df4f925ad53",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "5a171ba2-f030-4ddb-b4e6-6992da240444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b43fb4-fa81-4d84-8311-7f4ee9c65044",
        "cursor": {
          "ref": "2fb4ac68-ecf5-4dd5-b5c8-ab2ada449172",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "65ffd5a7-5a46-4a01-834a-91bbf1dcafdf"
        },
        "item": {
          "id": "65b43fb4-fa81-4d84-8311-7f4ee9c65044",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ac3ce653-22b4-4439-82b9-d27831e0cecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e472224-d866-401e-a29e-c11a913a1a72",
        "cursor": {
          "ref": "e74ab527-22e9-4577-9233-bf79743d79c0",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e891f422-35e0-463a-8067-7e6a4b5f815d"
        },
        "item": {
          "id": "0e472224-d866-401e-a29e-c11a913a1a72",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8bad9b83-b35d-47f9-bd9b-a203e750d567",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6f9211-467b-4d2b-9607-45b90f786b88",
        "cursor": {
          "ref": "0b4c2b22-c788-4651-9738-4b158dfc8fda",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "666ac2b1-73f7-4f66-98c6-016226ca36d0"
        },
        "item": {
          "id": "cb6f9211-467b-4d2b-9607-45b90f786b88",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b4fe5158-b47e-4cc5-b0d3-d4cfacb9e734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea7800cf-c34e-4f07-88fd-f4a93fc5eb18",
        "cursor": {
          "ref": "264fedbf-1c67-4397-8f0c-61be941ca45a",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "60cea54f-0e9a-4e1a-b699-31acf4268811"
        },
        "item": {
          "id": "ea7800cf-c34e-4f07-88fd-f4a93fc5eb18",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "2a036f49-cb5c-4c42-9824-6d2c55276522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a503e53-510b-49cf-a049-cd84061bf24d",
        "cursor": {
          "ref": "2a7ee05b-2bf9-4d11-9a57-57ba54ec642c",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c5ae0b72-ec97-457d-a19a-a43e4e540e11"
        },
        "item": {
          "id": "6a503e53-510b-49cf-a049-cd84061bf24d",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "804d7e02-b501-46ae-a2f0-e03c185f8cca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb394a7-6a8c-4d65-a7f6-9994e0c0fac6",
        "cursor": {
          "ref": "60a72e52-aaa3-444b-a563-28a9f0d229b2",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "464bf1f2-11c7-4408-86f2-f1932bf6fba5"
        },
        "item": {
          "id": "ccb394a7-6a8c-4d65-a7f6-9994e0c0fac6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "f265cbdd-781c-4517-a94d-d174c908c670",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c0e231-b159-4b77-8a73-3ab843a4cf06",
        "cursor": {
          "ref": "d9e04446-6dfc-4f23-8034-59f8aafa7863",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "bc9f9b08-4dbf-40ef-afd9-da4cb1a3ee1e"
        },
        "item": {
          "id": "06c0e231-b159-4b77-8a73-3ab843a4cf06",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b8d30542-2315-4aca-9c5e-d776fa022cea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909a8db8-162a-44f2-adad-0d81eb5ef61d",
        "cursor": {
          "ref": "ca40d672-4682-4b1b-8862-34fb483e7b4d",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d3d7d4ef-b3e9-44a0-b4b7-35aaabfc11f4"
        },
        "item": {
          "id": "909a8db8-162a-44f2-adad-0d81eb5ef61d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "732deadf-215c-4960-9ace-606bcffccd62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50a8dcdc-73b1-4620-9d5f-886b8f0a0f06",
        "cursor": {
          "ref": "a7e1d883-0970-4e7f-82de-580f03e7831a",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "edaeaa84-422a-4cee-a383-76937466a51b"
        },
        "item": {
          "id": "50a8dcdc-73b1-4620-9d5f-886b8f0a0f06",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0756a981-6782-4131-a2fb-d6143f9e4d40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1166fd8d-0cee-4119-bef8-d7174e6951e0",
        "cursor": {
          "ref": "7cf602cd-4983-40e6-af92-b3ea95d3567e",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "da11785f-b53e-4313-b14b-4fcd2db330d0"
        },
        "item": {
          "id": "1166fd8d-0cee-4119-bef8-d7174e6951e0",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "401a74c5-8b8a-4b41-b5f1-a48c75491690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c94c5c6d-93f7-4443-86c8-95e8ec66364e",
        "cursor": {
          "ref": "a4e3f518-6f10-471d-b2aa-2faeff6c8d5a",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "cb953e1b-9664-4ead-aaa4-85b59275d571"
        },
        "item": {
          "id": "c94c5c6d-93f7-4443-86c8-95e8ec66364e",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "d2e302f3-0334-49a0-8fe4-8e17b02ad9a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27d03ba8-17eb-491b-848a-a59b0f0da51a",
        "cursor": {
          "ref": "96a7c36b-d100-4364-8f07-3c36f69b9f97",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "16184fdb-2a39-4b94-9f02-54972d6dc123"
        },
        "item": {
          "id": "27d03ba8-17eb-491b-848a-a59b0f0da51a",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f666fcb7-3d6c-42af-8875-842283d2bf6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b355ef95-6e1d-42ec-918e-76900951e4c0",
        "cursor": {
          "ref": "3c163ab5-d4eb-4f73-b6f4-b5e4d6feaf41",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "408247fd-b0ca-4432-9f6f-39038592a96e"
        },
        "item": {
          "id": "b355ef95-6e1d-42ec-918e-76900951e4c0",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1b033d80-1ae8-49ce-9e52-5457981493dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16bcf85-4489-4ebb-9d3d-0da88acbc9d8",
        "cursor": {
          "ref": "61c46713-ccc7-48a5-97ca-431ff4e3f7b2",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1398b76d-ce4f-4f08-9d2d-3496781f60c0"
        },
        "item": {
          "id": "f16bcf85-4489-4ebb-9d3d-0da88acbc9d8",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "960c5b59-67be-4555-8e41-af92ad13f516",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad0c469-fc37-44b4-8e7a-f3432e6c24fa",
        "cursor": {
          "ref": "c2c3b994-6c1b-4df9-b6f2-4d965335ae0b",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "e5a38f82-d6fa-48be-bcc6-3e050af9810a"
        },
        "item": {
          "id": "dad0c469-fc37-44b4-8e7a-f3432e6c24fa",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "a75558af-d765-4c20-af39-6794d2432339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67076bf-425c-4b1d-820b-39ec1282e4b3",
        "cursor": {
          "ref": "9590c222-5f3e-4d93-9aec-362fcaaaf493",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "63f22850-457e-486f-8b4b-e184e6db65d9"
        },
        "item": {
          "id": "e67076bf-425c-4b1d-820b-39ec1282e4b3",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "6ccfa6a8-4365-472d-af77-2029ee70ce71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9737f0ac-a6bb-424f-843a-31d435ba4346",
        "cursor": {
          "ref": "383e9f3e-e4f7-468a-ab78-70b54318c8f1",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a4e8e920-2a53-4dc1-bdeb-a89ec845fd2e"
        },
        "item": {
          "id": "9737f0ac-a6bb-424f-843a-31d435ba4346",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "f348689b-cd80-416a-8805-2aca02a932ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ff4a79-d2e7-4f6f-8f49-e5875cfee820",
        "cursor": {
          "ref": "a574bf2e-ff49-4c47-bb87-6856522986ad",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "863b8201-3c03-4f44-b515-57204e315b95"
        },
        "item": {
          "id": "60ff4a79-d2e7-4f6f-8f49-e5875cfee820",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2efdc250-281d-477e-a60e-f0a26eb3634b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff604b2f-ad24-4eee-9bcd-5188ba1aaff4",
        "cursor": {
          "ref": "79bc3340-36e1-45aa-bc60-ef929aabaf89",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5fda4a4e-2b2b-4d5d-8a0d-4c29230e4b74"
        },
        "item": {
          "id": "ff604b2f-ad24-4eee-9bcd-5188ba1aaff4",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9c1a01bd-9e19-4ad3-91fd-5638fc959560",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f18d9c-8432-45ec-b25d-6f518912fd22",
        "cursor": {
          "ref": "188b871c-0d8f-4d0a-b742-348a08b829e4",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5b6e5a71-c4a7-48d5-ad38-953572aba71c"
        },
        "item": {
          "id": "20f18d9c-8432-45ec-b25d-6f518912fd22",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7c600d2f-e43e-4264-8c9e-6de7756a5499",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "604531a6-5ca0-4b22-b90e-c063b16ec980",
        "cursor": {
          "ref": "e7a477aa-ce5d-4624-870c-99a676fe0da6",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "12b0f9a9-9f77-42c3-a2a7-b86221a2e157"
        },
        "item": {
          "id": "604531a6-5ca0-4b22-b90e-c063b16ec980",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9a65ac5d-47d8-40b3-9fe3-38d17704af53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b36056-e721-4b21-a703-f8959b23c41d",
        "cursor": {
          "ref": "7d87241d-3e93-4d81-96c8-00f2e0ca1968",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "0cc50b85-b8da-4447-bf10-efec3ec1ba4b"
        },
        "item": {
          "id": "04b36056-e721-4b21-a703-f8959b23c41d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "2ae6b434-741d-4dec-8a64-7aac7a3dec1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdcc366b-a2f5-4473-b3ea-24ebd307a8bc",
        "cursor": {
          "ref": "9c26549d-3580-46bd-9614-ef55f60dd70a",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "cb6d71dd-e7a7-4002-a5c7-aaa8f7c7c22e"
        },
        "item": {
          "id": "bdcc366b-a2f5-4473-b3ea-24ebd307a8bc",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "5ef92201-ac92-442e-9331-62734ae153c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f18634b-2c7c-4565-90bf-be1b17a6fe39",
        "cursor": {
          "ref": "501ca09c-55e6-43ab-92ea-ac7574cc94dd",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "c05ba9a5-d757-4799-b02f-184800466980"
        },
        "item": {
          "id": "5f18634b-2c7c-4565-90bf-be1b17a6fe39",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "8d522813-ad11-4000-85cc-9a9dd799947e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4037cd4a-bf4f-4655-b550-8b5c26685373",
        "cursor": {
          "ref": "eadbbf3b-d5d3-4a45-83b9-b0fe62122f98",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d9cc3647-f7e6-4ca5-b256-44c5fff9fdf3"
        },
        "item": {
          "id": "4037cd4a-bf4f-4655-b550-8b5c26685373",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "48cfda79-ac83-4af4-8f03-57ff566f75ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ea6148-ca0e-46ab-b15e-d1cb3ff431d2",
        "cursor": {
          "ref": "4c0cbdab-516a-486f-819c-ae107a41fe32",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4c72ed9a-4620-469f-82a3-5f28037141bb"
        },
        "item": {
          "id": "a5ea6148-ca0e-46ab-b15e-d1cb3ff431d2",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c4ba74b8-c39d-4a2f-9cd8-a1daac1ef912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659094ff-eefc-4e72-b2b6-628f5a1c36a7",
        "cursor": {
          "ref": "46ae2eb9-4669-4b21-9cb1-ff60a0a50362",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "2b45d4f4-230b-4691-9f34-5a3acfdd2fb6"
        },
        "item": {
          "id": "659094ff-eefc-4e72-b2b6-628f5a1c36a7",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "954df789-bac4-4632-bfc0-d8d199c286bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea95d45-f549-4354-98f9-0dbca14914c1",
        "cursor": {
          "ref": "f54eac1b-9aac-465f-ab17-e0e8dd0e6134",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "02d5e6fb-ddcb-4c87-b4ea-4f7ddaa706b5"
        },
        "item": {
          "id": "cea95d45-f549-4354-98f9-0dbca14914c1",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4455fb07-a54e-45c4-b206-ce852e9d2a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9666d6ed-83c5-4389-b29a-c7fb2f27d54e",
        "cursor": {
          "ref": "88df4178-aaef-4f45-b25c-b148822dc680",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "19349d88-d101-4732-9972-3d300aae7a63"
        },
        "item": {
          "id": "9666d6ed-83c5-4389-b29a-c7fb2f27d54e",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "decdc9fc-cbfe-4048-b40b-d4ca159501bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b032c84-f182-4c76-af95-9688992021d5",
        "cursor": {
          "ref": "cbdbb2b1-67a2-4033-8c59-568552a01f1a",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "c0f02950-7e68-49b2-9df0-e6c8e6b5ab4e"
        },
        "item": {
          "id": "9b032c84-f182-4c76-af95-9688992021d5",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d31b0b59-9692-40bf-8df8-302688862a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2357e54-720d-492b-b2ec-fedfd3168ec2",
        "cursor": {
          "ref": "030951ca-214a-4fad-95db-adc6178798ba",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2471f6f0-16a4-4ed3-bd5a-c4310e162e58"
        },
        "item": {
          "id": "e2357e54-720d-492b-b2ec-fedfd3168ec2",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "343cb892-f99d-4ce5-9498-8164ecff0238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce21a72-3c12-4757-adf3-3958af8f5c00",
        "cursor": {
          "ref": "a1f66a8b-ffa5-4421-ac4a-c2050a764f51",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "57ca609b-4e67-4f49-b307-e330027b8ee3"
        },
        "item": {
          "id": "5ce21a72-3c12-4757-adf3-3958af8f5c00",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "3f581007-ded8-42d7-93d1-fe62c0aee84e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d78355c-e8c0-4b8a-ad88-5ff3800960a5",
        "cursor": {
          "ref": "a0eaa5a5-daf6-4b21-b322-5b62f759ac9c",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ae684952-54d7-4129-b5f5-175b70377ecd"
        },
        "item": {
          "id": "1d78355c-e8c0-4b8a-ad88-5ff3800960a5",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "88330664-7ca6-4fb2-81c5-afa640364b78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3154172b-3cf5-405d-b269-d23cf4e9e5a9",
        "cursor": {
          "ref": "1750304c-2450-48c4-b4fe-ab186f499718",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "fd2ea9b4-7028-452c-8346-3923381ff3f9"
        },
        "item": {
          "id": "3154172b-3cf5-405d-b269-d23cf4e9e5a9",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1cdd1e16-7fd3-4f1e-910e-674098734977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c129383f-34bb-4578-9f7c-79798a342ed5",
        "cursor": {
          "ref": "750af03b-15a1-47b0-873b-beb0edeebe60",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "556a1b2a-f5d0-4863-ba1e-78b7647f1144"
        },
        "item": {
          "id": "c129383f-34bb-4578-9f7c-79798a342ed5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3bc2a709-1841-4156-8a28-975a939eca0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "540981fa-4ee7-4b26-8d5c-81c3890dd87c",
        "cursor": {
          "ref": "e0cd31d9-031f-4035-904e-4a50ed1b44c6",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "3239daba-0635-4de2-a79c-0d6e9bbd1d07"
        },
        "item": {
          "id": "540981fa-4ee7-4b26-8d5c-81c3890dd87c",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "062392bd-3af4-4cc6-b2b2-d346dab48f2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42c30bf-770b-40d8-b332-c7b1e684c0a8",
        "cursor": {
          "ref": "7765c972-2297-4629-a842-76d138607cc2",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "061c8a6f-3858-40a1-994f-64d52b609b97"
        },
        "item": {
          "id": "a42c30bf-770b-40d8-b332-c7b1e684c0a8",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e1b2d14c-7298-4fc9-bda2-e8070964e354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5971f2cf-ce60-438a-9fb0-720d506a95fb",
        "cursor": {
          "ref": "1d374fc6-68ff-4e2d-bce1-529190bf9669",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "a13752f7-fd4b-41d4-9bf5-d0bf8461d0e6"
        },
        "item": {
          "id": "5971f2cf-ce60-438a-9fb0-720d506a95fb",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "bcc250b6-aaa6-47d4-a4d3-40d1b3a921dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f8456b8-885e-4e79-8d97-06e3b39b78ab",
        "cursor": {
          "ref": "07f76574-7eda-49d3-b5fc-014c24d37c33",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "1603c743-3e6d-4911-ae94-0dcc36c8d003"
        },
        "item": {
          "id": "1f8456b8-885e-4e79-8d97-06e3b39b78ab",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "bbc21127-ae0c-4f9e-8228-2da0993ae539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bc73525-035c-42a2-b35b-363a25370b4d",
        "cursor": {
          "ref": "74d7807a-9739-4ae8-afc8-d5ab06fb750e",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "62419f5c-4856-4c59-bc10-e4277204c4f1"
        },
        "item": {
          "id": "7bc73525-035c-42a2-b35b-363a25370b4d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6fa542d3-1691-46de-84c6-f8ef9bb3c201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f4e8f6-bda6-4d0b-8537-cb87e39068cf",
        "cursor": {
          "ref": "b10a9aea-9fdb-4009-8bb2-2365ef1603ea",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ba504db5-4258-4e71-a35b-ee644b651e58"
        },
        "item": {
          "id": "b0f4e8f6-bda6-4d0b-8537-cb87e39068cf",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "83fcbe9a-9c20-4f66-94b4-3e3a34876e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8734f18e-6b1a-4133-9b44-29996f37e297",
        "cursor": {
          "ref": "ed4a2785-23db-4d03-a94a-d75451256a05",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "713d09d4-963e-4a94-aeb0-ff1edf4fba6a"
        },
        "item": {
          "id": "8734f18e-6b1a-4133-9b44-29996f37e297",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "09d9ba3d-7044-4985-95c4-d820fdbf8f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6b6b9c-ee67-4c4c-8c0b-f9b36bf69bcb",
        "cursor": {
          "ref": "650a2900-a619-4244-9c51-708f4b50b768",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0e80109f-7632-416f-bfb2-9286e8b952cc"
        },
        "item": {
          "id": "2c6b6b9c-ee67-4c4c-8c0b-f9b36bf69bcb",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7a6c19b0-900b-47a3-b1f3-f0fc541d9990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abe89d28-8080-4751-8841-42c1e7ff93e1",
        "cursor": {
          "ref": "b1d1f6ef-0524-48e8-b161-aac71ecbd946",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5f00d210-443c-4f92-bc10-49b044d37f36"
        },
        "item": {
          "id": "abe89d28-8080-4751-8841-42c1e7ff93e1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5297cd14-a452-4649-8c7d-b4c8af51854e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "069badee-626a-44ad-a021-a327f34e1e2b",
        "cursor": {
          "ref": "1d65ab5d-3eb0-4dca-ae09-e8483deec00d",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "e0408ea6-2244-4858-a120-21a132f63d38"
        },
        "item": {
          "id": "069badee-626a-44ad-a021-a327f34e1e2b",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "3bc35430-72a0-4404-9d74-0d9fe0692e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5a836e-4305-460c-a4ab-656bca7cc9e7",
        "cursor": {
          "ref": "7846fd26-728e-4a03-a4c6-2dfb05854ea1",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7cbaf2ae-47e0-47d3-902c-6279e3f39072"
        },
        "item": {
          "id": "4c5a836e-4305-460c-a4ab-656bca7cc9e7",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "e441159e-7de7-4ea2-9491-d7e3de5308f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9a5951-3f64-4f2e-b953-87e23d0ed250",
        "cursor": {
          "ref": "0b00290a-8d58-4550-b9f4-c9e8c1504a82",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1cfd2478-15bf-4d29-ac7e-d3fd5da164ff"
        },
        "item": {
          "id": "fe9a5951-3f64-4f2e-b953-87e23d0ed250",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "0afe34d6-c1d7-4ffc-acd7-3c091959d9e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0816bee-173f-4aba-924c-f1e4f1341007",
        "cursor": {
          "ref": "533cc264-b765-4e52-82fe-ec1c20dc9609",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "49688aac-2d2e-4994-9440-95faa98d16c2"
        },
        "item": {
          "id": "e0816bee-173f-4aba-924c-f1e4f1341007",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "11554b72-8bde-48cc-a9ce-11e015cef02f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce0030ee-7328-4cab-8a41-036e747c2a99",
        "cursor": {
          "ref": "6029721f-8f8f-44de-9dc2-9d778f71a5c8",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "3102e32c-643d-4e9a-8a74-bc4dd014799b"
        },
        "item": {
          "id": "ce0030ee-7328-4cab-8a41-036e747c2a99",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f6c9b6f5-8cbd-49a2-9589-5427f6d905ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e768d7df-d4ff-4584-9092-cab9ffe26c1d",
        "cursor": {
          "ref": "4d19305a-cc99-4a25-83ed-7ad3994a9331",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "cbde2ed7-56b1-4415-977c-87bf406f11f9"
        },
        "item": {
          "id": "e768d7df-d4ff-4584-9092-cab9ffe26c1d",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f42d8810-603c-4a5e-beb1-f4d4bd465ee8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "140af0d7-9797-4e7f-bdb6-9f90287d28c4",
        "cursor": {
          "ref": "7e138d4a-be82-4075-b123-3ebf598c0815",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "de379bde-5e01-480e-a208-812b534e520b"
        },
        "item": {
          "id": "140af0d7-9797-4e7f-bdb6-9f90287d28c4",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "b87e9406-604b-4e8c-be83-fc1501fc1402",
          "status": "OK",
          "code": 200,
          "responseTime": 2433,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed63401-51d6-422a-97ba-31cd1448521a",
        "cursor": {
          "ref": "4a997c40-0263-41f7-911a-296d1d35bf61",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5a98d79c-2147-492b-baf2-b6d9567977c3"
        },
        "item": {
          "id": "bed63401-51d6-422a-97ba-31cd1448521a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f453c7d5-c7ef-4ebb-a529-955ebb7ec7d9",
          "status": "OK",
          "code": 200,
          "responseTime": 3414,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3f852d-cba0-495a-9b59-a0f9145d1119",
        "cursor": {
          "ref": "3f2d1fc8-d0e1-4cb5-b141-a05936ab183c",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9655aead-fc40-4084-9925-6a9e913f83d5"
        },
        "item": {
          "id": "6b3f852d-cba0-495a-9b59-a0f9145d1119",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "eb04302f-bdaf-4468-a32d-5ac5ac904ed2",
          "status": "OK",
          "code": 200,
          "responseTime": 3363,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8feb85-d69f-4d8b-a581-3fec000c4297",
        "cursor": {
          "ref": "ee0c30c7-8de3-4336-839a-fb94b402bbd3",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b86e9ef7-a5cd-40ba-b399-4028dc3437ee"
        },
        "item": {
          "id": "4e8feb85-d69f-4d8b-a581-3fec000c4297",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "918c81f6-b4e8-470c-95cb-f94c269bf104",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8feb85-d69f-4d8b-a581-3fec000c4297",
        "cursor": {
          "ref": "ee0c30c7-8de3-4336-839a-fb94b402bbd3",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b86e9ef7-a5cd-40ba-b399-4028dc3437ee"
        },
        "item": {
          "id": "4e8feb85-d69f-4d8b-a581-3fec000c4297",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "918c81f6-b4e8-470c-95cb-f94c269bf104",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34e11281-5572-4e9b-9e93-c1406a92d4a3",
        "cursor": {
          "ref": "6b582eff-c23a-4083-9b15-bccba17bb4d6",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "f3e78997-8f12-47a0-8e76-5fd85c3723ef"
        },
        "item": {
          "id": "34e11281-5572-4e9b-9e93-c1406a92d4a3",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f99e25ab-4842-4c76-b7e1-0d71fb9e041a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 46,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "111c3076-1e7e-475a-bdc2-b309ae9203f8",
        "cursor": {
          "ref": "73b33310-9414-4560-9f3e-969bd32b5498",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "267bc20a-ef43-4da3-9438-6b28cfb7117b"
        },
        "item": {
          "id": "111c3076-1e7e-475a-bdc2-b309ae9203f8",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "3fdf0296-9191-4eab-bbf6-eba9f87dfc18",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 47,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}