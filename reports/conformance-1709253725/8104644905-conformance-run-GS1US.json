{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c83a1b3f-b648-4164-8d7f-2b463ed0e10f",
        "name": "Clear Cache",
        "item": [
          {
            "id": "0bcea4d3-6932-42ae-b138-3b08bdc6c8f4",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8d49c8f8-ac5b-4667-9228-b82098ed5983",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "58234125-ee6a-40d1-b0e9-f68b89cae899"
                }
              }
            ]
          },
          {
            "id": "b46c6142-8a6d-434a-9342-837b35c7cfba",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b1aa7218-bbc2-43b7-b710-48c80f7007bb",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0f0bde6a-6646-458b-942c-051b8be70b8f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5c6509d6-ea79-4360-9ee7-db8a4cf7cd37",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "5041711d-8697-4006-b673-1fcd13ed9310",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e0b35825-6f84-4cdc-8da8-01caee3ae881",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c385697-9b7e-4b7d-9800-a216bf84b805",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6e31bdce-4853-4df8-b0ef-474ce700f38a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a29f9bd4-aeaf-4d4f-81a6-17d1a8b86b9e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6ff04703-917d-4c5a-921e-fcb6f60e1180"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "539e4c7f-7790-42dc-90c5-08f476a1e1d5",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0a121c5a-cfc7-484d-a9b1-f134a9334e08"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a60c6497-929e-4141-80cc-9981ffe7daf7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2e94a3f9-3536-496d-8973-8dcae18037dd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7eb145a4-ecfa-4810-87a5-cbd5d73609eb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ace3a221-0fb4-4845-b62e-680c3160f5c0"
            }
          }
        ]
      },
      {
        "id": "b23509e0-5176-4e2a-9a0d-552ca74fd401",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "35382858-c18e-42e1-8410-e296592dfaa8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7d85611c-4a3d-498f-b561-ea72d5e853d0",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e9489745-492a-4296-ab68-a6969c280900",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78b30a3-6145-4599-8bae-51c4d0de82a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e6e883ee-30a3-4884-a036-a1a4a35c5f27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80a46e69-7c8e-4e43-b0f8-64efccfdc6a0",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a93f105-6f41-42b4-ab58-ce27b863fce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75398624-489e-476f-8572-7ea8a9175389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a1c78d0-907d-44b4-acaf-2bc132ca8344",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5cf16f3-354e-492a-8382-266781c3dffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26028752-7188-44be-8913-03fa948e60b2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f5a0e923-8942-4024-8a3c-1b688999511a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aa0c1a18-ab74-4901-be7f-449aa326d4b0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd59cd9f-0fe4-4d36-995f-9c813f93c778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e5d4499a-6ce0-4f6f-b66f-9779227bb9a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c252ab8e-dc32-4082-87b1-9a03b82e9897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52692332-04f1-4836-b316-29ec65c9ee30"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9262aef7-d3df-4161-b570-ad0c4885acda",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1870add4-d9de-4b60-b533-31053f041cb3",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ed91152-1cd2-404d-9e38-ac161ddf49f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "13386277-cbab-4511-8f56-7a7bba0e4f1a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e624dc6e-ef61-46eb-8b1e-3aa227d344c8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e4dfcc14-064f-43b3-b9f3-837751ae0d96"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ece8a09a-3858-4219-b710-484a3b87648e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1583c4a2-e7d3-40f0-95ce-5673269c8e7e"
            }
          }
        ]
      },
      {
        "id": "b316b81f-dad8-476f-bcc3-af5038436ab5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "297aa23c-76fe-4b97-9e02-19e878f65e0d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bd1bef50-f87f-4e05-8348-dc1488a2c1c6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "a7e3b471-49f5-496e-802b-238384a2a18c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e75b6e1-3ca6-49b1-beeb-bd962ab268ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d6e0a1b-145a-4e04-b26f-098c56f5c87b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "813c5841-d666-4b1f-a2f8-0eaa2da908d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c72d1526-edee-4121-b0e7-c23d08960eb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfa2c440-de1a-4cea-a7a4-0b5a53dee094",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90413181-0199-4694-b9f5-0a269f57b8be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a2b548b-2697-40d9-bf42-217b340d40f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508cb9f6-4828-4a2d-98c8-0f926e50503a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e68c731-4858-4f5d-9e4f-bea7439a363f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5ab1d76-6fdf-4b08-b780-35b5912ff73c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a12119-0227-4652-9c92-3ea4207cb133",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4e03d60-e505-4c93-af8c-606d9e72f650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8439d045-9b48-41b6-b3b7-07e8fcc33335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "374c667a-297b-4b6c-aa37-9d2b46d3f677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0bd46f4-160a-4396-a43f-e5f4548c7b51",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acbb2513-67fe-461b-9e77-1ade47ebcbe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c68d37ff-086c-4e74-b001-9b90ab105b77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91fcec3c-d764-441e-bb60-bda02220c866",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb95815e-f861-48c0-a307-c8ebfd7432b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d2a5b0-e202-40d8-b486-dc3544babf5b",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f8548c5-6fc6-44d1-9013-0ca7df0c7677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e9a4e7f-d8f4-42f6-955a-f96fc88e1d1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce9ac0a0-19c1-4e22-aca7-57739b0b64bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc1e1a8e-1784-437f-acab-51ff828a3530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40f3df92-7fd9-43cb-856a-9f6044d2a054",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92d28856-b202-4e5a-b639-0d66cec86ad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9afdc055-35cd-431b-934f-37a3371c9632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a36ab7f9-2575-45cb-a788-4edcfc8ffb74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fc7dd088-5642-4a81-8505-fbbf1c0992ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6fc9b46-8bf1-48d9-a918-8c7d9dd894bc",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a076e23-8873-40aa-b9ef-aa42ec2c466d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42048bab-9099-4166-bf45-1a90e97f02eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47aea2aa-a9c0-43a2-96ff-12bfe1887e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc9e835c-480b-4578-8774-43ad79db0cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043c8409-2c95-4573-a64b-ae8386b24f6e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d109b3b2-6840-47f0-876c-593f61c11c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e62ca26-8b95-4653-bc3e-837e1884e42a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bda97c2-704e-455b-9e76-544124fe491c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4d2fc843-0bbe-430d-9c2b-284c063c8eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cda96874-4bc0-4de1-9054-59514b2afe3c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "674c75f1-bb85-42ba-9507-94c6f247349e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc9d5b97-f879-42df-8b7e-9c3b3037861a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66747d2c-e300-48eb-a1cc-1aeb338066b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a0ba6c30-41e3-492e-a7e7-02c14a3d4ec9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50a8653-2b5d-4c98-9b1b-5f55509b044a",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a934684f-3a68-4419-8feb-0101f5353085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aab4963e-9f41-458e-b8e0-63ac042b7db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9088a602-6e28-4ad3-817a-65bb5a22de9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a98857a-2e9d-47c3-b721-98ce63959a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e38982b-5abc-4cb2-a8af-eed9dbf35ff3",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e524884-5efd-4245-bfd2-6752b8f8aa25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33c16bf2-00b8-42f1-b46b-b2656748abb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd357b4-9940-4572-b488-db74bc35a320",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e23ad85-3e56-44ce-b218-f6028b942236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78620492-1461-4128-8261-348067beba06",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4427cc24-95fc-49cd-a3af-c0914578c886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23ce9374-cf8b-4c88-913a-430ce7ff489d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182a74d2-9d48-42d9-8eb1-aff47c015c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "925bd36a-37fb-4b14-95d6-1fe6abf8e6e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bba450d-1c7d-4cd2-b322-5d7851168222",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07fca0be-63bb-492f-bafb-0b0a41920f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb7f06a0-c05a-4a0d-a59b-b8f9137635fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5285abd-5aa9-4f74-947e-59bb26508f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc69b1e5-35f2-4dd9-8626-4fec89f3c0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a243e20-f055-4640-9566-e7d12a4805c8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04cddf0-7f49-4e50-b01f-0aee956ed0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10bbe9d9-77f3-4d9c-86cf-d6e31e639c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f2bdf2-4aa2-418a-b209-cb250316b67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5d63c268-39dc-44d1-b517-8860732a74aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5035f428-c3da-4433-9df2-682e12efe197",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bad3948-3650-450c-a8e0-4b3568df59ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaf3e30e-a9fe-415f-89fb-03000b758231"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b95f9c92-f858-48bb-b31d-730410dfb4bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21b3eeeb-fd69-4d31-9bdb-05e354f49fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "804290b6-7fe8-41fb-b3fb-27bf29d20051",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3c08ecb-a337-481f-95d9-d0ca1dc24f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "963850c8-188a-495f-aa21-8204b9db6f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cc09dd4-40f4-4dff-aabc-bbd7d94008d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86f53066-6c15-4ace-b9ab-973dced9bb25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0bf3c57-49b8-4059-9fae-2271d11d1b43",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5edcb0d-7222-4a7e-ae06-dc629032429b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f02e56dd-e118-4c9b-a953-94cf51d82035"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d42609f-9683-45c2-9004-7024c59b4a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "580f1f81-af02-463d-9df0-10971fa279f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b208c7ad-bf8e-4808-bbab-cc260b3e3c77",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e3a836-63d9-4718-9b8b-6c27d518e56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af0d4070-1baa-4f23-bef2-f8dd937d51b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9626f72-fe84-4edd-bb86-d9da46cebe4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e64c7113-5d81-48d5-976f-0db2edb092d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9eec612-8368-4b42-bf91-b7b2b29ae6b8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec594ac9-aaba-49ed-8adf-6be6ad545f38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af19e722-d760-43a5-b4b9-cfca0cd6e0da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07457390-579b-4ccb-b91f-910004736c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "831888a6-ab7f-4cfe-94e3-6a6e353f60d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8176120-a8c2-4e02-92b2-87e5cf4babf7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eb6e323-7941-43ab-a3b2-d8e173eea8aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed22fed1-b402-485d-bed1-2fa2b1e3344b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d946267-5519-4580-b5d2-a6e48129a287",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2fd3c578-86cc-4b09-8ef5-5f790b8a23f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3fb264b-10a3-40bb-943c-d2a96aa87246",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6af7af59-1b56-4a27-a753-bfcc3a4beaf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18388780-b7c0-4d4d-b0d8-1f007f5a9d38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67ea6d3d-56cb-4762-8a82-10537cb5f5c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "05aed45a-eebe-4f4b-8e74-3bd9263f6967"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c75e5c0-7a5e-4b8d-8c39-eceafe8ad7a2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed47cbb8-99d2-490f-b04c-531de9778c0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d60a8598-4661-46c8-8cdc-738fdd8762ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ebd129-b587-409f-af3d-192bf275489a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "792741cd-840e-4431-a098-d01c957ac696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "661f7d74-3365-4c7b-bc0c-dd30c2dd4dca",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ecebd21-4c07-488c-9058-31aaa2c81574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b505b31-bd43-415b-8fab-b40e88d79cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ec6fc3f-2621-487d-89a3-56914c05e3c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1bca8aa8-6ca8-4f24-b7c1-c373de677c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0169a6ec-022f-459c-b1d0-74b38bb3e1c0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "740e74de-7f80-461a-bae8-fc219eca677e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b9de07d-8356-44d5-bb8d-dcd7e6c08da2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63d47e45-8030-4fa1-9ad4-ca67a4eadac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc4bb64a-90bf-4437-9238-500ded207d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca7d089-fae4-4c02-8299-cc3f8b62dbb8",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b09cee-951d-4cf4-8058-88f360fc50e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2304dd3c-9dd5-4f12-a16c-2f99055818d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e0b392-4904-4499-a210-21d95cce80e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "622ea76e-fcb6-4ffa-97aa-d7fb54c5dda7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8af9ac-cc81-4026-8d5c-53a93955f878",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f846daa9-7f9f-4519-a9d5-8ae75bec3ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a4344fb-31f9-4809-ab95-c39d2b75b490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ededa2cd-768a-405a-b38c-43888b1c3b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ba969223-4755-469a-9f06-618f2d5fb8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e84c7a1a-e370-4b8a-901d-131dc4f913fb",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a01007c-42bc-4680-97c6-708cfdeab7fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b4bc49e-3245-486c-accc-7bec9be8796e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3774b3d9-4e8c-4542-9e94-7f9f3440b75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd25a21-0553-4b97-9615-6e4cb04d44c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1899050-770a-4e7b-ad48-58daa8e01477",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5c46b5-8a68-4eeb-9844-eb29d65bfb38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7886cb3a-1f4a-428a-b6a1-0b4b3f8a9b1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e96da0f1-9bbd-4640-bc39-abd19066a081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e3430b4-e959-49fc-96f9-a2e96fcc244c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3844278e-c451-4524-9f14-6bbb9189381c",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "216f3ac1-48c8-4b8c-9d31-d2c4e0f2af5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e1d9625-4ba5-4e09-a117-ce5342a55e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1743a8cc-bee4-4897-8f2a-7ce07395b708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a84584a0-8133-4997-9552-0e7ae48c34b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a448eb19-a13b-4eb0-8262-2bf0ec5c4baa",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd21aae-95f9-4945-8b2c-7f3df1797db5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47ce05b8-351e-43c1-96ba-5c40f0b6caf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa5bebeb-f33f-4604-8049-97f90378119a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "b41bc3a9-f20b-46ac-a932-76c59ff21bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bfefdd6-1f49-4f68-ae2a-dcdd0e4c0488",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eedc87a-87a5-4156-b575-2d6ac99b8640",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d735ccc-7881-4b5d-b1e7-f45217b950a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a12b7bba-6bd9-4497-aa67-e45c4d25ee06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e90e9bde-4090-4cfe-bf28-ec1fac3f9dae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "946ce11c-5669-48db-8cf5-3241946bc2a3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86675e2-2836-4a8d-9552-1852d48e8fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "233468da-29f5-4369-a801-d2100f398f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ac8bf78-6a87-4d89-85f2-abbe57d4f5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8485a13-180b-4dae-851a-5c801df67e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "290ac774-5269-4c56-b18e-0545d734b3a8",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f86c72e-0a85-4d20-b6aa-bf83800022dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39dda79a-68b1-4d44-a12d-c6c2166b37ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfbccfbb-03b8-41a9-88b3-1e86461d1d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a2a59c7-387a-41d5-af2a-24e86040db41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2f7707d-d0cb-4c42-b533-3384f16b93a2",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d40a7d4e-6c0d-4261-96bd-1dec42d76c3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08eb0778-000e-47c2-bae2-5ebe9d4a6dee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65e21de3-eb39-4248-b4d8-46a89dea5b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0915be3-eeef-486b-bffa-2ee4040dcc77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80663295-295f-40c7-a53e-8e30dd11e096",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "560c7c7f-6018-48ac-af75-a0c058715229",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ff82a17-ea93-420e-8c33-d5ffb2a3ace8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a4b3ae-6149-445e-af37-b2370c9fe0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d12ba501-f0f9-40bf-a718-fa1a5e92d07c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6b01e1-9d71-47a4-bb46-00b05e57ae03",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7103ec1c-d07c-4861-9e13-04c8d2581ba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0ccc98f2-5aae-434d-ad82-11ee2aa96de1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6f2da9-8916-4706-a8c3-90017f65836e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5cc9dbb4-153a-4b58-b091-22dfd4ec0f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de38aece-4f09-4d67-b755-cdcaaf612b67",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a12cecd-2700-4ef5-a79f-7dfce0934339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d35d8ec-bdf9-4b4c-ab17-5dcdba8bb64f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce0c38c5-d764-41cf-8889-ffa2de34ca15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e81d1f40-e08d-4434-89da-7fba4849d726"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859b9804-536c-4961-9c5f-e2beaa87baaa",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a490c6e3-66e1-4001-b17a-66ab12a1e3fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11e3575-72a1-4bd8-a0e1-ddbf72ee68d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde31159-5a73-48f9-b218-14f496e489b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a9ffc778-2f5b-4f0a-a07c-36dd8c4db785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29dc66c3-4600-426a-9742-da4b8592fe06",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "150adef8-e1f7-4556-99cb-d4cf6d4b6752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aecbc3fd-2715-4118-a724-00540e2c8d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0184a9c3-ef26-42cc-a325-c031f9643651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "118fe17d-668c-4660-a4f5-b6ad9d5b490b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aed662b-b354-456c-af25-463429987e9e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be3b3e1-c790-4dc8-8323-0364aa223f70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1894f395-b69b-48a4-af78-954018bf6c7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae150e7e-e8fe-4d52-bb1b-d54a364175d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a5f7ee2-c80a-4c3a-b7e1-9071dcfe7d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7493dbae-3d3c-459d-8f9c-2fbb9017b1f1",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4769d8c6-a15e-4282-bbce-1271dcbc33c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88851bb3-4b78-4fea-92df-ba4f6eae794a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b29c10f7-2582-4a6d-8c36-8c4609102134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "32a861ed-6ab9-463e-a82f-260f32ed572f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41831bd8-016f-48e6-af26-4372594a9796",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9623963f-d8f8-443c-8450-3a867a7213d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36ba18a1-2353-4b5a-82d7-4d291f8b6bc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7b8e73-4844-4207-b9eb-6e3cafb3f34d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "dc10e085-347e-4a87-b4ed-3451c6ae89e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51ab6bf0-0eb8-4922-8124-3226e785a957",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda6f429-a961-480a-8adf-3ab86acf1167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "784b5c63-e5ac-49b8-bc1f-0007d3fc8be2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f044f815-43d3-4059-b6c7-fc4b9cda0474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e203c030-9174-4727-87d9-1f12b96328e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60ba45ff-c8db-4e41-99cf-c30c531ae7f9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c46619-82b5-4916-97f9-47dcc99ba73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e923567b-148b-4236-932d-fa7bc8286ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92258a5f-2508-48f7-bf95-77c6dba69d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ceaac022-c2ef-45ac-8436-7518fdf40ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97048a66-d57d-4333-bee0-ec09f7e63e1a",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db3cc81-a7b0-4b13-8ea5-3c51b4eac260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f579bd5-596f-478f-a869-a9f83b838cdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bbbaedb-e4ad-45d4-9bd0-4d4db5f36b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9464c86-2704-4edb-a931-b313f60bb40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f679d8b5-9a28-4a57-b44d-6605f264f272",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a5cc044-114c-4ed1-ad72-8cbbc44b567e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fa314a7-09f0-4e4f-9c93-5086c84983bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4e12dd-9c09-4b6f-9f7e-6ebcd8225b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ccf3c0d-d6e2-4bac-8ca4-6679d15af861"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc5d89a-d511-48f0-8218-d9b7e5d43ca0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9786850-0da3-4fb3-b7ea-aab2cea0f9bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "856d5766-cc4e-4b43-a97d-97034f998b17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edce6dd-f117-4e15-ae37-c9a7f381d110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "16e450ca-2707-4150-839b-f9eb5ad7f0b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f1ddf1-35c5-4a73-8452-ad4678bbdbd1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca105d38-628b-4052-9fb9-167d9f4036af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ecc5b78-751f-4590-aa10-8577e0236955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d68e0a4-cee5-4f84-9174-910316fe6317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d92434e5-ced9-4e6b-a44a-e7776b69462d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39f88cd1-d2b0-4ac8-adc5-ce7078395a18",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "360e2a4f-c852-445e-b63c-f9d0bad4559d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c253b3e-4cdd-4635-a6fa-15852e4caf35"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9dccb5d-5571-4c12-ba69-88e08f154063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9cba33df-3983-42ce-86ca-c02b76a71a9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89092bf-7475-41ce-8099-b53bbdc22cce",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e38074da-a7c1-4e74-8080-8cfbcdf4b072",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f3ac010-59c3-45d2-b2e8-2e23142c6895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c482204a-c231-4a02-be3d-f1fee7ed6567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "67eb7254-d2ff-408b-afca-7bcacf0ad1be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cc3a8db-f9be-4e4d-b038-aafe988fe66c",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e5bebf8-bb57-4537-a2bf-132ba7d6ea03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8247f58c-ce94-4e8d-8ddd-66db53c7a387"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca30c76-4499-4cc3-b0c2-fec1128406aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "d06db60c-7ac8-4971-b557-b275201edbac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6010b595-ccc6-495f-bd93-7bb7cc18622e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8240aa70-a18d-45df-a85d-b1ef2b1656ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3beb954-c15e-41ec-8f33-55501735500f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56bb236b-23c8-4a75-915c-18a8f529e5cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "95d575f7-2c52-4337-a02b-f9366644803d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "947d108d-83e6-4e75-9f42-430c3210c9d4",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf2a5e9-af83-4add-a6ee-8b95496d5e44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8f60708-038b-4a21-8b65-8965ddbabc77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29efe1a4-59fb-42b5-bfda-d0c235ea1c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7024c1cb-45f9-4764-9a35-84697f48eacc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf718c99-168d-40e6-ba7a-35a02a745a78",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3db4b5f3-18be-4c6d-947a-eafd491de72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abeaf474-8af2-4b05-86ce-b2b26fbb8923"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f91357-fb13-42d3-bd37-ff7e361f8f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0da11ff7-7ba2-42ea-a84c-6941fdfbfeb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85ccd62e-b57e-419a-a693-a78147bb4432",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce9cdcfa-e705-4e42-86a2-a77d706ce9c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2c75e93-72a7-4889-bcc4-4ee4cbe8be79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d47b5850-e0e0-4399-acb2-5679547487ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4a928b0-fbd8-4f24-9aef-eef3cba7d7ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "843512b6-05e4-40e7-9e41-46219d0105c1",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b403a5e-6001-4695-b508-bffac242ddb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b16efb-f3e6-4ccd-bb50-6e62e660aedc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d94ae5c-9775-4937-bf3a-60cd75514a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e8e447df-7db0-438b-a2d5-03f8e90b3446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "331a4690-8d71-4415-8e9c-579e1da15361",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8b4679-87e9-463c-bc65-c0b13b8f95bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5f33a73-0f16-4354-b041-9bbdb7304f4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8db494e-7498-4bf2-99b2-4471491a57bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d412b8b0-ac46-48eb-8919-51950193cec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06876964-facb-4793-a3c3-d3ecea3232f3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16cff2a6-7b4a-4e57-a71d-ab61e0f314cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a4e4172-2a6c-42e1-88db-a4a2769132ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f927cb2d-987d-43d3-8bef-4166ee4c1e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "192913b4-efd4-41f1-ab44-a32573765d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac606527-4071-468e-a9cd-14a55f6ff286",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b68c376-fc62-4ace-9541-b80d091ee999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0a9bcfa-15a5-4ee7-9587-b27678cedd4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3406b55-f344-4c6a-b024-7e171a94ee1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2814a09b-10e8-4cc9-91ca-f2d154eb88bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c87981b2-87b1-4f5d-b7c6-92bfb5773f60",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a317e71e-e80b-44be-9aec-85fccba3fb07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a64f8bed-db1a-46b0-8be5-d30606337b92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32f04015-84f8-4d9c-a049-678bbaa2fbe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e04646b-48c0-44a2-b315-6fbd2f46937c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2cceb02-3cc3-480e-b0c8-c363eac1b11e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c231fc-577c-4bf1-b183-8ce22642990c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c5f8ea7-ece6-4282-be26-6cf9a56b7165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb57fbba-a4e6-4e18-9c7e-c1d219d6c59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "da6234d2-0e34-4f46-801d-3469dc4c75ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad16cad4-619e-49fe-82be-3f463c7ec9e0",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b32f40c-6b3b-4b13-ada1-dc9fa056d27d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ca106a6-e5b4-42cd-bbc1-19511415b76c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d4aca7-c2ef-4965-b6c3-9da977c35b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee49c4db-bd57-41a2-90bc-d13849fb7677"
                        }
                      }
                    ]
                  },
                  {
                    "id": "533afb15-c492-4e01-b6e5-eecc4f144348",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "313ea1e3-d3a3-44fa-945d-feafbc70eafc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f33c4e41-ae60-4007-a9dc-67deda4e67b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff8749d-d02e-473e-8029-bbbd31092e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9131d03d-d581-4f30-b255-c49235baa599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ccbe153-888b-4146-b582-71f7cfe3b2e9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a4faa01-0e2f-4bf2-81a1-fff25eb788b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44712b3e-86bd-478c-a2fe-f26584563713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2cd0070-3a41-4f5b-94dd-edb2f10fe696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82cdd835-ee80-49b0-b4ba-6328e9d4ca14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad0602e-c024-473b-b0c2-e379d6f977a3",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "022a5f2f-a05f-4d49-be89-d4b6618156bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cf5e397-8f6e-4fda-a712-04a7fbc8eaa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9b6709c-0d59-4184-a832-98dbcffcd95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd046e83-b05c-4b8f-823f-953f524fb431"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103fcff0-0220-4a4b-9709-7da7d98aee27",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "544db1df-0f52-498e-b08a-bc66da80b3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b751f24-04e2-4f11-aa67-2ff4eaaa8f54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1c1192-3304-4708-b9dc-dcafcad887fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a9f4d29-9d21-4398-a95d-4e14914f4765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8713333e-d660-4d39-98d2-04bceeb72919",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14ca61f7-f2a6-437a-99a1-879a349e721a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16e4a997-48c9-47ea-8f45-9b7957335687"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c7941cb-6b6e-41ee-8c4b-eb74c0bdad66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "03ef1ad9-6000-4ad8-a2c1-e553e62c6d5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c284e51b-0716-47fd-bf49-d8dc6415bea4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17866f0-5d4a-48ca-a39b-e6f2b28adbe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16597bd4-0042-4601-bf5a-f9ad4319bc9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3781b68-9dbc-40f0-bb55-079fc223dc15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b45226a-5ff3-46d6-b16f-ab62b2029fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f4b8c3e-28f7-4542-9108-6fae087e06b9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0871b896-9491-4c67-8786-df0abdb67ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b253b4a-2a4c-47db-acef-3fb9fb7c2026"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440b8850-4d0a-491e-af46-f150b8ab607b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f861d06-ac44-4f41-9985-bda21c97be26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff710feb-6e0a-4a21-92ce-61b495d25bcc",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d6c8c8-825a-4dad-b742-c5ad38327cb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f98b43d4-b821-4266-aed1-440f21e2d961"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77dcab20-ca25-48ba-8c50-d21a1089a97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0918560a-345e-435d-9593-89f710614051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4090ca-f1ec-4dcf-ad98-ec8f79a3781f",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2cd5276-ce6c-4d07-b876-4e211fd4a814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b20f29e8-9e41-4549-8643-c6c7ab1c0d8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119f6cc8-ccea-4f37-9ea7-0b07c8cbf4c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "63efdee8-13d3-4486-b70b-df8fbe3aef0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4528009-99d5-4bbc-8541-81f9008f583d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70d4c76-0fa0-4d4d-96d0-b7ae136ba833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f895f39-b82c-4a1e-b103-f8962dca81b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e11045-d322-4e19-af6d-6745119abe70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "53a76351-dd30-4456-aeac-e6f13e265db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65ec78c4-0cb8-47cd-9f36-d583110565a8",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0934efb8-5dc8-495c-b792-9864c4a41409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51f15f3b-ed35-48c7-b8e5-4471bbffedf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c101ccb-35ed-4002-b642-1bbc66aa5e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "759b65d2-9fa2-4814-874a-57b54615a921"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68a0f132-eb0c-4f50-a16a-6316fcb928ef",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9114014b-02a3-4f8c-92ed-b7b746a77ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21cf0394-4dfc-40f3-8830-12910c28321d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431af8dd-dc5c-4076-a240-bd9f7b290813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ddcfdca-d60c-47b0-a961-1bc0027b10fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6fa84c7-bf9d-44ad-8056-a46e14a1a09c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "789d7860-fe63-4fcc-979c-287590e7e8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00882510-a24c-44eb-8bac-835cf1126ed3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d98e455-50d4-4746-84a3-4db5d7f56428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "185fda51-4b04-46d2-bad7-f427d9c54e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a3b83c0-d8fa-41ac-bc17-47bd7a23c377",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e17c3e1d-3390-4c90-9c55-5eeac9e6f560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f106c58-ba89-4ca8-9422-43c29e046980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc7f28c-8736-42c2-8e03-8bd41d744193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c3308e56-fd3a-4a68-a77d-bbbcbe4dde96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "864a3ac6-d957-4f55-a723-8344b161f732",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b029f16d-7143-4134-bd11-23029dd14bba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "107f8ad8-abc6-41f4-a737-f62d3f10bf0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e7e5f4-320b-4267-8f8e-9ff9b37253cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61633dc3-e5b7-4cb9-91b4-67c77507cfef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e504706-8c8b-4a12-a510-db2cb55b0a9b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28c61a57-db04-4174-a083-9e4d583c45a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26683437-038e-4d13-8a62-142de102d52a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f959b3eb-e525-4f63-b8c3-66fd166d99e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7de29ae-a403-433c-aa5e-64801b486515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "733f32fc-1924-4988-b598-834cff87dc9e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4718d94a-ecca-49d3-b82e-902784fe39b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0891e14-a202-4377-af83-7ff07b4c8275"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac9bf18-f6e7-4ede-9560-83ca224cc021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a903e37b-47eb-49a1-9b2e-8da2ab20c4ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4146ccc0-d726-4adc-9f37-824e948c9dca",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "971aa9d3-735c-434c-b570-6d5ec3c2f155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48c7d95a-6315-465d-9452-06e157063ce9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b911b25d-2826-47eb-a74e-1a00eb62b24a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1462b377-14e8-495a-ba0d-ff3587bdccd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dca2944-dd07-4a39-b7c1-b1d610c33395",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd7fd455-e2f1-47b1-a006-356e37d48735",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac65ecd2-92c1-4479-9a4a-6b13d38e87f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32dcb723-a3cd-4138-b145-b874e20fbcba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "48fe9da6-4463-4cbe-a2a7-a291d9d2c351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81aecd3e-278c-4ea2-a158-6bc55f67b280",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "297a0482-9904-444b-b1ac-1a910634c723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac65de0c-0cc8-4d80-810c-502baa5ec69c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "553bee8b-64c3-4a87-8d01-6dd8ae709d20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "66c217e4-95a2-4acc-b80e-50b7235fa547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b50c0f09-ef13-4ae7-92ce-22fdecfdeffb",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75479728-a6bd-45a7-9781-b198e5ca7e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c8ae531-a1d0-4acf-a304-9cb07494c41c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e80bd97c-a89e-4bb2-a2f6-7f362b14a5b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "44025e48-97cd-4c3c-9c31-397cc31c7af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa365a1-c27a-4bd3-bf96-480179f631fe",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e707cbd-6072-4bbd-8f83-788c9b848b5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "240b9890-39f8-41b8-b005-c5cfe093530a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c29108e-3a44-4773-8e96-d032c3c1521c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9dbdc74b-5058-4e2c-8689-a3e8d577cd99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f43c23cf-91d9-4b08-aa1a-9e15ebb91def",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0061f9-2a24-408b-ab74-2200bdc623d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9922ed3f-8f23-4ab8-a0bc-f2b7e525a1bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a210540-c6ae-487c-a3fd-64706fec5a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3abb9935-644f-455b-8586-293252aeee3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27258fa0-4676-401d-991d-865b2d7001a8",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5566091-4bf5-4103-9113-03655987beb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b0c98f-4048-414d-b02d-fe9aaf8cd9ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89caead8-dd36-4331-a051-5704d9806ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "43e79b0c-d671-4dda-99b9-0520c89e8fd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c009a9e-6656-4457-95e0-0ab6561bc348",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb387d65-1567-4fe5-8d47-8816e2471488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a085193-2abe-4d25-bceb-527c6fabe5b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08de4a97-c247-41c1-8b2c-646cfa0940b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa303c3e-4c6d-4f39-8b46-234dfc417583"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3ee796-d2a7-46a8-b0aa-fda2a9f7da33",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c73ed255-f745-409f-9ebc-cb5fdb132bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67063469-95fb-4339-afac-a7fa46c93d24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56b50315-0531-4f80-8d83-313302731ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3319dfd-95c0-45da-9c62-a3a3917d4e0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76c35b9-cfed-476f-b684-d817ac363f96",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "716e7c79-3e91-4c12-9a0a-155cfd197101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4bab525-577e-471b-b50d-33789e4611ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30573cd6-db76-43b8-9d5c-9cef047d2070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "83ec283a-84e1-4b11-9f4e-82147d05de82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cccdf760-4764-4196-9446-efbdc450f0d3",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f48c6a76-f56a-429a-9758-a5f49241682e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6e09830-cae3-4407-bc51-95956bae7b4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cc73aac-9639-46a4-adb3-fd73c8b29845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d2ab5592-84cb-4f3a-bd3b-be60fd00b105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45279d06-1d56-4179-b22e-7fbcf28af8f3",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "067fc2e1-d491-46de-85d2-649007417db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9251c87-b136-446d-b390-6423786092ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a231693f-3290-446b-9ea8-2ad5745a4075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e369ecd4-1efc-4f14-b7fa-3d6fc628a883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61d522fa-e845-46c4-9921-6fec182bdf34",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a28de272-e0bb-49b2-a96c-9422ce606a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "00fefd9c-1815-4ee8-8951-5945e6e8e948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2302b69-deed-4274-8696-7a5a7bada3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd3a1df7-4045-4f3d-a2ae-a8b7ba96ff66"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0bc9ae66-e582-4d6c-a2b6-f35be371aca5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e0c2e430-ad4a-40b1-91bc-8674e81a7e5e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fbd6e8e-6661-42c8-a5cd-0ecd36a82e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "87e8f333-19e1-4360-a3d0-6e013e5cb395"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95f9679d-d5a8-4f73-98a2-f426c599ea7a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2e645db-9dd2-41ce-89d2-d5d32cdd9c85"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0a28289c-50be-4a6b-803d-1f473449d023",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e2402038-a75d-4e4b-9d28-a31854e137ac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b67e1ba-6396-458f-b6b5-5c261e9cc799",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6ae55682-4cd2-4e9a-a548-14b424c360e2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "dd1df357-f7b9-4507-aeb7-879a39fe439f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a4f1d336-b3e5-432c-aa75-7c829f039e7d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c8cf5dd9-b368-4f47-ad66-0e00e6c095b8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4e9b924a-feaa-4049-b3e6-a0f14c50ab8d"
                }
              }
            ]
          },
          {
            "id": "d87130fb-7bfd-4822-b698-2960258f31c9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bdd00302-d641-4ff8-b41c-f402921d5db1",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "4ffb1d88-992f-49c0-bbce-f5b27f4107e9",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3a38f5a-0db9-4872-a78c-949a0809777f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f1dfaaf8-2191-4154-bb96-84d0563f5aa1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "365699de-7104-45c0-be78-b0d6d7294574",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41ae637f-60a1-4527-bb9d-0237cede630c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2d7f0efe-35da-484b-a46f-17106906035d",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "07add828-b55b-4568-acba-1f91f8c3e2e3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "271f08af-e261-48b5-a281-ff4d1bfbc1be"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48a3e023-0fe7-4c57-8d62-e0e8affbc767",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "631e176c-6898-4d9e-be36-46f7d7fd78c6"
                    }
                  }
                ]
              },
              {
                "id": "3308623b-e6ce-4823-b8a4-a29b6b1a917a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "17b26fc9-9a20-4967-be6b-91683e61c8f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dda4c3c0-d564-48d5-9025-8fe220c7da7e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10ef7ee8-1510-4066-b0d1-b43d8a52e8c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0aa03b73-a88c-48c1-a4a2-376eb2f71f13"
                    }
                  }
                ]
              },
              {
                "id": "7f083d87-4ee7-48fe-94e1-c9afa5a9f07d",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5f60fdda-87a7-4138-83bd-a235e4110627",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "57ceb6fe-4de1-4bd1-a123-e847cfbf324a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10125b70-8868-4016-b826-60d9dc415db7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3ad4347c-f360-4781-b368-bcb69a447995"
                    }
                  }
                ]
              },
              {
                "id": "5d86b378-0573-4829-af8c-c3a211cd0e50",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7493434f-a5d6-431a-a45a-35f068dfb1ac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8791c2c2-08de-423f-a6bf-df40ba68ea29"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "abccce23-6a3b-4d07-8322-46da50804445",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ca7b90db-7a02-4326-91c1-9a075ff652bd"
                    }
                  }
                ]
              },
              {
                "id": "94ee4c63-8d26-46f2-bb2f-21b5eacce12e",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "add97150-093d-439d-a4be-103c57069a02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bf634b7c-41c3-4d82-94a7-e86c36cbcfe3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fad8dd9e-d8ca-4400-8113-0eec3f0f10c5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "643a851e-0953-4ab8-be8e-e8ecda82d6d9"
                    }
                  }
                ]
              },
              {
                "id": "6317ad48-063a-4100-81e0-9bc43b3c41da",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "169e8ea2-86bf-40f1-8833-13068c319ba9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "16591fce-2541-4640-ab43-a0e82becdce2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dcd6c0c4-0798-4668-8422-c3fb8f7962e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5b3836f5-16a0-46bc-b535-7b25304faf99"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "42dd1e6b-096d-4337-9de5-13d60e750f2b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2eb2a29a-babf-41d4-b6ef-bafc050e9f0d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "701228ed-ef8a-439e-a624-d33ddf7a4d83",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a6a8ec07-0f7f-475e-9de5-20fdc126456d"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "435e97db-4752-46ed-b0fd-ba0e2ffb0616",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "95ff57cd-4922-4d57-965b-b7087582398b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1e0b7cc4-93a1-495b-93c9-81baa3114f31",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6dd9f6d0-9f14-4432-9c7b-c9977e9dcdf8"
            }
          }
        ]
      },
      {
        "id": "49868d5f-0b34-40e0-aa1a-b4e59729b531",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "43c4f677-3874-4d2a-8236-6dc89119e248",
            "name": "Negative Testing",
            "item": [
              {
                "id": "92069aef-9f71-4ee8-bdfc-69828e8b217a",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9415d436-af55-4f9c-befe-4ac1a673dbd6",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84a1902b-842f-4bea-a05a-8abd428e184a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06f63079-1598-406f-af28-f620cd478963"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d9f7008-e2de-439a-a39c-13bc1817aa33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b55b3754-0485-4c76-87e2-a1c72a3df089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f61628b-430e-4a80-960c-59020fbff314",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2554c22e-7d8a-489e-b4a0-abe5cf222bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eec56106-1719-4c5b-9dec-b318a29291d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a05391aa-46d9-47a6-a061-954ad5540b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "128c7a13-d07f-4451-b4ab-bbbafb882b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492dbab8-7f80-4950-8251-586462d0221b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed10f010-9a5b-49f5-9255-dabc514c9c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be699293-7aac-41a7-8aa9-dc93c7540759"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2de7321-2a02-41a8-a010-433c5536fb96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "17d3d636-66f9-4e28-bd95-f1bedf428579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87df8ab5-52fa-464f-a83c-f1b4967ef955",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ae590e9-51af-4d8b-8118-9e1573971516",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b09ad9d2-eaab-488d-af6f-17933c614f78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "988ae5d4-4712-4cb4-b313-8eb30344acf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c8b469f-eac0-4b3c-8cfe-de1f4446439b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210cab6b-da81-4b64-b007-17ec10312dfe",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8811d835-4ca6-4739-adc5-ea93816b7ac5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a72dcfd-9e45-4de4-b3bc-85a87f12a451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5b10e92-152a-48b2-b7f5-24d891f15175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8951e48d-c746-400b-a443-d1eb8c74972b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0e1f52-43d4-4ec5-ad5f-b1fbb0472ed1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06f4b655-76f5-4db0-ac59-7998cd909ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d89b17a2-b13e-4a64-b01a-c910ac80aca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fdcfa7e-4ce3-4a4f-9d88-feb7ef0558c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bae90458-5f16-451b-82f8-a6047fb99236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33ed721-0331-4089-83e6-1af952584513",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d41a59c-b7f1-4ad3-872e-d7eadc441d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ee445cb-6dda-4c5b-af13-b8a5f4acc1eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc66dd97-df5e-47ab-a2ce-de8b2fb738bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7a686d3e-bca2-482c-9798-c0972b3a58d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72185e1-2f10-41d3-9dfb-26b04e8bfbde",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef5ec88-6fd6-4737-8984-e425817b5f07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17a34e1a-73b8-4297-94e6-a56463219ddb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66796094-649f-46eb-b2fa-d8f7aebd9388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6abd1c49-905d-45e6-9adf-6d686d03ca6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4d9014-708b-4f37-9af1-1b6589e94c7a",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1966a851-5d6a-4756-bb77-df5744785b7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d305e598-3d9f-4c22-bb16-f33eefdd2181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "136d06e6-15ab-4441-8562-27e90509e112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "685429e9-7bba-4918-9be5-717711412c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18430440-e5b7-461a-ab79-9e248fcf420c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4256447d-62a4-4be0-a69c-eec833aac05e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58eb8593-d6bf-45b5-98c6-8526d2459301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea89be87-82bd-401f-9984-13ba7a7d91bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea3ffdb1-e7e3-4be1-a77b-1c4c6acc1927"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94742c38-8214-446d-ba58-22568274c97f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "617edc28-e146-4e00-8e9a-08120a422906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8315c7d-7737-44fb-a766-9e6053edb8b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "584d761e-22a7-4f10-bc53-5b829e08145e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4a2b1d4d-72f9-4476-80e7-cedd1fb54311"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bbde958-c9e9-47d3-95c3-7d33c2101731",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f85012e3-d0b3-404c-ac09-2ff2d8309770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b9c9672-5895-4dd6-9151-4ed0dc167dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e956e663-6221-4969-9f47-00c0e4855098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bd01e755-fe57-40cd-8b4d-0ec06b9e7057"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4120fd16-84a5-4c95-aed3-d510f85ce156",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6e7951-5f61-4571-9906-d1a778b0490c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "738b5179-3675-4245-9bc7-e4d245cf82a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153476b2-1dac-48c9-b503-2131ce9a8562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "49123551-11cb-4924-87a7-012dbdc53844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289d9cad-7102-4f3a-be16-61fc7e46f5e4",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce23cb7-4068-4d1d-9bb7-7c780d873e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3d51ca0-7ead-49b4-a2a7-83fe5e0b437f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9c17ba-3ec7-4d7b-b778-630ccab6ec17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "840206f0-1f16-411c-8fc8-8c6c2b447738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e313e4-263b-43bc-a67a-d05cef8a7ddb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "952e722a-4d95-47d3-bd87-42ca2197586e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55460f68-9712-4adf-808f-6fadc4d78385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3353d90d-f480-4032-a230-1c893386e76d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "71206169-acc2-424b-a5e4-d95c98f65460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80166f99-70cc-4833-92e9-e04b3c5bb552",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "240854a0-bd45-4070-b834-1bf356a80e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e486d10-8276-41a1-a216-4b40666b7d9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe881a8-0e1e-4268-b0d0-ba373121bfd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f380c657-70d6-4b44-8ac5-ea94c5f72279"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6e28ef-457f-46fa-9239-b59d523c62c0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1187e26e-6aba-41c2-bc61-2752e918ab2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5512dc15-f99d-4fb4-9029-dea0f8a87754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb83baa4-ead4-4a77-9292-66716e5cd0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "897a9b26-8201-4d63-9957-eb4c909b6062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e96c0d-6d87-4773-a941-f4ccf0eb5634",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e5dd26-d621-423e-a471-84c03d438ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05723830-f9fe-44f9-bf94-9433fdc0e783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dc938a2-91a4-4fb9-9a3d-f75db025d070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3bed7854-79bf-4d53-beab-b1a64b68554e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8c06d0-911a-480b-8f0f-478a595ec0ca",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "221e4119-99cf-46f6-b586-86cdaa100bfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acee78ce-3a8d-4135-8856-6ce419e64c21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9038bb59-1aae-4039-aca9-1646dba5e986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a2db9d9-c42b-4b28-9d4d-abe18bb847cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5eb4afad-f8cb-4c26-829e-6084ae4c54e6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "702a457e-faef-4638-a1aa-5540922e1244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "889d1f7e-b9f7-4f1b-b528-a3036637ed44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c40cf6-4fbe-4a7e-b720-c13483b87488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84aa878c-d5a0-4a6d-93bc-03914a9c7c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347ddfb2-1d51-4885-b9e8-847c355ec864",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d0894af-ba59-4566-a6e3-dd60610ac1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8d5300f-b6ae-451a-9d8e-a4799e6f60ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d2b48f1-160f-4388-a1c0-a3a7058d5068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a14aeb55-bb36-4431-badc-26ac7b2ed00c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13bae9b2-620b-4c1a-a0b3-a56df84157cd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6bf00b-7958-4179-a917-fc7589f65251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b8f81c-3521-4381-b516-a393d74badab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d791713b-675e-40a5-9bf2-884de57b2784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "145eaecc-fb01-4068-ad6d-1fd0afd1ab08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18dc71be-fde8-45ac-9ab0-4ed9546fa31f",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd223735-466c-4472-a9f0-10ee64f8a92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e1c80a1-8ba8-444b-a765-df89720dd103"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00927e6d-d20b-454c-87ac-b22bcd1a49b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1728747c-17a8-4e31-9c11-f1d33286c7ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb5f203-6db7-4a79-9cd3-19384188c68b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c838a8e-117e-4059-a00c-cdcf9ebd889c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "530e72ab-7f71-41ac-9751-2965b704fbb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11ecf9e-e550-4d89-bd79-7858cae0d138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0c90d3b-6d8c-472c-b123-a9cf988e197e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73d9cfd-4082-4181-bbda-caae3c754f40",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb44b02b-644c-45b1-b420-2676bdf09d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bfb3ed4-bc22-4f18-84bd-03f8b8ac6250"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970e5efe-4992-4f1d-ba82-e49a07762c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a888b18e-b7ed-4f3a-9f36-f792091ebdb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1617281d-d3a6-4090-a8bc-41f4a7a3ae82",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31f1bb4a-04f9-48c5-b968-b104f0b45a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d69ad4e6-9a8f-45ea-9b3a-8c5d1ced7ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a12efd3-180c-4826-b866-43f1ef5ac398",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae55e613-a073-4083-a9fc-8e7ded668c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e2afa0d-db3c-46f1-9391-6076ab52612a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09b5cf8-9f07-40aa-93b4-df0cd1a90d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15bb5617-309a-402d-a99b-6e59c41e5806"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0673a3ed-3cfb-468d-8e26-6f70776e4557",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67222180-e3e6-47e9-8fd1-9cbc76e0149a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1781bbc-dc16-478c-b8ce-2a6a3c1bad7e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8cca487-15e6-4bbc-8f7e-e786587135c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4127da4f-7338-45bd-9512-1b6bae6b7bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f786a3b8-31f8-4253-9695-99d6881b910e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2026997e-6bff-4075-95e3-e9dd6592b20d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e69a06bd-a2d0-4a95-a6a1-7bc255f7b67b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f88f4748-8dfa-435b-a16d-acff0b70c359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87b9b0c2-30c2-4a07-bb5d-80cde3f0c1c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "012cbc59-39d2-48a5-84c2-8f45fedd5e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "637f3c03-5c34-423c-92ce-4a3b7f68576c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42127545-f015-4ae7-8fe5-472617bcf9ce",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a89daebf-bcad-474f-a09d-151d542641e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7f8e249-d830-4c2b-a7f1-cff24976f426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "983497c6-42fc-4f26-8492-d5e031169e98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41f3cda2-d00b-49d6-8d9f-92bfa19d00bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5864b210-5757-4f3b-8bce-58aaa42050ee",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4700e91f-3966-47d3-bca1-db119c9910d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94cba2dc-9cac-4381-a217-62c277bff030"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca79ec8f-410f-4558-bf63-c46c4d4bb1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ecddc76-fabc-460f-88a2-02fd6f9cff8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82325911-4362-4671-97ed-c6ec31d6020d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70eb2132-5d4c-4555-97b6-dff57473e7c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef74e2ac-dd64-4e25-9404-9a971b3afb6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a046a1e1-5917-4283-923d-674dd8112273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "192d8c44-08d9-44f0-a9fd-f8887777d008"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bf12c926-6b76-4ed9-8090-7b97208d371d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f8acc5ce-c358-4949-819f-848591e63176",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1a10f7-1111-42b1-adbe-eeafaa87d58e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "01efb46d-a252-417d-b771-b8875fd56c6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dadb3781-f65c-4407-a01b-1757d8e42083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "951c56cc-f862-4a94-8585-ed06fe1716d2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "273bd356-35ee-4184-98f1-2aaeeac81013",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "13c0f783-5789-4cea-bb84-8991b486c1e2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d966a665-0149-4463-a45c-5efe4f483cde",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "14124174-6a25-47b0-8a3b-cc2747db3bf3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c01c0566-d70d-4080-b0bb-a94f726ec4f3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9e04be43-3cc7-4616-b05e-c2723d539fcb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "14bb75f9-05e4-4dc1-aec8-e895e1f33cfc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "639ef493-3a1f-430e-9740-5baac298c0db"
            }
          }
        ]
      },
      {
        "id": "6cfdce08-2fb9-4226-925b-e163a05cdaf5",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "5ca3aeed-fe62-4eb3-9fa8-192e6adb907f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c7cd3423-1b14-4067-a8a9-716b2a660228",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1a1e3ded-6256-411c-95ba-9b14b64e30eb",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3205bb37-9d5c-488f-a6b0-777cf5dad75c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c8e88e-5bdf-4d30-a9b6-17626a2d8b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c936b87d-8354-4e11-8717-5b18d5d62624",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1efddf68-87d4-47c5-82d0-451e66f2f4bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57fc9668-a6ac-4af5-bd4e-778353e2a243",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ca419c5-a6b8-47f9-a820-9a388b09a646",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "795595aa-8245-42c8-aa27-76b518a08534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fbb0a39-c397-4d48-8564-ab8992659c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "734c2e7f-d784-4836-b291-3982c17559ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0e0108-6b4d-4a2f-8f05-2bd4d7da33b1",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5048eca1-71c1-45fd-8710-699d6d9285fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "152b425a-28df-4459-b20e-e4f2cbb364dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4185d8b7-5fc5-4c99-b3c4-7051d5fcf176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a63daa4b-627c-4334-b960-d648b77f5e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5bb6e59-ad13-4e7d-8c1a-f6c69dbdc0de",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e5f416-97ba-44db-a714-0aa222b73bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9df3ce56-95ec-4e66-b934-c78053f1e420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896a76b0-8921-45cb-8a0b-80a5548d6d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a478d39-a5f9-4932-a1d0-b41cc7f78527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7d4b7e-3b77-40f9-9034-20a94437a673",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f979dbf-c441-43f0-97b6-00d7fe854484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36b198af-332b-4dc6-a3c5-10e6b90863af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27dc668f-58da-423c-9347-8911fbdd8c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ebbc821-66f6-4eb4-bf61-643d12648e9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "686660f4-002c-406c-ac52-ec7993630036",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e78f67-4d04-4608-b9e9-783a84514dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "434ac6ef-1b61-4642-82aa-fc9f6ff30431"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97ac2a2a-e0c7-4ca5-9ba6-89f237ae9ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f73241-e6f8-44eb-983c-344fdac157d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0527d125-b520-4cef-a210-0c96a6eb738d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea666bb-2eba-4ad6-b758-6973388e5195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fcd55b4-808f-4f5e-bee6-491745653081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c4e593-869d-4641-9a26-743ce56bcada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1421964e-96d6-4e5d-9c55-606ffdf92d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af84cf4b-e03b-4d2e-a902-233a8ab274b3",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a8a7613-f768-4bcb-b26a-73e5691e2ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12d33735-ae26-433d-a37f-6dfab988b193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "643a13f8-0f9a-4748-9a6d-a5a11470de3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64344ae0-5e47-48e2-a365-26577c936566"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d5830cf-1acf-407f-be2f-c74bee5c6da3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f7aa2d9-5539-4788-a255-b04f1beaa308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8c271d7-394f-428e-8be9-ff4e8a417ff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7207c0ab-8558-42cf-a56c-49537045c2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f846353b-92cb-44d1-a7e3-97e8429d933a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed825d4-ebcf-414c-80b2-3ad3d787cd33",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "510a9788-2ebc-4a4d-9a81-2c8260c91b68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17abbd14-954e-4679-9799-0cb7ee2e50df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e901021a-a699-42f6-b655-19d40be2a0fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "39ec7c03-97fa-4bc8-a15d-32d926df5a36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feb86c8c-576d-4551-8a33-15bb3d2bd1a4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dd292db-e624-4644-8ed9-de367af70e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5e9ff4c-79d0-44a1-a8cc-4a135f24c7be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96325ec7-14ba-4840-a274-5e6ebf4b9137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c3ae0166-de6f-4b16-a34a-b56309805e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f87262-89d7-4aaa-842a-df8538e7851d",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abd346c7-71a0-400a-90aa-20678f700b98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "656fdf37-2b53-4c45-8cdf-b241f77dc5d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b71d283-81e4-4dec-9dbe-4acbe1bfa35b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fa0a968b-ee03-406d-b0a0-a5a2395acc1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83b74c31-ad6f-44f8-83e4-5b4b7f5d9cc6",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f5df1ca-19d6-4491-a982-95b0a8df7410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55a56f61-9cc4-4596-8cf3-7537928423a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa590bae-82a6-4366-8e91-e02c898a086c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "de15653e-9642-4822-a4d0-0f211c5a5a2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f504a6-8200-4a26-a34d-94ad4e78b6c3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71c06a4e-a797-4e30-af99-39e3b08f29af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a62696ef-40cf-4a3d-883c-f403eb47e2a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b52d27-b59b-4930-a1fb-f4287a77781a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "01d8c973-f135-43be-a9ea-979bc4a117d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0bc4ab-a195-434f-a312-b6f5bb9d0a87",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3409932-9b85-4e11-b4a2-94bd68416a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e307c23d-40c9-4ba7-85cc-8d1e4e25d8ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0679ca34-309f-46a7-9e7d-5a722cde338a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "81c0c597-6ea0-40e6-9474-e3bae76859c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18991620-34f9-45fc-9720-3abe6e39e6e6",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de621f4e-06ad-40c8-8196-703fc016ff18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea0711e-1952-4450-88c8-93009ec9bed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c95d29c7-5854-4b8c-840a-6010995df1d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "87e2a7ac-f6ef-4977-9923-63008455242d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2cc3ded-8cab-406c-b978-9bdb2bbbe57d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca48a95-2195-4261-a6b4-892d269f23db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "576a6de8-4b98-4168-851c-73a12f049ee7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4d04b0-d266-4bde-b26a-56fcf3f8cb77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2e4501c-1ea9-4656-9c48-135d9de85ca7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3efc0bf0-41ee-478f-bad4-ef96cbfa855f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6bde71-bacc-4aa5-825e-8a3b49641bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13c68792-83f2-43e9-b45d-467653f1c666"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43131887-0814-416b-a381-2c9d82f68dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b214798-7ba7-479b-bfab-ebc87612206e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "607ff875-5e9f-40bf-8a1c-194d75a8bab7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e46366-eabc-475d-9a53-70cded5c5551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7533f75f-f12e-4ec2-90a3-da21c821a72a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582167d2-f1f7-4801-a6e1-2d1b03046999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "135f35a9-e6f8-4250-8568-de59ad94538e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b51805a-b6ff-4d55-ba67-7249c19074ee",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c711571b-96a3-4186-be8b-ebb71b99c1fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd8e197d-5334-422b-b558-69446c82cc4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48b73e65-0dbd-417d-97cc-d51cae6d55ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8e5f17cd-b5fb-4bee-a360-167c2dd64439"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6109e2aa-6651-4ff7-8667-4a18acaed25e",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7127a989-c5bb-40f6-8ebc-1ad5ad8e47d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95959c66-0803-4e8f-960b-07c69526d6c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a6bfbf-3943-4931-bffc-e3a882035ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "df48a185-4df9-4b6c-a69b-f6600c1f6e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7c9436-93a0-45f4-8efd-7acb56629fba",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4438f7e-96cc-445a-b39a-9c8acab7a422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47e1322e-9389-42f7-a352-2f86906bc970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907881c4-02d7-44c5-b4da-0d6880109692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "73dd4daa-a72e-4e3f-a00e-9c65dfcdad09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8873e8-1636-4f23-86fc-2a6cbad8c8c0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37d3d53e-6b4a-471d-91f4-4d7d93043612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3adde3cf-b0e3-4307-bfcc-281d686382e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "485231b9-4ae3-45bd-ad07-77bf292d76ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7340d9e9-9c50-4269-bea1-a32af421b178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d22a09e-d8ff-40e0-8fdb-2f7b59367039",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d60da9ce-244b-4ecf-bc84-9aaca4fb2023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9c120e6-82b8-4da3-b974-8f60ab073073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e0f5e40-21fc-459f-ae69-572b27239f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "403022d0-e25a-429d-87c8-1e15689856e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6f24cb9-6436-492e-8d7c-656c573c279e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b709a3-c53b-4b1c-8a43-bdb8dea5e2cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "526f7455-ef85-4a1c-9922-80d57a0ecb2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2af824d-b4b7-494a-ac7f-490a506e5504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e163b2be-04a4-44d5-8b00-6eb5ff55557c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d27b390-2412-4a62-9e1f-d1eea150de82",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03d17d7-fcdf-45ce-be9e-547513f6a467",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3bc099b-02fa-4ae4-8f47-c175d65778c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfbb88b9-a17e-4817-93c9-cc4421ef3701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d24654b-07fb-43b6-b517-e6fa0600dbff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b10b8cb2-db32-4c73-bb9f-205c96e32ec7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a59d2e6-4211-4fc8-8048-0fc8133de025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06566089-b2b9-4e1e-9546-8b9cf2374d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ad2f348-6af0-4cda-b7e3-ed8f4d865238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4e401235-1035-4285-97ca-c7beb63d9770"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00580aa-ebf7-4d75-bdae-52f7d4a07352",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5898e057-c998-4e54-b530-a78495bca43f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1e481c9-edda-4646-8b48-4356874aa479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "918f85f9-b366-4708-a49f-87b6f1b05bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "160dee55-334f-46b6-af46-819b3b72ab22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1298c8a-8b3c-4be7-9768-eb18590161d2",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa13bb7b-ea6b-4d17-beeb-4a08f728d0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09870215-2b2b-49cb-9111-b5532d2624d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08efa1fb-2cce-4584-bd19-7717627d9ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f01c461-a75d-4b14-bdda-0479085b3307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed8d352-fb9c-453a-a803-86ca343e116d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a671cb7-af57-43bd-9b22-05e60faa5c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf8fafb-1809-42ec-9264-5c7aa4666563"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dec10ed-a748-4c77-b325-0c47e2068bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40a21cde-d531-4475-9a81-0fed12b506ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cbdea7b-9321-4920-bd2d-700f4493754e",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6193f5f-0e39-4082-b47b-fa7ea715a035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e1040ae-c4c5-4ede-8dd7-ca91a3849af9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb2fdb37-6935-4eeb-9dbc-15e9438b5038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7310f6b4-1994-4988-85d8-9cf1c2b70e8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6450f1d5-6fcc-4b86-9ff9-3da360d9a8af",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d103cd-a2ad-4233-a401-c1887f1ae84b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf6bd822-e0be-45ce-a868-c594e54275a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a072b1e-18f9-4e9f-b1fb-99b23d7adc7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fcd455e3-a7be-4f8a-a948-2d8cc95b0dd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6711fd-0941-4073-ba9c-84019fb45f16",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe04b04-e04d-4423-aa33-e60d4483ed7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "679a27ff-f4e9-495c-8d8b-eaede709310b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f6224c-2371-4ef3-913a-8850326cb716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6cdac05c-6f40-4cfb-9967-f1642838b774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be87c3a-f6a7-492d-853b-460e09b9b3a6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "934aa68a-3741-4e8b-8b9a-f63bc0635a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb87698b-6b20-42bf-80aa-f4ce90de7110"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc03002-e576-4ffb-a388-657ad44f658e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e43f7e5e-6954-4eed-b0a0-0bb4a00cf495"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94daf66d-08b6-4047-8db9-1674f2145736",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16c3c6ce-3013-45f8-bd0d-141f0476736a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bb4a4a7-8d61-4411-b5aa-15b50d6a1990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2dc6d1e-1ca9-4e4d-ae5b-340d4d8b8f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93df281f-0e96-4f6c-93bb-8899248a9d61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a887877-b62d-4362-b99b-d960640a0f78",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "083688da-d989-4f20-9068-f06431b75cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fa0c80f-c196-4539-9f03-a926b63c956b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9f954ef-6132-4e3d-817e-f4848c09e62a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12207aed-e292-4c91-8b93-3b5b46000a06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bf0de86-419c-4f9d-9462-c61c301e5d89",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dca4976-a729-4f73-9f58-096a948cedb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "917e1038-40f4-4ba7-99d4-fb1abbd7ee01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b96e06a-cb72-486a-b250-03112accc5d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c2615ef-a19c-4867-9960-a0b080777c9b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3b47abc1-65a5-42cb-96fe-d9fcb874a0ad",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5be2972f-6111-47fc-b983-69c0a04813c3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b44e0248-338e-499f-a9b2-a30a851aaf7e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0a85f10f-281f-40a4-a89c-0c955597f4cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5084ecc-d80e-41ef-897b-b68933c31b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d47c2413-c704-4729-b346-5087a08f830d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee9d49e8-b2a9-4f5b-98c7-9e3b618bf50f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21a58919-d057-4a4a-8286-d1ea465ca1e1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d492dca5-cfb3-461d-a239-800b881a50d4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "466bdfd4-3bc1-4de6-8fc5-27606ea11cba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4c0411a6-ed09-4194-9788-871099e5cf04",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ff0846e3-ce3f-4e54-9662-765affce4c83"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f6ede213-d128-473c-b5c3-345df4745c9a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2b9a0297-2280-442a-8343-0342ae928e5b"
            }
          }
        ]
      },
      {
        "id": "f00c8142-073c-49f9-8b9c-b19967a5d0e0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "73e93013-44c6-40cd-8480-de81644623e8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b18da7f3-1772-4888-9f22-7a75541d31f2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9c7ba0d0-f45e-4365-9ec2-5e9ae01f0c8d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31beb72-cf63-4b94-a596-0a76665734eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "940800d1-7770-4943-a530-4ff888a38e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec82dd6-8cbc-4ff3-9b9b-4e09a7c184da",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f465d89d-851f-438a-b6a9-5760259e9f6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce868b6c-5ca4-458c-ae47-c383fcf7ff38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88408a17-a81d-408b-a517-1fc3089804aa",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c72595c0-8014-4cc3-a028-335500738711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20e05ff8-6263-4513-b887-121fc0ca63d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef62af6-5a04-4a24-aa74-1fef5a6489ed",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf475c87-5c27-4f80-b09f-b2cbcc5d72b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "378b785e-05ac-49ab-a7da-aad87c5d9c03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "262a0553-0b9e-489a-b8e7-4e36e6e2d956",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b1dec52-336e-4a2a-94cf-dc451c924fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93c71fc5-a614-4143-a9b7-bac157d24fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b87ff30-e7fb-4bbc-b486-5a10a1b88cf3",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "760525c5-c776-49eb-9fa7-2c7ec4a79254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b91446e5-62d4-4f90-a414-f3a6a5e82e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a795144-57d7-4b5c-af0d-f3b8bd6e7afd",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee3049d8-c8b7-49b3-9e06-3ffccb10fb3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eb9019d-44d8-4a79-93ad-55cf9769f963"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31079250-dd6f-48a1-9f5b-cad403d0ea43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27898d32-31fd-4e69-8578-96f191daa7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a78870f-5c1f-454f-b6f1-793ec0a19b4c",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0956e3e3-7d46-4d19-9e38-5619f1de8d85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dacc60a1-97f8-463c-876d-bad56ddf8c0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c03166-d8e0-4082-8bf9-caf797418e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "401fc83a-8d64-4d43-94be-13b951b260f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b12175-861f-4741-a697-5b52362fa4b0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef33adc-2051-42df-a5e5-9c584673e2f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0bb5bf3a-aabf-43af-a39e-d9c1cba11035"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5945d1f8-e5c3-418e-871b-41475803e54c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66bdd7fe-23b0-45bf-90dd-a43d2a2d9090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc45b786-4a6f-4181-b076-522f1be8ec70",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829aa940-8dcf-44af-b09b-1d219d774b61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9933fc34-4734-4229-9214-a700e1a25546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7745daa3-5924-476c-8092-7e691386ea7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f066d74-7934-462c-b6dd-7763f8da0c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a62592-9905-4a99-a8d0-45db2b453998",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93531871-ed3d-45c4-a50c-7b185b19d5ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "115a2654-9482-436e-8865-201b0c53e61b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76f01f0f-67a3-4c77-a8dd-61abf161108f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45ba9c3e-6c8b-4793-af8d-4f196a78fb65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f326e4-e864-41d3-9ff9-14cbe548e649",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e10eb8-c227-4356-a12e-05b094b5c832",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16ac188c-f592-4081-8a81-2f1b42112245"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38bacc3-ea85-407d-a01e-a51801b73e68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fdcfd26-5bc8-4705-b995-3450d5bf9fd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5df1d77-f179-41d9-b914-919f43c8daf6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "325ce464-92ea-424f-ba54-ad28a129fe4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1f25459-99a0-496b-ae48-0703c632e899"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "961c9366-e9cc-46c7-b63b-ce08f7981c69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93e33543-69ca-416b-ae32-8b2678c1292f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6df0195-47bd-4c8c-9787-36f13ca20e16",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "050fcad7-bf87-4f6a-b907-96d86b862950",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3fb01eef-054d-48f4-a981-af0224bfd480"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce4f78a-db83-43cf-8a1d-511777e21508",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7d9381f-1b98-44be-8503-cb842e1a60ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a13b3b-9abd-4045-a170-d6d4cd1708b5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a5c1922-ae17-4179-bb2d-0ac9586e67ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "080e1de3-39bd-4f97-b365-a35539e5a429"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff11bad-34ef-444f-bf45-bba2ea881f4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10d9b42f-2249-4aee-b5bd-712a559fa172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e7759d5-0e1e-4afd-b5af-0ce935c6d31e",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3709fa-f2e5-4723-adf6-6e193cab418b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f7cf054-b784-48f6-bd8b-e77ac2d48b53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3907aaf1-5238-4d68-8566-8896da8930b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9a69585-8728-42f0-b9bc-56a10439d644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5d9528-154e-4a81-9f8c-b5d7dfebe855",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8cbc47a-a844-4139-a080-a37214979caf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72855461-c282-4c29-9762-4438c9aeda5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac86bdcf-db9f-4bc0-abaf-3fb002e45871",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "240fba96-610b-4de2-9199-0387877956cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "122ddfdd-0f53-47ed-acf6-44f9a55253f9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b8e9380-5b40-4f33-ba92-0f10c5f0d456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "baa83d84-6bf2-4a0f-bd1b-70cc455bc7dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a70183-5290-4b86-bc1f-63adac38fb9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "363bbc74-b3ee-450d-a9ca-479b89f0a051"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5982b77-d03f-4ac7-b2f1-dca7416db05e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00249299-c1fb-45f8-b25e-503ffee9eb78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8470774b-4e7f-48af-9e7d-cd95278eaf21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47a017a-2648-4e76-bbd6-5a0572b1822a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7003c6-fb80-4d9f-bf8a-caf93fa8a3c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58fb6ef9-22e4-45eb-91f8-11aa0381b933",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3614de02-1969-44a0-9fd7-e5471d076e09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11418f8a-00f3-43b2-910e-cfc6dc447c84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "663aa5e0-d916-404d-8b62-04aabf534f55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a52700-de79-4663-9c27-d44ac5fa12a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d91ace3f-daef-48fc-810f-8ef52ba81855",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db9e01ef-c624-482d-a615-f525452b4348",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94986e38-291c-4bb4-a0a6-bf7deadb928a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e83cbe1-763f-4531-91eb-f5e4e4ee6fa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fbb27ec-202a-4465-a4d8-e49e76cd9bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d73a015-fb34-4ae4-8e28-09b2740c6127",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8d6fce-9891-4efe-a16c-f7e9ec75397f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66f65d25-69a8-4d72-a4f4-dd3cb43ed0f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb35fcb-f9fc-4236-b6d3-457bc3d5c905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92fca1bc-dd90-4984-97db-1775558383be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557fb99e-9382-4a47-a2ad-441df734ec3a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2404cdb9-0497-487d-aebf-2731199c5363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a774549d-e8a4-4596-83a7-276c134a24e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "015bf104-d03d-4127-962c-aaf365bf2699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "234b0588-8853-42de-b42f-5cbd656c7af1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58b66325-bce3-4c51-b68b-528cc5cce658",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6492c2d5-ef52-484a-959c-117725d7c65d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f5ac5f9-193f-4d3f-abf9-b70c107847a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17d5ff9b-9604-43f9-898c-56d26f95906e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48d3ae0a-cf38-4126-a9c7-e6409772c084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb30652-fd8f-4e2b-96f7-aa7840592406",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38699d32-0469-460e-9236-fb87067ffe5c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a8e9d62-2829-41c8-a60b-187a69384583"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf699dd-c753-412f-aaec-6a286dd60335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c895330e-6278-43bd-b801-fb67dea7f31c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c49f4a75-acb4-4654-b72a-420fafc56438",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608c7565-8d24-4de3-9f59-61c25618b749",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f507ba4-509f-4f7e-b925-59f159d593a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27805882-ce4d-4660-9146-46389908c6c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35a53ec7-3761-4f80-ac0e-11868c550232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cee99c18-0d99-4346-be90-1c5ad3ac6fe7",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d1ab521-9f57-477f-a6ef-5e1615e0383d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37cf619a-68fb-4067-8360-6e9760ea6bb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "033bc5d5-20e3-48ab-8429-77e7e60eb427",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19dd0c37-c0be-4fc7-b4fd-d8decf0b4fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd782638-93a3-41e0-a182-9dadcaad36b8",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9268b8a-4049-4da2-838f-385ba0dffee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cb7d551-aff8-4cf8-9d32-226411798cd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8964a2f-f195-42fe-b0db-11290158e2e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed9c4a18-00bb-447b-8a4c-52c3d0a9f319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ed4cd0-b62c-43c5-96f6-bcf7f00e4cb8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43937654-14be-417d-8a21-4dca04d33ef6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07805907-e7e6-4055-bb3e-8e4120b1a3c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79ffe78-e71f-460f-90c3-bf21382179c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "518e9547-1f04-477e-ba92-242c153f4d33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0e83657-87e8-412f-a06c-584f685683aa",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ee0005-eb43-45f0-98d0-81ae52391e75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f734699-75a3-44f4-88da-72df7cbe1143"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d39e87-e2e3-499e-b2c4-5a4cbca75b17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4428559-7782-4f57-be2f-44ad653b6c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1bc677e-fb2b-464e-b437-7a0fcf145ad2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe26404-6b42-47ca-ad34-d70e9a49da7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "768d3f0e-9450-4a5d-ad75-d68ea66b28f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc58052c-77b5-430e-8af3-5be8fe678ca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7945e2a-6ae5-45fa-9ca5-43813ab71324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e908c19-d8ce-48b9-8005-21df2d87fa99",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6254b47-b48a-4e57-a4e9-2d611a044377",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f00de88f-ecbc-4c3f-a8b0-af8d52037956"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3241ee7-4d21-42e4-8e49-85dd7a632931",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99f4ad02-c0a9-4882-99de-14ebaf84b379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1e9769-908c-40b3-8a8e-b38be332ec5e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5530f29-4239-4629-8fc9-fddcb3176893",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7719959f-b487-41ba-9771-fbc9fd6d6767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a147dfea-8f47-46a8-b41c-6053cb3c32ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "259b9bc9-182f-4583-a44a-03e01514d2c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c6a927d-e643-41a5-bdeb-a3c51cbec6b3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab034c5-40ed-4ce9-a46a-d70abe0f2d32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f513115d-3744-4d2b-a1b5-9761963f5842"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2909bf55-ae5a-40ad-a393-0351cf853ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "066a6ff0-85a3-4f36-9202-2da7622ee79e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb82adc-b61c-41fd-9077-90ee564cbe8a",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163e122b-83d6-4122-a59f-7b7e6db4fe9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a66ded4-4f86-48af-b380-64513d1460fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07014609-74b2-483e-97c5-bcdcb9227443",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92839225-2b38-4aa2-9f21-46686208d1f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d6b78a5-d405-465d-95c1-a05777c8832f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9314d7bc-8e6f-460b-ba93-c1001fdceb93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0431eb29-193d-494f-9288-77c82a5f58d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa86960-4205-494f-b7d0-4289a2937b32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a6cebba-855a-4f10-88a3-a59cbb126c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b794339-2fa8-482b-92d1-b476dd1ae141",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d34f46b-1e00-4d1e-93d2-604bdaa96acd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5e3fe9c-c63a-4df5-8937-3af2762e6b71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "788d9905-9fb8-4adb-87b4-7b1dfb5aa3ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a32ca556-1de7-40a6-b1e4-e37dd06cf527"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62996c18-0c39-4577-9210-a6980621e856",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27df9d88-e8ab-4656-8f4b-560f2c9a5aef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c371723-7221-45c4-92ea-e4f116bb2609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9e2e56-0ce8-4d72-bfcb-b68a0816034f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c6c82f3-cff8-4f33-9a3a-8cf98fe32aa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c40dd6d-59a1-430f-9dfe-c6a6fb8fee90",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b63d00c1-98ab-4f27-9437-2bee265dc319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cc426ed-b295-4363-be6c-5ec4301e1303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7095b49b-aec2-47e0-be7f-e44c6b90a0da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "751588da-2077-4f26-adc2-620957674859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d531830-d0ea-4e05-b585-9c1d700502b2",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a2b11a8-fabe-4a23-93ab-0510c025ef4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "782c9b1e-e003-4b66-8373-f3585ba3d7d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d015ee3-f1c8-418c-9f2b-59e91ac4d87e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6988a08e-b167-4cd0-b835-222f4a7491fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d3bf651-032a-40c0-8261-7570157d7b19",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc90b2a5-2168-4687-bf71-88ae1c96d4a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dfc9906-9efa-4add-a465-b1f68dd8828b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2e8432-9b62-46ad-a6fd-31826afe979c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feaf21c2-8d01-4076-9328-25aae2a517ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2203b899-bc67-4098-b61d-40d4d02dc24a",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d99b0eb7-bbbe-43e0-b6e1-20f9f44ff4be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "788ba4aa-de11-4079-b6a8-7c4608414146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c746ac92-08c5-4168-b509-e7cc754b2857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5a56bba-dc1b-4998-9272-1dbb9d4196c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89fdc82b-e8fb-4b29-99d7-edd67921881c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe39b3f8-4252-4a7c-a6cf-6a7943dc46f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07a89f77-5b10-48d3-bc55-df4dbaa1f799"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a637cc04-9694-4553-aa6e-6c81331a99e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fa450ef-e0fc-4e87-b01b-47460f815abb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad14c69-b757-408a-ace1-645797e8dd1f",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b8e74e-0fe3-4efb-9dc0-99fb8d3f7a18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12adf97b-b892-4061-9ee8-339368871cf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "773d99c6-e036-4e23-91d1-a3513fb57d08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43969485-4c8d-4b0f-b875-ee5bddf1c513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18173586-39c3-4d77-9198-447b6ee764ba",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d3dc763-ef51-4820-a236-96a7d8cb81bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b13b4eb6-ef40-4e76-a4a9-79151a38843f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "383d1b85-8d13-4b8d-86a6-e7b1e66bab60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05a9231e-f699-4709-a049-01e3a9e054f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e5cfe1-d191-4f78-b9bc-6c81e3b810f3",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebf82b5-0ba1-4eff-a7aa-9a374de1b593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f681401-420c-4633-9043-023f0a22d754"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8912a623-6f33-478b-abec-c204052703ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69ebbee5-6af3-492b-b9f7-f890230ac734"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc153605-f502-449e-a9fb-7683d70f6450",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ef47db1-db87-4e87-b86c-1e0c3bb84904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4403b91-50eb-400f-ae97-1b48fb8cc35d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bce95b7-a4e0-411b-90f1-106485fd3f8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f690f09-9abf-4c94-94fc-b67a0f8da553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1810eeb3-a645-43dd-af38-fdfee0af15a6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39342a4-7c4f-42cb-bde7-8a6b03910979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dd58cf0-60dc-419c-b289-e59c3265ed95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5975f90b-a620-4c2c-8b43-c4c688716e3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b482027-7fe1-4236-8254-3f921f1904e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d361c4b-7638-4ab3-99b6-78ae9a3d88a8",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8657a642-9ed4-4038-be9b-0023415a05d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b806b37-da1e-404c-8e50-06f91f153fe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a120c8d1-0fcd-46da-8df3-ff0c21288beb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1e7dfe-1a83-4032-828c-8543cb9b50fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c8af59-f8c9-4e98-80b8-3fb7a50c1cc7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddbdaa9d-c029-44b8-80ff-117faef9e8d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6f43242-9977-4cfd-b7cd-7136c615b881"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb6efcd9-d738-4636-a5bd-237029ee9232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c3687d-5d32-4e45-baa1-d4e6ff2a3e7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b29ee67-a45a-43f0-aed2-bd32fe0c91bc",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0121aad-f52f-4278-a1d9-db477a43f00c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cdc18c0-bddd-4e52-8ef6-beb99127b316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37b2e706-15f8-4185-b2d6-70879fa8224b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "912c5461-9193-4a47-ae3a-8fae4f861752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5ac633-257f-4267-8c10-7cdb0cc9e14e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b0668e1-519a-4338-950b-24bb64bff343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "077ffbbe-1b5f-4f47-b9b4-63acdf65e473"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c30bb44-9acf-448c-8d5c-cbd34b576a9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b3a8966-2772-4272-bd0a-37f2f2def15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c521f37-64e0-436d-9b56-429e7d6e3c06",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94a2ce2d-e847-494f-beb3-620304042075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa13055-594f-442f-9712-afe00ab9eb18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff08d533-3443-4b26-8e47-2f4d37c551fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "500e3b87-0461-4020-9cd7-29d97dd425ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d249b8ef-825c-4b02-9f16-e879bfdaf518",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4807f07b-2aff-4840-a7a4-b721a94a430d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c73c39f8-2214-4bcc-96c7-f96cc0c35fcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17168bab-ff5a-4f0a-af3b-52c7f4cff2d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36c0f268-6dd4-40e3-bff2-6c07e88784b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4596663d-d249-4b12-bff9-4c16f1d13705",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "535db4f1-782c-4589-a155-4caf70240af9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "174b81fe-1e85-4ab9-b620-280dcf778b91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eec23249-b0b3-4018-8e7f-056baa62924a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3126b8e1-abd3-419a-86f7-0cf5105982d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f86dcb0-0c08-4dfd-b5ee-834265581a23",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38c5ebc-9500-4cb0-8a93-20d101d89926",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "081fca3a-c506-4a68-a03e-eb4fbce2281d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e62663b5-5083-4060-b254-8b87045ac220",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83113d46-c520-4ad7-b7e8-4dc6bbe81ca4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3fceee-7465-45f5-8bee-0a328886dd19",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e124a68-18c2-46c0-9644-cb6a64cbead8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "028cdd12-3ec4-4627-a50a-b6d60d5dad87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "789770c1-347c-4b3b-8382-c4c5af7a6143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f23f6d5-1172-4ffb-b592-534f4418e950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "debb30ad-0069-44f3-977b-606c36a5b493",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f01a18-4c6c-43b4-914e-cc10419cec73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bdba5ec-449f-4bd6-ae2a-f02d1dc5cdc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49551019-1701-40da-b21b-77548f98912e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10be6810-09ee-49d9-a073-0816c1e73025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "614182d7-7378-483b-add3-87ad7059ee47",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf75546-b7af-40b2-869c-d60c90172f2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d9b9508-7d19-4b12-8123-54137c360c73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "606a0a1c-0660-4054-9c6d-86aeb9341c51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "108dd114-55fa-46dc-a5a9-b8157517fb98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5023dc86-c284-4d13-828a-fd3d1ee7eefd",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df37d82-403c-470f-9507-4a79556a29d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0df0706e-e464-4d54-90d1-d247f3a1aac8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98dc3c52-875a-4f8d-ac47-c05f11b210f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c11d411a-7632-4170-b4e8-326a74859555"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd328839-ac27-4849-9138-080f9f822f17",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b181f7ff-17c7-4520-8497-1cc0b5b2260d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bd35e6b-0c90-49ea-a922-6d6459eb4901"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "417ab829-970f-432c-b633-5f9f45e20783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b92dcb2d-2b01-4e75-9899-eaae15581669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b7a6cb-13d5-4855-936b-b7b524a6df8b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ff93b76-81f9-49c5-9572-a0e9e8cb6fdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f76467ae-42e1-4799-ae15-641b82da913e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b57289-df56-4c6a-96a3-7737b3456cd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5b17640-225c-408b-a659-9b787ab34763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88038c30-c08c-4b16-a190-facf15863990",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6bbffc0-3ca0-46b7-9ed2-e45fc3026a0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42297ef5-0fd3-4a06-a353-d9f76ad342bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83b3a4cf-9495-49e9-be3d-b0f485b375e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de4e38e8-37e1-4819-b970-84f9b6d17ea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b982be2d-6656-4515-baf5-270c5f1031dd",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b200e27a-9c5f-470d-b025-aa868d6c8b2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6197484f-4c14-4e06-8503-172f1e23ad6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2be49c2-d9e0-4d8f-89fa-d2bf16a31f8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ad77da-e261-4aba-8006-2e5d3dfd9453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e0d3b52-139d-423d-b664-5807868d6f99",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa76564c-ee4d-48a9-872d-a685f5b39e5f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9e2b3b6f-5154-47aa-ab7d-3a3c634b0e42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "744ae9f2-c187-48f4-b411-dfa297a51d8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a2df5fe-ee06-47d4-8100-92a2de552fc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a8a460-c3de-442a-9cc9-b4982b290893",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79fcb9d3-9efa-4a9e-9a3c-046d29c112fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b9b5872-e4c1-4d9a-a387-9640d12b5020"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cfcd70a-a556-4f10-bc9f-fd2b57655581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb290e28-f57d-4d91-8bbb-8c6e38043a5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff27583-c619-42e7-9018-e4db1cf7bdc1",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f40db0b2-1801-4793-85bd-ab15bf5ec70e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e810eefd-b56b-4d06-aa9a-97c91ec76161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "669c2986-7e5a-4995-8aad-09b990262ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34071584-f56a-44d7-afa7-553c3af1b1c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4a879e5-632b-44d4-8d67-d28956bab452",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476f6159-3d2f-42ac-a701-83a98ba8d25b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0220d1f8-2284-4cdb-ad96-404385a3973c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd8ef4aa-2b7d-4844-95a8-77c1e83b189a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49cbd0e1-8241-4e9b-8c0d-85bd101943c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49faea3f-eca7-421b-817d-9839935fe315",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17a225b-1540-4dac-ba12-53d5057e850f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e05a8bd-e4c0-409e-9dcf-bf303fcbaa4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c49dcf7-4786-4942-8686-e1c0709e35ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31f3c48e-c9f0-4d48-852e-fac953b80759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0301f017-ac05-4973-bdf3-4cdb1cf0377d",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "903afe57-b84e-44ac-a90f-266c02a26fd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb5b04a2-dd0c-47f4-b5df-734d73c709e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c313625-4b0e-4c5e-a954-b18f87c3fe57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4849560-e1f7-49fa-828c-273487f13d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e7c1ba8-d36f-4868-8895-ea067d8b7e91",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0615434-2771-436c-8775-7ab156247a21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41dec97e-690b-4317-8ccc-cdf916ce0ee3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27cd87dd-bf62-4e72-ad37-05556f93c5bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "233885e8-5bd1-4fb1-9bef-a8399bfcdaf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28d746d8-ba59-4ea2-b7be-673738f651ba",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3185f38d-382c-4196-ad8e-569025e3f84f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4aa25297-9968-4229-b552-2ed26628e29d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22198af7-0f47-434d-9ad7-8c7949b65c9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96dd67cb-7535-4167-9e8f-1d80f3bc538f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94985224-23de-4b8d-ad80-c23e44c84d99",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8cef992-6446-4e47-a3bb-6c66c71b6f28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4817783d-0402-4d33-9ba2-8b0c8b821464"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3272f82-001a-4811-b1d2-cbdf9b51c59a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb5f315b-73ca-4db5-a439-79c4f89ea4c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1409d59-f153-428b-bd3d-cbf816b446ec",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ad1340-410a-40ce-9e11-f2146865a149",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a059f45f-07ab-4c95-a370-bfc3293ef5f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "885e2a07-eb35-4aae-8ab8-74579eb14d22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0977336-94ec-4420-b842-dbd4d7b6af81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b83b2699-6935-41d4-9af5-7d425339ba4f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba9295a7-e871-4415-935c-6641ff8e3620",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18ddfed6-ced5-4a79-82b1-15bf59f13a9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "773f826d-b03f-4b7a-829d-fc58a37da700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "072849b3-a920-4677-8704-ec1ddf0dd09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101fc8d8-8fda-4e6c-9330-ba6296b64c7b",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a88b7603-eaf5-48ee-afce-1cb9a5f9b06b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "145395b0-3616-4681-ac50-4b90a03fd97e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b13292f4-fea2-4bfe-b024-2b47ca4294cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f32a37c-4395-494a-87af-1907f228b7e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99b9bb77-5655-40e1-98c2-1774a35c35e5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a84df8-37b3-4d91-a7a0-2ba462220b14",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3166dc9-4a69-4ca1-9d19-3eced5377ead"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d32a4e6e-7812-499b-9124-b93671a54d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20a235ad-9434-40d7-b6ac-8ef378cc5ab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58117beb-643f-42b3-9eb1-97900815065f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d44b01a-9252-4f4a-a693-69e423ae331f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "873b9237-0c4f-4b85-8d74-a19bf5fd963b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93244501-5c8d-4a06-ae29-966677f91c9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c4b2c15-fd69-4d52-aab8-6f51b46d7d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a54c18-8bcb-4b1e-b805-91b2407ae499",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a8bf05-698d-44de-b7a5-1e529864c5ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0af158a-ca45-4ea6-9559-9307ef77f8d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca88da96-3619-4391-a387-43d1bf5cf924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a4f666a-80f3-421f-9943-3e007e86134d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed23bf12-5fb6-443c-a30f-beb4b44b9806",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18c9dad9-b100-4bc0-b97e-59405bb6af7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c74253f5-39cf-42ef-9b67-873ae5de9327"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "075d4fb3-2bad-4a9b-bdc7-6cb3ecac981e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddba44b4-01a3-462a-9420-40bec04d0dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c77001-3b95-44f9-8da8-b11e5474f3ba",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61af240a-6b59-45c8-a747-1f030a4da9d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9aced44-7ebf-431a-aa31-253696336494"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2988ef1-e681-4b43-9e6f-08ea7abcd3d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8f81c79-36ae-404f-8f60-a7f4855a103b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1259a2f-82cd-4f6e-ae16-47104fa368e0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80e8a668-18f1-4efe-a5c4-e154e823d3fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf6e1547-534e-4a4f-ac1c-770a86e2bde8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9683fdd9-17ca-4992-9c65-69e51cdad8ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "127aa261-0e72-4e6b-aa18-c50b431187e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a43c87-e024-48cd-9927-e6bcd7dc6827",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "837bb6c8-1e0a-401b-acc7-f2124f4a57f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87b40cbc-98c6-4e1a-b6b8-5ecc33538b33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2804614e-d466-4c5a-bae5-a4b625deaf0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d02e37-d67e-4526-9bd6-737f8358fd59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eefe1148-19bd-472d-adc5-44f03c30ac3b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d599b1-c589-4a10-a0d4-f6caaed1bb8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce64729a-ca28-4260-8464-c72054030bc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75bbe58b-c41a-4c4c-8fb7-597162642a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78c795ee-ecde-46c9-ba54-6375a3caebd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3401845f-be45-4c50-8591-a178dc80ea8d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74d8dd5c-a4ec-4577-8420-5fdaad82d891",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da998454-609a-462f-af1d-344e9c2f0c50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a37ab97-1b57-468b-8857-9e9fe9677087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ebfd662-46e3-45a0-b326-0db7decc072f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "156f1697-bbe7-4a67-be19-2e66101fe060",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4566c61-930f-47db-ac0f-6e96b9bd0463",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "598d24fc-d8b5-408e-82f3-122eb5020fe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5175f1b-0c66-429c-8f8d-f3c33b8e203c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dcde8d5-feab-4a65-a298-20d6e5640310"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a840b75-16bc-4863-a770-c6483abd1e45",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be0874d-50a8-4373-b9e8-953fde0c6955",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15a63073-c3e9-4b52-bd77-4e452e664f61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed4a5e8-8fb1-4440-a10f-d692c99334d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f08244b0-05d4-4ce8-9168-6ae2ded6145e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f27adc1-9904-43a0-aa97-d3321a2271c3",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6fdd0f5-9217-46f6-af70-a5853bc746b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f1a31e1-6e1f-480e-bda3-e4eef1c6454c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd958cd-ae9b-4215-ad59-6b424c5d3e35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13698b1b-ff10-4481-99ff-ba164f74b1ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1563a6-b0f9-4ed8-a6df-7b269c249d77",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cca3102-b12b-403f-8ee8-00810087681a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "270f1293-2d47-467b-af4d-5e770be20259"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9647686-ecb0-4dfa-8a78-d2141ff98986",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ba0a406-5533-40cf-b67c-f78926cf781d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109be23f-5b4e-4f0f-8117-4f2458964094",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccaff0e1-c566-45cc-b833-b46d48725257",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b93546de-ce74-417d-855e-659841aba06f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b8bc26-9cec-4230-bb70-47f56013ff5f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f2491c6-508c-4897-9a9c-91f3716d76ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d457355-6064-4f8d-87fe-87dfb38e8cf9",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e9d6a8b-96ea-4fe4-8bfb-12c19d39fb69",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b354fac-4d25-4c7a-bfcf-a548e0ea572c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a9d2a8-d00d-40a5-89c8-5577198bc74c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be7e60c2-adc2-40b4-ab35-1df7e2d44d00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36023c89-0d2e-4713-8f94-b8840776b96e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adeee03b-c95c-48ee-9393-c0a37c72ae54",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5db92dca-ff45-4661-8b9f-aa319953a2d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ebc1a3-6dc4-4c1f-b8cd-d63f972d0324",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3058c760-0958-4b31-8f83-fcfff5b4ec8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b3f3ab3-2d62-4fcf-a328-a07d98dc9939",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84cf382a-e50b-4a0c-9fdb-3db6097cde30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2390199d-1d4b-4522-a254-733ab22226a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c81fb1e4-357c-45dc-8ea8-a3311acdc90a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa320e2-1a41-4141-97cc-ed6f26485ef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd065c11-fecd-4e30-b6a0-48a5291de531",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aaddd558-a7ba-4749-8a98-93cf52927e74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28ad5a23-822b-4ffe-ba74-0db4b6debda7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2efd06-631a-4df5-ad45-353fe1aa663c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "283522ae-beed-4cbe-8291-1d4f813f5655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bdb07b9-2c2f-4e49-9217-2fc02f27ba6d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68bd4a4f-1ae9-402c-8b83-170128eb6ee4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ba90f26-b460-4f91-98fa-5d0137aca6e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "940539ae-f42e-4c03-b770-e3bb20e488d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72ccb036-4160-46e4-a06c-2c8846010c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4c147ab-f0ae-4862-a66c-7453ddafa567",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9fa2473-9967-4a97-b4bf-e6e6e278a8e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f637851-c79d-40e3-ba82-d10fe54d4b41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f110067c-bfab-4337-9fa6-57e06c94ee39",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a0e2da8-81e4-4fee-8a04-b6ffa840f0f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a6e5644-c3f3-4c75-8c4a-f03319138977",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ece002b-dfd6-4d81-8ba7-6190cd868318",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a5262be-6fde-42ab-9678-8422740f6626"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ceeb0f5-2bac-44ea-97bc-6b8d462862b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ee7c47c-38fa-4469-9435-e99841e2e0e2"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "341f86b5-dad6-42de-a3a9-53ea24e3e983",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "692bd95f-38b5-463d-bdfb-04252466b98d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9c0099f6-4b78-4cbb-950b-ab9af2a00507",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1c24befa-f5ac-420d-9083-62620423bb59"
                    }
                  }
                ]
              },
              {
                "id": "037da1ee-9261-448d-8fbd-a58b03b5d629",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ad27651e-bc14-42c9-b378-b2580f76cfa6",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a7b882-3803-4fcd-82e8-65956fe5ae29",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d84ab237-def4-427a-9770-5743380f75c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a531d88b-9fb1-4e44-936d-2fc495b67321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06402647-95fd-43dc-b128-087ea983e23a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "550803e8-e47e-498f-8300-5ee0be1894c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c13206e-3879-4b3f-8e15-a952a95b6b18"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ef71731-4d28-47fc-9e5c-49650a3ac2f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "620c6772-6912-483a-820a-9e633412e562"
                    }
                  }
                ]
              },
              {
                "id": "c0fb221c-51d4-47b2-91d0-ebad7311b581",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9d3780f7-4250-44d2-86cc-246adbe5d083",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d4848d-6499-4058-835d-6e84ba04647b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "57a57378-8135-40d9-a49c-8501aeef3977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb2bf9a-5848-479d-95d9-d8a4145a74fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c82a041-6f18-4ebb-b120-01b6d1ebf26e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "3eab816f-b889-4b0c-89d0-f018306f8ee1",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2e0231f3-f415-4d2f-92c0-756141973b89",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "894602ae-72db-4f86-9ab1-b3fdb931a8f5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "66db3bf4-a7df-44d2-a574-dbf5684d71a6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "faddd635-94cb-46bc-aad8-0bc08cc44cfe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7bf9842-413d-4283-b5bf-f00ff350fe2d"
                    }
                  }
                ]
              },
              {
                "id": "3a8fcd54-70bb-400e-8531-d7b90ec76a85",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d13ff1a0-8ab9-4f4c-884c-d24193f78533",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "2bb59320-4d4a-4d7d-b89a-af52fe922c84"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8fb06dfe-9ce3-46db-951e-6f8a9a8fb6c8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bedd7b4e-a269-49ff-9e22-bcd6690a43e4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "459a1d62-73e9-4818-be5d-aca2c810a48f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "e1f04869-c64e-4919-afd6-80b46813601c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f2a31f91-82f2-4059-bc8b-c0fa9809d194",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0682c45a-b8c9-4433-b1bd-59cdb8f5dff2"
            }
          }
        ]
      },
      {
        "id": "44adc65d-7476-4dd9-9e7b-79a08d732353",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f8ce8759-fe65-49b7-8873-47c2ebb735e0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fbe339ef-09d2-4ad4-a03d-33d0b10cd4cf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7633c0b5-8c5f-4568-a14a-fa055ea10db8",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62141897-4f28-487d-b329-60f0b2029219",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "f81a37ec-ad4d-4da6-9b33-860d349fbeb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43bbe29-da2c-4b82-a8ef-df54e080c201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "89c8fc10-284f-441b-b2d5-6e5660a15c03"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74764bc5-2365-42ce-a124-42be38dade14",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b34ac24a-4292-4df2-a144-cd6b1f9bfb6d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "59167559-1267-4239-b62a-225d88ae33ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0129a3d5-39e2-4a79-bf49-902d3a40d19e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "67c59bdb-b9dc-4f80-9c5c-bd04950a12e4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5e7dfd4f-535c-4567-b855-269008212426"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ac9abfcc-f7f8-4a3a-97a8-260186b2432e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c014ba24-b91b-4e2d-9126-01179f01c45e"
            }
          }
        ]
      },
      {
        "id": "da0a60c9-e961-47c1-9673-8b4902312482",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "d9c05b06-f503-4dd7-a364-fb113bb6cfe2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9e9136ec-e8be-4be6-bc9d-a69cc3d57853",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6c09a1f6-5ac2-4945-9128-64ce5bc615b2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "779de55e-3d3e-4c78-89a0-7c5263f334bc",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e58383f-8469-4d34-8907-2cebf671b16f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7927e234-65f3-4b2a-98f1-e9bef9cab4bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0c683b45-f1ed-40bc-bfad-14ca173c0f35"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "32e015f9-498a-4ec5-a4bb-c43563cb8dbe",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74f3c6d7-7123-463b-96b3-b0d8f2c3f827"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c3e84161-2fe0-4e51-99f5-d20f349c4fe6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "46d72092-0ca9-451c-9c08-6b5bad125ecf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2de73f14-7e12-4eea-b8d9-6690294d5461",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7948cbfa-6f39-4cb2-a879-5b055143798e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "221283a0-f5ea-4e82-b4c4-0f34b1732b37",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "864f139a-1087-4c45-8b71-f83e96676c7e"
            }
          }
        ]
      },
      {
        "id": "bf74d51e-a9c7-49d8-9ec3-bc0ffb9d71f0",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "db935366-62bf-4c07-83c8-4b4db560fd3c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8aa23ce5-c8bd-4842-b5dd-d1153fcb5b5d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6f60abaf-125c-4fcd-94fc-c57d700c300e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec01e008-64f3-41e7-bba0-d7dd9b82f02c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7c6cd21-cb5b-427c-9bcd-ab4778ddbae9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af9a68ee-611b-4c05-ae91-d70b97d69b55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e2d1759b-9441-44e6-b03a-7e46bad56183"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23890fdd-adce-4986-b1a7-18b0b8f2f57a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "26703507-532c-4797-b132-286dc4bf8839"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "79a6eed8-4957-44a9-b4c8-6ba7b96a3215",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b648d77-72a8-4773-ace3-ebce6d53cc3d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0e91d5d1-5306-4cf4-b9f7-83cb0ae18075",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "67b062f5-6bb0-43a6-9145-8ddc750e1f4c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21ec0cc4-0731-4188-a131-ccbb84b23c75",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f8a537ec-8431-44e3-b63f-49eef2ed8ff9"
            }
          }
        ]
      },
      {
        "id": "500eeddf-a40b-43bb-bd07-ffa626914436",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5e87e23b-081a-4712-b092-67699eb828e2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "81a6525a-289e-48c8-b42d-eb46406e9c64",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "5ffb8746-d13f-4dd6-974c-22c90c4609e7",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aa8212a6-eaa7-4bf3-9df5-dc8a6fab8b3b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0bd57d1b-4208-4deb-9cb8-6049da1fb7ca",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 143.69473684210513,
      "responseMin": 6,
      "responseMax": 9581,
      "responseSd": 636.2243575423638,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1709253481284,
      "completed": 1709253531847
    },
    "executions": [
      {
        "id": "0bcea4d3-6932-42ae-b138-3b08bdc6c8f4",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "bf053f96-408c-49d6-9d47-5642efb2fdec",
          "httpRequestId": "44a20a73-2920-4c63-93a7-41c4f135f6b9"
        },
        "item": {
          "id": "0bcea4d3-6932-42ae-b138-3b08bdc6c8f4",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "d4fe1835-e902-4845-b67a-0e390a9b6bdd",
          "status": "OK",
          "code": 200,
          "responseTime": 50,
          "responseSize": 0
        }
      },
      {
        "id": "b46c6142-8a6d-434a-9342-837b35c7cfba",
        "cursor": {
          "ref": "5c30cabe-032e-473c-b401-724eda39a068",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "37754ab6-d353-442f-a7c2-bb3d8e926251"
        },
        "item": {
          "id": "b46c6142-8a6d-434a-9342-837b35c7cfba",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "87d7a1e2-cd6d-4fe1-add9-aedfaf9b106a",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "e0b35825-6f84-4cdc-8da8-01caee3ae881",
        "cursor": {
          "ref": "a9e2b5d7-884a-4ecb-8701-90a0a807968c",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "f2ff11c4-7ebf-4048-899c-c9553d9acd59"
        },
        "item": {
          "id": "e0b35825-6f84-4cdc-8da8-01caee3ae881",
          "name": "did_json"
        },
        "response": {
          "id": "0cbce143-8669-4a06-bd19-c4b2d8480d23",
          "status": "OK",
          "code": 200,
          "responseTime": 410,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9489745-492a-4296-ab68-a6969c280900",
        "cursor": {
          "ref": "8faa1131-505e-4f90-923e-19ec21c51a8e",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1a9b2d87-c156-43c2-837e-6743d56b582b"
        },
        "item": {
          "id": "e9489745-492a-4296-ab68-a6969c280900",
          "name": "did:invalid"
        },
        "response": {
          "id": "835afd52-a605-4c15-a970-474d9e01c3cb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 981,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9489745-492a-4296-ab68-a6969c280900",
        "cursor": {
          "ref": "8faa1131-505e-4f90-923e-19ec21c51a8e",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "1a9b2d87-c156-43c2-837e-6743d56b582b"
        },
        "item": {
          "id": "e9489745-492a-4296-ab68-a6969c280900",
          "name": "did:invalid"
        },
        "response": {
          "id": "835afd52-a605-4c15-a970-474d9e01c3cb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 981,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80a46e69-7c8e-4e43-b0f8-64efccfdc6a0",
        "cursor": {
          "ref": "b43000b6-a5ec-4c99-8f22-7dc0226f88c8",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "6c82b1e9-70fd-4a02-be6f-97c58ba8688a"
        },
        "item": {
          "id": "80a46e69-7c8e-4e43-b0f8-64efccfdc6a0",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "85e9a8ba-74ee-4724-8c93-c3ddbe8786d8",
          "status": "Not Found",
          "code": 404,
          "responseTime": 68,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a1c78d0-907d-44b4-acaf-2bc132ca8344",
        "cursor": {
          "ref": "e478be16-cdca-4770-9440-e3e6f143b10e",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "70322fee-8dbf-435d-a7bd-4c64ca866a87"
        },
        "item": {
          "id": "4a1c78d0-907d-44b4-acaf-2bc132ca8344",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "9b866540-d9d7-494d-9e3d-295cbfc0ded7",
          "status": "Not Found",
          "code": 404,
          "responseTime": 66,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa0c1a18-ab74-4901-be7f-449aa326d4b0",
        "cursor": {
          "ref": "20daa7d7-2c8d-4636-8549-a1ba8d3ae6e7",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2208168d-30c1-4b3b-88d4-5623fe708b62"
        },
        "item": {
          "id": "aa0c1a18-ab74-4901-be7f-449aa326d4b0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1e604ffb-2d65-4725-bbba-6d6b1d30e558",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1870add4-d9de-4b60-b533-31053f041cb3",
        "cursor": {
          "ref": "20090f01-d9e0-4cdb-a886-e97f9633ef78",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "406cfd2e-7ee1-4b13-9613-8823de47b984"
        },
        "item": {
          "id": "1870add4-d9de-4b60-b533-31053f041cb3",
          "name": "identifiers"
        },
        "response": {
          "id": "eae0d8d4-3de1-43a1-84a1-7b539bd06fd1",
          "status": "OK",
          "code": 200,
          "responseTime": 79,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e3b471-49f5-496e-802b-238384a2a18c",
        "cursor": {
          "ref": "2d166c81-50c0-463f-9daa-8abb8cf52fa5",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2b4ae995-2293-4a34-a628-06d89bc9f8f9"
        },
        "item": {
          "id": "a7e3b471-49f5-496e-802b-238384a2a18c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7baf0ce5-1b0f-49d0-8fad-19d5af2d72fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfa2c440-de1a-4cea-a7a4-0b5a53dee094",
        "cursor": {
          "ref": "8466effb-466b-4843-a8ce-7ae038665727",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8a00d785-801f-4a9a-842b-f2ba848f3e21"
        },
        "item": {
          "id": "bfa2c440-de1a-4cea-a7a4-0b5a53dee094",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "19bc8c39-6cdb-47d2-9a91-937850cf4881",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5ab1d76-6fdf-4b08-b780-35b5912ff73c",
        "cursor": {
          "ref": "bbd44efb-750e-41e8-aee4-ec50f34b1058",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a309cca2-c97c-4e21-b291-963eb9c9ff2f"
        },
        "item": {
          "id": "a5ab1d76-6fdf-4b08-b780-35b5912ff73c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c7ca159a-1b12-41c3-ba54-4c5912a0482c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0bd46f4-160a-4396-a43f-e5f4548c7b51",
        "cursor": {
          "ref": "53750694-9a19-4441-957c-8e3db66ba011",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "eaaee560-bfab-443d-b2f0-ba930148fafd"
        },
        "item": {
          "id": "a0bd46f4-160a-4396-a43f-e5f4548c7b51",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "65e39fc1-987f-4731-aa71-929d5fdac342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d2a5b0-e202-40d8-b486-dc3544babf5b",
        "cursor": {
          "ref": "57e1092e-5bee-46d3-b9eb-1d94871a2aac",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "6e864bbb-394b-4d0a-9768-7866f52c7703"
        },
        "item": {
          "id": "45d2a5b0-e202-40d8-b486-dc3544babf5b",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "8295b71a-0fc9-463b-a062-9c2f495dff64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 228,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40f3df92-7fd9-43cb-856a-9f6044d2a054",
        "cursor": {
          "ref": "c22bf3e8-6e2e-4cbf-89f3-3d25d13b1871",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "4e4b8cde-ae69-4fe4-b81a-a5601d8b1ee6"
        },
        "item": {
          "id": "40f3df92-7fd9-43cb-856a-9f6044d2a054",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "22240340-9743-4401-98ff-ba8452d66ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6fc9b46-8bf1-48d9-a918-8c7d9dd894bc",
        "cursor": {
          "ref": "3dcf46d8-8f9b-4bb3-8f5a-cfb8d5c9de36",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c1c8f91e-ef0f-456b-9486-068d97b7949d"
        },
        "item": {
          "id": "e6fc9b46-8bf1-48d9-a918-8c7d9dd894bc",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "ce1ef40b-4f77-4412-b30d-280414dabd5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043c8409-2c95-4573-a64b-ae8386b24f6e",
        "cursor": {
          "ref": "74465cdb-2789-4420-8cb6-c9df7bb239bb",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "2a810bd6-91e2-46d3-8426-6b83a0468110"
        },
        "item": {
          "id": "043c8409-2c95-4573-a64b-ae8386b24f6e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "bc0e7b23-96fe-49c1-8e7f-b1a29b87836e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cda96874-4bc0-4de1-9054-59514b2afe3c",
        "cursor": {
          "ref": "4a231f88-ecbe-4da3-87c5-81baca8c0056",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d2730f64-51e7-47e5-af8a-b617350fc192"
        },
        "item": {
          "id": "cda96874-4bc0-4de1-9054-59514b2afe3c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "74b77183-079f-47dc-a37c-298b9bfc12fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50a8653-2b5d-4c98-9b1b-5f55509b044a",
        "cursor": {
          "ref": "85a980e0-ae26-4365-8d11-d5306b9e81fd",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "782c01ef-1559-4808-a81c-8001100c4723"
        },
        "item": {
          "id": "c50a8653-2b5d-4c98-9b1b-5f55509b044a",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b7ff79a9-cf32-48f0-8067-471e2ca0765e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e38982b-5abc-4cb2-a8af-eed9dbf35ff3",
        "cursor": {
          "ref": "9924b119-3b3a-474f-bd43-e5407e1efef3",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9ca5585b-bc06-43a5-b4e8-e33f6322f4fe"
        },
        "item": {
          "id": "6e38982b-5abc-4cb2-a8af-eed9dbf35ff3",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ef4f9078-4013-42de-97d8-be0a35a8ea6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78620492-1461-4128-8261-348067beba06",
        "cursor": {
          "ref": "4a3176b6-5193-4192-bff2-9e83f360a871",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "dbc8b14c-4e94-4be0-92b1-3d0e572ef818"
        },
        "item": {
          "id": "78620492-1461-4128-8261-348067beba06",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f05848c1-99e1-430b-9a97-1ba45b89f74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bba450d-1c7d-4cd2-b322-5d7851168222",
        "cursor": {
          "ref": "ca49676d-76d5-49e4-b65b-523184e8b493",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8d44f17c-836b-42a1-b8ab-b8e4c79ea1bd"
        },
        "item": {
          "id": "6bba450d-1c7d-4cd2-b322-5d7851168222",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "63537db1-5637-4eec-9359-3eb0d993fe6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a243e20-f055-4640-9566-e7d12a4805c8",
        "cursor": {
          "ref": "736c4d15-24f0-4665-b093-8a8f5c5085a5",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "a274b433-2591-4b05-92d4-1bd9bb8e34c3"
        },
        "item": {
          "id": "2a243e20-f055-4640-9566-e7d12a4805c8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "3fbfd668-2624-4950-bcda-1a0c98cba4a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5035f428-c3da-4433-9df2-682e12efe197",
        "cursor": {
          "ref": "a789a3ee-7f9a-46ef-86e5-56ddb41a5bfa",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "848fa443-0ebc-4e65-af11-728ab1f47b1c"
        },
        "item": {
          "id": "5035f428-c3da-4433-9df2-682e12efe197",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "70d86f1b-591b-4149-8b1f-ad320168e688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "804290b6-7fe8-41fb-b3fb-27bf29d20051",
        "cursor": {
          "ref": "8ba130d3-14e5-45fe-9045-a315e4648fa8",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7aa91bdb-3d1f-4c15-91dc-54b3360107fc"
        },
        "item": {
          "id": "804290b6-7fe8-41fb-b3fb-27bf29d20051",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0e6044f7-1158-463d-974e-2773e8478ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0bf3c57-49b8-4059-9fae-2271d11d1b43",
        "cursor": {
          "ref": "d1b1d8aa-4e48-4aae-9e03-aec14c61b8e6",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "81f66343-0c48-458f-8727-e2a9f07d616a"
        },
        "item": {
          "id": "f0bf3c57-49b8-4059-9fae-2271d11d1b43",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8e7b2b57-5518-4d6b-90c9-55c9dfb15ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b208c7ad-bf8e-4808-bbab-cc260b3e3c77",
        "cursor": {
          "ref": "0b15f766-52a7-4d85-a925-4742d2b41541",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "26675eae-765b-46ed-96a1-f09c07d5037d"
        },
        "item": {
          "id": "b208c7ad-bf8e-4808-bbab-cc260b3e3c77",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ed632a70-ad01-45e1-88e8-4e8db831afb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9eec612-8368-4b42-bf91-b7b2b29ae6b8",
        "cursor": {
          "ref": "16b1b42e-2d38-4b49-bff1-68d5c3b1d693",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "24a67a18-90aa-446a-82d3-289c24555418"
        },
        "item": {
          "id": "a9eec612-8368-4b42-bf91-b7b2b29ae6b8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "17bbd2c9-842c-48cd-8efc-806dac1c94fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8176120-a8c2-4e02-92b2-87e5cf4babf7",
        "cursor": {
          "ref": "2c7aa295-a0b0-4917-9413-a4b2253e63b0",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "819a890a-d57c-444b-bc71-8a2302690aaf"
        },
        "item": {
          "id": "a8176120-a8c2-4e02-92b2-87e5cf4babf7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "b0c18bff-9094-4ee5-9d3f-450aa3b8a32c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3fb264b-10a3-40bb-943c-d2a96aa87246",
        "cursor": {
          "ref": "f1ef39ab-48b6-4d56-bec4-ae0dce771696",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5f7591b0-1a6e-4c79-8f0e-9c176ec7814a"
        },
        "item": {
          "id": "e3fb264b-10a3-40bb-943c-d2a96aa87246",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a18ed136-da39-4407-ba95-08f839d5495f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c75e5c0-7a5e-4b8d-8c39-eceafe8ad7a2",
        "cursor": {
          "ref": "2b848dd8-00b1-41ce-87ef-e961af00fc11",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9101038a-25ef-416d-912d-1e01ac0341b8"
        },
        "item": {
          "id": "8c75e5c0-7a5e-4b8d-8c39-eceafe8ad7a2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d4b8b5e3-d354-488c-b6aa-a4dbd2d40a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661f7d74-3365-4c7b-bc0c-dd30c2dd4dca",
        "cursor": {
          "ref": "9e7eca6c-7e6b-471a-9274-b863b5b543ad",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7e774541-dc22-44b5-b11d-e27a4dfe2fab"
        },
        "item": {
          "id": "661f7d74-3365-4c7b-bc0c-dd30c2dd4dca",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "14f74373-a9d7-4acc-85a7-3551fcb65c49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0169a6ec-022f-459c-b1d0-74b38bb3e1c0",
        "cursor": {
          "ref": "b499b9f1-4e27-43a6-9b9b-846f0972dbca",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "2479ec63-8907-4a7c-b13b-56c761380ffc"
        },
        "item": {
          "id": "0169a6ec-022f-459c-b1d0-74b38bb3e1c0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "1b23a891-9a29-49c6-ba82-ea46bf6d56c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca7d089-fae4-4c02-8299-cc3f8b62dbb8",
        "cursor": {
          "ref": "09481dca-853a-469d-8aeb-756dee81b9f2",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ba9f5974-ed77-4d5e-b6da-e63623862698"
        },
        "item": {
          "id": "3ca7d089-fae4-4c02-8299-cc3f8b62dbb8",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "007681d9-5dd2-4d23-8a0a-3f9746c7bd25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8af9ac-cc81-4026-8d5c-53a93955f878",
        "cursor": {
          "ref": "784e7a32-5af6-4ca4-9e2f-968ef6dbbb42",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "ab5cf27d-9320-4d5b-8af7-23be1febec74"
        },
        "item": {
          "id": "9f8af9ac-cc81-4026-8d5c-53a93955f878",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "07168480-dcd9-4a28-add6-47e423d48cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e84c7a1a-e370-4b8a-901d-131dc4f913fb",
        "cursor": {
          "ref": "0f9ac469-61bc-41a0-96ca-b7a21d5e8f0d",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "febaa61a-e09f-406f-abdf-7c6295ade719"
        },
        "item": {
          "id": "e84c7a1a-e370-4b8a-901d-131dc4f913fb",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "c5424e65-cbce-416b-9483-53d8d4cce8d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1899050-770a-4e7b-ad48-58daa8e01477",
        "cursor": {
          "ref": "f2e0af58-f6a9-4b4d-b8d2-d1cd0e141caf",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "008c429e-6e43-402c-93a8-de443adfede1"
        },
        "item": {
          "id": "b1899050-770a-4e7b-ad48-58daa8e01477",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "2f3a6c93-d2e8-4b8a-a939-b9bab52c121d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3844278e-c451-4524-9f14-6bbb9189381c",
        "cursor": {
          "ref": "4b2d2d10-821e-43ac-bfde-ee04d0527eda",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "23c5249a-ebe4-49a9-8a31-7247b08a1de3"
        },
        "item": {
          "id": "3844278e-c451-4524-9f14-6bbb9189381c",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "3ba73e7f-e7c7-44ac-b1fd-716f85780cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 132,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a448eb19-a13b-4eb0-8262-2bf0ec5c4baa",
        "cursor": {
          "ref": "b1bf11f8-4d0d-432f-8c48-546621eb095f",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "69c81f39-fda2-49fa-828b-37a88d636ad8"
        },
        "item": {
          "id": "a448eb19-a13b-4eb0-8262-2bf0ec5c4baa",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "222fdefb-7379-41b5-9ae8-5b21c57190e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bfefdd6-1f49-4f68-ae2a-dcdd0e4c0488",
        "cursor": {
          "ref": "c579acf2-b233-4b96-b4b3-56ad3beb8a7d",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "662af99d-79ee-45a3-b1d3-dd04ac4ca6aa"
        },
        "item": {
          "id": "3bfefdd6-1f49-4f68-ae2a-dcdd0e4c0488",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "23cedfa9-025c-416f-a64e-641d986d55df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "946ce11c-5669-48db-8cf5-3241946bc2a3",
        "cursor": {
          "ref": "640a1fb9-dbbd-4814-afec-adadf220d440",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "3b55a2b4-7607-4d04-90d3-5dad178f007e"
        },
        "item": {
          "id": "946ce11c-5669-48db-8cf5-3241946bc2a3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "bb46e9d4-5dc3-44b8-9b7b-34bc4e512cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "290ac774-5269-4c56-b18e-0545d734b3a8",
        "cursor": {
          "ref": "3d56203b-8a70-4a01-aa14-063349a8093c",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "cd5b6500-c992-4615-b5f8-98f0cbb55d5f"
        },
        "item": {
          "id": "290ac774-5269-4c56-b18e-0545d734b3a8",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "dc46c7f6-60d0-4f1c-ab9b-43c2d3703e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2f7707d-d0cb-4c42-b533-3384f16b93a2",
        "cursor": {
          "ref": "1fe9a137-6f6f-40ad-b8c8-7acfcfbbbfad",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ccab89b0-f468-437a-aec4-93d9d5294676"
        },
        "item": {
          "id": "d2f7707d-d0cb-4c42-b533-3384f16b93a2",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5af9e82a-6a42-4d5b-95bd-c5db0fae6b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80663295-295f-40c7-a53e-8e30dd11e096",
        "cursor": {
          "ref": "ca61ab0c-eb88-4af4-a7a4-33ec46074cee",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e2d1afc9-b32f-45ac-8862-ca78755eb0ff"
        },
        "item": {
          "id": "80663295-295f-40c7-a53e-8e30dd11e096",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "abfa7252-9d3b-4f7e-b28d-478d17a0f50d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 144,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6b01e1-9d71-47a4-bb46-00b05e57ae03",
        "cursor": {
          "ref": "1de2381d-b696-4e8f-97b4-deb451098c99",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9064d53b-abd3-4738-a5c1-92eb62546517"
        },
        "item": {
          "id": "9e6b01e1-9d71-47a4-bb46-00b05e57ae03",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "1f5f3b6e-182c-4195-af1c-97562d83f623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de38aece-4f09-4d67-b755-cdcaaf612b67",
        "cursor": {
          "ref": "47a302c9-c241-483c-a229-110438f5ea20",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "58338c85-3c4b-4696-a3ac-f75492cb1866"
        },
        "item": {
          "id": "de38aece-4f09-4d67-b755-cdcaaf612b67",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "01410e7e-234a-4d71-994a-e5572e5fa153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859b9804-536c-4961-9c5f-e2beaa87baaa",
        "cursor": {
          "ref": "4a2344f1-938a-4cd9-9b61-fca32e809d79",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4be3f04e-080b-488e-8468-099fe6a6aa46"
        },
        "item": {
          "id": "859b9804-536c-4961-9c5f-e2beaa87baaa",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "b2894c84-60c8-4d9f-807b-99bde730660e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29dc66c3-4600-426a-9742-da4b8592fe06",
        "cursor": {
          "ref": "db8875d5-ae12-4f8d-b12a-0c9ec441ef62",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4bc45172-11ee-418e-928b-56b6bf23b6be"
        },
        "item": {
          "id": "29dc66c3-4600-426a-9742-da4b8592fe06",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "24ec2f6b-47d8-4051-94c2-48389877858b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aed662b-b354-456c-af25-463429987e9e",
        "cursor": {
          "ref": "486e36b0-c8d4-413f-bc9e-4f3b55438da5",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "92d5800e-6e46-4259-b6e9-7b2b2aeec01f"
        },
        "item": {
          "id": "9aed662b-b354-456c-af25-463429987e9e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "dccaf5ab-4ef2-4f72-a494-fd8f42436cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7493dbae-3d3c-459d-8f9c-2fbb9017b1f1",
        "cursor": {
          "ref": "ae2d527c-e674-4b18-9ca2-482d8799cdc7",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "ccf47ffa-2d03-4e42-93d4-f451f9257d9c"
        },
        "item": {
          "id": "7493dbae-3d3c-459d-8f9c-2fbb9017b1f1",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3ae8e59c-6a3d-485a-bd0c-5a1c5f4e3d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41831bd8-016f-48e6-af26-4372594a9796",
        "cursor": {
          "ref": "0e83e143-1ab9-4f59-9873-8b63e42cda83",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "29cfc8bd-5efa-42fb-8730-578907e9e3de"
        },
        "item": {
          "id": "41831bd8-016f-48e6-af26-4372594a9796",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f09d838e-d993-4529-bd52-813493269e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51ab6bf0-0eb8-4922-8124-3226e785a957",
        "cursor": {
          "ref": "b5dda7ec-1006-4bf8-a7ce-694f59c53100",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "135932d7-f29f-4c9e-9259-424771da76c5"
        },
        "item": {
          "id": "51ab6bf0-0eb8-4922-8124-3226e785a957",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "70631d94-0360-4522-a092-c9a1365f4668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60ba45ff-c8db-4e41-99cf-c30c531ae7f9",
        "cursor": {
          "ref": "98e12557-16a4-4468-824f-521c88cc3c8a",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "96ec5eb5-45d7-4bee-8a02-c0562db0f459"
        },
        "item": {
          "id": "60ba45ff-c8db-4e41-99cf-c30c531ae7f9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "167320ea-bd06-46ca-a164-0b60c2ea4d78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97048a66-d57d-4333-bee0-ec09f7e63e1a",
        "cursor": {
          "ref": "54646232-db82-43b8-960c-d25f9ac8bc12",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "af9cf023-014f-4c45-aa82-47ff5875626a"
        },
        "item": {
          "id": "97048a66-d57d-4333-bee0-ec09f7e63e1a",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6a6cf394-a84d-4051-a983-1a6fd76c52cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f679d8b5-9a28-4a57-b44d-6605f264f272",
        "cursor": {
          "ref": "0724e8f4-12ab-4588-9107-871b866b68a4",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0ab3e8ce-dae5-498d-8864-fc1a39457f4d"
        },
        "item": {
          "id": "f679d8b5-9a28-4a57-b44d-6605f264f272",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "52e3c17e-578a-4a00-80ca-6027b39787f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc5d89a-d511-48f0-8218-d9b7e5d43ca0",
        "cursor": {
          "ref": "cf1b88ad-29e6-4d1c-acdf-da2c75ce34c0",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "fa8d6853-39c2-40de-a99b-9055b5b0bf07"
        },
        "item": {
          "id": "8bc5d89a-d511-48f0-8218-d9b7e5d43ca0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "186b2c9b-83a0-4eca-bcd2-f3456f23242b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f1ddf1-35c5-4a73-8452-ad4678bbdbd1",
        "cursor": {
          "ref": "999184ee-ece9-4182-9dca-1df7e809cecd",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "69908849-b037-4250-8c6b-3dd4663e59e0"
        },
        "item": {
          "id": "39f1ddf1-35c5-4a73-8452-ad4678bbdbd1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "08ccfe90-28f1-403b-986d-8e36ec332a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39f88cd1-d2b0-4ac8-adc5-ce7078395a18",
        "cursor": {
          "ref": "3a23b163-517e-4959-898b-b3e74220ea6a",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6526eeae-abc9-4f64-8e13-caafc9aa4ec6"
        },
        "item": {
          "id": "39f88cd1-d2b0-4ac8-adc5-ce7078395a18",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d2f055eb-32aa-4119-bcc1-78105637d9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89092bf-7475-41ce-8099-b53bbdc22cce",
        "cursor": {
          "ref": "a7fdd286-6667-4bf6-b31e-b9d2efda7200",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "77c368d2-80f7-4324-bb22-7735a1fbfa8e"
        },
        "item": {
          "id": "c89092bf-7475-41ce-8099-b53bbdc22cce",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "d6aed9c1-cc67-4927-b20f-8c04f9505eeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cc3a8db-f9be-4e4d-b038-aafe988fe66c",
        "cursor": {
          "ref": "ff30e431-3d9f-48a7-9bb7-cf751ed57199",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "9fab3b9f-88e1-4431-a4cf-e50aaa6c3d7e"
        },
        "item": {
          "id": "9cc3a8db-f9be-4e4d-b038-aafe988fe66c",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "55c695a1-e952-4dc1-8408-3229727faed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6010b595-ccc6-495f-bd93-7bb7cc18622e",
        "cursor": {
          "ref": "53820c40-7b0f-4a7c-9c2c-99f893c97261",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "da857c71-c960-4a9e-95cc-8a4e75cae8c8"
        },
        "item": {
          "id": "6010b595-ccc6-495f-bd93-7bb7cc18622e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b90043fd-457a-4dcd-9f96-2170f62e8d6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947d108d-83e6-4e75-9f42-430c3210c9d4",
        "cursor": {
          "ref": "4d047bac-581b-41c3-9d0f-b0daa8005e51",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "27f8a4ca-49bb-4cfb-bfee-f3a0cc417a31"
        },
        "item": {
          "id": "947d108d-83e6-4e75-9f42-430c3210c9d4",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "28d4150f-f2f2-4aa6-91e1-bd4a7fd08d5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf718c99-168d-40e6-ba7a-35a02a745a78",
        "cursor": {
          "ref": "ac9c4d96-f029-4a7e-8f9d-2e4c7f5402c7",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "74e9c9b0-bb76-4901-baeb-f782df45d30e"
        },
        "item": {
          "id": "bf718c99-168d-40e6-ba7a-35a02a745a78",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "3961a64f-552a-4f1d-a7a6-44cbe9de34d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85ccd62e-b57e-419a-a693-a78147bb4432",
        "cursor": {
          "ref": "61e44d29-4aa5-4480-8e28-e1a724ad94c1",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5b15039c-8e6b-4b6a-ae58-e39dc5a7da0c"
        },
        "item": {
          "id": "85ccd62e-b57e-419a-a693-a78147bb4432",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "64919274-3e27-4307-89b8-05bcb3860a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "843512b6-05e4-40e7-9e41-46219d0105c1",
        "cursor": {
          "ref": "63087e5e-cff1-4a1c-9c9c-2e613a5711c5",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9a0425fd-ff24-4f01-93dd-400b50f6ca40"
        },
        "item": {
          "id": "843512b6-05e4-40e7-9e41-46219d0105c1",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "224f217f-5077-4f2d-9cf0-d2a921384688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "331a4690-8d71-4415-8e9c-579e1da15361",
        "cursor": {
          "ref": "fbea1c02-aa81-4328-8d3c-5566d06a69cd",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "5e450ddf-723e-4fc5-bad0-bcb311e43f5e"
        },
        "item": {
          "id": "331a4690-8d71-4415-8e9c-579e1da15361",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "e067f4f2-a7a4-41ba-a009-eecdcd72942e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 122,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06876964-facb-4793-a3c3-d3ecea3232f3",
        "cursor": {
          "ref": "f376e680-19cf-4d29-ba84-3fd52ed678fa",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "cbf988b0-18cd-4ee9-8031-d2f12428a18a"
        },
        "item": {
          "id": "06876964-facb-4793-a3c3-d3ecea3232f3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "9350bfb8-cb6b-4554-8d5b-0b0d52f2bf75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac606527-4071-468e-a9cd-14a55f6ff286",
        "cursor": {
          "ref": "94476645-8983-4a10-8d7d-a91346b6b8f1",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "105695ad-d36d-49c1-b7a3-b9eb379cd82b"
        },
        "item": {
          "id": "ac606527-4071-468e-a9cd-14a55f6ff286",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "24cc65d2-fd33-461b-8684-9d1c48d8f708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c87981b2-87b1-4f5d-b7c6-92bfb5773f60",
        "cursor": {
          "ref": "f453fd38-bdb9-435e-b5b5-0af543953430",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3bb41166-6421-41f6-ac28-cbdd089795b7"
        },
        "item": {
          "id": "c87981b2-87b1-4f5d-b7c6-92bfb5773f60",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e42c2e61-c6e4-4c93-87cd-29026a48c126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2cceb02-3cc3-480e-b0c8-c363eac1b11e",
        "cursor": {
          "ref": "9db5c4b7-9aff-409c-9b70-31ac7c2fbee7",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "64d0e35e-c3cb-48ea-b301-c1b5774df075"
        },
        "item": {
          "id": "c2cceb02-3cc3-480e-b0c8-c363eac1b11e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b6b661cf-2cdc-42a0-8e77-a3e25aa95e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad16cad4-619e-49fe-82be-3f463c7ec9e0",
        "cursor": {
          "ref": "e851f42f-b5d6-4e76-9959-5511d4d63e56",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "02ef6604-624b-40e3-9263-e87197c6c04d"
        },
        "item": {
          "id": "ad16cad4-619e-49fe-82be-3f463c7ec9e0",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3a5fbf1a-37cf-418c-ae5a-10088dcf66a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "533afb15-c492-4e01-b6e5-eecc4f144348",
        "cursor": {
          "ref": "a1673ef3-a135-4489-8805-48a5a8e42d0c",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "23fba4a5-4875-4f15-a55a-3ee076a853d2"
        },
        "item": {
          "id": "533afb15-c492-4e01-b6e5-eecc4f144348",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "14d59798-f5c8-4067-911e-afd781c8d121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ccbe153-888b-4146-b582-71f7cfe3b2e9",
        "cursor": {
          "ref": "b2622c87-73bf-4879-aa2e-995e08c104f2",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "070c63ce-8a1d-4603-b37f-308c95b8ec13"
        },
        "item": {
          "id": "2ccbe153-888b-4146-b582-71f7cfe3b2e9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c5c407a5-521b-4f24-84e0-664ee63bf2f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad0602e-c024-473b-b0c2-e379d6f977a3",
        "cursor": {
          "ref": "0d8786d7-5874-4997-bf20-1c9593a17aa9",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "4c0331cf-88ff-4275-a21f-12858b55499e"
        },
        "item": {
          "id": "fad0602e-c024-473b-b0c2-e379d6f977a3",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d67d3626-4451-4d97-aa71-026d58d5278b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103fcff0-0220-4a4b-9709-7da7d98aee27",
        "cursor": {
          "ref": "4688c6bd-770f-4d14-b7aa-030ba7f48c5e",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "cf4bfa70-02ab-46e5-9713-310b937cc70f"
        },
        "item": {
          "id": "103fcff0-0220-4a4b-9709-7da7d98aee27",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8b4fdf66-244e-46b8-a9fa-1a12c3d30eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8713333e-d660-4d39-98d2-04bceeb72919",
        "cursor": {
          "ref": "35660e66-73d8-4e87-bb22-67bc73d7c23e",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "a05e19db-3c09-4cbf-860d-77c889ece95e"
        },
        "item": {
          "id": "8713333e-d660-4d39-98d2-04bceeb72919",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c206187a-eee7-4a6c-a97f-f11b0a838187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c284e51b-0716-47fd-bf49-d8dc6415bea4",
        "cursor": {
          "ref": "a8203c34-84e1-4fa1-9513-8b882fb6304f",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "2aeebabe-33d2-4a5c-9e49-5b19ae7ec8b6"
        },
        "item": {
          "id": "c284e51b-0716-47fd-bf49-d8dc6415bea4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "26d13be4-6baf-4305-b99d-f82ebdccad71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f4b8c3e-28f7-4542-9108-6fae087e06b9",
        "cursor": {
          "ref": "55a851ee-5c0c-4e0a-9bd7-fd7678d8c626",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e2bbc902-c48f-42b2-aa67-f6727e91a5d2"
        },
        "item": {
          "id": "3f4b8c3e-28f7-4542-9108-6fae087e06b9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0b68e96f-9fbc-4ed2-8b4d-02e99fa67339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 116,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff710feb-6e0a-4a21-92ce-61b495d25bcc",
        "cursor": {
          "ref": "385c90a2-0542-45ef-b845-fa76093abc71",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "539afc40-d747-4648-b0ea-4dae5af39303"
        },
        "item": {
          "id": "ff710feb-6e0a-4a21-92ce-61b495d25bcc",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "8b8f8b66-9c12-4ec7-b37c-43acb96846bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4090ca-f1ec-4dcf-ad98-ec8f79a3781f",
        "cursor": {
          "ref": "14ad751f-6fc7-4d8f-8ce7-fc4294908dce",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "6c7f5d2a-33ff-40a7-98af-b129370a7b1d"
        },
        "item": {
          "id": "0c4090ca-f1ec-4dcf-ad98-ec8f79a3781f",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d0a32a65-f14d-4a7f-a594-391f545a0c83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4528009-99d5-4bbc-8541-81f9008f583d",
        "cursor": {
          "ref": "14f0138d-4c45-48b3-a7af-d73ef909b140",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bea03021-470d-4a31-a2e8-8775f2776081"
        },
        "item": {
          "id": "b4528009-99d5-4bbc-8541-81f9008f583d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "dca240a9-aba4-4bff-8a9d-c45992255e4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65ec78c4-0cb8-47cd-9f36-d583110565a8",
        "cursor": {
          "ref": "6bdb9259-ba05-47d9-94c0-9addf2878cd4",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "e187b2b2-e2f0-4680-83f0-8d5637b5efc0"
        },
        "item": {
          "id": "65ec78c4-0cb8-47cd-9f36-d583110565a8",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "05dc4254-f589-43d7-99db-03d295aa4784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68a0f132-eb0c-4f50-a16a-6316fcb928ef",
        "cursor": {
          "ref": "b5d70de7-ac70-4579-bfba-3bce3ab05abd",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "4f54ce00-222d-4a07-bb1d-f6c2617ce1fd"
        },
        "item": {
          "id": "68a0f132-eb0c-4f50-a16a-6316fcb928ef",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c991e6ef-5371-42ee-b429-b42b46d20585",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6fa84c7-bf9d-44ad-8056-a46e14a1a09c",
        "cursor": {
          "ref": "a1183889-f5dd-430b-b491-23383fe799d4",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "1eba6d89-43b0-4870-904e-09cc03e93bd2"
        },
        "item": {
          "id": "b6fa84c7-bf9d-44ad-8056-a46e14a1a09c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "eef9a5bc-8708-4d69-bc04-763c2ccf2e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a3b83c0-d8fa-41ac-bc17-47bd7a23c377",
        "cursor": {
          "ref": "2c7aa15a-1d63-47ae-a682-ef305eb71f36",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "dd814b1d-e315-4e56-93eb-4792a8fed470"
        },
        "item": {
          "id": "5a3b83c0-d8fa-41ac-bc17-47bd7a23c377",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "6bdc2f55-430c-4cd6-933a-e53c7192da4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "864a3ac6-d957-4f55-a723-8344b161f732",
        "cursor": {
          "ref": "b853e295-c031-4725-9146-ae534d81c03d",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "183e2f3b-a591-41ef-acbb-ef801186c6dd"
        },
        "item": {
          "id": "864a3ac6-d957-4f55-a723-8344b161f732",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "8908d41d-4467-4b82-8388-0c00d70712b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e504706-8c8b-4a12-a510-db2cb55b0a9b",
        "cursor": {
          "ref": "0378306a-8ebf-447a-bf75-5ebf754267fd",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5191c671-1240-4814-983f-f0fe2492b9dc"
        },
        "item": {
          "id": "2e504706-8c8b-4a12-a510-db2cb55b0a9b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "2821ca38-328a-4a4b-83e7-95227ec35604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "733f32fc-1924-4988-b598-834cff87dc9e",
        "cursor": {
          "ref": "db26458e-bbb7-4c8f-aec4-a3fb493d227d",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "2efd7707-c217-4174-a825-0345095d52b6"
        },
        "item": {
          "id": "733f32fc-1924-4988-b598-834cff87dc9e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "1ad79cf7-17ca-4647-ac74-bc4582f97fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4146ccc0-d726-4adc-9f37-824e948c9dca",
        "cursor": {
          "ref": "f3326c68-bb2f-47e3-9d1a-574d6dc346b4",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "03c27e0d-2473-4000-ac8b-9975b2c8c40e"
        },
        "item": {
          "id": "4146ccc0-d726-4adc-9f37-824e948c9dca",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "29c29a80-e261-404d-a1d0-c3da994d52ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dca2944-dd07-4a39-b7c1-b1d610c33395",
        "cursor": {
          "ref": "c412385c-c1d3-48cb-8bea-7dee7b3467e2",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "4dd20c29-992e-4ded-ae98-f4ae7f7675b1"
        },
        "item": {
          "id": "1dca2944-dd07-4a39-b7c1-b1d610c33395",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a3f19a1e-2be6-4ae1-b333-f0c465b22875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81aecd3e-278c-4ea2-a158-6bc55f67b280",
        "cursor": {
          "ref": "c73d8bc8-edf8-4df5-903b-4586a47a86f4",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "28a5e704-5ff8-4708-b356-1046d1ca5c2d"
        },
        "item": {
          "id": "81aecd3e-278c-4ea2-a158-6bc55f67b280",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c085a85a-052d-412d-b8b4-c2e71fdf1059",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b50c0f09-ef13-4ae7-92ce-22fdecfdeffb",
        "cursor": {
          "ref": "473bb246-ca59-4ed0-ab38-62cd2855933a",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1a66d3f0-ff10-441a-8fa0-c81b12e1e22e"
        },
        "item": {
          "id": "b50c0f09-ef13-4ae7-92ce-22fdecfdeffb",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "ec6e73e7-1b39-4e9c-b988-33a547d85f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa365a1-c27a-4bd3-bf96-480179f631fe",
        "cursor": {
          "ref": "879b2132-ffe9-4037-80b5-1d6001275b5f",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "dd9b6853-8980-49bc-aedd-db764cfc18db"
        },
        "item": {
          "id": "5fa365a1-c27a-4bd3-bf96-480179f631fe",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "de650c67-de41-4a1a-9f2a-1bc38721056e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f43c23cf-91d9-4b08-aa1a-9e15ebb91def",
        "cursor": {
          "ref": "eb9ed267-d9dd-4835-b2f9-09d94d150c4e",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f55328f3-5327-42d5-8be7-cf4680a141d4"
        },
        "item": {
          "id": "f43c23cf-91d9-4b08-aa1a-9e15ebb91def",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2cfd4555-edd6-46bd-9125-e4779603de0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27258fa0-4676-401d-991d-865b2d7001a8",
        "cursor": {
          "ref": "6c69aa9e-9fb6-41e0-b367-8645357e0d07",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "fc20cf41-3364-47f7-8484-332388e45a68"
        },
        "item": {
          "id": "27258fa0-4676-401d-991d-865b2d7001a8",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "2a0e5f53-ac3b-427a-8bc0-393232a22ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c009a9e-6656-4457-95e0-0ab6561bc348",
        "cursor": {
          "ref": "b9c3b797-36ec-4e23-af1d-de365665b13d",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8a4ebf50-eef6-4444-a14c-82edd6559da6"
        },
        "item": {
          "id": "6c009a9e-6656-4457-95e0-0ab6561bc348",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "8db1bdd3-da4b-4b88-bbe1-769aee3de930",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3ee796-d2a7-46a8-b0aa-fda2a9f7da33",
        "cursor": {
          "ref": "8d494ddf-ad2f-44d8-8df8-3246f18e1a86",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "30c03a1d-1bd7-4307-9c32-034b05a0bb06"
        },
        "item": {
          "id": "ca3ee796-d2a7-46a8-b0aa-fda2a9f7da33",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "14e7abc4-691e-4f41-9465-18d48ac864fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76c35b9-cfed-476f-b684-d817ac363f96",
        "cursor": {
          "ref": "cc423b84-fd5c-4e03-b44b-656d1e266292",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "9c7cd05d-5e33-4f07-a8df-8eea9c13c7b5"
        },
        "item": {
          "id": "d76c35b9-cfed-476f-b684-d817ac363f96",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "a1d0f07a-c6ac-4d02-8015-cffbd994e5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cccdf760-4764-4196-9446-efbdc450f0d3",
        "cursor": {
          "ref": "9ee31d2f-9b48-419c-8bb2-4af71f91d385",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1970c5a0-816e-4764-8948-ebc716334da3"
        },
        "item": {
          "id": "cccdf760-4764-4196-9446-efbdc450f0d3",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6e99edd8-72ca-4f90-a454-a571665aee7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45279d06-1d56-4179-b22e-7fbcf28af8f3",
        "cursor": {
          "ref": "51570bb5-c881-4dbb-8d1a-f298234b2ac4",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "4f1d001c-adb4-4632-9260-2986d9e49a5c"
        },
        "item": {
          "id": "45279d06-1d56-4179-b22e-7fbcf28af8f3",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ae62d23e-55f9-4880-a140-7287e9ee439f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61d522fa-e845-46c4-9921-6fec182bdf34",
        "cursor": {
          "ref": "96bdf10f-a662-46aa-998e-3a4cb1ba3fb7",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "f6a3bbd7-63ae-46bf-be3d-4e46b9b3ad5d"
        },
        "item": {
          "id": "61d522fa-e845-46c4-9921-6fec182bdf34",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c1db89c5-60c7-450d-ac30-ed8595d6cc59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0c2e430-ad4a-40b1-91bc-8674e81a7e5e",
        "cursor": {
          "ref": "3e23276d-4787-4ac5-9c56-1a685932a7b7",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5375f6e7-8b4b-4c62-82a8-5d8cb70a142b"
        },
        "item": {
          "id": "e0c2e430-ad4a-40b1-91bc-8674e81a7e5e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "c8812489-ecae-415c-af7d-231bb4f39ec4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ffb1d88-992f-49c0-bbce-f5b27f4107e9",
        "cursor": {
          "ref": "7ad61929-deb1-4bd4-9f7e-0c2e0f42065c",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "c1720fbe-9a40-4431-ab46-b136f097c332"
        },
        "item": {
          "id": "4ffb1d88-992f-49c0-bbce-f5b27f4107e9",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "36ac5ecb-a382-4969-99fb-daf50f873983",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "2d7f0efe-35da-484b-a46f-17106906035d",
        "cursor": {
          "ref": "3580e8c3-6706-4255-b8d8-d10468356ab4",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "29866602-49f8-41b4-8f6e-b299ce8e7b8b"
        },
        "item": {
          "id": "2d7f0efe-35da-484b-a46f-17106906035d",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a317ad2e-a849-4c47-8060-d03727285dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "3308623b-e6ce-4823-b8a4-a29b6b1a917a",
        "cursor": {
          "ref": "7edac42c-5489-4977-bf9e-e121358de8e6",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "abac043b-7e97-4f13-83dd-ace372d4cd8c"
        },
        "item": {
          "id": "3308623b-e6ce-4823-b8a4-a29b6b1a917a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "48a5738a-960c-4cfb-90e7-84f881fcb119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "7f083d87-4ee7-48fe-94e1-c9afa5a9f07d",
        "cursor": {
          "ref": "e0cb9b33-fa0d-4526-a38b-6231df5607f0",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ad1135bb-6d6e-4644-898f-aa8bfe678953"
        },
        "item": {
          "id": "7f083d87-4ee7-48fe-94e1-c9afa5a9f07d",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "f61082ea-36d8-4430-b595-28b50d96a682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "5d86b378-0573-4829-af8c-c3a211cd0e50",
        "cursor": {
          "ref": "d51204c4-d3cd-4990-8d3e-f2b5a11c0291",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "18884f7a-3a0f-425c-866c-a1bb536125f9"
        },
        "item": {
          "id": "5d86b378-0573-4829-af8c-c3a211cd0e50",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "0e91d2a6-e8fc-4050-9858-1495ef7d6779",
          "status": "Created",
          "code": 201,
          "responseTime": 9581,
          "responseSize": 991
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ee4c63-8d26-46f2-bb2f-21b5eacce12e",
        "cursor": {
          "ref": "9e76d9ea-638b-4838-884e-7fc1d8fb0d62",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ba0e3c41-464b-4c6e-92c5-d2bea7b25283"
        },
        "item": {
          "id": "94ee4c63-8d26-46f2-bb2f-21b5eacce12e",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "978f8c6c-a204-4fb3-b9af-1b2aac5d3e5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "6317ad48-063a-4100-81e0-9bc43b3c41da",
        "cursor": {
          "ref": "4bbeb236-369a-4068-a555-a127908170bf",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "09599668-e9db-4ab1-9ce7-85bf322d7fb6"
        },
        "item": {
          "id": "6317ad48-063a-4100-81e0-9bc43b3c41da",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "929d9c3a-6b1b-4430-826c-6ec227c81888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "9415d436-af55-4f9c-befe-4ac1a673dbd6",
        "cursor": {
          "ref": "03af0dbb-4d0c-4e32-97bc-9c0c0f1eb33d",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "cf4c2b92-25fe-4b40-9ab9-509edf9fccc4"
        },
        "item": {
          "id": "9415d436-af55-4f9c-befe-4ac1a673dbd6",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ccde32c1-9086-4b3c-8ced-bdc9641f930d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f61628b-430e-4a80-960c-59020fbff314",
        "cursor": {
          "ref": "77342446-f864-4192-a293-b0e3ccfb3dc3",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bdc7cb0f-c542-482e-a9f5-39c96c4a6981"
        },
        "item": {
          "id": "1f61628b-430e-4a80-960c-59020fbff314",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5070dcfa-f372-47ec-90d5-d518582b5db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492dbab8-7f80-4950-8251-586462d0221b",
        "cursor": {
          "ref": "b0bd58c7-4e80-4e97-a89d-de31f1706b43",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "41973706-0bf2-4422-9f9a-fc64904c0233"
        },
        "item": {
          "id": "492dbab8-7f80-4950-8251-586462d0221b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "8c015339-a4c5-48cb-bfb9-d18d9a40384b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87df8ab5-52fa-464f-a83c-f1b4967ef955",
        "cursor": {
          "ref": "b95cadb6-b14b-4808-89bb-568a41d52c44",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "8aeb78b2-8b9a-4acf-9143-99193477862e"
        },
        "item": {
          "id": "87df8ab5-52fa-464f-a83c-f1b4967ef955",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8eb17f41-5b07-4d90-9f1e-09ded4936310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 156,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210cab6b-da81-4b64-b007-17ec10312dfe",
        "cursor": {
          "ref": "1dd7fc2a-b0de-403e-99e0-6bdd99e95a55",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "d886def8-db2b-4ace-af52-ab8384b4f9e6"
        },
        "item": {
          "id": "210cab6b-da81-4b64-b007-17ec10312dfe",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "090f4119-d667-4885-a059-963b65913abb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0e1f52-43d4-4ec5-ad5f-b1fbb0472ed1",
        "cursor": {
          "ref": "1bd8c805-71e5-4fd8-bf8f-c4375fd01ede",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1388184b-1719-4b65-ac96-3df24462589a"
        },
        "item": {
          "id": "9b0e1f52-43d4-4ec5-ad5f-b1fbb0472ed1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "68a92f43-07d2-42e2-9d8c-ffd26ba1775e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33ed721-0331-4089-83e6-1af952584513",
        "cursor": {
          "ref": "f1dea4bf-3270-41f3-bedd-64334e01859c",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "1986aeac-b4fc-40f6-9256-9c6cf30be318"
        },
        "item": {
          "id": "d33ed721-0331-4089-83e6-1af952584513",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "592c2a88-73aa-4473-bf8b-4b4e20f30d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72185e1-2f10-41d3-9dfb-26b04e8bfbde",
        "cursor": {
          "ref": "278c289a-61d4-43cf-8879-7f00651c3796",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "374bf0a0-c06b-4570-827e-00570cc9e60a"
        },
        "item": {
          "id": "d72185e1-2f10-41d3-9dfb-26b04e8bfbde",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fe52c019-1332-4098-9e5b-40f764438e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4d9014-708b-4f37-9af1-1b6589e94c7a",
        "cursor": {
          "ref": "27ef1e18-5562-46cd-bf44-955412467f20",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "56c1e7c6-6930-4e7b-b0a2-d9e982a9fbe3"
        },
        "item": {
          "id": "6c4d9014-708b-4f37-9af1-1b6589e94c7a",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "78f9c07c-8d6b-41c6-8686-7b9b3a0ea9dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18430440-e5b7-461a-ab79-9e248fcf420c",
        "cursor": {
          "ref": "fac79611-7530-4442-9cfa-c152fa09d3a7",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "51462c49-4c19-41a6-b674-10ce23376c06"
        },
        "item": {
          "id": "18430440-e5b7-461a-ab79-9e248fcf420c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "e0768223-ae9b-449d-9464-7b9e88ae27cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94742c38-8214-446d-ba58-22568274c97f",
        "cursor": {
          "ref": "008da077-f4e8-4ef9-ad7b-da235e047ce7",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "f1867c4f-c66f-448f-9f81-2b0cc10091a2"
        },
        "item": {
          "id": "94742c38-8214-446d-ba58-22568274c97f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9325f5d7-3c03-4644-b742-1b3d49310412",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bbde958-c9e9-47d3-95c3-7d33c2101731",
        "cursor": {
          "ref": "6faba6d3-2dd9-4bcc-8a8d-b8eb4c68c9c3",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "fda324c4-181a-4165-86d7-682ec91f0ac9"
        },
        "item": {
          "id": "0bbde958-c9e9-47d3-95c3-7d33c2101731",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6677a489-76d5-4c7e-8828-713b8dd83801",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4120fd16-84a5-4c95-aed3-d510f85ce156",
        "cursor": {
          "ref": "dc710119-95d4-4878-89dc-5a60bf396219",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "0ff4378d-d3ea-4dcc-b005-71f861f8725f"
        },
        "item": {
          "id": "4120fd16-84a5-4c95-aed3-d510f85ce156",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "586d79e7-b6f1-4fbc-b0bd-9603608bbe77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289d9cad-7102-4f3a-be16-61fc7e46f5e4",
        "cursor": {
          "ref": "d6aece69-bd45-4e34-ba8e-a213e39303b7",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "b5bfb528-7b1e-4687-b1ab-5ae64821ab77"
        },
        "item": {
          "id": "289d9cad-7102-4f3a-be16-61fc7e46f5e4",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7eff93bc-a930-4007-87f5-5211779c3220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e313e4-263b-43bc-a67a-d05cef8a7ddb",
        "cursor": {
          "ref": "478dc4cc-38d5-4f8b-bbd3-8351210f9e47",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c33785bf-96ee-45b7-9bbf-9f8408ccaac6"
        },
        "item": {
          "id": "96e313e4-263b-43bc-a67a-d05cef8a7ddb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1ef87992-4293-4f95-84ce-f8534d9152f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80166f99-70cc-4833-92e9-e04b3c5bb552",
        "cursor": {
          "ref": "801064d4-0706-45e2-957e-5f921830e78f",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b4d59dda-de1d-45d9-b253-eba3aa2b16ca"
        },
        "item": {
          "id": "80166f99-70cc-4833-92e9-e04b3c5bb552",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a56c6b23-35c8-42f0-865e-6964dc2ca073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6e28ef-457f-46fa-9239-b59d523c62c0",
        "cursor": {
          "ref": "5d33efe1-c4a3-4dab-9526-0094442487f2",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e2523149-3f6f-4755-99cc-1fb7f1e9d5af"
        },
        "item": {
          "id": "fb6e28ef-457f-46fa-9239-b59d523c62c0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d41596b2-b22f-4a76-ad64-c6a265e6fe4b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "37e96c0d-6d87-4773-a941-f4ccf0eb5634",
        "cursor": {
          "ref": "26f6a856-d6cc-46e6-b6ec-e8b5beec0db4",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8c4a49a3-9bdd-4b9f-8a97-b57cb4bed8ed"
        },
        "item": {
          "id": "37e96c0d-6d87-4773-a941-f4ccf0eb5634",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5da83697-a5c8-4661-80c2-51599fa2f5c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8c06d0-911a-480b-8f0f-478a595ec0ca",
        "cursor": {
          "ref": "025494d9-ef54-4a60-9b4e-a827684c29e5",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "72d2356b-0291-44d4-a921-33ad92d93823"
        },
        "item": {
          "id": "0a8c06d0-911a-480b-8f0f-478a595ec0ca",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ea8900f5-2f6f-4cf8-b1e7-d9ec55da3342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5eb4afad-f8cb-4c26-829e-6084ae4c54e6",
        "cursor": {
          "ref": "81a23af8-6a16-492e-972f-c26c8170f4d6",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "9f3c9125-8724-4d3a-9304-e9cf8def0147"
        },
        "item": {
          "id": "5eb4afad-f8cb-4c26-829e-6084ae4c54e6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "f5e0cb55-032c-46e8-8bc0-aaa1f60fcf36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347ddfb2-1d51-4885-b9e8-847c355ec864",
        "cursor": {
          "ref": "c547b150-8942-4a40-87f0-6fa5ee87185e",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "c375e200-1174-4762-be12-bd0ffe099414"
        },
        "item": {
          "id": "347ddfb2-1d51-4885-b9e8-847c355ec864",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "47a55ae4-40da-4069-8212-c19a081b7471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13bae9b2-620b-4c1a-a0b3-a56df84157cd",
        "cursor": {
          "ref": "4b93bcea-8843-44b4-8b4a-b901983287d1",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "eac282e5-cadb-4e0b-a879-ba3311180eb6"
        },
        "item": {
          "id": "13bae9b2-620b-4c1a-a0b3-a56df84157cd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3bb203e2-3763-4732-83b7-e5257091de91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18dc71be-fde8-45ac-9ab0-4ed9546fa31f",
        "cursor": {
          "ref": "9020e320-031b-4ce8-9fe6-ceb731fb4cfc",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "5b071302-834e-42ef-b177-24e8929cefe3"
        },
        "item": {
          "id": "18dc71be-fde8-45ac-9ab0-4ed9546fa31f",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "3477ac39-4dce-46c9-8992-44fdb6201ace",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb5f203-6db7-4a79-9cd3-19384188c68b",
        "cursor": {
          "ref": "a977fdad-1dd0-449e-be21-3da8479b9c80",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "03940b81-535b-4f0a-8fd9-e949aa240202"
        },
        "item": {
          "id": "6eb5f203-6db7-4a79-9cd3-19384188c68b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "c1ad0608-379f-4f86-aca7-6765e9e36067",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73d9cfd-4082-4181-bbda-caae3c754f40",
        "cursor": {
          "ref": "b0ea08a3-d8ae-44a2-a9e8-91f00529cf9b",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "7731fad5-f90c-46c5-aa67-d5971da471c6"
        },
        "item": {
          "id": "f73d9cfd-4082-4181-bbda-caae3c754f40",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "87e50ffc-fc65-41f3-bc7e-57c9ebdd03a0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "1617281d-d3a6-4090-a8bc-41f4a7a3ae82",
        "cursor": {
          "ref": "5224e55a-3699-424f-a3e7-b0c2e4c160cf",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d554fdc9-3466-4826-a42f-e4b9eda3db76"
        },
        "item": {
          "id": "1617281d-d3a6-4090-a8bc-41f4a7a3ae82",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ad976cfe-9ab5-46bf-bb3c-9320e4bbd08b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e2afa0d-db3c-46f1-9391-6076ab52612a",
        "cursor": {
          "ref": "553c1911-5458-480e-b228-3ab82085e068",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "8575008f-6ca1-489e-ada1-4c442aa3bec1"
        },
        "item": {
          "id": "1e2afa0d-db3c-46f1-9391-6076ab52612a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ea7cac67-95b1-424b-82c6-0835b3df9e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1781bbc-dc16-478c-b8ce-2a6a3c1bad7e",
        "cursor": {
          "ref": "5c937d35-8e98-44f0-8d33-41d3dd0eade8",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a47746eb-f3f6-4807-b092-1f2f9071e4ce"
        },
        "item": {
          "id": "a1781bbc-dc16-478c-b8ce-2a6a3c1bad7e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7f0807fa-f9f8-4d2b-9360-c63bf99616ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e69a06bd-a2d0-4a95-a6a1-7bc255f7b67b",
        "cursor": {
          "ref": "721ee9f3-d41e-4b38-98c7-312eb3729ada",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9111ead6-18ff-40d5-ab04-4210910d2ec0"
        },
        "item": {
          "id": "e69a06bd-a2d0-4a95-a6a1-7bc255f7b67b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "42f33ef3-7cb5-432f-8f22-31ba4c1d80a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 368,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42127545-f015-4ae7-8fe5-472617bcf9ce",
        "cursor": {
          "ref": "e29087eb-a034-45c0-87d3-9844983a0664",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "0b9f6e76-7271-4bd9-97c3-62c67678d550"
        },
        "item": {
          "id": "42127545-f015-4ae7-8fe5-472617bcf9ce",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9a182277-ea10-4589-a71a-956475865c0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5864b210-5757-4f3b-8bce-58aaa42050ee",
        "cursor": {
          "ref": "a59d9119-9842-467b-af94-bbc0f5051dd4",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "44418159-de88-4a62-9e49-6f80f3289285"
        },
        "item": {
          "id": "5864b210-5757-4f3b-8bce-58aaa42050ee",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e19d50e5-4e0e-46e9-8d79-6f0a6ffcab10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82325911-4362-4671-97ed-c6ec31d6020d",
        "cursor": {
          "ref": "1551a317-3b9f-449e-8609-3454ab6b0f65",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "7f18b221-3cd8-4b5b-bd4c-cd3a17e779de"
        },
        "item": {
          "id": "82325911-4362-4671-97ed-c6ec31d6020d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d4e50a85-f44b-45e4-8f27-0f2dea03528e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 158,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "f8acc5ce-c358-4949-819f-848591e63176",
        "cursor": {
          "ref": "a1b655b4-5146-4803-a5c0-af8cef756838",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ecfb9d82-754d-4279-826b-90fa549f0a42"
        },
        "item": {
          "id": "f8acc5ce-c358-4949-819f-848591e63176",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5b0ffc92-5bdb-4ee8-be4f-163bff494991",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1e3ded-6256-411c-95ba-9b14b64e30eb",
        "cursor": {
          "ref": "b79f1543-2699-4b1e-afc0-ef42539ff567",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "334802f4-dda9-4533-b6f9-0f2989218820"
        },
        "item": {
          "id": "1a1e3ded-6256-411c-95ba-9b14b64e30eb",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6a532be0-00f7-4226-a9a5-7e7bdf10fd23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57fc9668-a6ac-4af5-bd4e-778353e2a243",
        "cursor": {
          "ref": "fd83a9e4-6c60-4409-8ef1-19acc388ce19",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "9dfd9073-f5d9-4e5d-8606-c19000dc8ced"
        },
        "item": {
          "id": "57fc9668-a6ac-4af5-bd4e-778353e2a243",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "37604800-ab8b-41f1-8d48-147a7fbd58ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0e0108-6b4d-4a2f-8f05-2bd4d7da33b1",
        "cursor": {
          "ref": "4c363cb5-275e-4a61-8571-d0503fc67abf",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "ef27c0cd-9951-4816-9b08-2b0b6eb37964"
        },
        "item": {
          "id": "5f0e0108-6b4d-4a2f-8f05-2bd4d7da33b1",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "05759cdd-6ac9-4804-949d-e62ced6fae24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5bb6e59-ad13-4e7d-8c1a-f6c69dbdc0de",
        "cursor": {
          "ref": "c02b038f-23b8-4b4b-9f03-1d6867f44a55",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "3d0a9ab9-4783-4b74-8283-cdac14402a6b"
        },
        "item": {
          "id": "a5bb6e59-ad13-4e7d-8c1a-f6c69dbdc0de",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e0df2dc0-6e2c-4bb2-b6f3-dc5f33b0043e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7d4b7e-3b77-40f9-9034-20a94437a673",
        "cursor": {
          "ref": "eeb99b9c-87b7-4bb1-b9c3-3ecb46092749",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "58371384-b74a-4f78-b86b-6a5856955b78"
        },
        "item": {
          "id": "3c7d4b7e-3b77-40f9-9034-20a94437a673",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5d4ae333-df7d-4cea-931f-ace27a9f50db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "686660f4-002c-406c-ac52-ec7993630036",
        "cursor": {
          "ref": "21583029-7bd6-4d71-8dff-af2c17b6b089",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "22cb1a23-b0b9-4708-8659-fb725486abf1"
        },
        "item": {
          "id": "686660f4-002c-406c-ac52-ec7993630036",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d9da1b23-3daf-4b84-949d-79d5a57a9731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0527d125-b520-4cef-a210-0c96a6eb738d",
        "cursor": {
          "ref": "d6b21e23-b0f6-4416-a7db-7d34c9e3cea8",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7e0ca86a-70f0-490a-a25f-9ec1e8dcd910"
        },
        "item": {
          "id": "0527d125-b520-4cef-a210-0c96a6eb738d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4671e808-6817-444f-9f44-ead54cfcfd0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af84cf4b-e03b-4d2e-a902-233a8ab274b3",
        "cursor": {
          "ref": "7ab07d33-d314-4f8b-a875-2378868ef907",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "27f87db9-f693-4141-a341-5e8b3433e816"
        },
        "item": {
          "id": "af84cf4b-e03b-4d2e-a902-233a8ab274b3",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "977c61ff-125b-4f8d-bf69-966a906b448e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d5830cf-1acf-407f-be2f-c74bee5c6da3",
        "cursor": {
          "ref": "401f7b0d-fb27-44d6-9db3-7cef840f24bb",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "43a3be16-4721-4ba1-a5af-affad6118bd4"
        },
        "item": {
          "id": "5d5830cf-1acf-407f-be2f-c74bee5c6da3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "18e9e765-70cd-4632-ba36-8ee6d7f3aecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed825d4-ebcf-414c-80b2-3ad3d787cd33",
        "cursor": {
          "ref": "ef16af6c-05f5-49d6-8ba5-efe287a1f34e",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "a6cfb180-091e-4bae-8713-7e5f9cd11e97"
        },
        "item": {
          "id": "3ed825d4-ebcf-414c-80b2-3ad3d787cd33",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "13093a84-e03c-4408-a509-72302749b26d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feb86c8c-576d-4551-8a33-15bb3d2bd1a4",
        "cursor": {
          "ref": "b83084b2-61ba-44b0-8616-5f5942901108",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "1838e5f3-86b2-4ab2-a185-12b8bf1d120a"
        },
        "item": {
          "id": "feb86c8c-576d-4551-8a33-15bb3d2bd1a4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "f35ed029-bda2-4016-b049-4d179b3dbb3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f87262-89d7-4aaa-842a-df8538e7851d",
        "cursor": {
          "ref": "e61e6eae-9d9f-43a7-95f7-adcddcdbcbcb",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b67b3124-89f6-4320-a8e6-5cfb72575b7a"
        },
        "item": {
          "id": "52f87262-89d7-4aaa-842a-df8538e7851d",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "b47359af-a4c9-426a-8854-0a3be23b2e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83b74c31-ad6f-44f8-83e4-5b4b7f5d9cc6",
        "cursor": {
          "ref": "c9659790-8176-4813-a44b-a5d7f8650623",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "f3c59169-75ca-4cf8-bbae-b361176da988"
        },
        "item": {
          "id": "83b74c31-ad6f-44f8-83e4-5b4b7f5d9cc6",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "07d24fb4-6581-4833-b4ec-56effdb8c501",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f504a6-8200-4a26-a34d-94ad4e78b6c3",
        "cursor": {
          "ref": "42627b0b-fef9-4765-9f99-e4df8c092c8c",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e5aa38db-6623-4f72-92fe-5a192f628278"
        },
        "item": {
          "id": "29f504a6-8200-4a26-a34d-94ad4e78b6c3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4dd3ca23-5815-4e9d-862c-8cf1b0d69e15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0bc4ab-a195-434f-a312-b6f5bb9d0a87",
        "cursor": {
          "ref": "71f3d3e1-94c0-4e7d-9eee-9f6cc5aa3e88",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0d46f123-1919-458a-875a-134027a0a266"
        },
        "item": {
          "id": "4f0bc4ab-a195-434f-a312-b6f5bb9d0a87",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "122aa029-78ed-401b-b4e0-98ee2b756100",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18991620-34f9-45fc-9720-3abe6e39e6e6",
        "cursor": {
          "ref": "0fc9d8a0-7ece-4cfa-a9f1-dfc059b0a599",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "abbd4e29-ee93-4b05-afde-71b3a89d3d04"
        },
        "item": {
          "id": "18991620-34f9-45fc-9720-3abe6e39e6e6",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "743835e6-2850-403a-90b9-e5a2f7bdc459",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2cc3ded-8cab-406c-b978-9bdb2bbbe57d",
        "cursor": {
          "ref": "2d147f46-c6ea-4dae-84f4-d0fd999df9d5",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "83ee63a2-8fef-40c1-926b-8dcb22396018"
        },
        "item": {
          "id": "f2cc3ded-8cab-406c-b978-9bdb2bbbe57d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4ca99985-59f9-4fa1-b111-fccb77880c1c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 67,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "3efc0bf0-41ee-478f-bad4-ef96cbfa855f",
        "cursor": {
          "ref": "95478816-5e15-42b4-8216-367906723d45",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "39249af4-668f-41cf-97ad-2d46412c9998"
        },
        "item": {
          "id": "3efc0bf0-41ee-478f-bad4-ef96cbfa855f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "5ce75045-fc34-44f3-b47d-268cf13b52c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "607ff875-5e9f-40bf-8a1c-194d75a8bab7",
        "cursor": {
          "ref": "13823ad0-0d5c-4c63-ba69-06cc2f85ee32",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "556a47f9-f22e-4204-8375-6e8e134455cf"
        },
        "item": {
          "id": "607ff875-5e9f-40bf-8a1c-194d75a8bab7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5535b73f-1274-4209-952e-f0bb57435dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b51805a-b6ff-4d55-ba67-7249c19074ee",
        "cursor": {
          "ref": "5a0cb6a6-a317-4f6d-a71e-535b68f30c3e",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "eb64e451-2e56-4c06-a7b2-3b31e7c8c32c"
        },
        "item": {
          "id": "7b51805a-b6ff-4d55-ba67-7249c19074ee",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "72686a6a-f89f-4ec6-a534-ab3ec8b9a805",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6109e2aa-6651-4ff7-8667-4a18acaed25e",
        "cursor": {
          "ref": "a9ae104d-8182-4978-84c7-f2b675d3ef65",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "f9834211-0403-462f-9752-68b78001eeeb"
        },
        "item": {
          "id": "6109e2aa-6651-4ff7-8667-4a18acaed25e",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "bf977dbf-33a5-473f-8c54-9760a6a1beac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7c9436-93a0-45f4-8efd-7acb56629fba",
        "cursor": {
          "ref": "0be7dd01-b685-4672-935e-f7a537b9c0c0",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "aff79efc-e4da-4f10-91c2-aedd8563d737"
        },
        "item": {
          "id": "cf7c9436-93a0-45f4-8efd-7acb56629fba",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3b85ace2-ee3e-441a-9b53-88903c282aca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 133,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8873e8-1636-4f23-86fc-2a6cbad8c8c0",
        "cursor": {
          "ref": "7aaa0221-2dd1-438a-be27-2a275d6f6b8e",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "a5562412-3eb5-4afb-9971-f2052e4fe5ff"
        },
        "item": {
          "id": "bc8873e8-1636-4f23-86fc-2a6cbad8c8c0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1b3484ff-9fd7-4de0-9929-d2b479dd9706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d22a09e-d8ff-40e0-8fdb-2f7b59367039",
        "cursor": {
          "ref": "3577d0ce-9b45-4259-9e1e-448dcdfa07ef",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1a809f0e-dd2d-417a-ade7-548e404a57dc"
        },
        "item": {
          "id": "0d22a09e-d8ff-40e0-8fdb-2f7b59367039",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "2510dcb7-84e4-4fde-9034-9ff75131d5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6f24cb9-6436-492e-8d7c-656c573c279e",
        "cursor": {
          "ref": "4646e15a-84bb-405c-ad9b-fb9a25e7ecac",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "01540720-b589-4202-8e40-edd7dcaf9494"
        },
        "item": {
          "id": "b6f24cb9-6436-492e-8d7c-656c573c279e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "46d33add-67c1-411f-b1a6-3d3f9d07f3c0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 76,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "2d27b390-2412-4a62-9e1f-d1eea150de82",
        "cursor": {
          "ref": "d5527bd2-ce38-495c-8eaa-ddb17296f1e7",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "af0437f2-aae2-4e3a-96dc-a0dd6ee8d4ee"
        },
        "item": {
          "id": "2d27b390-2412-4a62-9e1f-d1eea150de82",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "77f49d0c-975d-4ae6-9f5b-78d1e7f288bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b10b8cb2-db32-4c73-bb9f-205c96e32ec7",
        "cursor": {
          "ref": "b805c79f-7a16-4fc0-9171-ed5c11452122",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d548227e-83b7-4c53-aee6-c6c8d2e2d65a"
        },
        "item": {
          "id": "b10b8cb2-db32-4c73-bb9f-205c96e32ec7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "41818a89-0ca3-49bd-846a-597845ca0353",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00580aa-ebf7-4d75-bdae-52f7d4a07352",
        "cursor": {
          "ref": "f00f4bca-8823-4220-ae06-f3c5c2a7573c",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "96e37862-2819-4d5a-b5b5-eafcd3133f80"
        },
        "item": {
          "id": "d00580aa-ebf7-4d75-bdae-52f7d4a07352",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "a3fd0054-83b3-4b01-af67-b0a042ba74a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1298c8a-8b3c-4be7-9768-eb18590161d2",
        "cursor": {
          "ref": "347eeb64-fc4e-4653-9346-df756c4c5ed2",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "9f416506-2d38-4f6c-8e70-86b60792b6ac"
        },
        "item": {
          "id": "f1298c8a-8b3c-4be7-9768-eb18590161d2",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "4c7a4d8f-884c-4188-afbe-c3944da1bcd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed8d352-fb9c-453a-a803-86ca343e116d",
        "cursor": {
          "ref": "a35529b5-792d-4e7f-8382-967eef20169f",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "422bc1c8-3932-4bc2-a4dc-328926b23f16"
        },
        "item": {
          "id": "2ed8d352-fb9c-453a-a803-86ca343e116d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3b3bcf0f-6390-4adc-9d4e-44098ca5eb87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cbdea7b-9321-4920-bd2d-700f4493754e",
        "cursor": {
          "ref": "99799286-b96f-4ff4-a2d2-4a2e8b15a147",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "e04802b6-fe0b-4195-94df-8da803bf4177"
        },
        "item": {
          "id": "0cbdea7b-9321-4920-bd2d-700f4493754e",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "873d2943-bfee-4119-8661-5036853f081a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6450f1d5-6fcc-4b86-9ff9-3da360d9a8af",
        "cursor": {
          "ref": "0925f8e5-38bc-45c4-b39b-64b296e70e09",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "56c00fb1-6301-4bb9-9254-fe76f5cf2257"
        },
        "item": {
          "id": "6450f1d5-6fcc-4b86-9ff9-3da360d9a8af",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3bf958ae-f3f1-4fcd-b238-977d0fd505d3",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 64,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "4d6711fd-0941-4073-ba9c-84019fb45f16",
        "cursor": {
          "ref": "0edd2877-bcf5-42ec-b63c-f2017eae29ab",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b5088648-4b38-479f-b1c5-c9042f3d9593"
        },
        "item": {
          "id": "4d6711fd-0941-4073-ba9c-84019fb45f16",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f98e6542-6211-4c59-a620-ddb4c33e50a7",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "9be87c3a-f6a7-492d-853b-460e09b9b3a6",
        "cursor": {
          "ref": "dc1f1830-d4e2-40ec-af45-50663004d030",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "df7d91c7-17de-49ee-bb59-517b706f35da"
        },
        "item": {
          "id": "9be87c3a-f6a7-492d-853b-460e09b9b3a6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "1e453073-c9e0-4592-8043-564885c59758",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 60,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "94daf66d-08b6-4047-8db9-1674f2145736",
        "cursor": {
          "ref": "b156e4d4-4945-45ce-bb9f-eb329a5e3a33",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "e8823618-8696-4f55-a038-2e5978029e02"
        },
        "item": {
          "id": "94daf66d-08b6-4047-8db9-1674f2145736",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "1f6a3e49-83e1-432c-9cfa-72befb083310",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 63,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "0a887877-b62d-4362-b99b-d960640a0f78",
        "cursor": {
          "ref": "f0752ba6-d598-4d7c-9c63-2ad56561bded",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "11872cd5-2536-463f-9f4f-aefff6e3c74d"
        },
        "item": {
          "id": "0a887877-b62d-4362-b99b-d960640a0f78",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "be1c4c57-d846-425e-a333-25f9d233152c",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 60,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "3bf0de86-419c-4f9d-9462-c61c301e5d89",
        "cursor": {
          "ref": "2d172d14-1e72-40ac-b870-ca40a04c18f7",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "51010c06-5691-41b8-8081-20bd077619ee"
        },
        "item": {
          "id": "3bf0de86-419c-4f9d-9462-c61c301e5d89",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "8096c53b-d4aa-4df1-8bf4-fdd3020f4f4f",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 59,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "5be2972f-6111-47fc-b983-69c0a04813c3",
        "cursor": {
          "ref": "c6ba0836-e455-4072-862c-fbc2f12cf447",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2824182a-3afc-4b31-b3f6-527aef7931ee"
        },
        "item": {
          "id": "5be2972f-6111-47fc-b983-69c0a04813c3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "16ad2df2-59ea-46c8-a423-3667b569966e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c7ba0d0-f45e-4365-9ec2-5e9ae01f0c8d",
        "cursor": {
          "ref": "6a71fe5f-cb7b-4410-828a-b19dce43ef67",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1b87b27b-cf6e-461f-8515-5d8ef6d0f1e6"
        },
        "item": {
          "id": "9c7ba0d0-f45e-4365-9ec2-5e9ae01f0c8d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7f132a2a-962b-4cfb-a9c0-aebd88672357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec82dd6-8cbc-4ff3-9b9b-4e09a7c184da",
        "cursor": {
          "ref": "deb3c2bd-53bc-4699-9f29-f3d171a79a63",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "17b17cdc-02b2-4f31-811d-7d85e07705b0"
        },
        "item": {
          "id": "8ec82dd6-8cbc-4ff3-9b9b-4e09a7c184da",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "21727df7-7b0e-47ba-a895-f6accd19d941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 165,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88408a17-a81d-408b-a517-1fc3089804aa",
        "cursor": {
          "ref": "2a0573c8-9066-4883-8ec3-23d65fa1b725",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "eaf5ef21-4aa3-4282-be80-5f9f00404279"
        },
        "item": {
          "id": "88408a17-a81d-408b-a517-1fc3089804aa",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "56f3b0dc-8d51-4525-8bf3-f63f6d514617",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef62af6-5a04-4a24-aa74-1fef5a6489ed",
        "cursor": {
          "ref": "e24402a0-786f-40a4-bd9d-e961684eb3b6",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2f2ed345-dc47-44a2-9bbc-d76e59769510"
        },
        "item": {
          "id": "fef62af6-5a04-4a24-aa74-1fef5a6489ed",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c7ea9ee7-a93c-4071-bc21-ee7ef1595aa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "262a0553-0b9e-489a-b8e7-4e36e6e2d956",
        "cursor": {
          "ref": "bf3d9437-e8c6-47d7-8b39-7edd13172295",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a405ec2b-0fa8-46ad-b5b8-2c9b6cc30f4b"
        },
        "item": {
          "id": "262a0553-0b9e-489a-b8e7-4e36e6e2d956",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "7f8a8823-4079-45a4-bb70-72e5f1feae86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b87ff30-e7fb-4bbc-b486-5a10a1b88cf3",
        "cursor": {
          "ref": "0f6c8d98-a21e-4fdf-b84c-254c76a899c1",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6fac9832-07ab-4113-a73d-85b93ddc7252"
        },
        "item": {
          "id": "6b87ff30-e7fb-4bbc-b486-5a10a1b88cf3",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "091dfe7d-cfc4-431b-9b57-49e95fd17057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 153,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a795144-57d7-4b5c-af0d-f3b8bd6e7afd",
        "cursor": {
          "ref": "3ed3883f-ecc6-436d-808e-99b96f6a1ad6",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "6a274f5e-53a3-42ec-b7f2-8e06632b9bc4"
        },
        "item": {
          "id": "2a795144-57d7-4b5c-af0d-f3b8bd6e7afd",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3a96716c-d19d-40ce-a70c-edf5934a1570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a78870f-5c1f-454f-b6f1-793ec0a19b4c",
        "cursor": {
          "ref": "332f2a8a-1dd0-4153-b9b8-f98d11781f1f",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ac5a343b-e6c9-4bd5-8193-d05b05e4f8a1"
        },
        "item": {
          "id": "9a78870f-5c1f-454f-b6f1-793ec0a19b4c",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "b8c9fc80-d402-40a0-abad-57e72449083e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b12175-861f-4741-a697-5b52362fa4b0",
        "cursor": {
          "ref": "22ec9c5e-fb1f-4ab3-819b-118533053f4b",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "c0fccc09-57aa-4880-89ab-78df24754632"
        },
        "item": {
          "id": "72b12175-861f-4741-a697-5b52362fa4b0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e3de646b-3f65-436b-9695-f8abe4685478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc45b786-4a6f-4181-b076-522f1be8ec70",
        "cursor": {
          "ref": "0b186700-cea7-40e3-ba25-601bab65683e",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f060b60a-4736-4050-9a79-954eeb74e409"
        },
        "item": {
          "id": "dc45b786-4a6f-4181-b076-522f1be8ec70",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "d67fad01-38ce-4272-b259-9a6a2cbc3b44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a62592-9905-4a99-a8d0-45db2b453998",
        "cursor": {
          "ref": "93045af6-b3a4-4855-9b95-813b9bbcc9b2",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "85d5dd90-643b-499e-85d2-5910946fa5fd"
        },
        "item": {
          "id": "88a62592-9905-4a99-a8d0-45db2b453998",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "b24b3bb9-bd6c-4bf8-ab70-2ff0764109ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f326e4-e864-41d3-9ff9-14cbe548e649",
        "cursor": {
          "ref": "0a361c3f-9567-4fea-b1c4-38a5f0aa49fc",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e3b7553e-543f-4cfc-ad7e-43bfd551426b"
        },
        "item": {
          "id": "17f326e4-e864-41d3-9ff9-14cbe548e649",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "89970d3b-2dd2-424a-93be-63f3d0c50c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5df1d77-f179-41d9-b914-919f43c8daf6",
        "cursor": {
          "ref": "048f6f18-7a9b-404b-850f-521bcb0ca46c",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "2d6407ba-a460-40a9-856a-57e552c30fc1"
        },
        "item": {
          "id": "d5df1d77-f179-41d9-b914-919f43c8daf6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "421872ba-6329-404a-b913-aa1161467bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6df0195-47bd-4c8c-9787-36f13ca20e16",
        "cursor": {
          "ref": "35ce97a7-93e1-4254-8929-e5e7e0ffcb0a",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "87127d96-03a7-4032-a8ca-cbcc6159edda"
        },
        "item": {
          "id": "e6df0195-47bd-4c8c-9787-36f13ca20e16",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "68e65f1e-f8c1-4bcc-b966-5ee3339a8210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a13b3b-9abd-4045-a170-d6d4cd1708b5",
        "cursor": {
          "ref": "424cb36f-869a-40c1-9cac-d165a6638bd2",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b91c8d0c-e163-469b-b374-0bfa446e4d96"
        },
        "item": {
          "id": "42a13b3b-9abd-4045-a170-d6d4cd1708b5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "46988709-fa24-448d-9127-22efba65d929",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e7759d5-0e1e-4afd-b5af-0ce935c6d31e",
        "cursor": {
          "ref": "35d35d13-520a-43a1-a67d-5325c567a0f4",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "16b42866-7d20-451a-8c78-103d1bfe3f6b"
        },
        "item": {
          "id": "2e7759d5-0e1e-4afd-b5af-0ce935c6d31e",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "901b9d76-1342-42c0-9ccd-f1baca8658b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5d9528-154e-4a81-9f8c-b5d7dfebe855",
        "cursor": {
          "ref": "7517a59b-ccbe-483a-b83f-37dfe5f18186",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5098ca38-e3f5-4db0-a462-2de2ce9332aa"
        },
        "item": {
          "id": "1e5d9528-154e-4a81-9f8c-b5d7dfebe855",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "abb3231e-1f6b-4831-bd68-b3a8847fdf25",
          "status": "OK",
          "code": 200,
          "responseTime": 137,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "122ddfdd-0f53-47ed-acf6-44f9a55253f9",
        "cursor": {
          "ref": "c099f4f2-44c9-4210-a517-bbe57af62e38",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c51b7a43-6b0d-424d-9e75-c4c331edea02"
        },
        "item": {
          "id": "122ddfdd-0f53-47ed-acf6-44f9a55253f9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "89168ea0-2747-47f1-a906-fed5e9495996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5982b77-d03f-4ac7-b2f1-dca7416db05e",
        "cursor": {
          "ref": "111911f0-23e6-4336-aedf-895e35e7f9fe",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "4ab65fdb-1b15-40dc-8ae8-96333a6fa459"
        },
        "item": {
          "id": "b5982b77-d03f-4ac7-b2f1-dca7416db05e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2ad2ebde-dc93-4462-b984-93edbbbfebbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58fb6ef9-22e4-45eb-91f8-11aa0381b933",
        "cursor": {
          "ref": "3267c599-4306-4064-8039-4cf63cd21bf5",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "7c1b5ae1-f374-489c-8c29-1cf26254e30e"
        },
        "item": {
          "id": "58fb6ef9-22e4-45eb-91f8-11aa0381b933",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "bbb88112-126e-4770-903b-03e68a864811",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d91ace3f-daef-48fc-810f-8ef52ba81855",
        "cursor": {
          "ref": "97e75d2b-fc35-424d-97ab-f140d7935255",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "1af006ac-5ca8-4698-b798-12e99603a13b"
        },
        "item": {
          "id": "d91ace3f-daef-48fc-810f-8ef52ba81855",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "7793b8be-34ee-4a40-bbb7-0c69c9476768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d73a015-fb34-4ae4-8e28-09b2740c6127",
        "cursor": {
          "ref": "1f6d511d-1caf-49c3-b27b-52b3bf4a70a3",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "dbc3f018-0018-44a9-969d-6a00991b561f"
        },
        "item": {
          "id": "5d73a015-fb34-4ae4-8e28-09b2740c6127",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "519e2699-ee0a-4143-af23-2346df3ba00a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 140,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557fb99e-9382-4a47-a2ad-441df734ec3a",
        "cursor": {
          "ref": "e9f59338-9499-4a24-826a-24b3c9f7a27e",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "36afc8b6-b81a-44e3-933e-cb7c7d7c3869"
        },
        "item": {
          "id": "557fb99e-9382-4a47-a2ad-441df734ec3a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8666aec5-5e26-46af-9736-dcdcfe4642ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58b66325-bce3-4c51-b68b-528cc5cce658",
        "cursor": {
          "ref": "cc3ee4d6-08d2-4887-aac5-1f4ca90b693a",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b29f6b0c-d120-4b16-98dc-32035c54406b"
        },
        "item": {
          "id": "58b66325-bce3-4c51-b68b-528cc5cce658",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "f9f8585f-4b9d-46f7-b946-44e0e3b3b6cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb30652-fd8f-4e2b-96f7-aa7840592406",
        "cursor": {
          "ref": "75a98cc7-be2c-4523-a3b8-87922006f763",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c2cb6546-08ad-40ed-ba30-875cca1a0bb1"
        },
        "item": {
          "id": "cbb30652-fd8f-4e2b-96f7-aa7840592406",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3733d54f-fdda-4138-ad38-1be976d0057e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c49f4a75-acb4-4654-b72a-420fafc56438",
        "cursor": {
          "ref": "9615b7d6-8d19-452a-bd80-98d4bbeddfbd",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "5d5b1852-faaf-451d-a436-64d2cf78f031"
        },
        "item": {
          "id": "c49f4a75-acb4-4654-b72a-420fafc56438",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c2ca7114-6515-4f41-af31-a34fbe081e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cee99c18-0d99-4346-be90-1c5ad3ac6fe7",
        "cursor": {
          "ref": "01a0b801-8656-434e-879f-1dbdc3457601",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a7e8bc32-2fc9-4ee6-8f10-dbbd23ccdae2"
        },
        "item": {
          "id": "cee99c18-0d99-4346-be90-1c5ad3ac6fe7",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1b0e95b6-c820-4631-8d4e-81bf7c86a72a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd782638-93a3-41e0-a182-9dadcaad36b8",
        "cursor": {
          "ref": "06c479b6-4165-43a9-a13d-08cb711704db",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "885fc48e-9fb9-477f-a4ca-b24d5209564b"
        },
        "item": {
          "id": "fd782638-93a3-41e0-a182-9dadcaad36b8",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "20e442bd-39d8-4324-98d0-52753e3bd8b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ed4cd0-b62c-43c5-96f6-bcf7f00e4cb8",
        "cursor": {
          "ref": "8fe44d65-2b8c-4bad-a1ee-6e47560c26a6",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "1e000f5a-88a2-466d-a909-c926044bc54b"
        },
        "item": {
          "id": "55ed4cd0-b62c-43c5-96f6-bcf7f00e4cb8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a2440a77-95c2-4921-a7d4-432965fdc3c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0e83657-87e8-412f-a06c-584f685683aa",
        "cursor": {
          "ref": "043c5b07-c6be-40a3-a58f-f002dbf6c104",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a998208f-f5c7-47a4-a57a-762ceba5e995"
        },
        "item": {
          "id": "e0e83657-87e8-412f-a06c-584f685683aa",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "1aff77b8-edb2-4153-80b8-0dd1072ba789",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1bc677e-fb2b-464e-b437-7a0fcf145ad2",
        "cursor": {
          "ref": "ddfb1448-be00-4e34-807f-f9874e14cb5f",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "1e877352-a08b-47fe-a28c-94155a54ecb7"
        },
        "item": {
          "id": "d1bc677e-fb2b-464e-b437-7a0fcf145ad2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b69efa8a-a653-4252-9c9b-f77ab74fd6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e908c19-d8ce-48b9-8005-21df2d87fa99",
        "cursor": {
          "ref": "56fe338b-7fd1-42cd-b72d-4ef1c17f2fdf",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "66a0f56c-d88e-41a2-8489-1942492a0290"
        },
        "item": {
          "id": "8e908c19-d8ce-48b9-8005-21df2d87fa99",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "37a8de87-7070-4e69-9423-d53875d640a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1e9769-908c-40b3-8a8e-b38be332ec5e",
        "cursor": {
          "ref": "9f9da3dc-4c67-4aca-be6a-da8cb55ec6c1",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "186be03d-4b0d-4e58-a3e1-9d60e0a53d03"
        },
        "item": {
          "id": "cb1e9769-908c-40b3-8a8e-b38be332ec5e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "d0886744-9fed-4f74-920c-f895a7bfe64b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 104,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6a927d-e643-41a5-bdeb-a3c51cbec6b3",
        "cursor": {
          "ref": "c892770d-71c1-45d5-afb1-4008af62b8bb",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "9b7c3d0a-ca8b-4d96-86cb-2ff3e6e9e377"
        },
        "item": {
          "id": "5c6a927d-e643-41a5-bdeb-a3c51cbec6b3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f96e3d4b-60a9-46e9-8913-a25136a84454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb82adc-b61c-41fd-9077-90ee564cbe8a",
        "cursor": {
          "ref": "b24174c8-149f-40b7-8a44-7252095abcce",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "210c4722-3a0f-49ed-bbd7-0df89aa40683"
        },
        "item": {
          "id": "dbb82adc-b61c-41fd-9077-90ee564cbe8a",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "959f92ca-b223-45fd-bce8-fc83a0b5b6f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d6b78a5-d405-465d-95c1-a05777c8832f",
        "cursor": {
          "ref": "0a4bc85e-4e92-4395-b1d8-30a48cdfcb70",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a73a9edb-5883-4f81-b63b-3aed6aa7f6e5"
        },
        "item": {
          "id": "3d6b78a5-d405-465d-95c1-a05777c8832f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5b8ce2bf-c2b1-4184-aedf-fe887fb7b4ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b794339-2fa8-482b-92d1-b476dd1ae141",
        "cursor": {
          "ref": "2e3a8bb7-5f60-46ba-8005-a0ae7d56b597",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2d35def8-6b29-4aa8-9c3b-35ebb0788bfa"
        },
        "item": {
          "id": "7b794339-2fa8-482b-92d1-b476dd1ae141",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "eb106739-8eb8-42e5-ac2d-ea71ae6079d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62996c18-0c39-4577-9210-a6980621e856",
        "cursor": {
          "ref": "c5c335c3-411c-430c-a0b3-9effa2f543c1",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "16e1361f-9458-471f-8d1b-6933e991a597"
        },
        "item": {
          "id": "62996c18-0c39-4577-9210-a6980621e856",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "abe1ab79-e727-4b80-9e44-f1132671a175",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c40dd6d-59a1-430f-9dfe-c6a6fb8fee90",
        "cursor": {
          "ref": "a31959b2-e4e8-4d72-b876-95e3d5782888",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "250faee9-31cc-439e-b55b-fb2b392493ce"
        },
        "item": {
          "id": "9c40dd6d-59a1-430f-9dfe-c6a6fb8fee90",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "e4db89ef-db9c-44e0-bcf4-c6220c83ebd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d531830-d0ea-4e05-b585-9c1d700502b2",
        "cursor": {
          "ref": "e09a38dc-7166-4938-ac7f-f675a0a73fec",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "99ed7e43-8f1b-4ff2-87f2-e454ff63e822"
        },
        "item": {
          "id": "7d531830-d0ea-4e05-b585-9c1d700502b2",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9be15cd7-24c7-4fdf-8c95-fde5c157f466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d3bf651-032a-40c0-8261-7570157d7b19",
        "cursor": {
          "ref": "806f9237-cb84-4d22-b54a-a07a1fcbb5a5",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "dc337a97-5c50-4e19-a421-7f2315885ae7"
        },
        "item": {
          "id": "0d3bf651-032a-40c0-8261-7570157d7b19",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "cc57976e-8963-4d49-93dd-354598ae5481",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2203b899-bc67-4098-b61d-40d4d02dc24a",
        "cursor": {
          "ref": "4ac90d91-829e-43cc-b467-e58b67d68901",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "bce0a137-b573-4df6-87df-51b1f1d87ed9"
        },
        "item": {
          "id": "2203b899-bc67-4098-b61d-40d4d02dc24a",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0f18bca6-f621-4890-b9ec-b177bc0548e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89fdc82b-e8fb-4b29-99d7-edd67921881c",
        "cursor": {
          "ref": "1de904eb-582c-47bc-8b50-23dba9412972",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "ffe92b84-d9a1-448a-8de3-051c55e8165d"
        },
        "item": {
          "id": "89fdc82b-e8fb-4b29-99d7-edd67921881c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4e918174-afa9-4f78-a1d9-c915b585798b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 164,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad14c69-b757-408a-ace1-645797e8dd1f",
        "cursor": {
          "ref": "13e9760c-da6c-4e08-b8ba-899434fb0575",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "52f72010-769e-4427-9bd2-7eebef7e6a9a"
        },
        "item": {
          "id": "3ad14c69-b757-408a-ace1-645797e8dd1f",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "740f5d6f-319d-4e1b-829b-0ac4c7624073",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 154,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18173586-39c3-4d77-9198-447b6ee764ba",
        "cursor": {
          "ref": "51a845bd-3a1f-40e2-8713-785358a9a84e",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ab3d910c-1a9e-4d8e-88a4-578671ccedd5"
        },
        "item": {
          "id": "18173586-39c3-4d77-9198-447b6ee764ba",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "3f7dfcfa-ff00-4d29-8050-5357c3ce5cce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e5cfe1-d191-4f78-b9bc-6c81e3b810f3",
        "cursor": {
          "ref": "77ba37ef-9fe5-4bac-80f1-7558d2c41f96",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "874d40aa-c169-467e-b78b-333147b3806c"
        },
        "item": {
          "id": "85e5cfe1-d191-4f78-b9bc-6c81e3b810f3",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "47bc8633-b71d-49c6-aa08-1d2639d57a7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc153605-f502-449e-a9fb-7683d70f6450",
        "cursor": {
          "ref": "57fd950d-712e-4a4b-a173-cc62779ecfdc",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "6a50bbce-9e50-4e1f-aad9-e8bfb4626f38"
        },
        "item": {
          "id": "fc153605-f502-449e-a9fb-7683d70f6450",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "01ee0900-7b8c-4ae4-a62b-bd1effc25a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1810eeb3-a645-43dd-af38-fdfee0af15a6",
        "cursor": {
          "ref": "8e2a8bce-c695-43b6-9dd5-34c04dc5dc7c",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0a19c598-023b-4d16-8dcf-f356f00798dd"
        },
        "item": {
          "id": "1810eeb3-a645-43dd-af38-fdfee0af15a6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ea24da6c-11b0-4ab2-a7d3-f1ff34ff9d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d361c4b-7638-4ab3-99b6-78ae9a3d88a8",
        "cursor": {
          "ref": "1a7335b3-c730-4ee4-89ca-e9f4dfb24d9d",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "fdbce74d-9e47-46b2-a285-379fd6017929"
        },
        "item": {
          "id": "4d361c4b-7638-4ab3-99b6-78ae9a3d88a8",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "685dc01b-5278-4825-adb0-f3165b07682e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c8af59-f8c9-4e98-80b8-3fb7a50c1cc7",
        "cursor": {
          "ref": "3e13dfe3-fcb8-456a-b7c4-dc1e9ad92d16",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "dfab23f2-703a-493a-9eb5-239277bec42d"
        },
        "item": {
          "id": "94c8af59-f8c9-4e98-80b8-3fb7a50c1cc7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "9b18f83b-5bd7-4bfd-bb41-3fa3dd14e7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b29ee67-a45a-43f0-aed2-bd32fe0c91bc",
        "cursor": {
          "ref": "0f54b43d-2f0d-4f48-99f8-b7d1b7b6a8ba",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "c461b414-f614-4d21-be05-b5ca15fd6a8e"
        },
        "item": {
          "id": "5b29ee67-a45a-43f0-aed2-bd32fe0c91bc",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d67a272b-c4e1-43c9-a332-66373164d0f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5ac633-257f-4267-8c10-7cdb0cc9e14e",
        "cursor": {
          "ref": "29ee2a5a-dd5e-43c1-9280-c242b30b0c63",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6b0dc37c-66c3-443c-983a-eb1c82610495"
        },
        "item": {
          "id": "2a5ac633-257f-4267-8c10-7cdb0cc9e14e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "09f069ee-a50a-4543-ad03-ba4d629b0829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c521f37-64e0-436d-9b56-429e7d6e3c06",
        "cursor": {
          "ref": "13effdf9-45e0-4007-a5c6-61a3df71855a",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "4c8a684a-a5c6-475b-9799-21decb71a331"
        },
        "item": {
          "id": "2c521f37-64e0-436d-9b56-429e7d6e3c06",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "f161419e-a358-455b-9f7a-ef54ccd6157a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d249b8ef-825c-4b02-9f16-e879bfdaf518",
        "cursor": {
          "ref": "8e4de666-d132-463f-96b2-a5341b11d66b",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "53497627-ec39-407d-8413-7b66b51c9b83"
        },
        "item": {
          "id": "d249b8ef-825c-4b02-9f16-e879bfdaf518",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "12ff455f-b6e9-43de-8583-fd7ed656357c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4596663d-d249-4b12-bff9-4c16f1d13705",
        "cursor": {
          "ref": "d35082fd-f31c-4830-8395-877283c443e4",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c6fc7f32-92b6-4cc5-ad6f-3207abef7b25"
        },
        "item": {
          "id": "4596663d-d249-4b12-bff9-4c16f1d13705",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "cea7c7e0-5c28-4881-afdb-2779934a01d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f86dcb0-0c08-4dfd-b5ee-834265581a23",
        "cursor": {
          "ref": "053cb531-3b2c-4917-b2a8-d49b152f6839",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "b6bccfe3-a7e8-453f-b712-9f2dbbe1e3e1"
        },
        "item": {
          "id": "0f86dcb0-0c08-4dfd-b5ee-834265581a23",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "4aee5272-8117-4896-a169-fbe688d0ead1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3fceee-7465-45f5-8bee-0a328886dd19",
        "cursor": {
          "ref": "f4caf2c3-a26e-4a45-ba8f-97c1aa361172",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b1096b2e-1052-4c25-8724-396a711c1b6e"
        },
        "item": {
          "id": "9c3fceee-7465-45f5-8bee-0a328886dd19",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "6e8dd14d-fd9e-4226-840d-8cf989845075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "debb30ad-0069-44f3-977b-606c36a5b493",
        "cursor": {
          "ref": "3c9ad918-ca89-4bbf-a668-08159938b502",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e09a195d-ab68-4aa5-8753-2e00ebd49b89"
        },
        "item": {
          "id": "debb30ad-0069-44f3-977b-606c36a5b493",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "305627b7-6d2f-4ecf-9e28-16b2c730657b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "614182d7-7378-483b-add3-87ad7059ee47",
        "cursor": {
          "ref": "05e664ee-2614-46d2-9233-874272a6d992",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "82b8a3a4-455f-4350-8346-287f252618ce"
        },
        "item": {
          "id": "614182d7-7378-483b-add3-87ad7059ee47",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1b30db94-eadc-436f-910c-c244705d00ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5023dc86-c284-4d13-828a-fd3d1ee7eefd",
        "cursor": {
          "ref": "28c2ca7c-5e2a-43fb-ab86-b8859245ebb3",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8f1d688c-b0b8-4fe7-9245-fd563165ccca"
        },
        "item": {
          "id": "5023dc86-c284-4d13-828a-fd3d1ee7eefd",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "0e868458-f0ea-4499-a747-938949d15a85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd328839-ac27-4849-9138-080f9f822f17",
        "cursor": {
          "ref": "1cf7ac2c-7175-466c-baa2-2b13c1301e84",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "b74fc1bf-1df4-40bb-b41a-8f2c122b5c0f"
        },
        "item": {
          "id": "dd328839-ac27-4849-9138-080f9f822f17",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "b7572275-2876-490e-a14c-9a189c288387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b7a6cb-13d5-4855-936b-b7b524a6df8b",
        "cursor": {
          "ref": "0dc6620e-0bb8-4677-8376-ee541bd24a4c",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "aab6de27-8d78-4b5a-9a6c-6287bbf3c951"
        },
        "item": {
          "id": "39b7a6cb-13d5-4855-936b-b7b524a6df8b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "92eb2cad-5cb6-43ff-955b-fb7403d8ec3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88038c30-c08c-4b16-a190-facf15863990",
        "cursor": {
          "ref": "106bcc44-2d2d-4922-b2f4-4c883c08fbe4",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "20b12765-8c53-4d48-a154-3b0cbefb615a"
        },
        "item": {
          "id": "88038c30-c08c-4b16-a190-facf15863990",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ef3d4066-6b95-4b9c-8a7c-9cda34fb1888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b982be2d-6656-4515-baf5-270c5f1031dd",
        "cursor": {
          "ref": "8be40f4d-36f4-41e7-90aa-9e1e63df670e",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "1078eb39-9232-4ce8-911b-31df0d36b76f"
        },
        "item": {
          "id": "b982be2d-6656-4515-baf5-270c5f1031dd",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "01df6b65-e633-4b80-8481-d8c58464bb7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e0d3b52-139d-423d-b664-5807868d6f99",
        "cursor": {
          "ref": "21a32772-c1f7-4ed4-984d-5838dd0d3df0",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ac7b75d0-8783-4e64-93f0-2c9ccc3adde8"
        },
        "item": {
          "id": "3e0d3b52-139d-423d-b664-5807868d6f99",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "058d5b7f-fb36-48e2-a2b7-e95fb8f75702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a8a460-c3de-442a-9cc9-b4982b290893",
        "cursor": {
          "ref": "49a3a979-a397-4187-b703-b1b2317d7e7f",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d156a8e5-e227-4dd5-b98a-61f147ba6c40"
        },
        "item": {
          "id": "59a8a460-c3de-442a-9cc9-b4982b290893",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "3de4f2b9-3baa-4144-8108-f64b1fa77de6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff27583-c619-42e7-9018-e4db1cf7bdc1",
        "cursor": {
          "ref": "b255d229-8d95-42b6-b671-a7bd804b6edd",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b96bda3c-2cbf-44b3-933e-ab146fb8a5e4"
        },
        "item": {
          "id": "fff27583-c619-42e7-9018-e4db1cf7bdc1",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "da3f969b-eb9e-455c-bd63-2fcbf2248438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4a879e5-632b-44d4-8d67-d28956bab452",
        "cursor": {
          "ref": "ff38b4bf-420c-418e-a7d0-0b75c41e87ab",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "89390360-2079-4266-8535-b171cc907997"
        },
        "item": {
          "id": "f4a879e5-632b-44d4-8d67-d28956bab452",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4a07a3e6-4d0d-4818-b388-8529a3014217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49faea3f-eca7-421b-817d-9839935fe315",
        "cursor": {
          "ref": "86756f3b-682f-461b-9c92-b4cb15717675",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "58f73c76-552c-4e5d-9a86-26b1f653821d"
        },
        "item": {
          "id": "49faea3f-eca7-421b-817d-9839935fe315",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "9197028d-3527-4cf5-9176-680e80de9e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0301f017-ac05-4973-bdf3-4cdb1cf0377d",
        "cursor": {
          "ref": "558d7899-a72a-4357-9d12-69ce53b723d1",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "1197adf0-07d6-40a7-9911-2c0539ec7c38"
        },
        "item": {
          "id": "0301f017-ac05-4973-bdf3-4cdb1cf0377d",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "ef4fab77-f59d-4204-aa62-b31c46105d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e7c1ba8-d36f-4868-8895-ea067d8b7e91",
        "cursor": {
          "ref": "ec25b069-f792-4ac1-ad18-aeb2f4145004",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4e00df4d-9999-4dc6-8322-d798b2f26f93"
        },
        "item": {
          "id": "9e7c1ba8-d36f-4868-8895-ea067d8b7e91",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "42ebf5bf-ef78-4405-9903-71e65b847dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28d746d8-ba59-4ea2-b7be-673738f651ba",
        "cursor": {
          "ref": "0e40fd1c-23f8-4193-a356-eb5ad0d0ac9c",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1f829c6c-f366-4d6f-a8b5-0f63f6fd5db5"
        },
        "item": {
          "id": "28d746d8-ba59-4ea2-b7be-673738f651ba",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "ea38c2b1-5dda-49af-90ed-e7ee58b8e78b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94985224-23de-4b8d-ad80-c23e44c84d99",
        "cursor": {
          "ref": "992769f2-8293-43f3-9843-b7620b7d0a5e",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "15141dfe-060b-473d-a0ec-cdfd80020300"
        },
        "item": {
          "id": "94985224-23de-4b8d-ad80-c23e44c84d99",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "f91d1dd8-6166-4339-992c-cc0ee42be237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1409d59-f153-428b-bd3d-cbf816b446ec",
        "cursor": {
          "ref": "e9085dca-7e4e-4f5d-a42f-f4d69de6420c",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "159c3123-6993-43a6-b83c-edbbf7d087f2"
        },
        "item": {
          "id": "e1409d59-f153-428b-bd3d-cbf816b446ec",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4cab1907-1bb2-46dd-aaa9-7ba3b44d14eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1018,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b83b2699-6935-41d4-9af5-7d425339ba4f",
        "cursor": {
          "ref": "1aec24a1-6519-4768-9343-e223f3318645",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "f04009cb-1bda-4c49-8a4e-df43a6f3ed67"
        },
        "item": {
          "id": "b83b2699-6935-41d4-9af5-7d425339ba4f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "4789008c-b30c-40bc-92c0-96d0c8308a4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101fc8d8-8fda-4e6c-9330-ba6296b64c7b",
        "cursor": {
          "ref": "bd180a9b-d44b-4886-a96c-bd54030caa02",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "f8c4db3d-362f-499a-851d-0dca5e7007c1"
        },
        "item": {
          "id": "101fc8d8-8fda-4e6c-9330-ba6296b64c7b",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "7be06fd2-1598-4672-ab44-475b066d1235",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99b9bb77-5655-40e1-98c2-1774a35c35e5",
        "cursor": {
          "ref": "4e669226-3b7a-4ac5-8a5b-4376e0e4b722",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "110dec56-9ddc-40f2-bf7f-0f22fc8f6a33"
        },
        "item": {
          "id": "99b9bb77-5655-40e1-98c2-1774a35c35e5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "44591fde-9353-4583-8e82-b5df94389e4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58117beb-643f-42b3-9eb1-97900815065f",
        "cursor": {
          "ref": "0aa0a51f-34bd-4789-83de-4f458eabdaa5",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "e4bf2927-7ce8-48d4-962b-5ac6f7f016c7"
        },
        "item": {
          "id": "58117beb-643f-42b3-9eb1-97900815065f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8b85bc3c-1e0f-407f-b1e1-0314d01a3e77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a54c18-8bcb-4b1e-b805-91b2407ae499",
        "cursor": {
          "ref": "20ad4af2-3a22-4cca-bf4a-0dea54f4f199",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "ab7af0cc-31e8-474e-b2c2-784691dc9f51"
        },
        "item": {
          "id": "e8a54c18-8bcb-4b1e-b805-91b2407ae499",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8c2819b7-10fb-45d2-a411-3eff46c2572c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed23bf12-5fb6-443c-a30f-beb4b44b9806",
        "cursor": {
          "ref": "b6717f64-1e4b-420b-a9f5-12d7dc521733",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "7b776ac9-e52c-42c9-b799-b0955a1231d0"
        },
        "item": {
          "id": "ed23bf12-5fb6-443c-a30f-beb4b44b9806",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "7e20dadb-9635-45b5-bd79-59fe9180c953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c77001-3b95-44f9-8da8-b11e5474f3ba",
        "cursor": {
          "ref": "bf47e5ed-5596-463b-9557-52f5d9a4b1fc",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "8c22b8c1-d236-4849-a896-5a1a9c1c123d"
        },
        "item": {
          "id": "e1c77001-3b95-44f9-8da8-b11e5474f3ba",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "2c6bb819-1bd0-4e43-a69e-6e5046932610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1259a2f-82cd-4f6e-ae16-47104fa368e0",
        "cursor": {
          "ref": "86d3a0a4-8796-4385-8b4f-0050f6e28d01",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "ed46abac-2940-4b31-9a8b-679d4cebe7c8"
        },
        "item": {
          "id": "e1259a2f-82cd-4f6e-ae16-47104fa368e0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ed548de3-a23d-4188-a273-107d72d2e52a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a43c87-e024-48cd-9927-e6bcd7dc6827",
        "cursor": {
          "ref": "1c439e02-f869-421c-a939-a84caee2b70a",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "857c0fe5-66c0-4e0d-8ab8-fd0e9dbf5103"
        },
        "item": {
          "id": "56a43c87-e024-48cd-9927-e6bcd7dc6827",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "0bb03649-998e-41d3-8bae-da5a5e575bdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eefe1148-19bd-472d-adc5-44f03c30ac3b",
        "cursor": {
          "ref": "87dfe67b-a3f5-41bd-84ad-075f3176510d",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "cbf28d35-732b-4c68-90e0-2c2f751b2dbd"
        },
        "item": {
          "id": "eefe1148-19bd-472d-adc5-44f03c30ac3b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "009d854a-c96e-4d2b-a704-3a4a45f8e0ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3401845f-be45-4c50-8591-a178dc80ea8d",
        "cursor": {
          "ref": "5e78fe26-c406-4d6e-a653-829f90a21d49",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "7dd1b7eb-2701-4e04-bce8-3f0d6cabf56f"
        },
        "item": {
          "id": "3401845f-be45-4c50-8591-a178dc80ea8d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "978b2e7c-9de9-42d5-aca2-9b61c319f38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "156f1697-bbe7-4a67-be19-2e66101fe060",
        "cursor": {
          "ref": "fe6efcf7-004a-44ba-9dda-dad7910fdc6c",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "55fad41f-cfb6-4818-9f6b-bc56115afa4e"
        },
        "item": {
          "id": "156f1697-bbe7-4a67-be19-2e66101fe060",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "461f7d35-2f57-4a7b-a049-b4dd13c41c99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a840b75-16bc-4863-a770-c6483abd1e45",
        "cursor": {
          "ref": "c9591b31-e324-4d02-ac1c-d5160314eebc",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "30316f47-e9c2-4947-8d20-cebd25439a7b"
        },
        "item": {
          "id": "4a840b75-16bc-4863-a770-c6483abd1e45",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "55b68e10-fe52-494f-8ab5-670c93584c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f27adc1-9904-43a0-aa97-d3321a2271c3",
        "cursor": {
          "ref": "89e1351c-74be-45a0-9220-1f0deaa5b17f",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "1aa0ccf8-3f28-4ec2-ae89-1dbe64dc207d"
        },
        "item": {
          "id": "6f27adc1-9904-43a0-aa97-d3321a2271c3",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "89d4bcf0-4860-48a1-83aa-ad63c6c6dfab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1563a6-b0f9-4ed8-a6df-7b269c249d77",
        "cursor": {
          "ref": "6ecb7587-bbd8-4a1e-b4f7-6b48b12364e2",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "0b72a2f9-a6f7-41cf-86b7-a31550492c41"
        },
        "item": {
          "id": "cb1563a6-b0f9-4ed8-a6df-7b269c249d77",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "84551f3a-d49c-4958-807f-f5c7e287733c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 160,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109be23f-5b4e-4f0f-8117-4f2458964094",
        "cursor": {
          "ref": "a77cf96e-cbe4-49f8-ba3e-85e6e4726e8a",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "5005d638-5acc-491c-b11b-1607ebb40693"
        },
        "item": {
          "id": "109be23f-5b4e-4f0f-8117-4f2458964094",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "36f9924d-2d49-48de-93e3-53547505df29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d457355-6064-4f8d-87fe-87dfb38e8cf9",
        "cursor": {
          "ref": "09aed7d4-5965-493c-be22-38fa739614cf",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "6d4d5b23-3af4-4c3d-8132-c019b78fcedc"
        },
        "item": {
          "id": "5d457355-6064-4f8d-87fe-87dfb38e8cf9",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "fd846fdf-4f6d-4546-a01a-f387dd6a3928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36023c89-0d2e-4713-8f94-b8840776b96e",
        "cursor": {
          "ref": "a80d754d-7f4b-407d-92f5-511160d03bc0",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "03108683-4d51-41d0-a0cf-52c8ac5653f0"
        },
        "item": {
          "id": "36023c89-0d2e-4713-8f94-b8840776b96e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7ff63b3c-fa00-458a-b30b-f92713985182",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b3f3ab3-2d62-4fcf-a328-a07d98dc9939",
        "cursor": {
          "ref": "013150e7-fb23-4389-a955-d712c68882b1",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "453a80b0-4299-4c9c-9cd7-2f2c3d2693f0"
        },
        "item": {
          "id": "7b3f3ab3-2d62-4fcf-a328-a07d98dc9939",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0e38af61-c50f-4e25-bd68-961fefcfccf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd065c11-fecd-4e30-b6a0-48a5291de531",
        "cursor": {
          "ref": "f40e81a1-16bd-4df0-a994-c5b2dba10828",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "fccec8af-7b16-47d4-93ba-64299080cbe3"
        },
        "item": {
          "id": "fd065c11-fecd-4e30-b6a0-48a5291de531",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "6ac2d702-7904-4cc5-9ecd-58cc3c95ec18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bdb07b9-2c2f-4e49-9217-2fc02f27ba6d",
        "cursor": {
          "ref": "f8dfc788-3e80-4c14-87e9-9a42300d3199",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "52a70667-a437-41d8-bd0e-022808f2d26b"
        },
        "item": {
          "id": "4bdb07b9-2c2f-4e49-9217-2fc02f27ba6d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a03e6c6a-00fd-4a8a-b743-31b7e8eaa955",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4c147ab-f0ae-4862-a66c-7453ddafa567",
        "cursor": {
          "ref": "f658084b-036e-41e4-85cc-0c93e89d51ab",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "7ce85b66-bec3-49be-8928-5bef975ef3e0"
        },
        "item": {
          "id": "e4c147ab-f0ae-4862-a66c-7453ddafa567",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "31460e86-104f-43dc-999f-57085dbcb742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a6e5644-c3f3-4c75-8c4a-f03319138977",
        "cursor": {
          "ref": "4f45c739-18ee-4148-bd9e-2a7a46845cf7",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "79e267e5-1afe-407d-8227-308653fc78d4"
        },
        "item": {
          "id": "8a6e5644-c3f3-4c75-8c4a-f03319138977",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "3a952996-154c-4a0f-93b0-d40ccf80e3f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad27651e-bc14-42c9-b378-b2580f76cfa6",
        "cursor": {
          "ref": "b05662de-8d44-4906-b068-77acd061544b",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "5efa32d7-4b5d-4a82-b1c6-e347a47faf36"
        },
        "item": {
          "id": "ad27651e-bc14-42c9-b378-b2580f76cfa6",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "7c100aa0-5541-41ec-a0fb-5f76a8a47c7f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 83,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3780f7-4250-44d2-86cc-246adbe5d083",
        "cursor": {
          "ref": "556a474b-3cf9-4c33-8f29-19ced14e4538",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "8133a434-781c-4a6f-9359-5f4000211728"
        },
        "item": {
          "id": "9d3780f7-4250-44d2-86cc-246adbe5d083",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "155c0dd7-8c9a-4cbd-b723-21f4aebfe0de",
          "status": "OK",
          "code": 200,
          "responseTime": 135,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e0231f3-f415-4d2f-92c0-756141973b89",
        "cursor": {
          "ref": "e8cc16a3-ad2a-43ca-a6f9-a928c0e1c4d9",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "887158ff-8178-420f-a2c4-173766a3bc8b"
        },
        "item": {
          "id": "2e0231f3-f415-4d2f-92c0-756141973b89",
          "name": "credentials_verify"
        },
        "response": {
          "id": "cff8ea2b-30c5-4c77-a44e-e15604a10147",
          "status": "OK",
          "code": 200,
          "responseTime": 2431,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8fcd54-70bb-400e-8531-d7b90ec76a85",
        "cursor": {
          "ref": "3d53d2dd-9505-4685-bbb4-07f1a2b33711",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "2d38cbc3-4638-4286-a6db-2cdd80bfd06d"
        },
        "item": {
          "id": "3a8fcd54-70bb-400e-8531-d7b90ec76a85",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "76161b41-fd9e-4dd2-9ad1-6ab22d7eeb6a",
          "status": "OK",
          "code": 200,
          "responseTime": 2686,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7633c0b5-8c5f-4568-a14a-fa055ea10db8",
        "cursor": {
          "ref": "ea728cbd-6614-4670-9978-348b6ab96a74",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "4d2eee77-b5da-4078-baab-a80d7db92907"
        },
        "item": {
          "id": "7633c0b5-8c5f-4568-a14a-fa055ea10db8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f05ef683-1ccc-4283-b738-30599e667dc7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7633c0b5-8c5f-4568-a14a-fa055ea10db8",
        "cursor": {
          "ref": "ea728cbd-6614-4670-9978-348b6ab96a74",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "4d2eee77-b5da-4078-baab-a80d7db92907"
        },
        "item": {
          "id": "7633c0b5-8c5f-4568-a14a-fa055ea10db8",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f05ef683-1ccc-4283-b738-30599e667dc7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c09a1f6-5ac2-4945-9128-64ce5bc615b2",
        "cursor": {
          "ref": "b58d8b6c-4c27-49b4-9c23-f95bd5f9298a",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "08dd7092-1298-424e-a4ee-20c0592d2ed8"
        },
        "item": {
          "id": "6c09a1f6-5ac2-4945-9128-64ce5bc615b2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b2446a55-c942-4981-957e-67e2ac611815",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f60abaf-125c-4fcd-94fc-c57d700c300e",
        "cursor": {
          "ref": "df56886f-e85e-47d9-bd31-ad27e7810bb3",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "0cbfe353-10bb-448f-88e0-6facbd612a01"
        },
        "item": {
          "id": "6f60abaf-125c-4fcd-94fc-c57d700c300e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "ebf72901-4218-4208-8829-0a680181dd0f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}