{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "2ac83c47-f14a-4bf5-a741-25679e9e9cc8",
        "name": "Clear Cache",
        "item": [
          {
            "id": "23243204-fe72-4ccb-ae68-c4fd27ecbd21",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "63ffc53b-e328-42c3-b5b0-3360c83efe4a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "becb1c1a-fb5c-404e-a0c3-29cdcdbbf91b"
                }
              }
            ]
          },
          {
            "id": "94789425-891c-4caa-8716-c022ec5220a7",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "355ae4cf-6ca1-4922-904e-26accf2d232e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "263b8fbd-b2f3-4e61-8ae8-1957702f6860"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "183efbaf-aca9-42fe-aa7f-a71f843c651f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7eb233e3-a85b-4cb9-af1c-ea59dc1eb50a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8942f598-3f96-4e77-996e-d27d2ce20d62",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c4d5e6aa-81e8-464c-8962-ce7cd53e471e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fe04ac18-4aaf-40f0-b597-9df953252d3d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "43471d9a-4ceb-4261-a8a1-362c2172a2d2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4157f691-629f-4cb7-82ef-8af17e5b617a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "22ac6a24-3cde-41f0-ae65-4ac38fa983a6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "194b096c-6ce7-4ce9-9ed3-65bd64b8fca9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "feec8fe5-f56e-462d-bc04-aa69099e1d5e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "69cd9fb7-3faa-4867-84d4-2d2cab7943ce"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "29675037-0d70-4d4d-955d-818e53f0f963",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bd1ba6ad-a4c5-472e-8c60-aa2d46cbc73b"
            }
          }
        ]
      },
      {
        "id": "36cd5424-c525-41a0-8203-27684ce51a9c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "35602705-50b0-415c-a9af-a23709762e18",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ea70ba28-2522-41be-87d3-58ad5cd4e007",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3b66c49b-0b49-4c26-8064-47aca35dec47",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f2a7790-9430-4a06-98df-1268c28bb17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8782cba7-9fc4-4db0-802d-c1ce5a1a25cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9735eb5-db43-45ef-b3f0-392deccc3b5c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc5fef6-005b-4907-aef0-adfd1569b2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f761a65-f8ae-41c0-bf7a-ef4e66d75d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e5c1a7-6d34-40d1-a5c6-a48943b89401",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9164e23e-3722-4401-a803-d863bf0f5806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "17e4ac74-bd0c-4b34-ae70-f0579a0992cf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "eff33461-c09d-46c3-a963-d91daa5d35de",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8f3dbad9-65e3-4f9f-bfe0-41f2b9d81188",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4acc34-238e-4d90-8a4f-8e9b35f2935c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "720e0d86-e806-4167-8b58-be0d1a082300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41d63c94-9bac-45d8-9154-49928ab80489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "161c8eae-7cba-4638-b99f-9928488dbe54"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "175115c7-26c7-4a01-b9c0-1b282dfbea63",
            "name": "Positive Testing",
            "item": [
              {
                "id": "247b5339-103d-422b-96b8-3d56a105da91",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6df7e4ff-0a7d-4912-8e74-aad6d2773e66",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "515e0885-7a6f-4099-86c7-6bb83dea6a38"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9a369bff-01ff-4a37-9f12-a4c519c5c7f1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "3dc45212-6a3f-4430-b9b2-31864d45d869"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c24b9d8b-9c8a-4113-8a06-6d1312080cb5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "234b5ab1-b49c-46f6-8001-4723311718e9"
            }
          }
        ]
      },
      {
        "id": "ba89f2ee-7b43-4feb-9fd6-78863d87c10e",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "09a266af-24ef-4865-83df-83a9c3fea4db",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b1061127-98a8-4df7-acdb-b816b3a1f6a6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4fccf1ac-5dad-45ad-a4a9-fe2b3f7157ee",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1718a32-bb97-48a5-82eb-14f797905273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e24ce08-6a66-46c6-9450-5c325d92d040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3c8057a-832a-4d23-826d-de1c7223dc17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66bfa6e6-5c8d-487f-a72e-0319ab5ff3da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9ec7150-bfb2-4035-8eb0-1e14582d1e39",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a829af6f-1dec-4a13-ac6d-bc0352ca875f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57da7309-fe11-45d3-8487-5f614fcbee25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76dde69-5a1e-4de0-bb5b-3ea9605076b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d54c3019-f1b5-4ece-9fbc-dbf68dff9df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faf026e2-75b1-446b-bc5f-7694c12255bd",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92384346-66dd-4239-87ec-5897361b45bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbcbce1d-36f1-47e3-89ad-d5008526ca3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e67417-0214-4a0c-ac27-2a8beba418d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ba8a0829-be26-477b-9e61-d5fb7dc75d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ce9a77-eefe-4baa-b8f0-93fbe44485b2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "630f401f-4a48-47a2-a712-f3de8658413c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a06c5c5d-dbac-451f-810b-365bb3eb2f33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9871a2f1-8ffa-455b-b347-ce3a705dc35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0106ff5-cc39-4098-8d7f-59aa25617513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "938637f4-d728-4a5d-891c-28ddc7af2c78",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "095caa71-a5f5-45e7-b396-63ca3f7ba6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8389e0b7-1152-4555-922c-dd7d4c5ae8ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015935c1-fbae-4c69-810c-bae46f4e5638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89a3ffd6-dcf4-408c-a984-3281d014f289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f1252fc-ea7b-4782-979e-184d95cea080",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386b5178-1afe-4163-bd70-fb46ff6c9818",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54d1bfc4-a6be-432d-a574-8449ea60a120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37cac100-e039-4c5d-b507-34933e27b536",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6962dc2e-0b8c-4569-ab88-2b8a3ef83cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe328de9-a3ff-4072-9f10-051d1a7160ec",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "988a45c0-5c25-45b7-acb3-a9fdc72b0ce1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa1fc29e-3720-466e-80ea-f7ee269cace6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c2dc5c7-656e-42e9-ade2-d96798a4fff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a5355944-db2d-4197-82d0-381e21abb131"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ab1c307-9845-493b-af2a-767c602a216b",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1f90476-a933-442c-96f6-acfc8ff04950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4457355-4137-4c3f-ae91-295ffb4dcd51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38646c7-ff19-4ade-ae9a-e2739c12405c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39c3a25d-9bb7-4bf9-bbed-8ec8a723a3de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e6f272-5865-4224-b428-b1bef9a6ba62",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04246060-aa48-40e9-89ae-388d0409e98e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc733780-3ece-4eb2-a26f-a1fda0baaf41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984ab123-fbf2-435f-989c-9e365cacea54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c635adac-681e-4daa-9ddb-920c4d55c6b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ddd80fe-479a-4e74-8e65-06980da1b455",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "386f2060-bc44-4ba3-9432-c12be17cd0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b8fb570-8381-46d5-a4e9-825292228212"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "013f2fe6-fc01-454e-92b9-41ec78708573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97ebd56d-bcb1-4719-912f-1b16368c0de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef37f44-d97e-4168-b253-2af352c8e097",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76ea5ce-eed0-4a71-ac09-98e80f01c7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba6d8d5-5f82-4adc-89f1-8209f3f00c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c37e837-eaa3-477c-a47b-e5187b1cd5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6194933c-66bb-40ed-90f1-c7280b852e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6589d52a-df2c-4165-b3a7-84c71060425b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99155e37-077d-458b-a2ae-62b0d75f7f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cd1eab3-e151-4919-a329-063b391a1e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "add48e21-a07f-44ed-9aec-cd54518cf0d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "189a959f-5182-44be-9da5-0fec89157c94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f58535d-80ae-4d32-a0e7-c0eb58f7c2ee",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "779ce8de-3835-4508-90d5-97995d4a46a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7dac81b4-1b66-41e2-8051-d93ed75af37a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d04a4b2-5ea9-45ff-8873-374dea59408f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "394daf94-8864-4f91-b805-737952240ce5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd466dfc-21a2-4423-9600-9834112c72ed",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ac48ea-b73c-4085-8e91-118e34e2ba1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1531ee65-8692-4300-bf5a-ffb930e49d98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b27ed1f-fc02-4364-8e77-242963c37f78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "da63e66c-cde3-4498-8bb3-93145b08b4d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3c15023-3f14-490b-aed7-fd75870ad92f",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95456652-207c-4c55-9d2b-68aba78cb101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43e334e0-5011-491f-a375-d5879b8d612c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2de43394-266d-495b-ac14-00773641bf5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d9d00619-f23d-4f98-b480-780c411992fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "594f9491-846e-4749-930f-dbdd3b9a8ac1",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38cd7fe8-1a65-4a7b-a94e-490ff29841ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a809bbbb-3762-4855-8470-461a9409021a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747fb744-0ae2-4172-b05f-cfeb6be381df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1df9e142-e687-43b0-8446-b7a60f37a3b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f388374-8453-4727-a81e-1afcda5f70e1",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1216d10-4510-47f4-87f8-3ada167df000",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21815546-d7f8-486e-9935-48a9ac37a652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd5b42f-bf53-4515-b851-8444569e705a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "82e316a2-fbc2-46ef-ac06-bbd5cab071c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42adb013-972a-49f2-8963-49003082bf3e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d26f65-8cc2-4802-ac38-79e7b9c11f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f4df5e4-eecd-4bbb-a7bc-09115cc8ce92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e93575-0fba-4bc3-812e-58553850746f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "608e2e8c-c723-4444-813a-331e9ec60272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d52bb5-e021-4723-90b9-4aa48b3ac1fd",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a55affc8-ea21-4c21-8a23-dd55a76f46a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fde24f2-d85d-4bcd-bf77-6c9d55f8b401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15ff0002-9953-40c4-8010-bd51e0c15dbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "160f4731-2ed9-4c97-9124-cc1cf8ad9d39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97cb1937-8bca-45a1-a8ae-808ee239b39e",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44810060-9191-4464-90c6-290ba8619862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6729397b-bc33-4a0d-a2cb-811cf887fe8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e8cb04-cd87-48d3-87a9-abcd5022db2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a55383e0-c27b-4fb9-887c-624a960f5af8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf56f1a-05bc-4eb9-9b44-cf604014a21f",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06fcb90-b9bd-4440-a62d-0a3dffac0a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d63f662c-309b-480a-a776-c679c986f482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21656afa-a4b2-4645-b6e7-2e4226b48a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "85726859-5106-4364-8b65-fe57c52f5350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ed747d4-4367-4386-9033-2498bb2ff892",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e46ee55-625d-4056-9f3d-cd24d4afedfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c840425-ed34-4673-86da-bb15a4d9e181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5ff1dd-6c36-4738-8687-2b85dbe59f10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "55c86a8d-5070-43a2-bcb0-2a4f8d4b661c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e5a28a-44d6-461b-a788-a5ce07affed3",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb81f83d-73a8-4883-8529-401b5f531fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae17b777-1b8d-4a38-82b3-4656f7d7445c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46002159-f05c-42c3-9525-77cf0b41bb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ec28671b-3d45-4d50-bb45-68cf5df85ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ee7644d-75d4-420c-a137-1cb8af3cfdcc",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33500a84-5acc-4dec-821c-93339b03642f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd8a2d05-496b-4c20-a1ad-03e874c70d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b552ab4-265f-4625-861c-fb9faa747713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a598a0da-143e-4e9f-a51f-960d1786b10b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23e4b4c0-064e-4718-b01c-004f6e784085",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6366afd0-4a6f-4753-8083-18e4e0e5b752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee7e6af6-d034-47b6-ac98-029d0d043e0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c888142c-3ef9-4550-b6e2-e00127c5f809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2c50764-a210-4308-bdd9-eb892313821f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421c9e73-9400-4d6f-88f9-7d8a9891c397",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270c638b-bd27-4eef-b42b-f547271f4307",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfe90c17-524a-4b34-b694-96a71b46eaa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db26d6fe-1eab-48aa-8823-df803d247923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a413da9a-934a-4dbe-9665-08bd156adbf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55b61b8d-a8e7-490b-bc96-153d6495c09d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db02c7d0-9856-40ef-9bad-ecd069229cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fa160e7-a932-4e14-bff6-1f4681ea9a80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e4f3aea-b473-4fcb-bde8-0a98235ace2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "92f6e632-baa8-4a70-a084-f6316df73a1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0401311-6286-43b1-a86b-6a38f996d7d5",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfca512b-4652-4f14-b91a-975fa3d7655a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "947dc648-085a-4c7d-bb66-0410d81042c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68360424-26b5-4ef7-8d18-2c29891d4c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc3ec1aa-4fcb-458e-a6b1-55ead20e30c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e539a8a-0285-4a34-9492-1c40dc267890",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f24360d-42dd-46ac-b01c-856c893d37e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf5a1c3-dbb4-49ec-bc7e-ab1ee553e6f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebe3ecf0-ff05-472c-bcc8-c78af7c069ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8b3395e-dc82-4c4a-8f8d-e9aeb0437dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87c612d2-09b9-4c4b-8ef3-ad84a4df6b2b",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51add43d-7b43-4374-97cd-31b0eb0807bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35063a37-ef8d-41fd-a539-3bb2c74b8a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3852b02-f19a-49f2-983c-1a128753521a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "feb707b3-aad5-4b04-b872-9dbc342138f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0929b1b-8369-4785-989e-932b2a34c954",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef62283-dac8-4701-8056-0aff566f32d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7e323e-2c67-47ad-9f09-65f4aa5b0a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24ae5f8b-8c7b-47cd-9477-fbccc9280a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "87041a69-00d3-40cf-8e40-7cc858f28054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa302f68-ca25-41d7-83df-1a600b8e7066",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c72bc85-6085-4618-aae4-658e108f94bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ab7794-a67b-440f-a2d8-96b4ccb3e15a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a66cf9-3cbe-4ad2-bd56-01e785715d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bbae480-f2f2-4f67-a74f-5b7cab68219c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae9f0390-1bac-45a3-a11d-3d10fa0b7ed0",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c7722c-675b-483d-944e-80843c237650",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad06d79-cec5-4c38-85e4-00c5c457b5fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b554e7c0-166e-4876-985d-09b26d780fc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "39db0e36-e3c4-4ea4-80f9-4128acc3a5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5ff712-c22b-43d9-9366-1ae512cea497",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "def392fb-30a9-4ae0-9254-744c949a69a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b212d6ab-36bf-49fb-8770-21727c8c7caa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "714a7bf9-2316-46ab-9238-97994f2d0199",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5fbbb5f8-cbad-4483-9940-0567187e3e50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e427b7c-3599-403d-aeea-5dd8a138e32e",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c735a472-4678-4e4f-9638-9c09e6ac0b0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dec5ba5-986f-4523-bb79-0de4b0d61eda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "941fd49d-5583-45e7-a98d-d1cd07b7fd5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "340fb0c7-2963-4fd0-8019-24da279b5f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12797304-2073-43f3-88e6-0305870471e7",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cb2caa5-0a06-4239-8694-28cfb8e0f6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c36c9518-9ed7-4be8-a672-44164077f1b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13f96ad1-032c-49f6-b12c-b3016bcf9a9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "216a68bb-b94c-4759-a073-921aa534dfc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47d43299-63ca-41d8-82a2-a1cbbb8538bb",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc51078f-598f-43a3-94bf-a20547045a86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ef0c3a6-6d8f-483c-9e85-d1b8e3ac69fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e189feb5-bafb-46c3-aa1a-289fe8be1e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "47eaa2ae-92bc-4928-9943-a4b75199d6f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c2fd901-2a19-4574-8dde-edd8f45de300",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8f0474-d1fe-49fb-b215-5e5bf2154c9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ae11f55-8369-4a5f-8250-f0b2b8b78eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4376ef7a-3e50-4fcc-ba6f-59c3d911d00f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0efe0228-24ac-46c4-b5ed-90a5bb7028d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3364e02-dc4a-4e66-8931-4ce579c2919a",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "389228bd-b63e-4208-8212-7b8bc63b5674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ad3729c-666f-419d-b5b0-a028dcd93205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c1f9993-484d-417e-9512-0adf128d6686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cc415903-a2f4-4368-9d70-384269c30696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902e2a00-6282-48a5-bd46-eb737ad5e713",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65add9c0-4683-4212-8272-2b786c23207e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ee2505d-eaae-49d9-b560-b6e5b7ba113e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73b1eec-0eb1-418f-a76b-0487cd6b7bc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "810faab2-2abb-4999-9a94-f87c99694c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1876c8f9-177f-4d77-8fa1-113329ab9dc3",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99bb007b-3f03-4b8b-8690-e3cb6ef880c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a2efd87-fb08-4b04-a7f7-925916a4875b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a8a877-b4a4-4407-bbb0-dd851d308913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "eef76b74-4934-41a3-a930-cf1f1984112a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0df467ec-44b8-4f57-9a87-b64f9be0978c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed9805d-2b62-43f3-9cc7-caad4c4e6a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a389ca20-bbaa-482b-b9ee-5d4c58230a8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a310cbe-7a85-41c3-af3b-4a817e8a191b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "3709123f-24c4-4059-9b43-5f00992f0c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "581a4351-f0c8-4bac-8f11-9dcdb4e83cd2",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaf10b86-63cb-49df-a9e7-8beaa4fa9e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa8fd84a-a3bc-4dd5-940e-99ea9edd6b88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1df14c4c-8575-427c-ac67-564091ffa5ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ea30131-9821-428f-b5cc-26a697f8acd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b60faec-e17c-46d8-81d4-f711a50188e7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6216d67e-1306-4ea2-b32d-ba786016f9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50a87635-d05c-4951-9226-3066d750dfca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db09e862-d25d-43e6-a14a-56aa25a50877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9a7fa0e-510c-400b-84dd-fe6d4a59b6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff347df4-415c-49cf-bc6a-64b1ddffdb31",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7ff4bd-a308-4381-9386-2845e6cc0bbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "882b781c-6f22-484b-bfc9-ff0cdcb4d924"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "716a02d9-c16f-4f9e-b4de-505af26671ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a1655fc-4c89-4b29-b5a0-413636006215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369b68e9-a4cf-42ef-87cc-575bd27d754e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f258001-1370-4a65-8197-a7e6845f9786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c2363a9-bf75-472a-83d6-233dd84eac54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51845db5-7450-442e-91f0-828063fe9f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c23b9773-a5eb-419d-89ac-6e614d69b1d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c68033ed-6706-49fa-9637-f1542a9281ef",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9a735b7-160b-4299-83e2-70e6e31d27f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6888dd88-08f9-46aa-bd2f-9025f71a8098"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e25f016-5b4a-459e-a499-efefc5e01275",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a042ef9-3d8b-41fc-b477-8e35578613cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac7ed437-0bd1-4208-9483-335b7c1d722a",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcd81ce6-9117-4092-87b9-05664a8bd422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b927ed93-26a0-41bb-bdb6-1cfb2bccfe65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d967dd7f-54a3-4950-876c-b25ed284fb68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa60c98a-9bc1-44bf-acbf-f4cc82c66823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0587f970-824a-4290-a571-2c5ae08a7011",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c87ed67-ce59-4da8-9759-a20d4d6ba5a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd176fee-3c73-45e9-b45d-65b69ee7c13d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07b0ce7f-715e-4b1a-a5ea-2fddcd21aef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f09d518-42ae-477f-b916-ad87a6c9e08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18872bdb-e5c9-47db-a5c7-97aa6d31e2c3",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be89ce0a-221b-428b-8858-df99e6e60328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ad153a8-b597-4381-a89c-a88a4514390f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c4ee6bb-63c7-4448-905d-ab45ae51a7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d960344e-0b09-4467-948b-dad913eb224c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc3eb2b-2156-4a75-8843-38fb736b3b86",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a28132a-6a92-452f-b8b9-37f6e5320e57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa8635c1-5fed-4dad-9824-f078b7245173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e6fa87b-6771-41a3-91bf-4fbe05096ac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a75b3fc6-dba4-4424-bc3b-8ab07b8b7fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00ee397-9957-4016-a7a9-dfac448479f7",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac422ff5-bf64-4d5b-a039-172d21072a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d42001d-b875-48d4-a186-e6849fa4ed68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e95334-14b1-434b-bafa-bcab93d7fc10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8c0fd7f-386c-4ebe-a3a9-edbf8407691e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5929d9b-5724-4159-87ca-9b2b831bf8c6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edab4424-85a4-4b98-9b3e-7aa3250e5bc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b8f3ff-992c-49c4-818b-8befd9bd740f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "566375c9-a315-4acc-ae8f-d2c43db0a447",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "73458c7d-e0ba-470c-9203-83acfa815a67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1030e8e-d76e-4148-bc7a-fee9cdf6f6f9",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b32d20f8-ed1d-4368-8f51-3da603fdcb08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bae427d-87be-4e3b-bc8e-12dacf8d2d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2f2b37-4781-4316-8a14-142776ec785b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eee4c0ba-669b-4130-a17f-86a82ab161e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4b5d258-6e68-41e9-9824-38fecee59630",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe93c0a7-e8bb-45a6-ad41-13b40e76d7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c47f178-470c-4880-8f39-1c6354322e7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074ceb16-0099-4e0f-8e20-81f75d74ee01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a59abc8-852c-40a4-bba4-c0c4048aef48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325f6d5f-630f-41f5-9e21-0f50ae19cd90",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26587a56-72d2-400b-afe9-2003f6598515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "850e0f51-b050-411e-b93e-70f601503165"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a008a1-8e36-4934-b1f6-be032195f9a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "23f68e57-54b1-4d04-a933-e6a95d13aea9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d2f78c-aac4-46ee-90f4-d9ef4c07f5f2",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f95485-0962-4631-a092-25f5a3c98bd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "984679c7-d119-4683-a434-6af639fb9bf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c805ed7-2c15-4334-8e49-e5751ff2e30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "31aed853-db0f-41f2-bdba-c615c71d0f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f068e644-cd32-43e8-813d-a8462413e936",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c049e4-074d-43c9-ae7b-bfd2b404ecbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5039d98-0d9f-45c0-bb13-22b70dd59af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ecec26-e313-478d-badb-2ffc8dfaa30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb6c4a15-e2a6-4415-8a6d-cfc3c8c2f902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52515bac-ebc0-45ff-bef4-0d48de5bab97",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a9493c3-b85d-4ed3-95e9-440e9a9381cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b2aa55d-88d5-4c3c-9622-dccb8120a409"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9120f0bc-ac94-4cf0-afd3-654751ee6c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b75be997-acfb-4468-a867-b2c5e13387e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "835f9ef7-bcbb-4a91-b37b-460173eaa13b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a77231-11e3-4008-bc0c-13a1cf5d7d25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a56f66d-ed10-45d3-a1ff-382f6ca0dbd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "830b3f6f-68e3-4c07-b178-7023a75e3efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8f546853-4ea6-447c-b7f5-186be0505f61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24597e68-8deb-4699-a04a-070e98e273b6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb30a09-1f08-47bf-a411-3c9cc4e0e9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8368cc9-45ef-4053-aacd-9e9798be20f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d620434-6f0e-4b44-91dc-abd592abc743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "78c1bb48-4bde-4217-bfaa-f86239f27ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2daf6ec2-14c7-4bcf-8820-6d0b4e29c06a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e26af6b-9f9c-4062-a187-16feea663184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12cddf7-aa71-4074-b135-971b3a8dfa63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2be79d1-61da-4e54-b0ae-437a6345cfcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "35632337-f739-458f-be15-059980468ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ea00cf1-de9f-4abd-ab04-470b6b523344",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2eed4e-1124-48b5-ad1f-4622b035dce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39c1e9d1-7091-4c86-8158-9e0e57e260dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97fe8bc-5f98-4e16-8436-642001aa5b15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1b5c21d-9d58-4baf-b44d-527f766c1c51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "782ac9f2-4a0a-49af-9ca1-2f01e4eaeb5c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8feddb9d-32bc-440c-8046-3e7ab7bb2e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "210c5966-19cb-40d5-ba31-ebcc0241c029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13bbf6e0-7846-4261-a770-41911ce7e2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "93db23ef-2c5e-4a29-bd32-14a21ba17bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6d9e7c6-0d0e-4443-8822-2fa51dfaadf8",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b698ea-f286-47c9-afe1-397996afe2c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dda4e40-c6be-4351-bc03-5cac27588419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aefc12d-ff38-4802-a1d5-7372aa59e0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e1d4f45b-2153-4b29-a57c-a28abb3c92e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89ce4a2-a3d5-4dc7-875f-a7493d3d9e6e",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9090683d-a349-40b1-a276-d66a2560d93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a005c7d9-3409-4e40-832d-74cee61041c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874df0c6-94f7-4726-9bd4-b269136925f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "069eb9bd-37b0-47cd-b1db-67bb23e7eae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b61f3a8f-1810-4cc3-9005-1f8502b7e49e",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e0af4d-f7a9-42ff-badc-e83dbe96bd89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d233340-9247-4e08-a9ab-13f49139d1c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bb198aa-11b9-44f5-a839-46ec8264a65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6d931e34-843d-4410-af2d-a6310173286e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "952ead0f-f581-41cc-9855-8fc3098e1d9d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ae24fe-8fe4-40ec-8e3b-f66c83b0cffd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a621a814-7e01-4994-8283-5e1e2d59f597"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389c2db1-a2c6-485c-b335-85e41dd24b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c914436-9ae6-49e1-b724-73409e0619cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "558d4f0b-0509-44b5-9b47-7441f71ecccc",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e28a0ab-c249-4d9e-a931-5d602a32951d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1d8c537-4f03-4fc7-bff8-83f46f19297c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f97fe26f-fa87-4700-ab23-8b77c1c91137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "035ce2a7-8f28-4af2-9406-9d01b323587f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce598b8b-c02b-4b50-aa81-01b218c8a028",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31ac5f3-b47d-4221-9bdd-e9074966fc71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fee51cfc-a4b5-4600-aa33-970c58b9d52e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f47be5f-e7ff-4684-8988-1dbd2b8bcc35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "459fc9dd-45c7-42f1-9901-8e3ad994ae3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3868af-c711-4694-be87-fdeec65fbcea",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c62d411-5e0a-40e1-abf7-0ce3753f826c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e329a772-44db-4416-ac57-0f8715d1fb72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9c05fb8-18a8-45b4-a637-03150d1d498c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0aa28dfe-d186-45df-9811-2d4eafae6de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16ce05d7-7a39-4d4c-8ef0-75656a2f4739",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9653845-e239-4005-82ca-a76bd5e1d38c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84247b66-5e61-4e30-a4ba-6d32815fec18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4929bb6d-2f28-43eb-82b9-4bb1d79c2450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a436543-6a01-4410-afe4-df936d447cda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0882b58e-1008-4ab0-b87e-76dfafc9a426",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc8aac65-c5d0-4f13-bf6c-6b050a12c845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61d27289-5b38-461d-81e5-efab3793e205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e21f63-e381-47b2-94bb-48e3b9f99ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a24ed20b-a4c0-4a83-aad0-cc150e9a3805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "927d419d-7337-49ec-9142-7825573364a4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90504bd6-4ac3-42cd-be4e-acde978c3ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "376cf457-f601-453c-a184-f1aef15b32be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088fb148-d7d7-4c6f-833e-37c18f10fcdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d5c2c7ec-d7fe-4e53-b776-7bb4f62ac718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17bfdd47-66ad-42e8-808c-4c2ff5dd673c",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f110934-2ba5-4eeb-83d7-741ea6d6f81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de58eb72-6dcb-4f9c-91d3-503132501778"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b51a485b-5228-4858-ba50-1d5185a2a2f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbf6eb22-a4e4-49b9-bd30-9274d6e7b028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058bfaa8-3c68-4e1b-96e8-878535115a64",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb9373e6-5e2a-473f-91d5-275725f35cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff87500f-71dd-4537-8b1b-f6c6b7d6e002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88888231-a308-49cd-a20a-81dcf2a17007",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "601da54d-97e7-4f58-9a18-65f6a2d63b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976888d0-90d5-4c36-8740-26b774e828d3",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ca78d2-5d5e-4f0a-ab72-e1a5eeeb362a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "897f02c9-42c3-475b-a8d3-61092ae4bc23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d470beeb-f90b-4cb4-9933-bc2a6a9b3c2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a60d9f6-682a-4ff1-8a13-5fc0b0092940"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80154caa-2185-4e64-b401-0c97316fdcc9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ccddffa-3221-42e9-aec4-66adeb671924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "188d0843-4982-4489-bf65-9fbee90723bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa16d2b3-0f24-4584-815d-eac49f732a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "db10bfd1-5e58-4763-b5c7-c824e3553c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d36ddd2-c16a-467f-9645-7434f70f881b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac53662c-73d5-4e18-b1fc-e73867d3a951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2298944a-b810-4701-baaa-5e0976987713"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f79859-3c39-410c-8692-1f6d8641f4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a65fd568-04e0-4258-bd4b-d5e753586cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65b19874-7b0d-409c-ae41-1a8efa0584b9",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "980c1108-48c8-4fc7-b2b5-67e6c974671c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bd1af5e-2d59-4e1e-bc33-c8ac61ec6602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf280ad3-6f3b-4609-b7d1-d55181f0e91a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dc15f4e0-e6e5-4a77-b1cc-81b8ab8f2c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426a30b3-7d7c-4bff-be5f-94cf34d51ad1",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a22cad84-301e-459e-b408-26c53ab99999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bbf6583-6a9d-4572-92d8-231f74a67f26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ed7e88-1a24-4b63-9dd8-d1b485dece81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f96f4ebd-fd02-4ca6-962f-6781f624f970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d938ca-5743-46d9-8cdd-58ac59770e91",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c65f595f-bb8e-4feb-83f3-c245af02ad35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "980af7cd-ee5c-4040-b94d-8eaac45e79d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9af16c68-30b2-426f-a552-b7afc2af9bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "97f60aa0-cabc-42c8-a537-327a424c62f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310869ee-7b75-417a-a130-3a54bf13ae6a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dba71286-0513-44d7-bce8-3046e56a5879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9511d4b-596d-4f30-9f16-e0271e03fe0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3c16ba7-67b7-4b1f-9212-be328e665e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "32d8a7d6-da0f-4ad9-bcb7-4a454fda7082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9870096-e8b7-48e8-951b-1f6c5be8b3d5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fb25cc1-a70c-4b38-b439-5176d9729d3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75308799-51ff-4d1c-8faf-89810aac2cf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503207ba-41a9-41f9-aa47-ca49cae8eca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8051af36-0d7c-4dbd-81de-5573596ea042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a8cba10-ff76-4724-86e3-a21926562086",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26c9aa4d-054c-44ad-b6de-df1530da97ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14897689-8f3c-45d0-9638-6b5cd2e05699"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a44a0dc-bd4b-4dfb-a5e4-fca46b3989a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "450100a3-4212-443c-a4dd-66efc5e2c12d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "968428bc-c32a-4660-9f34-acce38744556",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3580a417-9dc3-456f-9ec7-696f1f117755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0db964c4-116f-4f79-8d82-879f84bd528c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0361474b-91a4-4b7e-a8c0-fa811e392d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f1257aa-d85d-46be-870c-11a139853cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41cd9c2-a55d-4587-960d-fe215af4f4a5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "753cd77d-6cb8-41eb-a71f-cb14fa8a818f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "504b8856-8bb0-423e-bda2-822ccec12298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12bac131-7867-4461-b611-7005b7dacb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2492280-73a4-4278-86ac-723fa0784d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e810c88-36e8-4a01-ac60-b18364ea9a2d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98911349-8bb2-4684-ac7b-3d48c2fbd738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be0bd20-a7c1-433f-8fdb-a078a81d9ed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09fe91a1-f5d7-466f-83a4-cce9b732b77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e512c2a5-d5c6-41f7-a403-4dd3c4b5aba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3365a2a7-3ba0-46d4-83d5-f51816d13088",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b71dac4-3324-4490-8e6f-b041d6a1ee50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "593b318a-9e7d-47a0-bab0-2c3bb74dddba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7feceb69-bd02-4ee0-8e37-8772527acaf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "48f55ee7-c01d-491c-a5f5-d8b4aeaac5cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8122b4b-664a-4a00-b7d8-f137ea83c906",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79663cf7-a740-48a8-8e5d-a9200bd82cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd997382-cb7f-48ed-a2ff-cb81de42d841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "683b2e9c-ebfc-4367-b2b1-d4ae0141af57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "fc75501a-acdc-4eee-b7aa-98f7d0d5bd9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59720d8-8cf8-4d64-b395-72e6cdb5959d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e958de7f-71f4-43fb-9b5d-2db399dacda1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b9929d4-5cc1-4156-b2a1-2194cc8a2d5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26071ae3-5bc1-447c-b187-67abf183b188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "52cdc12f-5b6b-4733-8959-69e50730b67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "454aead3-4ab2-4347-8859-8bdc7fbd1edf",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe7b6b5-05c9-4392-9c5f-df57496bf7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "993bde4a-6090-485a-9112-575a4137e568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eab20e7-2007-4b65-b802-b1facf720de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5b971fd-5ed1-41f3-b59d-b3d8b3542c0f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bef9ad72-e212-4e9d-a546-c51159a3cb5d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4824251b-c5ea-4a35-b720-70fdcb947108",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc81c2d8-00f1-4480-a2ca-ba0f64df566c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cd484813-8df5-4e25-9472-bfaa45826a46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0799695f-cbb2-43e6-b646-41398618dd2b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0bf67979-65b1-427e-8609-6dcf256d71cb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2597792-4066-4b1e-94a6-dc7f48f11f9c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4cdee595-951d-4b14-bf23-e21209a6d614"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "873d89d0-a9f9-4ee4-83f3-4d84054c5cba",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54c6d04b-c4eb-49e4-85c5-013c5eb66457"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9e72752d-2df7-4844-87fd-f4d93ece3749",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0693ead9-46ff-42cd-bde8-ff8fe79b6440"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0c63bb5a-e246-402c-abf7-79e869f9406d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e5bac22f-a1c0-4fdd-937b-4aea2685148b"
                }
              }
            ]
          },
          {
            "id": "d2503061-b6f4-4998-9917-79dd7d4f01cd",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ae1e04f8-9cc7-44b4-a1d3-736f8bc83862",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "1a26a022-d3cb-4bd2-843d-b566d92fb43d",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8849fed2-1c3b-48a6-839a-7a68e194a72b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "fb3ddc30-b681-4a6c-9d25-22c3059cd2e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7db094e8-c5c1-4603-ad1b-9d45e6a7ca3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7991c581-1294-4dda-9052-14ca0dd83f10"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "542ded11-ec4c-42ea-ac46-38cc88e53855",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "14033f3d-0b8e-4542-839c-552ce25919a2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9b8822a9-5e07-449b-8c19-9c5881c83a2a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1fba5d33-a606-431b-8017-f180262fc103",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "94ba210b-acef-434e-a828-0bba7d8e6b19"
                    }
                  }
                ]
              },
              {
                "id": "6e3ca825-7e06-4136-973b-c8951cb2e15d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ada8d714-34ec-4e37-87df-a9e168123e34",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9dcacd0b-2171-4269-8068-af4af582a4a2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3e0fe54b-98fa-460d-bff0-18f080b7e545",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "80bbfb55-0be9-43c2-b6c8-d0fc5332bdfa"
                    }
                  }
                ]
              },
              {
                "id": "45a93a33-9ea4-464b-87f9-c2853aa246c3",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ec65f155-c18c-49c5-a13f-26c0846e9b5e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0ac0bd77-7689-4d2b-87f6-f9542104dbd6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "af2586f0-408b-4261-a715-06b01815d452",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "99886c4d-9d63-4c4f-bad3-c7e195ab35c3"
                    }
                  }
                ]
              },
              {
                "id": "2e76197d-61bc-458e-ae47-9720e82f0194",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd8d9953-a963-4777-a5ee-0208926e9628",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "148850df-fae5-492f-9da0-f0963d483a56"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ee9c52ce-de30-46f3-b127-ffc2e6b33064",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4c5c2c55-1f08-488e-b8cf-e771816cfe85"
                    }
                  }
                ]
              },
              {
                "id": "ed7b9e41-3258-4498-b78b-4792f65f131d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6f36e1ec-c3d6-468b-ae08-f56ed7bd818d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "06fb430b-10cb-48bb-9015-f8386eb7fcbd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "93cb9038-4db5-4814-ac55-6972762b0f05",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1bd12a98-af49-4384-84f8-6a47b49fa70a"
                    }
                  }
                ]
              },
              {
                "id": "924f257b-54f9-41eb-9d17-cea205063f10",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db17d723-2527-4345-b3b9-ead6a93af747",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7951e481-004a-4dd6-9717-a44ec852f980"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "060b1107-ddb6-490e-a836-1e0c74218c1e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "03e15510-3741-4e01-8105-d594116ad2bd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b921fbc3-465d-4d06-b90e-5221b02317cc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7887dd0d-4dec-4519-a399-8aa4215362a4"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e9e0da36-5186-4b60-ae9a-5b26b8fa844a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f478e28e-5d84-4af9-b1c9-c6664291b792"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d13fcd6-a904-42a9-aa82-e257d0a304fc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "54d9598f-8953-4db7-8359-00f0b25e2c9d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fd116e8f-43f9-4d14-ad62-520cdd137f87",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d03a6a3c-b322-462c-bdda-cd749ec581c2"
            }
          }
        ]
      },
      {
        "id": "7ddf5f09-d74a-4595-a446-e47e027b6015",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7a44c04b-1b1e-457f-a4c7-1277be7e5774",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0799e98a-7a75-4e26-b24d-b94539d8fc24",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f991723a-6e7f-48bc-9647-cc5dd8b58caf",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9290b8e5-43ea-4f7f-ae6b-2ecf9ad45645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25046e0c-e48e-43ef-8f10-9a48401bdf0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5da0d112-9239-4cd5-a470-e8bb68854464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "a59257ee-5df3-48c3-93ce-d5d56d7b1a5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "687c0e41-d1a5-4599-9152-ffd5b231d394",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5263ee96-9e4c-444e-84c0-d84cf5f5dda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10fe7750-90d3-429f-9677-9e5a360cb16b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87aa29cf-da37-4b4c-8357-b381d8da5820",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b34b7030-6873-4111-9f34-3dce4fe894da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebcb6776-3721-4226-a498-e8469ba35b88",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c34c72-bb45-4c74-8b89-34a68f01915e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0aec21b-10d0-471e-b299-70647f90bfc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bcd6cdd-bda0-4339-b5d4-2186f118d301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "062886aa-088d-494c-9451-9dba2b15ea89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ad735f2-5c17-4112-b704-e93eefaf68f5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee6bfe4-3d19-4f4f-b76c-ca9547f18f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cbc510e-5d0a-4110-88fa-5ef506eeac11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6b4878-609c-4d4d-a13e-509694af02db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b0fd4a5-a16d-456b-b7a8-3c465f134936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5067f57c-5ccc-4913-a689-22ed0475216d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2539e27c-fe61-4338-9c3e-d20882c3f08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb7a9252-7b7b-4ee6-9050-0eaa2d5f3ca2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eae87cb7-4994-42cf-a648-3f5a6e9b3235",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac549d46-586b-4285-b7cc-b62eec314372"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f3fa8b-bd92-4c3e-b288-525d668f3326",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15796d3e-862f-4d24-97f9-c1c22b48b5d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36627c5e-e7cf-469b-b532-5210bbfd70b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750c04d7-c83f-4ea6-9125-5405fdcfcffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "72d0fab1-6b97-4fdc-b452-01038f678b0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c5e0ebc-fe05-47cb-ad69-6037c9fde90b",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2e4291-d4ca-4e1a-aba1-fff6c11e6a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d5aee8-caeb-4145-9d41-e6b7223a4a8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3415265-3689-49a6-9316-c748fa100082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "912a0758-e1d8-4589-a819-b041740524fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c50eb38b-27db-4bc6-a708-59e03b96c827",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7837a9-e9a1-4fc3-9748-78f6702483a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "824ac160-1ee7-4205-86bf-f32381a2f9d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32bd4675-9024-4b8a-b801-f4dace9f7a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ceed8dd7-d880-4c93-81f1-130f15d4bce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e50aa21f-e354-4bb6-b4ca-41f829857edc",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "426eac45-3d02-4352-b6c8-3c3b673b780f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16585cec-6f4b-41cd-8781-14ea5978a27d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2c7d166-b2a1-42cc-86dd-570e769d446f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1cd8352c-0a9e-4dce-86e6-5385b6aba1e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6851819c-7c47-42d9-bf27-b87c63a0eba5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a142e8a-aca0-42f8-b115-67a66f3cb0ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ee6feab-3fa0-4961-86e8-596844221c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a80128-4811-40b9-bbfb-48fbb8717925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f56bd089-ccf5-4b18-8aa5-54e14326bfca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea74897e-ec06-4b9f-973b-86edc61d5b38",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34308c7a-d9dd-4b29-8884-074524bd1e48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0df0ed7-6251-4f49-ab9e-a46fca9de1f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6714ce93-e5e5-4b18-ac54-68c67cda68c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4f3b41a7-2d36-4a4c-a8ab-ce7ac41c8bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f77ce7c-0bd6-47fa-8152-c38d41941657",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d287558c-822a-4f1e-8a4a-5a06d051655c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f611c95-e61a-4930-8048-128ebd492ad2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7f4d8d6-58a9-4f05-b1a9-c46edc30dcb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "94ee0492-e19a-42ff-acfe-8b729bfca361"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1b0e61-9ca2-4ffb-becd-17fe86636232",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2381d8b0-d325-46e1-b235-b4f2ca37b439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89ab8e92-7a8e-4861-87a2-23a5b59d2b73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b9665b9-8966-47ba-8620-ffa67000fe08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac1f0603-0454-4e71-a5e6-50bec8a089fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8713848-7485-4564-acdc-933bbb7b3e5a",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3125b92-d7d2-48f8-a898-480349e22f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98ef3911-075b-4bb2-bc44-93a8d2cbdac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2e3103-bdf5-4dcc-9ed1-b5daf423f488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c670f1c8-8a8b-4dd3-bc89-f3f0cd013f8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7c58613-a54c-4c37-b90a-f11bb8f730ef",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e89cee51-0ad1-4d75-aa5d-8ad3f5e0082a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "851b0ded-1663-4cdc-a07f-ac169748b178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bccd7b3-6351-435d-afe4-1fd7a72be1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8946eb75-c3d8-4b2e-88dc-24f90bbb90a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a269270e-0938-42ad-a9d5-5e2c9fc0993b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26839ce-e900-4bd8-9e14-dfce1de3b68f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f8a6064-52d3-4a57-bb23-4cc8f15fae90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8250f3ce-a2c5-40c4-883b-13944fdf7be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "501b4d55-4008-4ebd-8971-1c48da3072e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe68d786-488f-4ec1-aee1-1b070e249290",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efb8110c-71ee-41f5-86e2-624cd7457c03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0ee4076-2fdf-4ba7-84d1-619d8a9333aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2989533-22be-4064-87e3-d36be201615f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fae278fc-9315-4d3f-aa87-a20f762fa4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197d0b31-bb7e-4671-a025-5a265f78c203",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23480304-5e16-4312-a650-89f06eea00e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d838e27f-4750-49a9-b461-2d18009faf23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "604dbc7a-e102-45fa-83d5-6928e06e0378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "bccb30ce-0432-443a-a69f-7a0e29400463"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9fad309-ce88-4183-bb9a-699dfd22b7b1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2ff553-0375-429a-82de-068baeee0a97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da2ceb6-edfe-4174-a618-50a8d4aee9e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bac7cad-3d7c-4944-b7b4-b30687672756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3e4cc2f-9420-41f8-bb1c-fce01ca8598c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d290f1a-974f-490a-a9f4-8a18d14c1b05",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37d4171-b0ff-41be-9c31-9bd6127474c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a082cbb-bdbb-4ad5-8421-db28c97031c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5270101-7167-4193-b2c8-db41685c3a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7ff67b0-c097-441b-9315-bd2027f32230"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a06a134-0b14-45ba-814d-d5a9e0bd802c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f9f0a8-ff2a-4803-a2dc-32351eded0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2612ac62-5171-4ffb-915b-5104c6ce52cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17f77f67-09df-46b5-b947-8bafabd6c687",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "01e62e75-9b67-4ed3-b1d4-5080e845e1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c3247d-a41a-4709-9046-fb72ac35b545",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8ab22ad-e2bc-4598-b288-d561d623b990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fba9741-e635-4c79-b6d5-ceab884dd20b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b32c465b-f882-4876-ab6e-dcb9e2f05c64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7258e598-aaee-4b3c-8125-ad8a32c28c9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb5a283-7d8e-4663-8c65-96ada6ec53c2",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38a9a451-4504-45f9-a7fa-a074bb7a3152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7ba2e56-c70b-40d1-a2e9-85c34593f4cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857aae39-49fd-4721-b35b-749918bb04c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a05b9b6a-be33-48ed-b755-2f17ce9c0fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c534500f-c7b5-4156-987a-eebce7b9083d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "046196d0-b7df-4314-866a-f71bf3a2396e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b73d489-bcbb-42cc-8eda-9004d527cda4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe3b024-bfc1-438f-bd2f-ab092e2dc34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3897d7b9-e587-4c0a-bc16-dbd6e7a356d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d0140b-1e05-4569-a898-5a94fd64b25b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2869a85a-0918-4af8-a95f-3f76494962a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f07b6e3c-10fb-4eac-833f-ae4a1cc6b82d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13477e77-e0d2-45b7-8d47-00b41f9ffe47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ba12268-1d0a-45a8-a693-852f59b2759c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e1f934-9824-406a-beb5-17788019b084",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dda53e2-52ec-4776-ae91-ab64c813fb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "535289e9-1913-4dee-8212-54b9370d350b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b892a519-4094-401f-91b5-0b6bab5fb46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2af7b5e4-de51-454b-b5df-355899402b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2813ae80-d8f4-4521-b65c-8bd99a5e7ca8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "863d8e26-92ef-4f06-9e51-fcf9f0c79f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08ad8290-bde2-48ba-8476-841e4487a3e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7abc18b-fd89-467b-833c-64478d1db938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76cd3893-57c8-456e-87b5-cee7214b45ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "039a4046-22d1-4456-a0a8-d0d9d53c447e",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a43151f-1bbe-4726-bf81-96d438c4762c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7392b34-9470-4555-8d8d-784b404c9eaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b3ffe5e-e376-4c02-a68d-358fbcfcdf8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d00185e-acd1-4df1-9e16-d29dc242b9bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a5ccdf8-74c5-444f-bbfe-2bade1871591",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b162eadf-510d-4768-8b01-97e39889b384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e746fac8-8380-47d5-830f-a8566e8b8859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23392ce5-c424-4232-b98b-53e87c5ae140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f72e0ec-b576-4abb-9f4d-069f058f0d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59a14cde-2c7d-43b1-8292-b1560dc0d7f0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46b90ab-77e0-4a32-830f-310f06d832d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90461021-f649-46ff-bc97-56b11ee46943"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "046fb57c-77dd-4ff4-9089-af2009b20518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ef4c9a4-6153-43e7-9abc-84caef9943bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cea5cfd-b39d-42c5-b8f7-59c34b20be01",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4553d262-6a68-4900-820e-426924d919b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "baefd2a7-907e-46fe-a9a4-2dfa00be7617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47ce712c-84d9-4348-96af-f7f1e6d124e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21165fbc-fc92-4c0c-9267-a0a4e7720648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9faf4580-2bed-4802-9dc1-b189bc929cf0",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ab8846-58b9-425a-95da-8eb28a527097",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "402b896b-3b71-48d6-bcfd-8045d761820e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abde9b5d-aeec-4487-a4ec-79ae6540d138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4404a9b9-19dc-4b16-98b4-76543be92265"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1e1a10ff-1161-4bc0-8ef8-42f812a36d28",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f2be8d57-ba1c-4762-b8a3-8afd5293764f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "857c4943-0138-40eb-bd76-59bed50f6d7e",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "0f161ecd-abc7-4eb7-9183-b601a5aec4ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1829d80b-f532-4952-8910-c5af58852e13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "517c28e9-e583-46ad-9e68-a6524dd0eb6c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "10dca757-3346-47c1-b9b2-de042913d5a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db2c106c-9345-43ca-b09b-a88c2c06f708"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "53e3ce23-a8f2-46f9-bab4-b5bfb2455a78",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "313000ce-2f56-4c5c-b7d0-fa8a34658697"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "64835d02-f1bb-4eb5-a1b2-4e154c61019d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c0c95777-5898-4a97-bb55-9f7b7d27b939"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1f62d6e3-5f6b-461e-a505-f5a8f141f45c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6da1e873-50ff-4cd5-8c43-18fca73b31a0"
            }
          }
        ]
      },
      {
        "id": "3408b3ce-6a87-4e4e-b4e5-2f29c1d801fb",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "a130d849-dfa9-4841-8b9d-4696d530e867",
            "name": "Negative Testing",
            "item": [
              {
                "id": "339ecc83-f502-477b-aae8-1fe656e95c03",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "efe25cb0-edf2-4595-a041-86f6e96c0ff0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d349756-123d-4381-8925-2b9f3765217f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05f9ca88-2f8c-4d83-9e81-e9dc4b5b21fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e486251-b422-499f-a87e-78f6ced41e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6ee91bc-33ea-498d-8a80-8e775f476589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e011fc-27a6-4420-99de-d9d2167fd650",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e4cab0-ceef-4247-8d1e-6e00ccd92579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c05e4aec-1336-43e7-b0da-575ecb94f74e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "188456ba-4fc3-4d9b-9ca2-f86e746a57ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a31e0bd-02ec-40c6-b483-f0fdd58d5a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3cb3155-79eb-4e28-9309-4402b3312676",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5996493d-d144-45e9-884a-f0750bc5fa68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdadf885-a6f2-4a0d-9edb-97bef6e63193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a03f896-85e7-4b50-aaca-f19383d72ace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2031405-8495-42c0-9bb3-cb48de2a4b06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5195478-f516-4d20-880b-386b0d78cfc1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21ba78da-e464-4918-8b30-124a065d40ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4252199a-8158-4932-bee6-bf694e920993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e552e76-772c-4745-835e-184ce2e816e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe26e982-2188-4a5a-9c12-ddc0b00cf889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848f4573-5a2d-4dd4-a1f5-2009ab3370f1",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "947f9ee2-aada-4153-9e03-43c35ca91a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6fc7b58-34d9-450c-8ef3-8b3d20e30b46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66af4c4-12bc-4363-b170-960569e5c8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bee010d3-8f39-492f-9d51-f94f05fccd25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84bd97d1-8b84-406b-a9b0-1b7e5d9b6c1a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37678fbb-7ab0-456b-88b9-1d478776269a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93dea85e-ae9b-4788-ac02-25370e918ab5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a94cf75d-2553-4d6f-9a46-633540bfe94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5321f950-2fca-4e75-bf95-efcf22351854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19c81b48-df4c-4a5f-9b69-a183eea0f8d1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d26e3cf-0e20-4104-bf22-f360036788df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b5bf2ad-c18f-4243-91b9-c82e01969a90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ffaeaf-1f6a-48a8-b7b0-8c5bd3375a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7c4baf4-e3f7-495f-94f6-5668c7865ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ebb63a6-3bb0-4c61-84b8-41f7500a9946",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b49f8c1c-b0b1-4688-887d-96135e51050e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add142c1-cd0b-40d7-bdad-e8dca06e16ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e823764-c009-4057-90e1-ff7f2d43e4c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "96537794-1afa-4081-a540-a6668440019e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e51994ca-b106-4bda-a3f2-e651df1bbf3c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf62244f-586e-493e-ad02-911d7d45fb8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3471299-3c5f-430c-aebe-7955786ac632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4d7d8ad-3cd0-4a38-a716-3d6c0c2774a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab8a3f0c-df84-494e-9b0d-9e56066a5118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "949afe41-2ba1-47b7-ade1-b35368942076",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7584363f-f470-4739-ba08-a0994b35bca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23ce2b3b-edc2-4626-b830-d3da6938c4eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0743f57d-a3f9-4c92-a91a-cc8919e9fc46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f46e165-9f3e-41d9-bb71-74ae088799e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d43069-af3f-4495-bd5a-bd9f3e7fff7b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b345b742-3967-4716-95d2-43c53ae810e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8167aaaa-bc97-4101-ac0d-44c2ef7329ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb9782d-78e7-4f32-9cb3-5df6fe023386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "be2e5c84-f8bf-41ce-9177-14151b93c0f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7fa030-113f-4d9d-b516-8c0ad203047b",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a362a7e1-971e-4c3c-85f8-dc8e8ddabc4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e6334ce-adc6-444b-bdd1-8371895f95bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26cdc09c-8199-4b0a-b85a-abb1e5e3c503",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cad81910-1b48-4ce1-b170-e2ca79657501"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e77805-3e7e-4b59-a92f-c93272e8d654",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "932fa801-5f68-41a6-83dc-a5e8c3bb47fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59a8ac55-afcf-49e5-916e-36c5670e6b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53e9602-b1ee-4bb8-9995-a9f7258eedaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "83103e7b-1854-45b1-a959-22a1fcab1cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aaad490-9e1f-4072-8435-997ee76d7cf1",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3aba12cd-1de1-4309-8e19-e86415457a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d575c65f-cc78-40b6-9cb0-22325936a78f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad953f8e-354b-46a9-8021-9ac3a4fe5269",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "abe5f1b2-4627-4e43-ac01-825461f010b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6510b64-33b6-439c-88ea-970a41bb7690",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5163a80-635e-411b-aa77-5282bc788f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c71ed2f-d91d-4ae7-8cc8-33af0ac375ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "507b7dda-e37e-4b66-9f07-a7e86c41a481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fccaa3a-f209-4af6-a9c2-cfcfc500c22f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2abf3930-8d62-4333-8525-4e8f8db344af",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dc6d202-ad31-4395-b0a9-427123829c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44729e90-4634-4aa6-adf3-1860e36c6da5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0985046f-cf50-4150-98a2-933737e658e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "125fe909-fb61-423e-bfd7-562fcc0c8ea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30236f8c-ce04-4092-ab07-e827d3dd48d0",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c9aab2-6f25-4e61-b33d-a3f45fa703e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64fcc1d3-dffa-4b9f-9188-4edb73998d86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a5cc451-c0e1-436b-9bad-88194a0e4dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3a96e56-8e0a-41ee-88b7-1af532fbf552"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a836349-f78c-4626-b8e1-be0e9fd12a47",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7e26ba7-ac5f-413b-b6f7-bf31e3c8d2e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef0860d3-e3e2-4d5c-a4a3-e4c77e99a381"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad141b30-fd9b-4f25-b7af-ab8d6aa13f15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "59385f5e-1134-4bc8-bce4-de7b8adf6321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b54cfcd-d8c6-414f-b8a7-86464bc55d11",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ea12c6f-d4cd-49d7-b7e3-bb4e527c901b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "564f858c-f892-4dd6-b4ab-3a8ffb2a0da1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f4c4417-fe05-4448-892f-71615bd8bd8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d23c6cbe-536f-4b06-bfc1-bc05b6ff3515"
                        }
                      }
                    ]
                  },
                  {
                    "id": "947bfb26-50ce-4b2e-b878-0cf476d2c976",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeccafb7-fc9f-4591-acca-bfa87869e954",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef04864c-f5b1-4320-9541-3faaf44105b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c354072-fcdb-4c5d-a195-8f6568428917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "364ebc5d-fac0-45b0-84c6-c02d642ca864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff72f227-882a-401b-8af6-e8207de9082a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d4869b7-6882-4f43-b5c9-d043ddc7158f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95165225-380f-4a02-956b-5665fbe736cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26513b0-ef06-4c76-b08b-3c16f9ca5879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41315858-dfae-4188-9773-4da5a3667478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d49461f-ec22-45bf-bdf7-90ea6834df19",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7866b0f9-e2e9-43ec-b947-9e416bba7ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34577999-97e6-4e1a-933b-3ab4645ea98c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11854306-4876-4b03-9eb3-ca5e2bedc349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d3cf133-dc62-4c46-b004-25fc9b348a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "727b9b98-dbad-47cf-9138-24f3b686136e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d449f3c-733e-477e-878d-682233c0e219",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb381478-67df-4e74-b0d5-6f90dd89ceef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cc784e9-d00c-401f-9b2b-fabcc6c2c8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54918f6b-2b8a-40b2-a43c-f9424e815f2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ce06c2-4fb1-4302-ace0-62bedd12a2f1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9390e23c-a3b7-4570-9c74-c772f267d136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89481ad3-eea9-4c34-a2d5-0a1aed3097ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c758a5ff-b939-4635-b8c3-13d4b56f5d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a41cfaec-71d2-4ae6-aca0-ee65c9f105c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f577e0b6-fa9a-49c8-b72d-5766eebb3226",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "693a83f2-6e02-438b-b6e4-cc0dda08c0bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e581b58e-7a2f-4c81-af43-f8613ad1a2b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25f9c623-4602-44d4-af72-4d013ba102b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e55a1d4-75d8-44af-95b0-b04ce3340ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8efe9de-4fbe-4146-a820-7249f787e9e4",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9f818d-0fd4-4eb3-aa88-f2eef82ce73f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebf15887-9b19-4166-8192-63e55e58a9f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e8739a-43a1-4d97-8f5f-ebd30fbacaea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "779e8817-72b9-44bd-b48b-105710668fb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "673533bd-07aa-44a9-a4f1-17a880a20c9c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a91622d-5b91-4db9-befe-0551066801cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1c63cf1-3d23-4517-a45f-10b93e9f22e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f03579a-6545-44fc-9b26-9ec9e97f9fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65c65a89-27a8-4ffd-a344-bfb4dd28883a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54c27906-9f3e-49d3-b793-0dafafa2b2b9",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "552645e8-4001-4d90-91de-9425a9e60459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31a0c2ce-ce0b-4257-b1ce-72e6c5181d31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf63d4cc-b4ad-40b4-933e-59f806e335df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2edd48ad-fc88-4e2c-8603-1e4c7e01fb72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8abdfa7-8510-4d4f-8614-5670d2efe26e",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba997061-a79e-4ff6-83bf-3c1913e220c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b1ed7f-df99-4412-9b15-7a6b30034f98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06f96ee-ba49-42c4-9e85-30273cd7afa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fbc4859-205d-46eb-865b-320a9ed86744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cae0ba6e-59fa-4366-8a58-02858dfe4b79",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1d5f8c-54b8-4964-a0bf-bd9ff78d0d80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f0c8eac-4577-43e7-beb6-1468fd59df4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72eced5-56a2-46f7-a790-4db4e225f117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd6c940-fc66-4163-8996-9f9c3b19706e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db1d8bc-6668-48c9-b182-9793cd555700",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "293aba2f-9f1d-4b0a-b324-c7b275d8cb76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18aff678-8e97-4150-9ca7-48a02951856f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05d95c7c-1b91-4926-b087-10ea5c5beeb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1cd33c8a-4840-46bb-a508-f9c2084b51fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195cf595-382d-4d11-9390-454ab3448e03",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d2b1ee-c8d7-492e-91e5-c32054b30679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1a646f3-a301-4c9c-9303-558e42896482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6da07195-3f1e-4830-b76e-b2744620fefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87489e36-1ef7-43a5-8244-af632e73b52b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ed537ff-e3eb-4c39-ab9c-1f7ce4cdf136",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d95e562-7c14-4fca-b218-70d1508ecd53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1696b60e-ac98-434b-b892-217314641749"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d19104-6c7a-4386-b46d-f13d7c200639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c43cbe3-2eed-4630-bc28-2abd34ea3fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ef7b48-ecd5-4ed5-bed6-2e2cd4b950ed",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57fccdda-5545-4d9b-855b-ec1ba66ba672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e0b6c1f-9194-46df-87ff-a1de06a502f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ddbedba-0af2-4b44-b590-28d244611573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d75367a1-7525-41d9-bc43-2cdf358a5261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3ca68e-3756-4ff4-abaa-05539978e142",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adc2c44b-d475-4225-932e-855fbdfa3188",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14b07478-7cc3-47f6-bb05-084faeda8b61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d2a1653-aa94-4775-8813-44fa6b0b5f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b76ee9ae-7ca0-4289-8af9-2b55e8e82ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d741bf4-0a60-44ec-b520-8e21f9572515",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17578960-3cad-44b7-a070-c5419868cf5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5a13c05-9b77-4455-9197-a0c436e31b2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73b80666-0da9-4835-8c13-f792971f3e9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7435ccb9-a6b0-461f-af9c-113a7abecd4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47519276-2af9-47cc-8d3a-cfab8fa6d85d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57883560-c912-4f33-a519-c57cdc1f2a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a99ca416-26e7-43bb-ac2c-149de69c02a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11e0b26f-b20f-4008-aa15-3c71e894f30f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18c54c2b-4ccf-46f5-af30-f6f50113e046"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "42189e93-423b-4113-b129-b2f2650f65a4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "073b0e2c-a942-4cdd-ad18-0cc730e8bc3e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91dfc6cf-5b52-4d4c-afce-4d690a2bc83d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d1cca2d3-57b4-48f4-8c20-4606de4880ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d8ddff-12c3-42c8-b57b-5e5965c5825c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8626a6e8-f761-4492-9942-b064c64c9e33"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "188456d0-6b1f-4a3c-a108-e9ea5d302096",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2580a27b-db70-4366-8084-4fba9c742818"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3cd3ab46-18cc-492f-b643-34b742a926bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "80f695e9-3855-4567-ab14-be38f597de76"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca61c0cd-74ca-4caa-aa96-fe42e55488c6",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1f38b305-9fce-4693-ba16-3e60ccb5773c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1f7d1357-68a1-4b0d-81d0-7b046f8d47e4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d6f39fdc-c0ef-4a5e-adab-b6b50ff8cbf9"
            }
          }
        ]
      },
      {
        "id": "b286968a-9fd8-460f-b0ed-020e2bdedda2",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "41cbcc68-1190-479b-9a64-6be2c276bde6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "33851302-517d-4d92-bf8f-468035155c63",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b9411f54-a5c3-4820-bf99-f0d3d6df9529",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e99283c-cbd4-4afe-bda4-3c51ebff4d9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deaf254e-d917-4dcd-9670-cc629c2ce302"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ed192c-aaa2-4155-9d4b-66ded11b0785",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13997e05-4ab4-483c-8701-0a1918d56469",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8d477f4-0432-4665-9a28-ee4bc3642803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4f0fdf1-0ff6-43a0-801c-752de4070133",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cdf6a49-9b3c-4104-881b-ca35f8dfd325",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c55b82-c985-4f56-951a-643687bbab28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78fe9ab7-5bc5-433e-9a77-0c1ab42c4f9e",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "888b32ca-348e-4254-a381-139c642558c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "625c6321-3c97-4d19-bb33-41f3bcfff973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7db7d07-c450-4f21-a81e-69ed17b5d42c",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a337a14-e775-4f69-afb5-40f39eded80f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d70d9bc9-28f0-48b4-a553-72199ce9057c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b1cc40-8aa7-4e1f-890f-c4ac8cd9f732",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9a6d8c3-b501-4fe9-b260-6cfca986b869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0260f388-a4f7-4365-a9fc-581a13039658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "611a5d4e-c219-4b4c-84d9-526064627076",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4db7a753-3ab1-492c-9ab8-8fb0e3f9ddca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02b24e26-4199-4c30-9344-28eeb1456478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dfa7165-ec0b-4dec-89d2-ce7bcb3ad19d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faf6771d-2d45-4cdf-aa51-e568cc0e76c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd0ecf8-79ed-48e0-a7c1-7646f88dd598",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcd1137a-7f2f-4796-b7e5-523edbf7e5cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67531691-e9f8-4370-aba2-f24a40abe311"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39dea4ad-967d-4524-b28d-3e4a3bc2e4d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57d3a4a8-f93a-4fdd-a336-bff9dddbd5ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac43a5c0-3648-481f-9425-971f1f2a0bde",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab4f5214-0736-4b44-862c-c422a1b8e135",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "32a070c7-c08c-4884-b748-e6f1975269a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6740872-a9ac-49e7-be0e-108da24570da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8ddf21a-1051-4038-bc57-99d3a1818a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a91e73d-7e97-494f-af83-a1eaacf66240",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fd521cb-3557-40c8-acba-d06b3a51b6a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e9ed94c-cf51-4c81-8cf4-f1ce3d496546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "accd6853-0684-4792-ad64-33f3e963b1a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14d728d6-eede-47f9-8e2b-d95613e782a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1e00590-b996-4bda-a9b7-dacf1ad806c1",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9e87b7-e61f-4b7c-aafe-3142c5da93ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4973f142-07cc-40c1-9924-bae9c5ab7f6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49db50d3-fedf-4625-9076-2879acaf30af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7638726a-eb68-4443-b820-90f16021e4ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef6f1269-bc27-4a5b-b1be-ee5df3820534",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49184bcf-a6bd-4ce4-90f2-1aef815c2975",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "234794a0-64e2-4a8d-b99b-1feb86e5500a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "885bec87-8c55-419c-b9b2-71132f6e900a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac831834-5fa7-4b40-acc2-81b0eccbb475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8507eb36-bd43-4427-ad27-e110496e6478",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab819fd-f242-4334-8f12-f800739f9003",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6aec7aae-bcd0-405c-b600-78fad3e76697"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7048096-5cda-48f4-a309-0afdb9c2526d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31f9d5d3-1d46-4c0e-93fd-1a1f10aa8532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92a0305d-4973-46c1-aaac-fd22d4006ebf",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb89e789-21cb-46b4-8330-7823a1235234",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40c198d4-e3b6-485f-96c2-35850322530a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c008c071-7c82-4445-b32f-b74d88e4d343",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f25b968-b86d-49a4-a0fe-c0b5e9efbdba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "886a43a7-aac2-493c-a0ad-8e1374d52222",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce1b0070-2531-43e4-a1ea-ee987b4450f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "481ad972-427c-498a-9b1c-5b9160ee7829"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "548181df-5378-4e50-9ad9-30ce82935202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d6a344a-1dc0-4090-8db3-b00413ef7110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "705f98fa-64c3-4e10-9aff-69456ae9ca89",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e794ef-13a4-4abc-882c-ae3d2d6cda78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f67a8a0-3f3d-45c9-a1cc-026e0eb9af01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a707955-59bc-48d8-a98b-36e8fdba7f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fae71a9-23f7-4c93-9f7e-b1fa42bf3462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e3bf6b-2871-4a8b-b85d-6e1001b5cc4a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7b22a64-4414-4e82-9ba4-f08de47ab75b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "369026e8-6ab9-4aa2-ac05-2b4ef0b7939b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff12ba7-884d-4fdb-ae4c-7604a3658e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58717be7-9162-4e27-8805-3dafeac1f549"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf37114-fe38-4e14-9f36-ebdb27581a62",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e7eab2-2085-4035-8196-a6099598a4de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4535b2b-4b0f-4299-afe6-7839c47ed901"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8260eb60-c0d9-46c1-87b7-45cb327f9384",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ab1ed00-ba82-400b-9cfa-4a7d7aa2d64a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3fc508-8e7a-45a8-964f-737b1c799793",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c41971-94c7-4dca-9f70-23a1504b6710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6741aae-2093-4162-b0b1-4762a3bb14ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0a787c-f8b6-4342-aad2-9eb0954731bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa36fb22-bf8f-440d-a35f-bd1f9394e159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ff11de8-55d1-4fd3-9414-cc25e8d2e118",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e30b5b3f-c6bf-4d8e-8dfa-8422e9ce96ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cf507c5-ce18-46df-ab40-a8c8bf3c022a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3856bb4-78ff-4ea6-93a3-c20a54221707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dbca5e2-e979-40eb-91f0-ffb388e27563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0420e30-9c8a-4d3a-a79c-3bfa0613240a",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f9db6a-d3e2-4867-8fef-c2287d84fe44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdf65b2d-b266-4f05-9e48-dc13dfb5d379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7a040f6-7e9b-4bf6-a7c7-1818d14acf68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d2c8f8-14c3-4c4b-9211-8bbe71265e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a7fdc6-5ade-480c-a846-fa2c1049c8db",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1180b02b-e40f-4ea1-b8de-2e61c69b471e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "507023cc-1a04-4319-8b87-4960383c926c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "467d76e5-0b79-4b48-befe-7e93f1419628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c439d44-9502-4b54-bbb2-a7f89693e04a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9791670-6e35-4ff3-98b8-563fed04d376",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5761f9-d7bb-4dca-8875-9a3b2cba6843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a070c05c-803b-4ff4-81cd-f891924f26c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "703ea37a-34c6-4f5e-8070-c6c659af41ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec43dea7-4a23-47a8-9110-01b9ea09623d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75cfe34c-75f2-42a3-96ba-228c8a4cd19a",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abcbd6f0-b9a0-4137-80f8-0cedc872d6c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "333fd59e-dcdc-4acb-a3d4-3d5d67af1585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1938eef9-d459-494f-b562-f7f31b3fefea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bb7a2e3-a37b-44eb-b8cc-15f814928f91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b708209-cd19-49ab-ac32-577d4ad56949",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dddcf18-3b6a-492e-bd3c-a317ee7df6fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b6d5c87-a4b7-402e-8216-fc35539ae965"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5574c66-f96f-4e71-b3a6-9d6d4d2147e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7ff20df-1e34-4e7e-9637-ccdbdaa72657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fed43be-b209-4250-a337-7ab1b79ea082",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938da9c6-a1c4-4e2b-8033-3c88e774f12c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d3356569-2a36-4458-a356-463ad808d263"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de45a13e-aaa0-4103-85cf-8588b69def97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b0a27c8-518b-4f05-b80d-c648439ca0a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bdc8e93-e91b-4398-be8f-db738a4aa13e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7b7f13f-0db4-4499-84f7-19047c65575c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a5fc4d7-8635-4984-8ac6-58831bab8ebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c50f15-f850-41ac-b5d2-03f269b28cc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b1d8404-040d-4271-80cc-434212225c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fa3300f-ba4d-41ba-932a-27a167bff8b0",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcbeeee4-0a0c-40d2-9407-f262a6b70944",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99492176-5d2f-4519-9143-09fb5ca726f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca0ba6c-4df1-4ce2-8944-a51ea0a20896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4b371a3-4abf-4ed4-84f3-5985db86ba9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75af9feb-002c-41fa-8f11-6d6f35d14d7c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193d0f01-4c91-48d8-8ec3-16b22a677521",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6af2df9d-1910-4549-a240-3a6ec6847157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c17e25a3-0303-4ca9-b80c-26e8e5693905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d204bc96-d44c-4b8c-a6cb-68c8e4060e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a82d577-6ad2-4062-bae5-1ff620f993c2",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ffaf92-0be9-4bf3-a32a-0eb7f8297a98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05b3cc86-c506-41a8-ad4b-552bcc4148e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45468d1-d0b1-4bc5-bcb2-cfa001ced7de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cc67828-cd23-4fd4-a1f0-4a76fb4f5e05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7148ec-2bf1-4439-b30f-20dce929ee73",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20eaf203-d3b2-4e40-8ff0-90af4a79c1ac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f157bfb5-a821-4a9a-bbe1-d56a151dab12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61499445-e0f3-4483-b1de-ae598f77140d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea54ebb5-b59e-4316-befb-1bc02ba8a732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be25e5f8-06b2-402d-ad87-5b180667dd81",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1159e17f-a141-4a57-870e-9b7b298a9095",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6848299b-fcdb-4ed2-87ca-e57de9ddfcba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59710d1d-1bf9-4cf9-a81e-70bd677289df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "724833a4-d015-41ed-88be-f7e1c584093e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbe82b42-1372-4d44-a9bc-b95abeaeda58",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1c4435-f74f-467b-8087-96389eaa751c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8588a721-4e4c-442b-a564-90d7cab79e1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee22e35b-027d-4e4b-9b3d-9b7278cae654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d07e35c-0c9c-4cce-ae1b-6b26898dd591"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36f0cf81-c861-4181-bad2-7e89a0a0a8f4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31625e4f-3e78-4242-b0eb-c160a33f97c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d2da898-dbe0-4bc2-a441-8bdb8154e40d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1436e0b4-8139-444e-a37b-79efd692b18f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4372943-bbe2-41a7-88ee-52b371b6b0d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9de4873-c7cc-493b-b260-ef3c70dd3735",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bbddb28-3968-4e03-a3e2-d5d709803d2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d9c0ccc-35eb-4f6b-bfc4-87bff3b86b5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebcf1e5b-a401-4100-bf05-61179546adad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e775bda5-94cb-48da-bc2d-8d2d45f574be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4283d32a-b471-4735-adb2-916b43332ab9",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fbd95b2-1d0e-4e04-a92e-419bdb654d9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95ca8d5e-883f-42ab-ac99-42b92b26e2fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fda8c17-6472-4543-a73a-2e7d051a0959",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02e0bac0-cf21-40b6-abeb-ca11a4181135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e04bd66-99fb-46ef-baf3-c7073acb39e9",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f3bfd3e-a786-4551-ba05-9de8e5587f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c853aecf-3e38-411a-bdd7-aa10a9fbec27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6205cbe-1f69-488d-8063-9b0613c317b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f90f3f4-6d28-447e-bc49-b987f17f5751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dcf87e7-717c-49c5-9b9a-3582db65b32e",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed226810-9827-4ace-9a98-c48286218e2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72b8b889-ae6c-44bb-a530-3f8fac76ee94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cde162e-195f-48f7-8a45-08eb9d66e254",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29009c95-8549-450c-9a74-f8652a6be64c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8683f0a1-d616-4830-a5ad-3b59f357c8be",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87782cb-a281-445f-ab30-07e89fcd6d94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cbb71cf-31dd-4813-b96b-ba6aa202e11e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "409aa9e5-cc15-4235-9fd4-b362217adbb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ee8a00-e0a9-4cef-9faf-ac4f6a1e79f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff82b4b-1956-405d-9891-e98aa6020c7d",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baaa6b0e-94cf-4d42-a87e-3ccb7ad335aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8af0235-9574-4b31-a731-dac310f173d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34b2ceb-f639-4615-92d4-9ad66f380015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94130462-1666-43cf-b131-a8ad9a406bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df90a15-ac9a-4c11-9112-c3f7ce0e3662",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d8d0fa-d800-4028-bbac-4c94a5838cb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f313b235-4cba-4f8d-9330-496d066d0df5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29f77f4-1c6a-48f6-83c9-09b28df6fcb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f5d7f25-52d4-425d-915f-6940725348cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a63568-f2e6-4e98-b2f7-89a1c1aa94cb",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129506a6-853e-43e0-94a9-f5f7d58d9a1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf920ee5-27fd-4306-ad2c-e89e7161bbaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f1272d9-cda5-453c-a31f-3997b1a342c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2157190-af85-4197-b700-6ec514417210"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0503dd6c-ba00-4860-a129-bf655b09a2b9",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1afe62a-ba89-42a9-a841-907746bf4c59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8431793f-d2a8-4e98-b8b2-c3642c654b91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dac787f-4e85-4cb2-aa53-4bb9e3d7ac9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e676818c-245e-42a6-baed-201427d40632"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29425004-75b4-473b-8a14-d1cd38b45a8b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5439bdf1-a225-4001-a7e3-614f3a1e6e87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adfcb6f4-f33a-42d9-b156-fbfd28976ba5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6ddc46a-283e-4469-8be3-7b5cbf02b698",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e533bcdb-7b98-4f5a-aeaf-65492ed6f7d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5a17d13-90da-4bb6-8498-209532782d16",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5117e40b-3897-4d97-81f1-1eb9182f490a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d2d5ce-4961-406e-8621-b49f6f84a019"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "511aa333-399e-43fd-8c93-c66661135b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05c069d6-65a0-4e3f-821a-1a12e8259223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b799a115-2160-4976-ad03-5c505829b5be",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0dc1d707-6d39-410a-8618-0eab02d36731",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d021fab2-f6f3-42e0-827d-7b96057377c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8758c90b-eb91-406b-ac26-90a0a1d08baa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eeb2a725-4ec7-4d89-a312-45a1e8bd3582"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865b2929-a857-4582-b2a9-4e6fefacfb18",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b8ab119-ed98-45cb-8ded-47e07a3b2ea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dc70673-33b1-434d-aded-f01b5ceec2c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b89efda-a7cb-4a93-a895-1760a4d924bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bada5b1-4442-4a97-a852-72aefe418b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01fccd2a-d5c6-457e-86a6-937dd5f53a55",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5664d44f-5aa6-4ae2-8d48-c9ec0c6a9248",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00291673-a614-4557-afe7-e0f0c4dcafec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8611fd3-9807-4df8-a315-98958bd70749",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2fce450-63f0-4806-9d86-9637c51de9f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f419c7f9-2c8e-4504-87d8-763e55c18635",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7fdb6c6-e4f7-4654-b2b3-2f232c80296e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "055fd2a9-f78a-475d-9cfe-4f66692e753d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b86b2ae5-7c4f-4124-b691-b439007205aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3eba360-e8de-4cdd-8d7f-5bec63f2c1e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f6e754b-b109-445d-a229-e0750bdb80b0",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7a95110-e6ea-45b3-bf58-bc05aee0040c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ceaf96-33fc-4b2c-9a26-c5d3cacbfcab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d277dd-e5ef-4585-805b-431198a315b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83f078ed-26f8-4fb3-a599-5f2706d03d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a26768d-ab1a-40e8-bf13-9fa4d9dfadc6",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d227309-fa4a-4cbc-9c16-f528389d1ca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8164c0e7-26e6-42f7-b611-a80cb7632989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d28c833-43df-47c2-96ad-8f485c47d410",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cccb0786-7370-4c49-bcf1-500d9c29cc08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0d987ed-eb8c-4776-a357-f82f37e105d8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5abdecec-8de3-480d-8204-239dbe854732",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80b84ed1-a245-483b-b70e-205853314438"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee01543-6867-4b04-9c65-29e68b362ba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c6a1a4b-840f-4163-afbb-ca3bd2ae7851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01dc2184-8ce4-4c8b-b454-2dd9b9518f4e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaec0dc6-6895-4467-8b99-5717d81b16ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55ca6430-5e6f-4efd-b83a-62249b29dd03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9f7e15e-8e70-4b08-95b2-3b9491b10311",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "def54409-f0e4-465a-9a9d-187b3c741c7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e235481-9232-41a3-a93c-1d46f9bccffb",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc6a219-f3cf-47af-91df-7c2c72826f02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd967c3d-0275-4b15-a2bc-7e3a287db957"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5697c2c3-839c-4b03-9158-a18446246c7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "918cd849-fdb4-4d2c-a1d3-c8bfae50cd14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b14ce29d-2017-41b2-b522-83f7ea76057b",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16143ab0-6907-4244-9af7-ba4fed740772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a875dc1c-16e6-4e14-b700-3a0f3cadc05e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04cc557d-06b8-4d1d-a33e-89863ceff175",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ab495c1-8fa4-4778-857a-59a42c35e3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2bfa60c-1ffa-4f44-ac39-83f50f08205c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "939e6422-2fce-4777-b683-c99537c98fd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d404f727-f4bb-4393-9dd6-9afee2c14e43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "113101f1-2975-4d4b-bdbd-a6c6226c12b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dae7ab8a-c774-45bc-aa1a-82303a0ed83f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a0de2f6-18b3-4682-81cc-9bb3d28cb355",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3541aa0a-edd8-455e-9777-5767241f77fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eababf8d-cabc-4c91-b27b-2336567715a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4164641-5f02-4c17-bee6-6bfa93d2017b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de212ca8-7e89-422a-80a0-07d8efc583b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "049cc41c-7af7-4e86-b343-cd0d6e5a35b2",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e088681a-9228-46be-b487-9504f0a58b2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9abc288c-7034-4357-9587-342d3a59e830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "516e8de8-d1e6-43db-be94-4b0d31908a39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36cd6e74-4692-4305-be97-946e1108bb39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "545b58ca-77d3-4c2b-853f-eea300731738",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de308054-5b23-4c50-ab6a-a8f535f3adfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f8f89a3-a82f-4e4d-b313-5c35387693b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc31e886-628c-4529-9c3c-3fe008045af6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1ee3d9d-0a29-4301-84ef-c1e19213c785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf9a6be-2107-4f85-8b8a-fdbb2dd70a35",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a06254-9a27-4534-9a56-331ad4489ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c973cee4-3aa4-4d7e-be7e-bd87471c6f22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d7a194-c3f3-462c-9e59-7bb2bcd08294",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f74545c-ace6-43d4-be00-f667024961bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aea69b8-f8f1-4909-9dae-d6b0d650725d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8e331f-e109-4143-85ea-854ed8595e55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a399348-c9f2-4450-93fe-e83e24c884ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "251189eb-66a5-436f-85e7-01bab5b0e6fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6257e6d0-7705-4538-9e8f-bc7a882bbc37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "652c1ee2-1536-4e5a-8591-5bde904a4c87",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ad844b7-4ae2-48f5-a9e6-1fc02e4691d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10a242c2-1d5d-4195-ae7d-b4372888728a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d304c8ff-a6ae-4fad-9934-9f2fd1d2df8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44fa1132-6067-457c-b81d-c2b548fb25ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5205575-cb9c-464a-b15e-024350b88c61",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c146c50-762f-46ca-94fe-ef8c5e6a4f94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92daf666-bc73-4b22-af44-9260866232be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0152f6bb-e910-450e-a5d6-9524c85a33fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b30e688-04ad-4db1-a51f-68422ce0f564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064a17ed-52a0-4806-a31f-58b1aadd9f80",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19fb573-1bee-4037-aced-8719811d8c76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "349c9e5e-c8af-4e08-a9d9-bde3ea863826"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4722f26-f78c-40c3-a9ef-0ee9e96528c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad340f7d-8752-4263-9253-fa1a4f90f477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb7f5b1a-1b4b-4321-96c0-86be40b81bec",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d52e02-aed5-4599-9ba8-5c5c7dbdd4c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "769a3c83-60b1-463c-987e-5d1d1af2ef86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6cb33b8-bd0a-45f2-902e-1bff23d7e2ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b4c4d7d-ee6d-467a-b4ea-791529ec118a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af5d6836-1f1e-4477-8fca-5deba0edcec8",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "702b359c-fbac-46d1-b869-c92b39e6f4ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa505d31-6732-4ce3-a31b-3d864b821d6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7214c65-6402-4ea6-8e00-e4c072bda893",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5be94ed-a515-4057-af4d-162f130c537d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9be6c658-815d-4f2d-ac26-ca5f01edb3fd",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e126986-c222-4903-b0b6-551ccea07fb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39de4b77-0d4e-45b4-9501-0e2f39249316"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f43d85b-3164-4e92-8bf9-50bb32cd7608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd0d86f4-ffaa-40b9-b932-7f88aaa83744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf8786a-dbde-4eea-a9d8-c04f7800843f",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3a73f33-48c4-4346-8c2e-c1cb46609837",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13c63b3f-0501-4262-a4a5-6ff913d2cf84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4a467d2-c42d-44c7-aa92-bd7b867ed8f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2c2dda2-79ea-4668-b75d-5ce34ec45d1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b555873c-6059-4c62-a7c3-de32edd2be06",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fc1b47f-0675-4f53-ae27-1918882b7f0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6604825-6a4b-484c-bf3f-35c6d5fdf3df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "263373a0-243e-4162-95b1-7c3224f2c5e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80714a2b-d384-4c61-8308-f08e4512e5d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8975a09-283d-4077-aa44-47dcf5395ce5",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4fb246-cdf0-4065-bbca-fd4fc873b4f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "179b1f0d-72a6-4a4d-aa83-350506baab2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4419086-5058-47ca-8b49-9118095b4c9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f1eda0c-ce33-46fd-a4bc-69d1ddafd8af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19a0cc9c-4643-4dd6-959f-3a3769100cd5",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c6a431-9e94-4b0a-85dd-6a9c92aa62dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e654a410-0895-41e7-8188-d9eb630b1a5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b837e7e-44f3-44eb-862e-2416ef237936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "202363b6-4fc6-4524-b829-00d117f41178"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c8c951-3685-4f4a-8e25-3df0a9d2a972",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c471149-e497-4e45-bd70-3cdc591b8a61",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05600830-e930-4cbc-b629-5f4803f6bf72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "817a64af-56bf-42f1-8426-e547d4dd3fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4b31211-a016-4141-9671-41a0c2a47edb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9428afd8-c17a-4ed7-963c-b66391e8518c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af976461-677c-4e22-a145-2ac71fb91f22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "744f647f-69eb-4f98-9097-0a553d5fc397"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a053beb6-31ea-495a-aaae-f4ecaf99ef29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0081908-b793-452c-b9c0-827ab64de9e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598244fb-c8c0-433b-8857-830e0bb1a5d3",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "914e6f50-0e56-4c32-956b-7ffde4dc453d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5878fbd5-3c70-41c7-bfe8-6c18051f4efa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84006e09-8dd3-4dc7-829e-5d35cf6ce565",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c800d65-c0ef-47de-8dea-bb7143a8d79c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f1ed192-32dd-4673-b0bb-99323ec2b21b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae64541d-57d1-46a9-90c2-4c7af3fb29ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b43e2385-0021-411f-bdfd-52dae2eb657b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70ec65c0-9803-459c-94e8-61f15cd6979a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b5e98f-7652-4230-af39-390b4a7cf339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56a065de-14f3-4215-8043-f533fe558f84",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d38acbe-8fda-4838-9b24-2bda49efb5c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2df35cbd-a6ba-4254-9413-2e09c41c4f23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc40eda7-b272-4278-aa2f-9fb6c8f7b2ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "406ee9df-1101-4dd0-9608-a5f513d73feb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "008b438e-e94c-4132-9766-6a02e5c1d737",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "434a9dab-ee6f-4e11-92ee-a4241bbf3dee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9350a673-d31d-4d1d-a882-5a01a3009995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5359cea2-2d1d-4610-a418-cb2eb1bef01d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aaefb48-fd09-4c26-bb64-1cb28bffcb83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d28774-d51d-4991-8bdd-848c1276ec40",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a70ad20c-e8b9-4adb-aff8-03b20201d68b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "869cf3b9-1391-485c-a0bf-4d8bf1ac6bc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a360cd-1cb8-47bd-a4fa-8a94543053b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bf557bb-a9ed-4238-bf57-b87f130ee0f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45d7f94b-ae73-428a-9fc7-6dbb2098bd73",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8f9bfec-8cb1-4b77-9f10-4853ff69b150",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fbd538a-9def-4335-995f-a0c64302f3b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d83f947-71d4-45c8-9904-664564598dcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "880deb02-0521-4b8e-9c29-3a947637f847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7884a232-20ad-478c-be94-4a1db9f9f681",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07a76dc7-5ddd-4236-bb9c-40bb9174532c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b3c4050-c637-4f8a-97dc-894b41b0f577"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5785ad09-7faf-467d-9d3b-203f18f923ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca46ddbd-8a5c-4dea-8042-a5c3fa8ff379"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38c97b1c-6ec7-4b5a-b365-3bd2680c5dc6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43fde96d-6a43-423b-aa9f-e62fc28dd8ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa19d63c-b1a8-4309-8b27-2afe48f5c915"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d15b234-9d71-4184-9565-fdb9d5d976e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14bb0e74-128b-44c8-91ce-e1fe2c839a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b6d3aa-c2dd-48ab-b095-0e540266fd89",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c1624f2-f15b-4939-b0f0-f1d66e996a6f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90987691-aa68-45f7-8e9a-a90fb99a6b87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a5ed419-6ac1-407e-998b-27e7aa2ddaf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "894f9328-44b5-41a7-92b2-5cdd5a5357dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ccf1ca0-e13d-44aa-800b-37c49894eeee",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e19cfd5-7a2d-430b-a8f5-b9d735335383",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47619395-3510-4f84-ad9c-52b182c6859d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7423b409-e28b-489c-87a0-8562da67978a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cfc87fb-bd6f-44f0-90d0-a2590c9faabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bce27ed-536e-42cd-bf31-6846a05841c4",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0093aba1-c2cd-4e12-8a6d-9814e202a222",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5790ee6-aec6-4620-bdeb-f9dad608bb04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8281ec0f-82ca-42c1-a862-8eac7978c7f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8bd8380-671c-4d04-abf3-a94a9c2f4aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721d8f6f-adc3-475f-8014-0f2d2e7f6ff9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a17667-2734-4225-a62d-27eef17a14e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d83333f-b0e1-40ac-8d9f-ad3f88e10642"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "099a2199-db7b-4175-895a-8bb6e5a6e1e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69de48fb-c230-404c-9b9e-e6709cac5dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfff7263-98dc-4fb6-959f-618172b75839",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2664f4e0-2ca6-48f6-9453-fdd2e840ec96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17582ebc-6a78-4ab0-8cfd-eba127e647cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0ed147-d193-4d91-8e23-bb71b345172e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "948df126-8ddd-47da-a28c-b615090acf4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0d231a7-6551-425e-8624-5d5a4245376a",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac1398a-0128-4e1e-a72e-5410af7bb93c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f732c41-a84c-41f9-8011-1ee27e580b7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f2f90f-21f6-4c98-9fe3-d137b8394377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ceb9982-2019-4c31-9f44-75a72a21c2be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28316641-7304-4df2-ac14-6de805e71675",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf4cbe76-f119-4452-a76a-2e1e8e53be6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4ef2884-e88c-4b08-bc28-26dfe6733630"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "001c8371-464f-477f-a19e-df9145c7c954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c879d8-e7fe-4c44-b06b-364e3db6c39d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3320703c-38f1-447c-bf1c-6712e395d465",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d56886-286e-4459-a5e4-22240b88f415",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09221e1d-4279-4825-8719-ab7b19af86f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e0f2d3-8452-458b-9d4b-4d5b168a1a42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31af8ae1-6412-4ecf-8902-8f01a33fa335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5b4d9e5-1c05-4e23-bec0-54735b914f26",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a3c9d9f-a8e6-4f96-a0ba-cf553652d12d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdfc4119-fd93-4b3b-989a-776a7837dd79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a93095-ab98-47b7-95a4-7d9be22cb39d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2f3cda0-cfb7-42db-b1e7-3bfa587f2e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fe8e253-c423-46d0-b797-26f3188f68cf",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0983d53-8a49-481a-b30c-0339e709b6e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8710f1f-0828-4a87-b49d-0a8b430e9ff6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62aeed6-dd5f-44b8-8d24-723db9db4475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ffd0db-7dff-464a-a04d-3b669d945cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6896b12a-4b36-49f3-95d4-469cfc8c0421",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "248a7074-e104-405a-b71b-044a6fc85d6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d141424b-df13-46b1-9fa5-ecc3e2056dc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "901aa88e-d31e-4c11-a855-f00b55e9f208",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b735678-6591-40f2-9ab4-ac1e5803cff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90aed8aa-d520-468e-82b1-73614979f626",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9144442f-4bc9-4328-ae31-8d9b2815fec5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdc1357f-bd46-4ae0-a55f-d8c413a2befc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d20b3cb-c102-416d-aba5-86dcbe30d9f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5da59025-2f56-4ffa-9cb2-6fb9c9531f40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa13712-5468-43a2-8e7e-d8dcd1115733",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7da05fed-c3fa-4a02-b579-0e2b40ee123a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbeb8290-76f4-43cf-9995-fbc4bba351a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dd7fdc0-6dce-4b22-b83c-4191a83904b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "717915f9-2ddc-44c3-9b38-5e735807c48e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "608ecdf0-cf35-41f6-9ecf-3351aa1c7758",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56058229-bfac-4969-a619-f65d3d0c0751",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76f5750a-ecdc-4d9f-b961-0ba6427104bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fad5099-f486-445f-af55-875a9af62782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03f79f5f-8751-41a0-9e44-65826ff77074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f014754b-747a-4aae-a810-14f2038c6f0c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddadb767-3d29-4dc0-a6e8-50cf04802f02",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6012d61b-ad4a-4340-a902-46fb244cdd60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e243ae96-a0fe-4572-a942-ec1850fe0c47",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a717faec-8ebf-4b08-a33b-084c731f059c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676a7796-f983-48fb-9fe4-8d000e037a5e",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6116f5bf-a0ee-4133-8b5c-1583c37ebd87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "748a42dc-0b5a-4687-a65e-d21144883d64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2617b635-c55c-4fb9-b431-7575673d4564",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec08a4cc-e41a-417d-bdd4-0ae756c1b6b5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5276b81b-f952-4744-b6e2-025d2e661a11",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d17fe62-6d4d-4481-9bcf-b630df926498"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd3938e4-59a4-4d80-b36a-4b028052a89a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eab5d40e-8c9b-4881-a28d-21127ef92e61"
                    }
                  }
                ]
              },
              {
                "id": "f1aef3a3-7ba2-43b6-918b-7be93dbb7a87",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8d32e73b-5a16-47d8-a437-ae254147c939",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df640ed5-4045-4fde-89cc-df05f07cf26b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8b766e59-db08-46be-8bd9-88a705d40ddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "545d6876-2433-48f9-87a8-5a4a4dd73b9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a3ced19-6f95-440b-a0ba-308e2dfd7f6b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e8f90f30-075c-4716-a8ca-0f8829f43910",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49ae18ae-d082-4dd4-ae30-22e439f02e27"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef54a632-cdd7-4479-9362-abc333596153",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f2d0bb4d-d660-4690-be66-ab1e7bf48904"
                    }
                  }
                ]
              },
              {
                "id": "dbd99354-e9dd-47d3-b335-f02dca32b74a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3b53d1f8-3c32-4bd8-ac66-fc7c51b2bf9a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d371d0b-0509-4b59-9554-0811a3d3c809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a437b5b3-fe67-4676-9496-4df540f036fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd070fbe-9028-4dfc-aa9e-b7b89aaf077f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e36af416-1371-41a9-81a9-62c650bcf4f0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0aa46233-7d14-46e7-87c4-fb555ba8929f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2bfd3248-5006-4bf6-b1f0-f8c08e1db1ee",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0b7663d-b4ab-4103-8bdf-81c3bc6e08c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e932ca18-b5c3-44ed-90b6-9de5835cf8d3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7184ec29-f6f0-46cb-8862-db357912fede",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "abc270c9-c85b-4e6e-9009-256373790902"
                    }
                  }
                ]
              },
              {
                "id": "a2755c41-e713-4901-85bd-af126c4c2595",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e07bf53b-eb3d-40f6-9ab0-ccf1388b2f28",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "908fd1b9-69bc-4bc3-952e-2dbf00cae3ca"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e180108-1266-44a6-971c-0f82a5c99d69",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d690183-5234-4070-ae41-3ad35c681cd3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "899f9f68-a4ea-49b1-a3a9-4c54ac3430da",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "8af08ecf-afe8-48cd-9aea-b4e01015368a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e85fb1d3-0fe4-4747-88a1-a223f847c350",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8bda4b81-0812-4c1e-8f44-7f4ccdcf70f2"
            }
          }
        ]
      },
      {
        "id": "6ff595fc-803a-41eb-9509-07bd5923eaa4",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "42317684-6b52-4ff5-9a33-3957fe242a5a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "12e12379-1a36-46c7-802e-4da5593cfdda",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "29424d7a-2c98-476e-bf55-718dbb3bd03b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e24e16-2d3c-4ad2-9415-8cf33d6d2243",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "74348ff0-c57c-4f39-884e-ac632ff241bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4619246-f61d-4338-9cae-770f261b9e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50ecbe2d-8bf4-4e6b-889d-0209785f827b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4769e66-95d6-4e30-8af5-c64cc46b7d13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c3d350f-856b-49d0-9a58-bc0eb844c9a5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7fff0651-7c71-4e42-bc64-7e17db99bcac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "757986bb-dc79-46f4-bb89-98f653dfacba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bc5f0f30-6b7e-4a27-b776-c5fdc983e2ed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "1574f41b-e15d-4a71-b0e4-205c4db28e69"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c880f67-6f3f-4f28-a5e3-89d9051d5b2c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "16e44afa-d02f-48e1-9c8a-b74ab20160ae"
            }
          }
        ]
      },
      {
        "id": "3b1bb301-b646-409d-a667-255633897e85",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2ec9de4e-3617-412d-9e5b-58df0da762e2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "27c8782c-20ef-4126-8bc1-6c1a632ccada",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b8f822da-63fb-4b8d-bad5-04b94aeb0e99",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f08b03ca-eaa9-4160-8ab9-0532af11b0a6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e53d0356-1d3b-44c6-9e3b-589e566675c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af64f790-9ccf-423c-ba8a-1c2da5e2b0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c6f355ca-b1b4-48aa-91a7-dc00defa7f44"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8ad9e228-5d5c-4451-bedd-28ed64d2c538",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3d1b47a-3fbf-4304-8440-9b6969c1b84e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fa04b01-bd86-4b7b-a313-413dd3ba0454",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fadc8b10-e814-4a91-b592-2a34d16bc096"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9fc6d726-498a-409d-850f-bdf5bcc15454",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "27ab16a3-2bbe-459d-921c-2cdd558516f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c2f749bd-b43d-401e-a9d0-df11ef016d40",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1c2947a8-0f36-4114-ba15-d4b01f9945f7"
            }
          }
        ]
      },
      {
        "id": "af346226-7e10-4fcd-addf-63ca4173402d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "b1ee5dcc-4ce0-41a1-9f34-e0e55404b969",
            "name": "Negative Testing",
            "item": [
              {
                "id": "363f382c-5475-41be-9d48-0e9de624e59d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7d51a03f-a511-403a-8a9e-19780a81a84b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67e0009d-99cb-4727-9e34-45a44f856885",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7c44332-16b9-4e0a-a7a8-39917dedff30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3550af7-bd4f-4ea5-ace8-8bc08295b22f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76efa464-d2a7-4992-8fde-156a5d0c0b1a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5bd33f1-e8b6-450e-97db-7cc9a1b2a20d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ca3d8ce-d0d2-44a0-8ed8-d09850c18219"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "79587778-af5b-41f1-b3ad-7fd12c520127",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b973c560-f3ae-4080-beac-bf610b5650ac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6b4ec05c-9593-4f35-8f23-992844f0d83a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "27a419a4-7012-4b17-8115-5b4bba0ab971"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2998286d-4635-4b92-af84-589e14e846b0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "44eaa763-3e73-46e1-9982-b0ee29551546"
            }
          }
        ]
      },
      {
        "id": "373bdc3e-0164-4a9a-9a27-f307a9810a4c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2085d2e9-3296-49a6-a9ec-49d8f9c8c201",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d2d2b49f-055b-4190-91a6-bf9f5d562983",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "0c3138c6-199f-4f91-90f5-a1d33f932dd5",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "66495af9-33ae-4aa8-bda2-577568b9f728",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "09bef59d-805a-4fa6-90d0-ed802544a86b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 2
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 30.105263157894743,
      "responseMin": 6,
      "responseMax": 411,
      "responseSd": 28.819148246131444,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1709253478233,
      "completed": 1709253495753
    },
    "executions": [
      {
        "id": "23243204-fe72-4ccb-ae68-c4fd27ecbd21",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "b6786938-e365-4ab7-8f36-f3260f41011a",
          "httpRequestId": "1ef94dae-0cd3-4727-9227-bdbd578376cb"
        },
        "item": {
          "id": "23243204-fe72-4ccb-ae68-c4fd27ecbd21",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ace3abd9-34ba-4404-b333-39d8b4a95e7e",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 0
        }
      },
      {
        "id": "94789425-891c-4caa-8716-c022ec5220a7",
        "cursor": {
          "ref": "af2cd76b-9510-45b9-899b-f02d750bf451",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "82303943-a2e9-43f6-85be-e4f8dea23dd1"
        },
        "item": {
          "id": "94789425-891c-4caa-8716-c022ec5220a7",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "518ead5a-e0e5-4ce1-b9fb-bc9bf48590fb",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "8942f598-3f96-4e77-996e-d27d2ce20d62",
        "cursor": {
          "ref": "7b134210-ef4d-4ccd-b08f-ba6ba064582c",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "dcd07a3f-e144-4f6f-86c7-61ce0647cb7b"
        },
        "item": {
          "id": "8942f598-3f96-4e77-996e-d27d2ce20d62",
          "name": "did_json"
        },
        "response": {
          "id": "615f71d7-9f2a-4cc2-937c-b847f8bf0843",
          "status": "OK",
          "code": 200,
          "responseTime": 217,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b66c49b-0b49-4c26-8064-47aca35dec47",
        "cursor": {
          "ref": "24c3dec0-6ad3-418c-885e-1b4b3c66e766",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d342c748-005a-4d72-bf19-edde7f717fc5"
        },
        "item": {
          "id": "3b66c49b-0b49-4c26-8064-47aca35dec47",
          "name": "did:invalid"
        },
        "response": {
          "id": "9b73fc0e-c6e4-494a-8093-372e71a79700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b66c49b-0b49-4c26-8064-47aca35dec47",
        "cursor": {
          "ref": "24c3dec0-6ad3-418c-885e-1b4b3c66e766",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d342c748-005a-4d72-bf19-edde7f717fc5"
        },
        "item": {
          "id": "3b66c49b-0b49-4c26-8064-47aca35dec47",
          "name": "did:invalid"
        },
        "response": {
          "id": "9b73fc0e-c6e4-494a-8093-372e71a79700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9735eb5-db43-45ef-b3f0-392deccc3b5c",
        "cursor": {
          "ref": "7cf54c9d-9248-411f-bf12-3158449ac862",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "5d5203a5-2403-4640-8f44-696022d4224e"
        },
        "item": {
          "id": "f9735eb5-db43-45ef-b3f0-392deccc3b5c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "179f9376-60ae-4a47-92ee-5a7a523fe068",
          "status": "Not Found",
          "code": 404,
          "responseTime": 90,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e5c1a7-6d34-40d1-a5c6-a48943b89401",
        "cursor": {
          "ref": "9ce9daf3-173e-4c08-9b4f-d38faf2a1b6c",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "72a85b67-59a0-402c-be10-e2977296679c"
        },
        "item": {
          "id": "15e5c1a7-6d34-40d1-a5c6-a48943b89401",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "86e294ad-329b-44bf-ae1d-d70a8495158a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 24,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3dbad9-65e3-4f9f-bfe0-41f2b9d81188",
        "cursor": {
          "ref": "65c76f9b-82f3-4a0e-a7cb-23a3d9732f87",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "f140b511-50dc-4bf8-a564-7c542d3d05da"
        },
        "item": {
          "id": "8f3dbad9-65e3-4f9f-bfe0-41f2b9d81188",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "354c1a0e-c37d-4d9a-800a-cc96a2276a08",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "247b5339-103d-422b-96b8-3d56a105da91",
        "cursor": {
          "ref": "9d598bfc-50e1-42a1-b106-34fa9873b88d",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "5dc15713-beb3-4556-90d1-4be1fc3cd862"
        },
        "item": {
          "id": "247b5339-103d-422b-96b8-3d56a105da91",
          "name": "identifiers"
        },
        "response": {
          "id": "a8dca85b-326a-49a6-86de-40ec2effccc1",
          "status": "OK",
          "code": 200,
          "responseTime": 99,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fccf1ac-5dad-45ad-a4a9-fe2b3f7157ee",
        "cursor": {
          "ref": "8d44be9a-af88-46ae-bb51-73245bb47153",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "36ad2de6-9ce1-4e14-8ba3-942ca6e5197b"
        },
        "item": {
          "id": "4fccf1ac-5dad-45ad-a4a9-fe2b3f7157ee",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "5e6bdc86-c5b1-4e32-9771-d3a7f80d5817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9ec7150-bfb2-4035-8eb0-1e14582d1e39",
        "cursor": {
          "ref": "fa5d9e73-78a3-4e7d-befe-b94e82af15e6",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "12cf0d8e-1dbe-423b-afc3-5954c4baa178"
        },
        "item": {
          "id": "f9ec7150-bfb2-4035-8eb0-1e14582d1e39",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "25005e54-9f39-4ce8-b170-d1cc2b5a4389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faf026e2-75b1-446b-bc5f-7694c12255bd",
        "cursor": {
          "ref": "e6b241c7-1d08-451e-a7f8-b9ce9fc20959",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "22792b7f-359b-4e1c-a9bb-96a74bd6ae4a"
        },
        "item": {
          "id": "faf026e2-75b1-446b-bc5f-7694c12255bd",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "4da34fd6-9ed5-4ac5-96ab-31180a76b40f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ce9a77-eefe-4baa-b8f0-93fbe44485b2",
        "cursor": {
          "ref": "1b1e05ce-8bcb-43d3-857b-22f9dd96b000",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "5231c3ae-8542-4ed6-9ed5-0aa76311be7b"
        },
        "item": {
          "id": "a1ce9a77-eefe-4baa-b8f0-93fbe44485b2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "a9e8dba2-c08a-433f-ae94-c38ccff44ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "938637f4-d728-4a5d-891c-28ddc7af2c78",
        "cursor": {
          "ref": "2877d476-b545-42f3-9e23-62c4269c76f6",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "66968b28-736a-4e5d-abcc-b100a1b5ef0a"
        },
        "item": {
          "id": "938637f4-d728-4a5d-891c-28ddc7af2c78",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "15c69126-d6be-4e88-a09a-a4902aa6122b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f1252fc-ea7b-4782-979e-184d95cea080",
        "cursor": {
          "ref": "eea5df99-4516-4841-a07a-121eb1b0bf24",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b66f6d3c-28ea-400a-8888-c2dcf5652311"
        },
        "item": {
          "id": "3f1252fc-ea7b-4782-979e-184d95cea080",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "7bc5878b-0d86-4c85-8ddb-1ad01e0aa912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe328de9-a3ff-4072-9f10-051d1a7160ec",
        "cursor": {
          "ref": "6a935923-dda0-4cbc-b258-076a090f0415",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c2bcb7b5-bd03-4f54-91e8-f8c5be691862"
        },
        "item": {
          "id": "fe328de9-a3ff-4072-9f10-051d1a7160ec",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "69779cbe-2773-4849-8a7d-82df50814257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ab1c307-9845-493b-af2a-767c602a216b",
        "cursor": {
          "ref": "1c920152-1d16-409f-9b80-ef6c2bccd3c8",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "58dcff5b-8ce1-48d1-83b3-92bcbd8f9350"
        },
        "item": {
          "id": "5ab1c307-9845-493b-af2a-767c602a216b",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "774a63bd-42a1-4ebf-8308-039da3360ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e6f272-5865-4224-b428-b1bef9a6ba62",
        "cursor": {
          "ref": "ab8882a2-985c-4e2a-a104-fa0fe318c839",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "35bf8b3d-14af-4d8e-8bd1-71a14ec02eb7"
        },
        "item": {
          "id": "45e6f272-5865-4224-b428-b1bef9a6ba62",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9aeb75e3-e45b-4067-91fb-1ff93f29e404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ddd80fe-479a-4e74-8e65-06980da1b455",
        "cursor": {
          "ref": "9841678a-e56c-4f2b-9051-71945fd52bad",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f251c9d7-2da3-4f6e-85b0-6ba07e729919"
        },
        "item": {
          "id": "9ddd80fe-479a-4e74-8e65-06980da1b455",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "de423351-9a4d-4401-bd73-eb2c9636237a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef37f44-d97e-4168-b253-2af352c8e097",
        "cursor": {
          "ref": "48e06285-45d4-4512-bb7c-8cd9b67fd76d",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "e1022938-4bb3-475c-86db-047db4557c56"
        },
        "item": {
          "id": "1ef37f44-d97e-4168-b253-2af352c8e097",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c290ffd9-71e0-4039-9c9c-9cbe0abe8bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6589d52a-df2c-4165-b3a7-84c71060425b",
        "cursor": {
          "ref": "b0dc298d-3d8b-4a21-b357-d96518792f7c",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6096303d-2053-498c-9f69-ff780e07a90f"
        },
        "item": {
          "id": "6589d52a-df2c-4165-b3a7-84c71060425b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "cf48af0a-ca6d-4388-a5c3-5d5503430832",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f58535d-80ae-4d32-a0e7-c0eb58f7c2ee",
        "cursor": {
          "ref": "b6765f04-dbe3-43c8-b35b-d30e1b80abe7",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1d517c1b-2bb9-4cb4-86a4-7897f92c40c4"
        },
        "item": {
          "id": "5f58535d-80ae-4d32-a0e7-c0eb58f7c2ee",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "305e794a-9da0-402c-830a-e1cbdc61b94b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd466dfc-21a2-4423-9600-9834112c72ed",
        "cursor": {
          "ref": "09788b4f-e493-479b-a39e-5b98f569f0fb",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1cc13993-a2ed-47fd-adf3-65174317a05a"
        },
        "item": {
          "id": "dd466dfc-21a2-4423-9600-9834112c72ed",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "35605097-9ffb-42a7-a2e8-5a38cdcae431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3c15023-3f14-490b-aed7-fd75870ad92f",
        "cursor": {
          "ref": "5e483aa5-4c3a-4d6b-8599-af310adad46a",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "84237710-05d4-4f0b-ab2d-a1541812063c"
        },
        "item": {
          "id": "d3c15023-3f14-490b-aed7-fd75870ad92f",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7e9ad581-6710-475b-b115-b426671f00b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "594f9491-846e-4749-930f-dbdd3b9a8ac1",
        "cursor": {
          "ref": "4349d22f-8f9a-4f11-9536-9fa163e42fd8",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d4c3d23c-b35f-4444-ad99-0398ca97bd4a"
        },
        "item": {
          "id": "594f9491-846e-4749-930f-dbdd3b9a8ac1",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "81316393-a840-42d2-8c9b-fcbed5273e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f388374-8453-4727-a81e-1afcda5f70e1",
        "cursor": {
          "ref": "64117d42-cd83-4cb0-aac8-ea8ec5575c70",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "692eb1b1-8b30-4cd5-b121-999fc112447a"
        },
        "item": {
          "id": "4f388374-8453-4727-a81e-1afcda5f70e1",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "9aaf446f-947c-49bd-ae35-10c846f823ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42adb013-972a-49f2-8963-49003082bf3e",
        "cursor": {
          "ref": "fde6a6c2-816f-4664-b915-e65fac1fb52b",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "5019fcb2-cdd7-4d4f-ab32-0fec4e51fbdb"
        },
        "item": {
          "id": "42adb013-972a-49f2-8963-49003082bf3e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "796fb5da-558f-4616-984b-3dc753e39c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d52bb5-e021-4723-90b9-4aa48b3ac1fd",
        "cursor": {
          "ref": "6c3bd389-de05-4ff5-b57a-33032d6f3109",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "c70a10de-33f3-450d-9b7c-20048e2d744d"
        },
        "item": {
          "id": "a7d52bb5-e021-4723-90b9-4aa48b3ac1fd",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d635a980-d47c-4135-9937-a5a8a724b21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97cb1937-8bca-45a1-a8ae-808ee239b39e",
        "cursor": {
          "ref": "2f615cc3-f692-414a-b1e3-150e8ab7f6b1",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "f8c9c9af-5caa-4f6d-9293-95c73aecbadc"
        },
        "item": {
          "id": "97cb1937-8bca-45a1-a8ae-808ee239b39e",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "984736d4-94a1-422c-947e-56d6dcce8dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf56f1a-05bc-4eb9-9b44-cf604014a21f",
        "cursor": {
          "ref": "03515b92-f21d-4e3d-adcc-5263d404d424",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0d1392bd-2b13-4f82-9667-ae9dddc90c1d"
        },
        "item": {
          "id": "dcf56f1a-05bc-4eb9-9b44-cf604014a21f",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "7747e074-cbbd-46f1-b9f1-dfac04764e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ed747d4-4367-4386-9033-2498bb2ff892",
        "cursor": {
          "ref": "5fe43c31-74eb-4b63-bac0-07ac50586219",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "196f42d6-13bd-4060-8258-bbb968630105"
        },
        "item": {
          "id": "9ed747d4-4367-4386-9033-2498bb2ff892",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "bc1c8802-e587-415f-8efa-8703694ae43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e5a28a-44d6-461b-a788-a5ce07affed3",
        "cursor": {
          "ref": "61e42757-59a1-4774-bab6-a8d5df430071",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "b394f467-ee79-4556-9f54-bddca02d901a"
        },
        "item": {
          "id": "11e5a28a-44d6-461b-a788-a5ce07affed3",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "09185d77-7d9d-4372-ba72-c0ede67be336",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ee7644d-75d4-420c-a137-1cb8af3cfdcc",
        "cursor": {
          "ref": "6c9d01f8-3b2b-4757-af1a-124555682013",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6a83d821-6a19-4152-88ed-c882f944da92"
        },
        "item": {
          "id": "7ee7644d-75d4-420c-a137-1cb8af3cfdcc",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "70326dcc-af06-40a3-a7a4-4883387fb9fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23e4b4c0-064e-4718-b01c-004f6e784085",
        "cursor": {
          "ref": "685633f4-14cc-424c-b458-5a690aba8545",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "28287d4e-b657-43ae-8dec-35a4222b1828"
        },
        "item": {
          "id": "23e4b4c0-064e-4718-b01c-004f6e784085",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "48a0ac3b-00a3-4f6d-9782-58576dcafc02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421c9e73-9400-4d6f-88f9-7d8a9891c397",
        "cursor": {
          "ref": "107ac878-2cda-4b2c-8954-60febefd9194",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "65bf8d49-29bd-4708-9015-4b66b42c346e"
        },
        "item": {
          "id": "421c9e73-9400-4d6f-88f9-7d8a9891c397",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0e29268b-5e37-417f-815d-b4a0f192dc6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55b61b8d-a8e7-490b-bc96-153d6495c09d",
        "cursor": {
          "ref": "21bf2c82-1ceb-41a9-8867-8ebabd394b20",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "0d376e9c-fd3f-487c-a59c-060adf442cff"
        },
        "item": {
          "id": "55b61b8d-a8e7-490b-bc96-153d6495c09d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "0b9494f7-274c-46fd-95ec-be5196bbad24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0401311-6286-43b1-a86b-6a38f996d7d5",
        "cursor": {
          "ref": "1e3d5f5e-68d0-4811-980a-aea4a7465f84",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0237b5ce-a076-46ea-8090-e9c88466cda5"
        },
        "item": {
          "id": "a0401311-6286-43b1-a86b-6a38f996d7d5",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "28d90f96-61bc-49cf-b046-501d786933ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e539a8a-0285-4a34-9492-1c40dc267890",
        "cursor": {
          "ref": "56492548-357e-43cd-a9e2-aa00bdf498b6",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "373181e4-d238-4350-8dcc-2a1be52db872"
        },
        "item": {
          "id": "2e539a8a-0285-4a34-9492-1c40dc267890",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "1fe2a4fe-9948-4041-91b8-4ccbb4962ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87c612d2-09b9-4c4b-8ef3-ad84a4df6b2b",
        "cursor": {
          "ref": "f1c46bf3-4e42-4fd1-9f61-bbdd16090f68",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6fecf739-801e-4858-980a-0214fa650a87"
        },
        "item": {
          "id": "87c612d2-09b9-4c4b-8ef3-ad84a4df6b2b",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "e4b0ef8e-136a-4e26-a961-a5dba5cef883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0929b1b-8369-4785-989e-932b2a34c954",
        "cursor": {
          "ref": "0c230d03-ca09-4cb9-bb06-9fcbed51234d",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c6eccc3d-95fb-4c6b-a5d9-e0e41738dc84"
        },
        "item": {
          "id": "d0929b1b-8369-4785-989e-932b2a34c954",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "35cadec7-2b89-4a97-b8a2-c5b53f9b27c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa302f68-ca25-41d7-83df-1a600b8e7066",
        "cursor": {
          "ref": "f990da83-f71b-446b-9f40-581eb5c83f48",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "f75798d0-fd1a-48fd-81a8-18fa07a2f9a3"
        },
        "item": {
          "id": "fa302f68-ca25-41d7-83df-1a600b8e7066",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "27650e7e-d507-4e2c-965f-4146d884a43a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae9f0390-1bac-45a3-a11d-3d10fa0b7ed0",
        "cursor": {
          "ref": "60380f2e-9f14-4572-97b8-09180f962e59",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "22fb5611-6d47-4ead-9496-1dd6c8bf3534"
        },
        "item": {
          "id": "ae9f0390-1bac-45a3-a11d-3d10fa0b7ed0",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "c31b507d-23e1-4533-8f59-8c0848a4ed80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5ff712-c22b-43d9-9366-1ae512cea497",
        "cursor": {
          "ref": "b8765cb6-b6da-4079-96f0-f1a7e95ef005",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "aa27e5bd-5a6a-4edd-9751-e3f281f7193d"
        },
        "item": {
          "id": "3f5ff712-c22b-43d9-9366-1ae512cea497",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a6719c17-ca49-4ff9-a448-8ba7490587f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e427b7c-3599-403d-aeea-5dd8a138e32e",
        "cursor": {
          "ref": "8c4ca843-1241-495e-9002-6112a95f5dba",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "64b684cd-7473-4d8e-905d-a70f8f5b3803"
        },
        "item": {
          "id": "1e427b7c-3599-403d-aeea-5dd8a138e32e",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "ac7992f3-7567-42b5-bbeb-238ad41c840f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12797304-2073-43f3-88e6-0305870471e7",
        "cursor": {
          "ref": "fe64d4eb-740f-4ded-bfe3-ac69b8da7a78",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a0e477b0-775f-4783-9e36-d66bcfdf6605"
        },
        "item": {
          "id": "12797304-2073-43f3-88e6-0305870471e7",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "f91f0ba0-cd7e-4877-a08f-9aa230d4b937",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 51,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47d43299-63ca-41d8-82a2-a1cbbb8538bb",
        "cursor": {
          "ref": "6434c221-3b84-49ac-b46b-019655695df5",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a04e310e-6917-4149-9948-5f76f17a7475"
        },
        "item": {
          "id": "47d43299-63ca-41d8-82a2-a1cbbb8538bb",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7b67c296-4775-4e53-84a9-957dae3c67b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c2fd901-2a19-4574-8dde-edd8f45de300",
        "cursor": {
          "ref": "d6747738-3e88-429d-91b5-457e168768b5",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "52493cdd-3278-4c72-9e99-d5069d35d9db"
        },
        "item": {
          "id": "0c2fd901-2a19-4574-8dde-edd8f45de300",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6dbc766c-81bb-4979-b90c-edfab6ffec7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3364e02-dc4a-4e66-8931-4ce579c2919a",
        "cursor": {
          "ref": "06cc905c-2a98-4bd5-8f9d-4a9b79903985",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "87e2749a-14b2-4521-bc88-dfe1c2733ad7"
        },
        "item": {
          "id": "b3364e02-dc4a-4e66-8931-4ce579c2919a",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "999135cf-cf7d-49ea-ab76-f79d653e92c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902e2a00-6282-48a5-bd46-eb737ad5e713",
        "cursor": {
          "ref": "96490aa9-662d-4e36-b6df-a53b9815f414",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "1f75e940-cbd6-400d-abb3-832c253dcd40"
        },
        "item": {
          "id": "902e2a00-6282-48a5-bd46-eb737ad5e713",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "6f51cc97-2450-4392-8188-26d3574f3be9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1876c8f9-177f-4d77-8fa1-113329ab9dc3",
        "cursor": {
          "ref": "8a52a5b3-0fb1-4c05-ad23-db9a1229b27a",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f830aa98-5486-4ad1-bcff-fd857fe295de"
        },
        "item": {
          "id": "1876c8f9-177f-4d77-8fa1-113329ab9dc3",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "66c85e73-304e-4313-bb04-484ae06cfd9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0df467ec-44b8-4f57-9a87-b64f9be0978c",
        "cursor": {
          "ref": "9c1bdf56-178e-4905-843e-0e8fd8198264",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f1be2491-3c29-4e7f-9005-16c63cbfb5df"
        },
        "item": {
          "id": "0df467ec-44b8-4f57-9a87-b64f9be0978c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "cea25a7b-8f58-477c-af6d-838020def0e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "581a4351-f0c8-4bac-8f11-9dcdb4e83cd2",
        "cursor": {
          "ref": "bab40400-f3af-4854-9748-ad083ddd9d11",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c719354b-b2a2-40b3-9061-43c4a6e7efda"
        },
        "item": {
          "id": "581a4351-f0c8-4bac-8f11-9dcdb4e83cd2",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "06a4ca15-1fc9-4ec0-b81f-9370771bdeac",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 38,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b60faec-e17c-46d8-81d4-f711a50188e7",
        "cursor": {
          "ref": "77aa9a50-12e6-4357-b0a7-1fbbdfbe6b19",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ce154cd0-04a6-429c-bc7b-7e200a608b62"
        },
        "item": {
          "id": "5b60faec-e17c-46d8-81d4-f711a50188e7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "bf1842b9-7fc9-433d-9c6a-d95c9ca5dc3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff347df4-415c-49cf-bc6a-64b1ddffdb31",
        "cursor": {
          "ref": "d6a8c9fc-0033-4f69-a769-35ca74cd02a8",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c3aba450-5869-403d-8d44-ca1ab1ad53c8"
        },
        "item": {
          "id": "ff347df4-415c-49cf-bc6a-64b1ddffdb31",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "a70095bf-6993-408f-aa26-aeac082087f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369b68e9-a4cf-42ef-87cc-575bd27d754e",
        "cursor": {
          "ref": "c6bdfb43-7b24-4c59-a896-e3b8c499e835",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a113afca-1669-4f78-a9c6-485b32542a04"
        },
        "item": {
          "id": "369b68e9-a4cf-42ef-87cc-575bd27d754e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "bfdd34f8-0dec-44d0-8e52-dba23ff553d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c68033ed-6706-49fa-9637-f1542a9281ef",
        "cursor": {
          "ref": "4e312ac3-b31f-4a12-ac93-b43050e34c1b",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "461ddb83-9778-49b8-a384-b013874c1f3c"
        },
        "item": {
          "id": "c68033ed-6706-49fa-9637-f1542a9281ef",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "085c9b33-6ee9-4edb-8f4a-6cc4ca583c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7ed437-0bd1-4208-9483-335b7c1d722a",
        "cursor": {
          "ref": "a1f3366b-ff08-4c9b-ad59-5af6377fd735",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2acd950a-c144-4f64-9bcb-7b6623edcab3"
        },
        "item": {
          "id": "ac7ed437-0bd1-4208-9483-335b7c1d722a",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "5a4338f7-56da-489e-b8c7-4082e05d3d10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0587f970-824a-4290-a571-2c5ae08a7011",
        "cursor": {
          "ref": "dcccdd4a-baf0-461d-adf8-2d620abccca2",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2293c29f-1a34-46f7-a69e-999f2836a6e3"
        },
        "item": {
          "id": "0587f970-824a-4290-a571-2c5ae08a7011",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f4859ac4-4a07-4aa1-b2b3-bc1d0597a263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18872bdb-e5c9-47db-a5c7-97aa6d31e2c3",
        "cursor": {
          "ref": "3bf0a39c-187e-49ff-81b2-21a67ae936a8",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b39f0ba6-8230-4222-ba05-11fb5cecf412"
        },
        "item": {
          "id": "18872bdb-e5c9-47db-a5c7-97aa6d31e2c3",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "943c08c1-9756-450f-9916-ba99f436cea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc3eb2b-2156-4a75-8843-38fb736b3b86",
        "cursor": {
          "ref": "31d002dc-26eb-45f8-992c-3d8e9226022f",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "91aed30a-5f3a-4d83-84f0-ea6a85cb3f51"
        },
        "item": {
          "id": "bbc3eb2b-2156-4a75-8843-38fb736b3b86",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "fdc9499c-e3d0-4942-ac3a-c8df32a23097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00ee397-9957-4016-a7a9-dfac448479f7",
        "cursor": {
          "ref": "deb11cd4-7a4f-4b9c-9553-8e069b09d12b",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f8cf7a7a-6ffb-4436-90bb-bf88bede30ca"
        },
        "item": {
          "id": "b00ee397-9957-4016-a7a9-dfac448479f7",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "51681255-7113-4bf8-825d-fb5d0f4425e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5929d9b-5724-4159-87ca-9b2b831bf8c6",
        "cursor": {
          "ref": "485f5b53-cf76-41b6-9cdb-d10e2379c047",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2ee76709-5c8b-4b49-9531-0a1ce6ac4163"
        },
        "item": {
          "id": "d5929d9b-5724-4159-87ca-9b2b831bf8c6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "db752cc4-399c-4a49-9969-1cb1aeef55f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1030e8e-d76e-4148-bc7a-fee9cdf6f6f9",
        "cursor": {
          "ref": "c48c1c61-69cf-4fe3-9c28-e42216c0272c",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "01ee3a69-8f86-486f-ac9f-797605d73675"
        },
        "item": {
          "id": "b1030e8e-d76e-4148-bc7a-fee9cdf6f6f9",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "66c148a7-4d42-4ab9-b945-2dfea79b9e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4b5d258-6e68-41e9-9824-38fecee59630",
        "cursor": {
          "ref": "e4d8adf0-0b3b-4272-a485-a37f8482ac58",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ed3f3346-9071-467c-99c3-44697ec3647d"
        },
        "item": {
          "id": "f4b5d258-6e68-41e9-9824-38fecee59630",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "27fdb132-b2ba-4464-90a8-d1473d3e5045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325f6d5f-630f-41f5-9e21-0f50ae19cd90",
        "cursor": {
          "ref": "6d367220-25ba-4672-90e7-1710a2bac9c8",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b4c5741c-7da1-4988-92be-e9770906511a"
        },
        "item": {
          "id": "325f6d5f-630f-41f5-9e21-0f50ae19cd90",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "75c1f888-f670-4272-a886-34d09923b356",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d2f78c-aac4-46ee-90f4-d9ef4c07f5f2",
        "cursor": {
          "ref": "0edd1efc-0c0c-4ac2-baaa-64f7e30c2196",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7fb9ab30-f6e8-4de1-8e42-335b27449ea6"
        },
        "item": {
          "id": "c4d2f78c-aac4-46ee-90f4-d9ef4c07f5f2",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "749bb9e2-3d4b-4780-a627-4e7baf230b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f068e644-cd32-43e8-813d-a8462413e936",
        "cursor": {
          "ref": "295a8476-bf03-4238-b897-cf7967104227",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e3b29a7b-a407-4974-a7ec-3628ce39e209"
        },
        "item": {
          "id": "f068e644-cd32-43e8-813d-a8462413e936",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "1166968c-22c7-4b00-a1c4-c201f0735a3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52515bac-ebc0-45ff-bef4-0d48de5bab97",
        "cursor": {
          "ref": "a1135471-8faf-4123-89d0-e64b3c847a67",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "221f13d9-03d6-47c4-8528-22c26f4f0d37"
        },
        "item": {
          "id": "52515bac-ebc0-45ff-bef4-0d48de5bab97",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "78a08725-db2f-4feb-ac5d-078f69813b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "835f9ef7-bcbb-4a91-b37b-460173eaa13b",
        "cursor": {
          "ref": "e10c11f4-91bb-4c14-8f89-d19a5a170107",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "090bb90e-4ca9-48dc-85ad-f4a387662cb2"
        },
        "item": {
          "id": "835f9ef7-bcbb-4a91-b37b-460173eaa13b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9e8034c6-47c3-40e0-8b95-bbb2b0b8c1e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24597e68-8deb-4699-a04a-070e98e273b6",
        "cursor": {
          "ref": "7144f8b5-5b7e-455f-95d8-65cfefd99792",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "b8d1c8c9-2db0-4582-99af-0a7d018f7162"
        },
        "item": {
          "id": "24597e68-8deb-4699-a04a-070e98e273b6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "ffa4ad1f-9193-44e9-90a4-905882f3f6d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2daf6ec2-14c7-4bcf-8820-6d0b4e29c06a",
        "cursor": {
          "ref": "b2c4fb45-ba6c-46bb-92a0-2fe78853f4ee",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b7488b8e-704b-41c9-a69f-1e1dfa28bb2b"
        },
        "item": {
          "id": "2daf6ec2-14c7-4bcf-8820-6d0b4e29c06a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "193a8807-6e60-45a9-8a2c-311646d3bb91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ea00cf1-de9f-4abd-ab04-470b6b523344",
        "cursor": {
          "ref": "fed876d8-7caa-4706-abda-44c7a00680c3",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "4a0b541d-67b0-4065-9e84-8f94aa0ecc0b"
        },
        "item": {
          "id": "4ea00cf1-de9f-4abd-ab04-470b6b523344",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "000a4976-2a82-483d-86b7-d2f7156b1288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "782ac9f2-4a0a-49af-9ca1-2f01e4eaeb5c",
        "cursor": {
          "ref": "cdd220c7-2633-41e6-8597-e0610081b8f7",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "6f674308-a043-46f0-a5dc-fdc681f33246"
        },
        "item": {
          "id": "782ac9f2-4a0a-49af-9ca1-2f01e4eaeb5c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "4c93e384-3540-4dad-b9ba-97c18922f7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6d9e7c6-0d0e-4443-8822-2fa51dfaadf8",
        "cursor": {
          "ref": "ff6442e3-1e1d-4ee7-aac4-2f1e4b781ed2",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "a639aed3-0e98-4249-bc30-7e38cc91879a"
        },
        "item": {
          "id": "a6d9e7c6-0d0e-4443-8822-2fa51dfaadf8",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ccab595e-6b5a-40e9-b134-fc4c826308d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89ce4a2-a3d5-4dc7-875f-a7493d3d9e6e",
        "cursor": {
          "ref": "8a3f92a0-5c36-43a2-9aa0-7fc5c3c59962",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "bafed3cc-173f-4ea6-a7f0-9293c3840565"
        },
        "item": {
          "id": "b89ce4a2-a3d5-4dc7-875f-a7493d3d9e6e",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0aaef330-d2d2-47fb-ad28-b29c3803984c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b61f3a8f-1810-4cc3-9005-1f8502b7e49e",
        "cursor": {
          "ref": "63e36c37-4f71-4dec-8b4f-ea3e5d6a47f0",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "010ee3fb-939c-4d67-8466-2fd48bed1b6c"
        },
        "item": {
          "id": "b61f3a8f-1810-4cc3-9005-1f8502b7e49e",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "49b15972-ca5c-4f89-b575-5ad1dffedbf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "952ead0f-f581-41cc-9855-8fc3098e1d9d",
        "cursor": {
          "ref": "a1d9409f-3ec3-40f2-a06f-af429b311bdf",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0d4b21b6-8dd3-405a-8f03-43e70a58a61c"
        },
        "item": {
          "id": "952ead0f-f581-41cc-9855-8fc3098e1d9d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "02ffc503-12a3-4d8c-945a-7ecd31cd43c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "558d4f0b-0509-44b5-9b47-7441f71ecccc",
        "cursor": {
          "ref": "610826af-bc2a-41b1-b508-a4579686d879",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "8e4d1543-a4bc-47b8-9471-6eb5305d74b5"
        },
        "item": {
          "id": "558d4f0b-0509-44b5-9b47-7441f71ecccc",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b0d5fc6f-5e3f-4470-96d1-0b413cb6d0b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce598b8b-c02b-4b50-aa81-01b218c8a028",
        "cursor": {
          "ref": "60ccac20-049a-4edc-9b66-8e3291a2c6ab",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "bfc55d6e-882b-4691-8ac7-6ca61adb39de"
        },
        "item": {
          "id": "ce598b8b-c02b-4b50-aa81-01b218c8a028",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "08976f2a-bdb1-4a04-bb9a-785f96e20b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3868af-c711-4694-be87-fdeec65fbcea",
        "cursor": {
          "ref": "378447da-6c1b-4143-bb72-2abaee436eb3",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "66aa1899-b726-40bc-aa9c-f17bb4a661a9"
        },
        "item": {
          "id": "dc3868af-c711-4694-be87-fdeec65fbcea",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "2f298c54-a054-4d7d-a423-4cee878c247c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16ce05d7-7a39-4d4c-8ef0-75656a2f4739",
        "cursor": {
          "ref": "37e8e8c7-e248-4840-b841-b8a529170b39",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c2822d50-9011-41d8-b84c-4b8111274268"
        },
        "item": {
          "id": "16ce05d7-7a39-4d4c-8ef0-75656a2f4739",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f911d815-bb25-4e75-a43c-3eb595099886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0882b58e-1008-4ab0-b87e-76dfafc9a426",
        "cursor": {
          "ref": "930b4b83-f6cb-4389-8efd-692cdeea92a5",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0ce84913-fe55-4a82-bb4b-e1bf6ed898fd"
        },
        "item": {
          "id": "0882b58e-1008-4ab0-b87e-76dfafc9a426",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "bc2ca0ab-d914-4c67-b557-17bd65ce9e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "927d419d-7337-49ec-9142-7825573364a4",
        "cursor": {
          "ref": "b10f8a50-499b-4131-b533-d6fbceed68a3",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6f297db5-4455-49ca-b603-5529d8f848a6"
        },
        "item": {
          "id": "927d419d-7337-49ec-9142-7825573364a4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "17318b5f-4b57-4e2f-8d53-ada6a74d1f3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17bfdd47-66ad-42e8-808c-4c2ff5dd673c",
        "cursor": {
          "ref": "8df245cc-3190-4a6e-b9a6-a5ddf5a4d408",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "e38481e3-e2d6-47d7-8902-8d2791c1b096"
        },
        "item": {
          "id": "17bfdd47-66ad-42e8-808c-4c2ff5dd673c",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "2847af71-e03a-4009-852b-b52a065a4b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058bfaa8-3c68-4e1b-96e8-878535115a64",
        "cursor": {
          "ref": "7cf1d90b-cdb2-4bed-a21e-6cb06566e3b6",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6b248923-42ae-47b8-a59b-630d46e2bf5c"
        },
        "item": {
          "id": "058bfaa8-3c68-4e1b-96e8-878535115a64",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9f9085bf-659a-4e58-bae1-153f8a7bfa67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976888d0-90d5-4c36-8740-26b774e828d3",
        "cursor": {
          "ref": "5de1bbcb-74b8-4195-ac4f-eb388e88a619",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "56715bf9-a57b-4a85-87dd-bf99241050f5"
        },
        "item": {
          "id": "976888d0-90d5-4c36-8740-26b774e828d3",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "52de127b-a045-43d6-b040-20d224e8f964",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80154caa-2185-4e64-b401-0c97316fdcc9",
        "cursor": {
          "ref": "8ef0fa38-df63-4138-80ba-f46c3a6b8528",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "109c7ea3-44e6-4130-b5c0-3ab964a8e223"
        },
        "item": {
          "id": "80154caa-2185-4e64-b401-0c97316fdcc9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "0e525903-e746-45a2-b3c5-cdd39a3b580f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d36ddd2-c16a-467f-9645-7434f70f881b",
        "cursor": {
          "ref": "968f1c7e-7bd4-4e3d-ba41-be9d57f1626e",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8fccd6e9-d58d-4f51-9624-4aee7b2522f7"
        },
        "item": {
          "id": "2d36ddd2-c16a-467f-9645-7434f70f881b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "c2ef952d-b854-45e2-a56c-e590e63450a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65b19874-7b0d-409c-ae41-1a8efa0584b9",
        "cursor": {
          "ref": "a5001b75-855c-44b0-a551-b35a56e6643b",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5b495f0e-2394-4875-bd99-fe54e27fdbe1"
        },
        "item": {
          "id": "65b19874-7b0d-409c-ae41-1a8efa0584b9",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0a21dfaa-213f-48c2-a277-6c5157732ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426a30b3-7d7c-4bff-be5f-94cf34d51ad1",
        "cursor": {
          "ref": "13ff76db-5408-4e57-807a-a8eee02b2aa8",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "cdf0aafd-8da7-4c63-8253-ef19ed2c4568"
        },
        "item": {
          "id": "426a30b3-7d7c-4bff-be5f-94cf34d51ad1",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "431268cc-d9ae-481b-9a54-726f16fb7aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d938ca-5743-46d9-8cdd-58ac59770e91",
        "cursor": {
          "ref": "e07f8c59-6508-4e85-b8a6-ae68ecc42e44",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6b2dfde5-8437-44eb-b177-8ba16e8d86bd"
        },
        "item": {
          "id": "b0d938ca-5743-46d9-8cdd-58ac59770e91",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "9af7439b-f388-4ac6-81f1-f4f833b7920b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310869ee-7b75-417a-a130-3a54bf13ae6a",
        "cursor": {
          "ref": "0cf46943-6031-4ee7-adac-b436fee25628",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "62a8efff-a9ff-4b9f-b184-e9532dd40b21"
        },
        "item": {
          "id": "310869ee-7b75-417a-a130-3a54bf13ae6a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "0da970af-8fd7-4d16-a365-659f0672f192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9870096-e8b7-48e8-951b-1f6c5be8b3d5",
        "cursor": {
          "ref": "3de00757-6170-40af-a565-58b7e41589e6",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "549d5e0e-70a3-4b2a-ba76-a79d8affc5a9"
        },
        "item": {
          "id": "f9870096-e8b7-48e8-951b-1f6c5be8b3d5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "8e8cc469-e732-4ad3-a038-726257785caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a8cba10-ff76-4724-86e3-a21926562086",
        "cursor": {
          "ref": "fdfe607f-ecf1-4386-b036-4215823f1ad0",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c429eb75-bbd2-4e6e-b437-528c4ccbcd96"
        },
        "item": {
          "id": "3a8cba10-ff76-4724-86e3-a21926562086",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a5080e0e-5e75-4665-afd2-44eb6c814b4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "968428bc-c32a-4660-9f34-acce38744556",
        "cursor": {
          "ref": "c95d23e4-a9fc-41f7-8093-3d2458eae6f6",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5b068d27-e8de-4734-ba7d-b94b8b27d4a1"
        },
        "item": {
          "id": "968428bc-c32a-4660-9f34-acce38744556",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c0a9647a-1629-47dd-8ed7-8047e9d17aa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41cd9c2-a55d-4587-960d-fe215af4f4a5",
        "cursor": {
          "ref": "7a483c11-28cc-4d77-8e6b-b2f36101fb68",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "992eb4a2-e356-48ab-aa82-2dbdeeba5382"
        },
        "item": {
          "id": "d41cd9c2-a55d-4587-960d-fe215af4f4a5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "71976e0a-fe2e-4a52-ae79-fe54e4ac1181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e810c88-36e8-4a01-ac60-b18364ea9a2d",
        "cursor": {
          "ref": "dbb0f45d-c176-4f80-b8ff-d6403e360d96",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "771832b4-7584-4cc0-a09d-fc4b2381b705"
        },
        "item": {
          "id": "8e810c88-36e8-4a01-ac60-b18364ea9a2d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "af8ca2ce-c06d-400b-9ddb-3df63c6ed6ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3365a2a7-3ba0-46d4-83d5-f51816d13088",
        "cursor": {
          "ref": "e9094e32-2adf-48b1-a978-537b98e41253",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2e3d6a58-128c-4e10-8b96-1116f73a5fe3"
        },
        "item": {
          "id": "3365a2a7-3ba0-46d4-83d5-f51816d13088",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f5302b7f-cae4-4d40-aa6f-2ae3575eb5b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8122b4b-664a-4a00-b7d8-f137ea83c906",
        "cursor": {
          "ref": "05878075-d7bb-4f44-80ae-0d92e50eabb6",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "30c48acd-c62a-4e0e-b72f-7c38947c3106"
        },
        "item": {
          "id": "c8122b4b-664a-4a00-b7d8-f137ea83c906",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "01e2466b-6d9f-4a2c-a4d7-154748f5feeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59720d8-8cf8-4d64-b395-72e6cdb5959d",
        "cursor": {
          "ref": "c42a457f-1de9-40df-ba54-86f1944f0a55",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "d4c69ad3-fbb7-4421-b2da-4936c4e0683d"
        },
        "item": {
          "id": "a59720d8-8cf8-4d64-b395-72e6cdb5959d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "862fc7a0-b28f-4291-9b56-0d2124ed194a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "454aead3-4ab2-4347-8859-8bdc7fbd1edf",
        "cursor": {
          "ref": "188adfb6-3c72-404d-b6f4-1320af57e15f",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ed764172-38a3-4a0d-af85-b9cfbce527ca"
        },
        "item": {
          "id": "454aead3-4ab2-4347-8859-8bdc7fbd1edf",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "1791ebb4-81a5-4feb-bc9a-838bec926815",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4824251b-c5ea-4a35-b720-70fdcb947108",
        "cursor": {
          "ref": "df078ae2-1fec-43b5-a514-6dfa44294d78",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "a541cd5c-d71d-45e4-b771-2305f0be70ee"
        },
        "item": {
          "id": "4824251b-c5ea-4a35-b720-70fdcb947108",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "47c4dbd1-2edc-4a27-9088-b90511469bb0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a26a022-d3cb-4bd2-843d-b566d92fb43d",
        "cursor": {
          "ref": "ace458a5-f379-49d3-85b7-4ec30e1ea91a",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d7473d90-c641-49e5-9844-348523d641aa"
        },
        "item": {
          "id": "1a26a022-d3cb-4bd2-843d-b566d92fb43d",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "4a36536d-4fd4-4bb3-8bda-3a525baf6dd3",
          "status": "Created",
          "code": 201,
          "responseTime": 73,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "542ded11-ec4c-42ea-ac46-38cc88e53855",
        "cursor": {
          "ref": "dde1bb91-c3d2-4c3a-9e2d-519ea574d28d",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "17968b88-3793-458b-9b9b-58ddc9cfff07"
        },
        "item": {
          "id": "542ded11-ec4c-42ea-ac46-38cc88e53855",
          "name": "credentials_issue"
        },
        "response": {
          "id": "157e6d58-a6ae-4adc-8516-579b548ed3db",
          "status": "Created",
          "code": 201,
          "responseTime": 201,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3ca825-7e06-4136-973b-c8951cb2e15d",
        "cursor": {
          "ref": "f61b8a98-f0e2-405a-9274-135795732aef",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "53f3d27c-130e-4fad-846c-253c3f1d030a"
        },
        "item": {
          "id": "6e3ca825-7e06-4136-973b-c8951cb2e15d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "6b9be912-4d47-4358-8279-af364f4cf2cf",
          "status": "Created",
          "code": 201,
          "responseTime": 60,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "45a93a33-9ea4-464b-87f9-c2853aa246c3",
        "cursor": {
          "ref": "7a93664a-0e6b-4190-a810-4d60b4081835",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ed267c66-a88f-487a-9298-7e0a8dfe146c"
        },
        "item": {
          "id": "45a93a33-9ea4-464b-87f9-c2853aa246c3",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "1452fd6c-9485-42fc-95e2-526c375918de",
          "status": "Created",
          "code": 201,
          "responseTime": 59,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e76197d-61bc-458e-ae47-9720e82f0194",
        "cursor": {
          "ref": "6abca4cb-1740-44ad-b4be-a3d6fa72ad3a",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "aca908d4-9638-447d-aadb-a2b8f91a5de0"
        },
        "item": {
          "id": "2e76197d-61bc-458e-ae47-9720e82f0194",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "dc4d510c-7873-485c-a25a-68ac4a6c8a64",
          "status": "Created",
          "code": 201,
          "responseTime": 49,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed7b9e41-3258-4498-b78b-4792f65f131d",
        "cursor": {
          "ref": "fc678663-a680-48db-b661-a3c913a3ed48",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "47033064-2479-470a-a652-23bf428c4489"
        },
        "item": {
          "id": "ed7b9e41-3258-4498-b78b-4792f65f131d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "9fe409e8-00da-4fcb-a34b-87ba0b995b60",
          "status": "Created",
          "code": 201,
          "responseTime": 60,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "924f257b-54f9-41eb-9d17-cea205063f10",
        "cursor": {
          "ref": "3effaae1-4f5d-497a-8af4-68821f9f8fe0",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7d0c1250-139e-4ec3-a2fb-efc66b5b061f"
        },
        "item": {
          "id": "924f257b-54f9-41eb-9d17-cea205063f10",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "03284944-4496-4cde-af21-edf046a7a390",
          "status": "Created",
          "code": 201,
          "responseTime": 55,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f991723a-6e7f-48bc-9647-cc5dd8b58caf",
        "cursor": {
          "ref": "77e63a3a-6ada-48a2-8973-16f6f2bf762a",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ac160e10-8a30-45b1-ac8f-cb4f9e12eee0"
        },
        "item": {
          "id": "f991723a-6e7f-48bc-9647-cc5dd8b58caf",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6b3036da-eae6-4139-b311-346b54b7713a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "687c0e41-d1a5-4599-9152-ffd5b231d394",
        "cursor": {
          "ref": "03df135f-b98a-41ff-b3db-a519ff50b66f",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "44585acb-b312-4077-98e6-44cc035ba73d"
        },
        "item": {
          "id": "687c0e41-d1a5-4599-9152-ffd5b231d394",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "519048d2-672c-4c31-812b-44a7e998c6e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebcb6776-3721-4226-a498-e8469ba35b88",
        "cursor": {
          "ref": "86fd16da-5599-4780-ba60-666c7aef1dc3",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5c88db04-22b0-4636-adad-9ad58b80ade7"
        },
        "item": {
          "id": "ebcb6776-3721-4226-a498-e8469ba35b88",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "38449d9a-ce2c-4463-97c7-f42db6cdae81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ad735f2-5c17-4112-b704-e93eefaf68f5",
        "cursor": {
          "ref": "2fb044c8-55f0-4743-b566-42d4f052b6c4",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "70845950-3c07-4cce-bb02-5f2348475a70"
        },
        "item": {
          "id": "0ad735f2-5c17-4112-b704-e93eefaf68f5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "923eeb7f-f4db-40e7-a26e-d389a684cabf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5067f57c-5ccc-4913-a689-22ed0475216d",
        "cursor": {
          "ref": "a38e4813-b27d-46f3-9eec-2ee277aa859f",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "213aa26f-792c-4127-8d06-13b3e51de139"
        },
        "item": {
          "id": "5067f57c-5ccc-4913-a689-22ed0475216d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4770d1a7-60e9-4ff5-956a-56615571e5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f3fa8b-bd92-4c3e-b288-525d668f3326",
        "cursor": {
          "ref": "73051c32-1dc2-469b-a397-e5e31d95c7ae",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "64177027-7da9-4ac2-920d-da15d2e148b9"
        },
        "item": {
          "id": "27f3fa8b-bd92-4c3e-b288-525d668f3326",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a246068d-80ca-4711-b7ef-2c67149ccca0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c5e0ebc-fe05-47cb-ad69-6037c9fde90b",
        "cursor": {
          "ref": "54845523-11db-4898-8eef-264346ceb775",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "487ef93d-7536-4aff-88eb-c07f890b5dff"
        },
        "item": {
          "id": "3c5e0ebc-fe05-47cb-ad69-6037c9fde90b",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "74554a2d-a812-43ee-bcd1-aacb6682592e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c50eb38b-27db-4bc6-a708-59e03b96c827",
        "cursor": {
          "ref": "1d600887-6179-481a-93e9-baefc94bb552",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "3e0f8826-197d-4eb6-848b-3195bee8bdc2"
        },
        "item": {
          "id": "c50eb38b-27db-4bc6-a708-59e03b96c827",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "fe5dac5e-e98b-46d9-bb94-552bad92beb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e50aa21f-e354-4bb6-b4ca-41f829857edc",
        "cursor": {
          "ref": "8f55aeae-6128-4caf-b27e-63a68d4127be",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "2916671b-2d48-4250-b1f4-8a8f13b6669c"
        },
        "item": {
          "id": "e50aa21f-e354-4bb6-b4ca-41f829857edc",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a2f46121-085f-44dd-a9ed-097c82d0d8a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6851819c-7c47-42d9-bf27-b87c63a0eba5",
        "cursor": {
          "ref": "b5365651-e196-4d87-951d-60530f047cd0",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d73c0d2d-59fc-47d3-9982-aa5d2c15f504"
        },
        "item": {
          "id": "6851819c-7c47-42d9-bf27-b87c63a0eba5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "6de214a2-ac9f-4adb-aa9a-c38f763ac351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea74897e-ec06-4b9f-973b-86edc61d5b38",
        "cursor": {
          "ref": "98914073-1158-46d0-97c6-ee4c7512f284",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "abf0215c-cf54-4555-a69f-944826c51bf6"
        },
        "item": {
          "id": "ea74897e-ec06-4b9f-973b-86edc61d5b38",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ef11fea0-7992-477b-9ea7-f9fde7ffee83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f77ce7c-0bd6-47fa-8152-c38d41941657",
        "cursor": {
          "ref": "5dd3c875-5571-47d3-b4f5-dfa9f23b52ff",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3c8708bf-3a72-45f0-838d-2d871f9c1230"
        },
        "item": {
          "id": "8f77ce7c-0bd6-47fa-8152-c38d41941657",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "042506aa-80f3-4edf-9c4f-0a6966516b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1b0e61-9ca2-4ffb-becd-17fe86636232",
        "cursor": {
          "ref": "901b5d5a-149d-4c34-bbc8-af85ae9687a7",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7ec11a2c-2cf3-4289-9562-d3760aeef956"
        },
        "item": {
          "id": "fb1b0e61-9ca2-4ffb-becd-17fe86636232",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "6b559af8-ef85-4dad-9fca-8daa6c020849",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8713848-7485-4564-acdc-933bbb7b3e5a",
        "cursor": {
          "ref": "1e8cf420-a00c-4206-b95f-e0bfc95bb837",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "5a129891-2d45-48cf-877f-2dbaead57d80"
        },
        "item": {
          "id": "b8713848-7485-4564-acdc-933bbb7b3e5a",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "32ac3b80-2906-4b1d-8d8e-84953435344b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7c58613-a54c-4c37-b90a-f11bb8f730ef",
        "cursor": {
          "ref": "ab228b1a-2eff-45b0-a22a-e017e0632f42",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "c6088a21-8687-4c53-8660-603442af0531"
        },
        "item": {
          "id": "d7c58613-a54c-4c37-b90a-f11bb8f730ef",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "61608469-2093-4cdd-9da6-11dd1f7f3dc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a269270e-0938-42ad-a9d5-5e2c9fc0993b",
        "cursor": {
          "ref": "711d313f-c38e-4466-ae69-d01da874a777",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5a5f4db3-3f4a-4c63-831c-291960e64fd3"
        },
        "item": {
          "id": "a269270e-0938-42ad-a9d5-5e2c9fc0993b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8e2860c1-fe53-4775-8de2-f04b5b3a4156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe68d786-488f-4ec1-aee1-1b070e249290",
        "cursor": {
          "ref": "058aae4b-0f5b-4a1a-a07b-2ac45eab6277",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4ef46daf-0aab-4e0a-af2d-fc31ee877d25"
        },
        "item": {
          "id": "fe68d786-488f-4ec1-aee1-1b070e249290",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "b784e4e7-e02d-4c55-a8f4-1381d7f56cbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197d0b31-bb7e-4671-a025-5a265f78c203",
        "cursor": {
          "ref": "08f91909-8a2c-4340-966c-e6ccc3b6a5d9",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "dfdbd7f2-a66c-46e6-ae57-36325c39e6ae"
        },
        "item": {
          "id": "197d0b31-bb7e-4671-a025-5a265f78c203",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7041035d-e618-4039-a493-5b618d9bd321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9fad309-ce88-4183-bb9a-699dfd22b7b1",
        "cursor": {
          "ref": "bc7e20bc-a9b2-4196-8bd5-d1ea61aaa437",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a4833829-830c-4bff-afe4-f7854b0761dd"
        },
        "item": {
          "id": "b9fad309-ce88-4183-bb9a-699dfd22b7b1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "210a9490-b203-422a-a1d0-2fde72d07817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d290f1a-974f-490a-a9f4-8a18d14c1b05",
        "cursor": {
          "ref": "e7f06be3-f19c-4763-a7c4-98d430381bb1",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "0e78dee8-3cb6-407b-b904-370605131b6d"
        },
        "item": {
          "id": "1d290f1a-974f-490a-a9f4-8a18d14c1b05",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ce0e810e-d772-4138-8a02-edd91c34bd7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a06a134-0b14-45ba-814d-d5a9e0bd802c",
        "cursor": {
          "ref": "5ec4d456-8274-478e-b5bf-0e33afbb300d",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2d0f92fd-3017-43e0-9c6d-ca425f42a3cf"
        },
        "item": {
          "id": "6a06a134-0b14-45ba-814d-d5a9e0bd802c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "46097678-80d1-4523-a2ee-4533271d76a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c3247d-a41a-4709-9046-fb72ac35b545",
        "cursor": {
          "ref": "6e4b7310-7091-4702-bb3c-2fb9c9178495",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3eaa82f7-550e-4d6b-b1ef-09e307bacac4"
        },
        "item": {
          "id": "55c3247d-a41a-4709-9046-fb72ac35b545",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "99940e2c-4ae3-4f88-8bb9-b960a9765178",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb5a283-7d8e-4663-8c65-96ada6ec53c2",
        "cursor": {
          "ref": "89bda4ae-219d-4180-b920-26ab164bd045",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "891999b3-80f3-4e8a-b980-fed46bf35dec"
        },
        "item": {
          "id": "0fb5a283-7d8e-4663-8c65-96ada6ec53c2",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e8d4984d-8c16-43fe-ad5e-d976bf2334a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c534500f-c7b5-4156-987a-eebce7b9083d",
        "cursor": {
          "ref": "2822c90b-8b03-419c-9774-6c953ac05ac5",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "179822c5-4d1e-4df1-9646-ed0a165f071b"
        },
        "item": {
          "id": "c534500f-c7b5-4156-987a-eebce7b9083d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "638085db-fe83-469b-a6e0-77f93a6d14fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d0140b-1e05-4569-a898-5a94fd64b25b",
        "cursor": {
          "ref": "838c2efb-7cd4-46e4-9fcd-f069c72a2db4",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c6841809-f27b-44ad-9a75-96435afba200"
        },
        "item": {
          "id": "10d0140b-1e05-4569-a898-5a94fd64b25b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "120a647d-de3c-4d8e-a645-975392aaa3e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e1f934-9824-406a-beb5-17788019b084",
        "cursor": {
          "ref": "fff10e63-d2db-4e88-b1f5-1e4617cc9e7f",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f8c6abde-dd99-4385-935d-53856f893697"
        },
        "item": {
          "id": "f0e1f934-9824-406a-beb5-17788019b084",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6b4b7346-88a4-46c5-bd2d-f7fb23560a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2813ae80-d8f4-4521-b65c-8bd99a5e7ca8",
        "cursor": {
          "ref": "23c555c0-c9f0-429b-93be-5932e76afd08",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b4a937b4-8073-4d55-bc87-bf406084e93f"
        },
        "item": {
          "id": "2813ae80-d8f4-4521-b65c-8bd99a5e7ca8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "34914d11-cb2e-495b-865f-5ea7ef4fd038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039a4046-22d1-4456-a0a8-d0d9d53c447e",
        "cursor": {
          "ref": "c01e2fc5-e56c-42fc-b4a8-db1086f352ee",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "a1dc2a78-13b0-49b9-af85-c30ff718d828"
        },
        "item": {
          "id": "039a4046-22d1-4456-a0a8-d0d9d53c447e",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "2f2c96fa-07a8-4c03-91da-43b1ac9997eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a5ccdf8-74c5-444f-bbfe-2bade1871591",
        "cursor": {
          "ref": "bf94fcce-e1ce-4c77-9b13-249ad4fa14a4",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "cfd8f347-7c51-4a9c-917e-6750dde6f4be"
        },
        "item": {
          "id": "1a5ccdf8-74c5-444f-bbfe-2bade1871591",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "411b3f95-744f-4c32-ae29-93507d38c4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59a14cde-2c7d-43b1-8292-b1560dc0d7f0",
        "cursor": {
          "ref": "dafaf56d-72c3-41af-8a15-6430d6a4a366",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b1356f68-93bc-4a01-bd89-4848da6feaf5"
        },
        "item": {
          "id": "59a14cde-2c7d-43b1-8292-b1560dc0d7f0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3d3f158c-c71e-499c-a4af-033c81d0fdd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cea5cfd-b39d-42c5-b8f7-59c34b20be01",
        "cursor": {
          "ref": "ea22628a-d226-4ccc-95b1-d134dd43c830",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4a88a194-2675-40b4-b11c-228bf67a8488"
        },
        "item": {
          "id": "9cea5cfd-b39d-42c5-b8f7-59c34b20be01",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "3df51d01-37ac-4bc8-bac1-4aa4b8c98153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9faf4580-2bed-4802-9dc1-b189bc929cf0",
        "cursor": {
          "ref": "3bc66166-96d7-4641-8aeb-74a99ac48193",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "1e3f7ee2-20de-4ff2-93c9-003c4791e3d7"
        },
        "item": {
          "id": "9faf4580-2bed-4802-9dc1-b189bc929cf0",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "9e9f3a7f-4753-4e50-a938-f58151de2098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2be8d57-ba1c-4762-b8a3-8afd5293764f",
        "cursor": {
          "ref": "5264e7ec-d9e0-4760-9673-279bb805c4a3",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c9ad624b-124e-4c88-bfe0-9cc9d9467c20"
        },
        "item": {
          "id": "f2be8d57-ba1c-4762-b8a3-8afd5293764f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cb968865-81e9-4aee-8456-ecf0d295ba3a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe25cb0-edf2-4595-a041-86f6e96c0ff0",
        "cursor": {
          "ref": "c1ff0256-ab20-46bf-91aa-31bedf11131d",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "83bc66c9-62fc-4e85-9146-99141ca6d9cb"
        },
        "item": {
          "id": "efe25cb0-edf2-4595-a041-86f6e96c0ff0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "65308820-6a13-4b2c-89a0-8e88d934670a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e011fc-27a6-4420-99de-d9d2167fd650",
        "cursor": {
          "ref": "0785ef7c-1e7d-43a7-9758-3745c0bc2166",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "385c4db7-341a-4f0b-99db-3911fde79d91"
        },
        "item": {
          "id": "67e011fc-27a6-4420-99de-d9d2167fd650",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "320704fd-a841-4414-a587-062959416261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3cb3155-79eb-4e28-9309-4402b3312676",
        "cursor": {
          "ref": "a8beb184-fc19-4e7d-a72f-94f5bed5ec99",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "07f0fcd3-cefa-4916-894b-f39748c6fadf"
        },
        "item": {
          "id": "d3cb3155-79eb-4e28-9309-4402b3312676",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "2aff977b-952d-4b2f-874e-818d087e7c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5195478-f516-4d20-880b-386b0d78cfc1",
        "cursor": {
          "ref": "9b5241f5-1852-408a-b995-e7a2e9e25428",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "ff53026c-ac43-44ff-822b-27fab5140dec"
        },
        "item": {
          "id": "c5195478-f516-4d20-880b-386b0d78cfc1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "079a455c-edbc-4d6e-bdce-f4add865f64a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848f4573-5a2d-4dd4-a1f5-2009ab3370f1",
        "cursor": {
          "ref": "ac5e5b2f-c6ee-465f-bf7c-41174fd9c81d",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "61266956-e2e2-4af5-988d-336dd7d4bba6"
        },
        "item": {
          "id": "848f4573-5a2d-4dd4-a1f5-2009ab3370f1",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2f2d291d-2842-4197-bef2-4625393a3742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84bd97d1-8b84-406b-a9b0-1b7e5d9b6c1a",
        "cursor": {
          "ref": "dd1f7ea0-dce2-459c-a741-9668f08ae13a",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4cf53e61-f73c-4e3b-ac22-435f1b7b1ac6"
        },
        "item": {
          "id": "84bd97d1-8b84-406b-a9b0-1b7e5d9b6c1a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "73c57366-b7e4-4769-8f65-100228c4eca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19c81b48-df4c-4a5f-9b69-a183eea0f8d1",
        "cursor": {
          "ref": "88159995-abd5-49d3-a1cc-38741574fa1d",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "731438a9-6b0b-41e5-bb25-9c85a83cf866"
        },
        "item": {
          "id": "19c81b48-df4c-4a5f-9b69-a183eea0f8d1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d7f2a5e3-34d9-4022-b1cb-b4c0c59823d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ebb63a6-3bb0-4c61-84b8-41f7500a9946",
        "cursor": {
          "ref": "2676ad10-d797-41fa-99ed-c3c2a7ea8983",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "161dd048-793e-4164-b20c-dd99e0c5d3cb"
        },
        "item": {
          "id": "4ebb63a6-3bb0-4c61-84b8-41f7500a9946",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "7e40c22a-f162-4cb4-a1db-8f6f80358bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e51994ca-b106-4bda-a3f2-e651df1bbf3c",
        "cursor": {
          "ref": "12497d40-9e6e-4b46-bff6-8634e023245a",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "19a1478a-0ee8-4022-8bfc-3a881983f2fc"
        },
        "item": {
          "id": "e51994ca-b106-4bda-a3f2-e651df1bbf3c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5863d11b-4c9e-4108-83a5-ae18a682ce25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "949afe41-2ba1-47b7-ade1-b35368942076",
        "cursor": {
          "ref": "ee2756dd-a96b-4882-8497-1ecae4e012df",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "18cc2773-fff5-4143-8721-b90b729ca076"
        },
        "item": {
          "id": "949afe41-2ba1-47b7-ade1-b35368942076",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "487fd0af-5b5f-4e8a-ade0-89cc578b5797",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d43069-af3f-4495-bd5a-bd9f3e7fff7b",
        "cursor": {
          "ref": "052894ea-5959-4206-9b55-212b5b42e9e2",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "e0292d65-cc0b-4d13-b95e-c013352f026e"
        },
        "item": {
          "id": "25d43069-af3f-4495-bd5a-bd9f3e7fff7b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "1d0583f6-8ef8-4676-9fc9-c31af7d31135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7fa030-113f-4d9d-b516-8c0ad203047b",
        "cursor": {
          "ref": "2b038fce-189f-4b35-8e32-e04b2124544c",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "f707d0fe-8839-4988-9f17-c484b7c83b90"
        },
        "item": {
          "id": "df7fa030-113f-4d9d-b516-8c0ad203047b",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5af1e1ce-bdb9-4731-85ba-89087eda8060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e77805-3e7e-4b59-a92f-c93272e8d654",
        "cursor": {
          "ref": "195c82cf-8347-4c44-a53c-411c7c40c45d",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d094fc50-bc04-46eb-a67d-d47721bccbd4"
        },
        "item": {
          "id": "87e77805-3e7e-4b59-a92f-c93272e8d654",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "2ff4396a-6eb0-4dbc-968a-17100df50147",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aaad490-9e1f-4072-8435-997ee76d7cf1",
        "cursor": {
          "ref": "94119410-a70d-47e0-b9c2-f9e70bb4e8d2",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "2e720df5-6905-431f-ad53-8b06dc03b980"
        },
        "item": {
          "id": "9aaad490-9e1f-4072-8435-997ee76d7cf1",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "54b15c02-2c3b-45cf-9408-036f5984ac6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6510b64-33b6-439c-88ea-970a41bb7690",
        "cursor": {
          "ref": "d4100729-08cc-4c45-adfd-eb22627711c6",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "db0e5857-3d8b-4876-8e43-38a95d064e12"
        },
        "item": {
          "id": "f6510b64-33b6-439c-88ea-970a41bb7690",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "6d3e87a7-5d0e-4cc8-a5be-a11ecf0ba7d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2abf3930-8d62-4333-8525-4e8f8db344af",
        "cursor": {
          "ref": "e3f42714-4848-4434-8794-a1b009bfdca1",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "9da6a68f-e7fa-41af-b752-867a557df727"
        },
        "item": {
          "id": "2abf3930-8d62-4333-8525-4e8f8db344af",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6680b11c-6513-442b-98d0-27513127872f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30236f8c-ce04-4092-ab07-e827d3dd48d0",
        "cursor": {
          "ref": "25e7edf1-1984-49a4-916f-1bb4c4ed52b4",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cfd5ac38-24ca-4608-82ac-767b1d21fdb9"
        },
        "item": {
          "id": "30236f8c-ce04-4092-ab07-e827d3dd48d0",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2c8d6f60-8f41-4693-b7a0-eb8226913436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a836349-f78c-4626-b8e1-be0e9fd12a47",
        "cursor": {
          "ref": "73efc1f9-0531-4940-acb6-8aa9a2e5ecdb",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "bd9f9258-3074-4e7e-8c38-d90424ce8ead"
        },
        "item": {
          "id": "1a836349-f78c-4626-b8e1-be0e9fd12a47",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "809b79e5-bb47-4cd3-9dfa-4d63add84ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b54cfcd-d8c6-414f-b8a7-86464bc55d11",
        "cursor": {
          "ref": "8a02ef3b-4f69-4101-adbc-4b6dd2f25e0c",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "0ed2eba6-0da2-478f-8ff9-e01bef2711ef"
        },
        "item": {
          "id": "5b54cfcd-d8c6-414f-b8a7-86464bc55d11",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "74d63561-9f1c-4a48-9957-102a66bf33be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947bfb26-50ce-4b2e-b878-0cf476d2c976",
        "cursor": {
          "ref": "192835ed-a504-403b-aea4-336511291bbb",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8d81a924-5019-4d67-ae90-c60296a8a843"
        },
        "item": {
          "id": "947bfb26-50ce-4b2e-b878-0cf476d2c976",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "059a6b34-0068-422a-a79c-0ca95a5ff6f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff72f227-882a-401b-8af6-e8207de9082a",
        "cursor": {
          "ref": "32d569a0-3035-4e45-84e5-95da73453e28",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "99375a17-4a1d-43e7-9d9b-0d3b9b16110e"
        },
        "item": {
          "id": "ff72f227-882a-401b-8af6-e8207de9082a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "58eedbcf-8dca-4501-bc39-98fdac151ed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d49461f-ec22-45bf-bdf7-90ea6834df19",
        "cursor": {
          "ref": "d84f169c-1868-4031-a832-121128ce73ed",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "81ef1173-249e-41f9-a03b-24e920d5080d"
        },
        "item": {
          "id": "6d49461f-ec22-45bf-bdf7-90ea6834df19",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1d19384f-ece6-42f0-8f9b-323cce311c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "727b9b98-dbad-47cf-9138-24f3b686136e",
        "cursor": {
          "ref": "e7cefad7-03d3-47d1-826b-a2e222a080ee",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3d10a9be-9dcf-4d7c-9799-2b358ba44eec"
        },
        "item": {
          "id": "727b9b98-dbad-47cf-9138-24f3b686136e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e620c20a-429a-4e03-9998-40f6c9b55a3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ce06c2-4fb1-4302-ace0-62bedd12a2f1",
        "cursor": {
          "ref": "19077aff-cbea-4c07-9aa9-50fbf2dc6fdb",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "923052d9-6afe-4e48-8fc9-dcae39e6434f"
        },
        "item": {
          "id": "54ce06c2-4fb1-4302-ace0-62bedd12a2f1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d660b227-1df3-4742-838f-f6247b1c2d2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f577e0b6-fa9a-49c8-b72d-5766eebb3226",
        "cursor": {
          "ref": "79fc8697-b098-41b5-9bad-19a5d036b6d2",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "ea66d10a-337e-4585-b6da-a69730048040"
        },
        "item": {
          "id": "f577e0b6-fa9a-49c8-b72d-5766eebb3226",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1041f57a-bf71-4414-8349-e136b0990e1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8efe9de-4fbe-4146-a820-7249f787e9e4",
        "cursor": {
          "ref": "5ba1e1ad-d350-48f6-83c7-2c1a26c107df",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "53941454-7e10-49be-9b48-e86b5f57aac3"
        },
        "item": {
          "id": "c8efe9de-4fbe-4146-a820-7249f787e9e4",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c42c2de6-dc74-4f0d-a6fe-4cb0f16f5e1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "673533bd-07aa-44a9-a4f1-17a880a20c9c",
        "cursor": {
          "ref": "9ae99614-d7bc-43b6-8a4b-bc6956796f0e",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "f08782c8-6f7c-49a1-af08-4025fe7a4972"
        },
        "item": {
          "id": "673533bd-07aa-44a9-a4f1-17a880a20c9c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "c740abe5-6810-4b1c-aece-551faa5e952f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54c27906-9f3e-49d3-b793-0dafafa2b2b9",
        "cursor": {
          "ref": "ad42e690-1b64-4553-a641-6704c6be6138",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "cec4d365-e699-44d3-aec4-bff71d801f92"
        },
        "item": {
          "id": "54c27906-9f3e-49d3-b793-0dafafa2b2b9",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ef7563f4-d14d-4c71-92e2-4bb4dda3520b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8abdfa7-8510-4d4f-8614-5670d2efe26e",
        "cursor": {
          "ref": "b57ffac1-1b92-43a3-9654-e45684a8f13b",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e713f9c9-eaf6-443c-9271-3bdeb78dcef7"
        },
        "item": {
          "id": "d8abdfa7-8510-4d4f-8614-5670d2efe26e",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6eb7fd5b-be55-4a8d-9489-6dfd57bc0c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cae0ba6e-59fa-4366-8a58-02858dfe4b79",
        "cursor": {
          "ref": "75ef220f-97de-48d5-aefe-ed67b13a5207",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "f67fdcf2-d310-4935-8b96-f2b8e3860c98"
        },
        "item": {
          "id": "cae0ba6e-59fa-4366-8a58-02858dfe4b79",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f6eabf69-1eb4-4160-8f2e-bb78a026040e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db1d8bc-6668-48c9-b182-9793cd555700",
        "cursor": {
          "ref": "368e78d3-0bb8-4d90-bf51-df3fa2098f09",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1c7a4fc3-aa64-4ef9-a5d7-6507090cd41c"
        },
        "item": {
          "id": "0db1d8bc-6668-48c9-b182-9793cd555700",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "51611fea-bd6e-49d6-a741-3b3c66996d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195cf595-382d-4d11-9390-454ab3448e03",
        "cursor": {
          "ref": "a439f884-118d-4ef4-a83f-d54e576be853",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0d104be2-0b6e-4905-97fd-d62a0f2eb612"
        },
        "item": {
          "id": "195cf595-382d-4d11-9390-454ab3448e03",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "05cb30e9-a40b-4cb1-995c-b140075e2662",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed537ff-e3eb-4c39-ab9c-1f7ce4cdf136",
        "cursor": {
          "ref": "f786b272-11bd-48f2-8ffb-fecb2abcbe7e",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7be8f695-7546-4a70-afe9-e2e04c354bd7"
        },
        "item": {
          "id": "8ed537ff-e3eb-4c39-ab9c-1f7ce4cdf136",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "6e46776f-460b-4cca-995c-632868112d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ef7b48-ecd5-4ed5-bed6-2e2cd4b950ed",
        "cursor": {
          "ref": "8323de50-7122-40ed-8de1-fea27b34e3a6",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "3a1bb076-3e22-4911-ac0a-6097664c7313"
        },
        "item": {
          "id": "23ef7b48-ecd5-4ed5-bed6-2e2cd4b950ed",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "3c89cbc3-2b5f-4c2c-8767-c53481f607c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3ca68e-3756-4ff4-abaa-05539978e142",
        "cursor": {
          "ref": "0119e654-ded3-41d3-9aee-b06c4b2e426e",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "93fd5df6-1eab-47ab-aa24-96ac8e69ce7d"
        },
        "item": {
          "id": "aa3ca68e-3756-4ff4-abaa-05539978e142",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "3b19d264-4bcd-4cf0-8070-b99279e7af0e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d741bf4-0a60-44ec-b520-8e21f9572515",
        "cursor": {
          "ref": "b668bb4f-a352-4301-9cc2-2ba46d1714c2",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "39b92889-c9f8-44cb-b0cf-20e6138229b2"
        },
        "item": {
          "id": "0d741bf4-0a60-44ec-b520-8e21f9572515",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e9c14541-9c78-43d1-a7f8-f7c700e45b8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47519276-2af9-47cc-8d3a-cfab8fa6d85d",
        "cursor": {
          "ref": "5d464b89-e67a-49d0-b5f9-94f31c8eb5cd",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "d2c4194c-e996-4924-97e1-e83ea39e208c"
        },
        "item": {
          "id": "47519276-2af9-47cc-8d3a-cfab8fa6d85d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "d8e17e51-0c1d-44d3-98db-bbd804f3ea3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073b0e2c-a942-4cdd-ad18-0cc730e8bc3e",
        "cursor": {
          "ref": "a14d9385-61f5-46a1-9ee8-5dcf05ce6725",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "85e7224f-d648-433d-9bb7-a059b224a021"
        },
        "item": {
          "id": "073b0e2c-a942-4cdd-ad18-0cc730e8bc3e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "0ce0b863-e1d7-415c-ac45-63f01c7cc0b2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9411f54-a5c3-4820-bf99-f0d3d6df9529",
        "cursor": {
          "ref": "ad071e67-2b64-4205-8c4b-c7478e69c70f",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ea0a61cc-f087-4bcb-a757-72e9ea55d055"
        },
        "item": {
          "id": "b9411f54-a5c3-4820-bf99-f0d3d6df9529",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0f3da9c2-e8b1-4fa0-948c-72153cf09ef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ed192c-aaa2-4155-9d4b-66ded11b0785",
        "cursor": {
          "ref": "1f42fde1-7786-41d9-89c2-f4852efdc875",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "42ed86c9-c2dd-45f6-acea-d8b3d117a42f"
        },
        "item": {
          "id": "e0ed192c-aaa2-4155-9d4b-66ded11b0785",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "9476eb96-02bc-439b-b147-fb0d8dac883f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4f0fdf1-0ff6-43a0-801c-752de4070133",
        "cursor": {
          "ref": "05647c71-1486-4356-ba6d-f84dd4742cbe",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "399af205-eb5c-43d2-a22d-d5c7ae631f9d"
        },
        "item": {
          "id": "b4f0fdf1-0ff6-43a0-801c-752de4070133",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b5d0d905-b2e3-4cea-afa8-d453c6644ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78fe9ab7-5bc5-433e-9a77-0c1ab42c4f9e",
        "cursor": {
          "ref": "1bbcab83-77dc-4029-8fa0-f10ac9dd0001",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "f3df7bee-3f66-4fb2-b04b-8d4893cbaed3"
        },
        "item": {
          "id": "78fe9ab7-5bc5-433e-9a77-0c1ab42c4f9e",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "3a279f37-c21b-4f8e-b03d-19470255373c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7db7d07-c450-4f21-a81e-69ed17b5d42c",
        "cursor": {
          "ref": "d2ca4c83-4191-40ce-814f-bb82484e804f",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e58d6c57-2ac7-4691-bf79-6b18fe6b5abb"
        },
        "item": {
          "id": "e7db7d07-c450-4f21-a81e-69ed17b5d42c",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6e14a9a9-3862-454a-956c-081252f3c3ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b1cc40-8aa7-4e1f-890f-c4ac8cd9f732",
        "cursor": {
          "ref": "227a599d-b95a-4f81-8526-4c76ca12c7e5",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "d7343a97-606f-4c38-848e-a2b1a5a393af"
        },
        "item": {
          "id": "40b1cc40-8aa7-4e1f-890f-c4ac8cd9f732",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "29363e10-adc7-49ea-89c8-4bc26ef20c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "611a5d4e-c219-4b4c-84d9-526064627076",
        "cursor": {
          "ref": "6c1b88ee-d2d6-4ab1-92c9-457121b08b13",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "99c7f4cd-857a-47b4-9ce9-73ce7c6d471a"
        },
        "item": {
          "id": "611a5d4e-c219-4b4c-84d9-526064627076",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "beb930b6-de97-4322-9c19-a59f5911b7bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd0ecf8-79ed-48e0-a7c1-7646f88dd598",
        "cursor": {
          "ref": "c503b00b-ca23-4dc2-9e23-f5b54178e3e0",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "823258f0-4f00-4cbb-a23c-39638ff895da"
        },
        "item": {
          "id": "1dd0ecf8-79ed-48e0-a7c1-7646f88dd598",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "92888416-6d2c-4214-845f-af95b54c8f58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac43a5c0-3648-481f-9425-971f1f2a0bde",
        "cursor": {
          "ref": "4aa8661f-0a9d-424e-8bb4-832b9ea3f4cf",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "95cf49bd-84d9-477c-897f-44f6e2cc3144"
        },
        "item": {
          "id": "ac43a5c0-3648-481f-9425-971f1f2a0bde",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8885b2c1-2684-4935-aa6e-fcc2efe7d94e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a91e73d-7e97-494f-af83-a1eaacf66240",
        "cursor": {
          "ref": "1376fdf1-2c6d-4003-991b-98bf9bca846c",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "853867ca-3438-43b7-a88c-2a41d5c3f391"
        },
        "item": {
          "id": "4a91e73d-7e97-494f-af83-a1eaacf66240",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "763a7e76-2617-47ff-b579-d54f35cd31f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1e00590-b996-4bda-a9b7-dacf1ad806c1",
        "cursor": {
          "ref": "028aa840-c554-48ee-8316-821554490e61",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f63558f8-c79d-486c-84e2-8337c45f8bef"
        },
        "item": {
          "id": "c1e00590-b996-4bda-a9b7-dacf1ad806c1",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "709d0978-8bf6-42f8-9598-26cd1a5ca76c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef6f1269-bc27-4a5b-b1be-ee5df3820534",
        "cursor": {
          "ref": "15a6eabb-f9a3-4b4d-b145-5aad3766949e",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "6cbd3cfc-2cd6-49c9-a6df-dcc21e5363a2"
        },
        "item": {
          "id": "ef6f1269-bc27-4a5b-b1be-ee5df3820534",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "623a7c38-07f7-45c1-8c44-ba0672dab249",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8507eb36-bd43-4427-ad27-e110496e6478",
        "cursor": {
          "ref": "d07a9a0b-d49e-4001-a9ee-3295f8f7f6e9",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7ff5376d-bb10-4c5d-ba20-27ac5faa9c07"
        },
        "item": {
          "id": "8507eb36-bd43-4427-ad27-e110496e6478",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "3df0e01d-72d5-4cfc-a3a6-47f38c1439f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92a0305d-4973-46c1-aaac-fd22d4006ebf",
        "cursor": {
          "ref": "3808d1b2-9c58-4f64-933f-0ee12e38fd49",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "70677132-db03-48e6-890f-fd3d4a89fa63"
        },
        "item": {
          "id": "92a0305d-4973-46c1-aaac-fd22d4006ebf",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "efc1a180-63f3-40f6-977d-500e577ecc77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "886a43a7-aac2-493c-a0ad-8e1374d52222",
        "cursor": {
          "ref": "954755c3-5cec-4e50-9b6d-e9f95cb6c9b1",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8bccc072-3e68-493d-8155-5c96c27d0f99"
        },
        "item": {
          "id": "886a43a7-aac2-493c-a0ad-8e1374d52222",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "4b54ff60-d7f1-4bff-b4fa-d12794792b89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "705f98fa-64c3-4e10-9aff-69456ae9ca89",
        "cursor": {
          "ref": "65973ded-359d-466c-b5be-15fd7c86899c",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "85842039-b323-4cc6-99e9-5ed4e3030507"
        },
        "item": {
          "id": "705f98fa-64c3-4e10-9aff-69456ae9ca89",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "bb6c98b1-6532-4c0a-a65d-f0bc209956f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e3bf6b-2871-4a8b-b85d-6e1001b5cc4a",
        "cursor": {
          "ref": "7bdf8193-6002-4cd9-9d1f-7a24cf791b65",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "231d0f3e-1815-4340-a385-2426376fe9e2"
        },
        "item": {
          "id": "52e3bf6b-2871-4a8b-b85d-6e1001b5cc4a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "de2b6aae-438e-4cef-b60d-932633be3041",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf37114-fe38-4e14-9f36-ebdb27581a62",
        "cursor": {
          "ref": "d663ca39-25b3-487c-a363-afe0bf66164b",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "11d0521c-6ace-4fe5-8e32-9578924a0792"
        },
        "item": {
          "id": "dcf37114-fe38-4e14-9f36-ebdb27581a62",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "1976a16d-cf8b-47e8-a6af-1753d7105f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3fc508-8e7a-45a8-964f-737b1c799793",
        "cursor": {
          "ref": "f9cee5a9-b6fe-4ca4-b0ca-43008e1b803e",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "93e7b458-1f6f-4974-9547-e3e24b7ae15a"
        },
        "item": {
          "id": "5b3fc508-8e7a-45a8-964f-737b1c799793",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2b98ad7e-c1c6-495f-aa66-3f372834c67c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ff11de8-55d1-4fd3-9414-cc25e8d2e118",
        "cursor": {
          "ref": "94a2c332-881f-4063-9195-82a88dd5d816",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e3c33e72-519d-49c6-8324-ced4782558b3"
        },
        "item": {
          "id": "4ff11de8-55d1-4fd3-9414-cc25e8d2e118",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "67cad0da-8576-4054-8a03-37043134f6bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0420e30-9c8a-4d3a-a79c-3bfa0613240a",
        "cursor": {
          "ref": "29d7be99-1262-4888-a1d7-bd93d9fbd5ab",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c326c528-80ac-46e5-a110-2e2d9f3da81b"
        },
        "item": {
          "id": "f0420e30-9c8a-4d3a-a79c-3bfa0613240a",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "031f3888-d305-47b8-bfd6-37b7e298cdc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a7fdc6-5ade-480c-a846-fa2c1049c8db",
        "cursor": {
          "ref": "6ab3a44d-dddd-479a-9cfc-2f8113693b5b",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d268073d-f608-46ab-a6c4-b8d922f79b3f"
        },
        "item": {
          "id": "c9a7fdc6-5ade-480c-a846-fa2c1049c8db",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9ab6cb25-08f4-4ece-b458-118e98331a47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9791670-6e35-4ff3-98b8-563fed04d376",
        "cursor": {
          "ref": "82dc942d-a193-4c4d-88e1-6cf1a8e24461",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "67695e0a-2cbd-481c-abdd-801a40bbba71"
        },
        "item": {
          "id": "d9791670-6e35-4ff3-98b8-563fed04d376",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "e238b833-637e-4397-b5cb-932055f60685",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75cfe34c-75f2-42a3-96ba-228c8a4cd19a",
        "cursor": {
          "ref": "7182f807-b4ba-42e5-8ffc-6c5e4e2b9c49",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "88333bf8-23da-4501-a7da-77a977b777f4"
        },
        "item": {
          "id": "75cfe34c-75f2-42a3-96ba-228c8a4cd19a",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d997d21f-fc43-4fa2-b4ae-137ed5f8d2be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b708209-cd19-49ab-ac32-577d4ad56949",
        "cursor": {
          "ref": "8ed25fe9-9570-4604-b055-bc48100a7eaa",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "3d69aebb-4bb4-4e79-9211-24c1484569e9"
        },
        "item": {
          "id": "4b708209-cd19-49ab-ac32-577d4ad56949",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "e0224df9-2b31-4c16-aae1-5afc7830fbd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fed43be-b209-4250-a337-7ab1b79ea082",
        "cursor": {
          "ref": "7bf82cb9-ade7-4cfb-89c6-1ead6a605426",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "383114ab-3a20-46c1-abad-0eee113d80f1"
        },
        "item": {
          "id": "0fed43be-b209-4250-a337-7ab1b79ea082",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "749bcb85-2352-4133-9886-61e1f73307ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bdc8e93-e91b-4398-be8f-db738a4aa13e",
        "cursor": {
          "ref": "55f107a4-3d44-4100-9607-8fc468e12804",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "5a7b04dc-0cd1-42dd-ac86-2998208b8887"
        },
        "item": {
          "id": "5bdc8e93-e91b-4398-be8f-db738a4aa13e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "2f284f79-7174-4a74-b40c-dce2f1c0c7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fa3300f-ba4d-41ba-932a-27a167bff8b0",
        "cursor": {
          "ref": "413f0b70-7af6-41b0-91e4-6691935f1219",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "874e4a0c-1fd2-494b-a9c9-2ce05b57edb7"
        },
        "item": {
          "id": "4fa3300f-ba4d-41ba-932a-27a167bff8b0",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "f5619cfd-5387-4abd-ba90-8283c7aabc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75af9feb-002c-41fa-8f11-6d6f35d14d7c",
        "cursor": {
          "ref": "0c955738-72a1-4a67-95d1-fa880e1cb52b",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "f6d3c071-fc42-4f83-be3f-e668b334a21d"
        },
        "item": {
          "id": "75af9feb-002c-41fa-8f11-6d6f35d14d7c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "13e091e5-a32b-4cda-8d39-69b0fbd6fa14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a82d577-6ad2-4062-bae5-1ff620f993c2",
        "cursor": {
          "ref": "ad3835dd-c915-4c2b-bab5-87f3f22fbe85",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5afa71dd-4cfe-4d93-9c2e-16b3a79f8d5c"
        },
        "item": {
          "id": "8a82d577-6ad2-4062-bae5-1ff620f993c2",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "6b71afdd-9bdd-462b-b862-706044994307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7148ec-2bf1-4439-b30f-20dce929ee73",
        "cursor": {
          "ref": "c2b12ddb-f8cf-4576-a1c6-78beaa03d147",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d8d2a94f-c0aa-4f6d-b166-313bad2cf297"
        },
        "item": {
          "id": "4c7148ec-2bf1-4439-b30f-20dce929ee73",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7d093c8c-7b69-4688-862d-bd90078d8358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be25e5f8-06b2-402d-ad87-5b180667dd81",
        "cursor": {
          "ref": "84f8a8d0-d3e7-451e-85e9-9296f75e6db0",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "86b8cbee-fa06-41b0-88d1-d8a3f20b05a0"
        },
        "item": {
          "id": "be25e5f8-06b2-402d-ad87-5b180667dd81",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5911a8d4-01b4-4c97-a0a5-b6ee3c2fa9a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbe82b42-1372-4d44-a9bc-b95abeaeda58",
        "cursor": {
          "ref": "541feafc-cad9-45fe-8a65-1babffbfa2ab",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "fab10783-f18e-4958-bde4-6401d829479e"
        },
        "item": {
          "id": "cbe82b42-1372-4d44-a9bc-b95abeaeda58",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "be0fe500-bcdf-425c-8a2b-16c058c020e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36f0cf81-c861-4181-bad2-7e89a0a0a8f4",
        "cursor": {
          "ref": "65469c2d-b604-406a-b583-104640750c53",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e59562d5-bd34-43fd-a0ce-ae4fa39bd4ac"
        },
        "item": {
          "id": "36f0cf81-c861-4181-bad2-7e89a0a0a8f4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "06a4a559-708d-41cb-8deb-b61c0d8ae169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9de4873-c7cc-493b-b260-ef3c70dd3735",
        "cursor": {
          "ref": "08f1d8a3-53f9-4387-a22a-eeeac7f2213f",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e4c4ba2d-8f2d-40f6-89ca-4ad56f986505"
        },
        "item": {
          "id": "a9de4873-c7cc-493b-b260-ef3c70dd3735",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "dfd7b0d1-022b-4ad3-bcf9-cb95ca796261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4283d32a-b471-4735-adb2-916b43332ab9",
        "cursor": {
          "ref": "1041ff0c-aa9f-4d61-bc6c-3245ad27ac4d",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "fdc9be83-3b2e-47ac-ad13-b029e5ffca8a"
        },
        "item": {
          "id": "4283d32a-b471-4735-adb2-916b43332ab9",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "33f4a6e2-c72e-4727-958f-5a509ffadba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e04bd66-99fb-46ef-baf3-c7073acb39e9",
        "cursor": {
          "ref": "85f786bb-1618-40cf-9695-ca6fd551d0ec",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2a7a7efa-4083-4db2-9ace-c7f5f19c44bc"
        },
        "item": {
          "id": "5e04bd66-99fb-46ef-baf3-c7073acb39e9",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "fae14664-5744-4e37-b812-1b6094483bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dcf87e7-717c-49c5-9b9a-3582db65b32e",
        "cursor": {
          "ref": "dc8d382a-f196-44cf-9692-2700e10a05a5",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "3ee89e8c-fa35-4f40-831f-89c0bfe488b6"
        },
        "item": {
          "id": "0dcf87e7-717c-49c5-9b9a-3582db65b32e",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "08d0eae3-be18-4085-927d-f74e14339dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8683f0a1-d616-4830-a5ad-3b59f357c8be",
        "cursor": {
          "ref": "96048e00-d241-48db-94f2-a9ff230a16b1",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "531dd199-cbbd-4d10-b7ec-1cc4b1071311"
        },
        "item": {
          "id": "8683f0a1-d616-4830-a5ad-3b59f357c8be",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3e77806c-b222-4f1d-9f1f-94e9997592d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff82b4b-1956-405d-9891-e98aa6020c7d",
        "cursor": {
          "ref": "a53ec43d-b963-4375-92b2-1928fe941d92",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2b0e4ff7-bb87-4cac-a0d7-84f861573eb4"
        },
        "item": {
          "id": "5ff82b4b-1956-405d-9891-e98aa6020c7d",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1d9cf072-ef61-434e-943a-60f070c83b17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df90a15-ac9a-4c11-9112-c3f7ce0e3662",
        "cursor": {
          "ref": "fb98b1f6-2058-4201-a9e2-3b36976acaeb",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1bd5ae53-270a-46ae-9a95-ac98029a8559"
        },
        "item": {
          "id": "8df90a15-ac9a-4c11-9112-c3f7ce0e3662",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3c1a8376-9f5d-4d86-a185-ef25fcb7da01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a63568-f2e6-4e98-b2f7-89a1c1aa94cb",
        "cursor": {
          "ref": "cebfd182-c484-4c87-be81-3fcdfda48fac",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "61dfa3e0-60bc-4657-93d2-ab68e644decb"
        },
        "item": {
          "id": "08a63568-f2e6-4e98-b2f7-89a1c1aa94cb",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f7005fac-01ef-47d2-b182-a6917cc253e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0503dd6c-ba00-4860-a129-bf655b09a2b9",
        "cursor": {
          "ref": "2414cdb5-be5a-4d7e-8807-662ee11cda80",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "cc235471-207d-406b-929c-6a8813bd4187"
        },
        "item": {
          "id": "0503dd6c-ba00-4860-a129-bf655b09a2b9",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "8d0e0abe-c70b-4305-853e-c5561b11474c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29425004-75b4-473b-8a14-d1cd38b45a8b",
        "cursor": {
          "ref": "3949f605-b4c8-497c-95e2-b4bcf5e5af69",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "20d34ed6-f931-49b9-9b08-63adb02473c6"
        },
        "item": {
          "id": "29425004-75b4-473b-8a14-d1cd38b45a8b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "888c7777-61ab-4d11-924f-81a82f01ba4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5a17d13-90da-4bb6-8498-209532782d16",
        "cursor": {
          "ref": "0812abdf-8a00-4b25-81a3-1f67a307d9c0",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "5419f74e-bfa2-4d2f-8443-22d9f15c9954"
        },
        "item": {
          "id": "f5a17d13-90da-4bb6-8498-209532782d16",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "97c8d8b8-9e6d-4df1-a208-9ebb31ad24e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b799a115-2160-4976-ad03-5c505829b5be",
        "cursor": {
          "ref": "818d7cce-f269-449b-9615-241e068ce59c",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "cf4aab7b-d43a-401d-9251-0128b7ffc476"
        },
        "item": {
          "id": "b799a115-2160-4976-ad03-5c505829b5be",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "1fc159b0-8676-4955-a17a-2842ac51da3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865b2929-a857-4582-b2a9-4e6fefacfb18",
        "cursor": {
          "ref": "4f442056-9489-40b4-a68e-fb4f86f2884a",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ee6ac9ae-0d2e-4abd-a7f1-dae6b576f467"
        },
        "item": {
          "id": "865b2929-a857-4582-b2a9-4e6fefacfb18",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "0499c621-0f6a-48bb-8454-989b9b7d6460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01fccd2a-d5c6-457e-86a6-937dd5f53a55",
        "cursor": {
          "ref": "117d4660-83d0-41a7-827d-e613337e093c",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0f63365e-4331-4a71-a6c7-00914e1df340"
        },
        "item": {
          "id": "01fccd2a-d5c6-457e-86a6-937dd5f53a55",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "e4f58c0b-5445-439b-8b26-f89711c00e74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f419c7f9-2c8e-4504-87d8-763e55c18635",
        "cursor": {
          "ref": "476799ee-91f2-4fd2-9036-a81d01908a2b",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c4cf336f-3d20-4540-bd04-91b805c596e9"
        },
        "item": {
          "id": "f419c7f9-2c8e-4504-87d8-763e55c18635",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e00d6564-ab65-46cc-b6eb-2773c3e5d5c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6e754b-b109-445d-a229-e0750bdb80b0",
        "cursor": {
          "ref": "739938f1-d086-4d04-9141-23448de265e0",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b1d90043-1117-426e-8e43-4e63c0d9027d"
        },
        "item": {
          "id": "8f6e754b-b109-445d-a229-e0750bdb80b0",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7408aebf-d4eb-4b91-b2c3-dd6af2bd4e24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a26768d-ab1a-40e8-bf13-9fa4d9dfadc6",
        "cursor": {
          "ref": "51debc31-ae99-40af-8222-806eb66d84bb",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a4278c53-4ba5-4e2e-9e30-bb774cab1be4"
        },
        "item": {
          "id": "0a26768d-ab1a-40e8-bf13-9fa4d9dfadc6",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "d82eac02-d79d-4b08-bdcc-5ca376a81233",
          "status": "OK",
          "code": 200,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "c0d987ed-eb8c-4776-a357-f82f37e105d8",
        "cursor": {
          "ref": "7f5068e9-6378-4563-8b2c-7f39fd2e7c02",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "6dc9fc60-7349-45cf-b519-13620a2b6b0c"
        },
        "item": {
          "id": "c0d987ed-eb8c-4776-a357-f82f37e105d8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "d286a6c0-5dca-43f0-bafe-6ca12d50fe7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01dc2184-8ce4-4c8b-b454-2dd9b9518f4e",
        "cursor": {
          "ref": "f5bfc390-5cf5-4cfe-a80c-299de9ecfc61",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "341a0b80-c9b8-4877-856c-258001ab4132"
        },
        "item": {
          "id": "01dc2184-8ce4-4c8b-b454-2dd9b9518f4e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "bde0db19-11b9-4ae4-8a22-0faacf069986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e235481-9232-41a3-a93c-1d46f9bccffb",
        "cursor": {
          "ref": "790f5cae-4dcf-47ae-b900-34ed9d155238",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6e4584dd-5eb5-4325-b9f2-6b5cae5da5db"
        },
        "item": {
          "id": "8e235481-9232-41a3-a93c-1d46f9bccffb",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "6c755399-76cc-49f0-8eb0-21595b2853f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b14ce29d-2017-41b2-b522-83f7ea76057b",
        "cursor": {
          "ref": "5b3f232d-c29c-4943-acd7-0ff26fe1b380",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "30e7a5f8-cea1-43dc-a2ee-3533a9c886d6"
        },
        "item": {
          "id": "b14ce29d-2017-41b2-b522-83f7ea76057b",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c473d740-9950-4872-9785-b04742359d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2bfa60c-1ffa-4f44-ac39-83f50f08205c",
        "cursor": {
          "ref": "e5465d25-224c-4d87-b654-a724fa8499fc",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "99459266-3c19-4222-9443-633ddf121c1d"
        },
        "item": {
          "id": "d2bfa60c-1ffa-4f44-ac39-83f50f08205c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "558ae8e4-da66-4aae-88cf-bb84289ef3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a0de2f6-18b3-4682-81cc-9bb3d28cb355",
        "cursor": {
          "ref": "30560278-88ee-467d-a9ef-4fedbd38ba77",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "8b9b5b54-7a9e-4bac-a00e-bebb997e37ec"
        },
        "item": {
          "id": "8a0de2f6-18b3-4682-81cc-9bb3d28cb355",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ad66ae41-f177-4a30-8058-9cc6d9c5dc69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "049cc41c-7af7-4e86-b343-cd0d6e5a35b2",
        "cursor": {
          "ref": "10421fb4-407a-4572-b1f3-f8193c2c757f",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "7a7817ce-5c77-4ab3-9a0d-b991e2f9794a"
        },
        "item": {
          "id": "049cc41c-7af7-4e86-b343-cd0d6e5a35b2",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "cb588059-5599-42c1-a8f6-b9174b1bed0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "545b58ca-77d3-4c2b-853f-eea300731738",
        "cursor": {
          "ref": "b2275d8a-d049-400b-a5e1-adc31c1a16db",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "45f58b03-ba66-42cc-abb5-3109cae0f390"
        },
        "item": {
          "id": "545b58ca-77d3-4c2b-853f-eea300731738",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0e5a1fec-5835-4968-86e3-d9d18edba1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf9a6be-2107-4f85-8b8a-fdbb2dd70a35",
        "cursor": {
          "ref": "3a8efa9c-7e69-47e7-bcad-13fff1a072f9",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "0a6cf5d7-20b9-4ed2-a475-595eacfa7825"
        },
        "item": {
          "id": "8bf9a6be-2107-4f85-8b8a-fdbb2dd70a35",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b74d5dc8-78cc-4855-bf64-87553dfbd403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aea69b8-f8f1-4909-9dae-d6b0d650725d",
        "cursor": {
          "ref": "fc3f00bd-1fe9-45ca-bcf2-b4d5e9a92a90",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d5908df0-9e56-4172-8451-8ec58915db99"
        },
        "item": {
          "id": "7aea69b8-f8f1-4909-9dae-d6b0d650725d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3aedbc3b-a112-475e-b5fd-76579a258321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "652c1ee2-1536-4e5a-8591-5bde904a4c87",
        "cursor": {
          "ref": "2b8c0626-cdb8-44a1-9c68-597ddf9d3c87",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "861691d5-f782-4bc7-a16b-a85f6e330cc8"
        },
        "item": {
          "id": "652c1ee2-1536-4e5a-8591-5bde904a4c87",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "40799fed-0c67-4a7d-8adf-746a2a3522e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5205575-cb9c-464a-b15e-024350b88c61",
        "cursor": {
          "ref": "c0f1bae8-1068-4acf-91ad-35bfe44f3035",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "4d92d84f-4c7d-433f-9e9b-a476a8eb5a77"
        },
        "item": {
          "id": "b5205575-cb9c-464a-b15e-024350b88c61",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "6b77e751-c448-4af0-b67a-2da6e0888ee4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064a17ed-52a0-4806-a31f-58b1aadd9f80",
        "cursor": {
          "ref": "15c69556-a6ab-4cc8-8ed6-4a2d0f75e3a7",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "351137f1-fb23-4a69-ba1a-ea2da191c3a9"
        },
        "item": {
          "id": "064a17ed-52a0-4806-a31f-58b1aadd9f80",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "64c4373e-49b0-44b6-90d3-8de1feb60c7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb7f5b1a-1b4b-4321-96c0-86be40b81bec",
        "cursor": {
          "ref": "b2d4dec3-0396-488a-96af-4200da18b45c",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "00a8ad13-6ac5-41aa-ba8b-a65a67fd8f91"
        },
        "item": {
          "id": "eb7f5b1a-1b4b-4321-96c0-86be40b81bec",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "67b16f7f-2cf6-4e92-ae51-40d6674fe718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af5d6836-1f1e-4477-8fca-5deba0edcec8",
        "cursor": {
          "ref": "637105a3-6718-44d1-9325-67aae7ff38e3",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a743c739-073c-4cfe-a90c-385f322bbd58"
        },
        "item": {
          "id": "af5d6836-1f1e-4477-8fca-5deba0edcec8",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "aa17ccc4-34eb-4f7e-bebb-b96c55f34b11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9be6c658-815d-4f2d-ac26-ca5f01edb3fd",
        "cursor": {
          "ref": "ea9b0025-49c9-4475-a9e4-bc50b1b8dc7f",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "1eb0f9cb-3eae-47a6-b5e7-7e4b0842c499"
        },
        "item": {
          "id": "9be6c658-815d-4f2d-ac26-ca5f01edb3fd",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "551eb813-5a3c-4767-b255-df0592982135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf8786a-dbde-4eea-a9d8-c04f7800843f",
        "cursor": {
          "ref": "c317843f-0856-48d9-871f-5448c8c8bacd",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "119f4ecb-4dbe-4e2a-a4a2-32cebbd7a6ee"
        },
        "item": {
          "id": "2cf8786a-dbde-4eea-a9d8-c04f7800843f",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "7d6c688d-62b6-4d24-87c6-7c9105099c2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b555873c-6059-4c62-a7c3-de32edd2be06",
        "cursor": {
          "ref": "fa1bf5be-5987-43e9-9ec7-1c87f418d54b",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a43b7871-27dd-4a1e-98b9-37b1122c0670"
        },
        "item": {
          "id": "b555873c-6059-4c62-a7c3-de32edd2be06",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "eed026fa-615d-4a4e-be7f-a16bf33106cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8975a09-283d-4077-aa44-47dcf5395ce5",
        "cursor": {
          "ref": "1618f729-8213-4e3e-91b7-fc85912dacb5",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "faa4f613-2ef0-44c9-9705-87e1ba8c20e3"
        },
        "item": {
          "id": "f8975a09-283d-4077-aa44-47dcf5395ce5",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9f8182e5-8d3e-4e31-8649-ecd24241488d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19a0cc9c-4643-4dd6-959f-3a3769100cd5",
        "cursor": {
          "ref": "81e091f7-0f04-4167-9ab5-673eb6428e25",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "9883aade-a9b9-4556-97cd-c1a6f10e573e"
        },
        "item": {
          "id": "19a0cc9c-4643-4dd6-959f-3a3769100cd5",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f8cbcc14-22d9-4b51-a593-2f4666fabc7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c8c951-3685-4f4a-8e25-3df0a9d2a972",
        "cursor": {
          "ref": "52812b56-4cca-44f2-9a48-3d14045541a6",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "faad14a5-aafb-4af0-bb62-40de6903d536"
        },
        "item": {
          "id": "49c8c951-3685-4f4a-8e25-3df0a9d2a972",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "c1d3e74f-795e-4d6d-a977-b0467b5b41b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9428afd8-c17a-4ed7-963c-b66391e8518c",
        "cursor": {
          "ref": "e60cda29-4e01-47e7-9fdf-c181f00bbe39",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "abeff29a-e8e7-445a-b6ff-bb6047502e5a"
        },
        "item": {
          "id": "9428afd8-c17a-4ed7-963c-b66391e8518c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "127093f3-e1cf-4fe9-af38-5f6fc914c13c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598244fb-c8c0-433b-8857-830e0bb1a5d3",
        "cursor": {
          "ref": "7be157af-6b75-41b1-bae8-cb68ebd96b15",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "a9e6dfa3-7774-4fd7-af1c-3acd6fa298ac"
        },
        "item": {
          "id": "598244fb-c8c0-433b-8857-830e0bb1a5d3",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "560dd1c6-632c-4e1b-93c8-6b90018e1322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f1ed192-32dd-4673-b0bb-99323ec2b21b",
        "cursor": {
          "ref": "540a0b34-ba04-446e-b03b-fdeadfe8325f",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a318a918-6010-4b7d-9ac1-0f940401ab2a"
        },
        "item": {
          "id": "8f1ed192-32dd-4673-b0bb-99323ec2b21b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3157ba54-b8c8-4361-b009-a26d555ee15a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56a065de-14f3-4215-8043-f533fe558f84",
        "cursor": {
          "ref": "d56a2f7a-41aa-4061-95f5-734b482fced9",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "9647aca8-a6e7-4c60-b91c-cb09efb65f46"
        },
        "item": {
          "id": "56a065de-14f3-4215-8043-f533fe558f84",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8c8db67c-9f0c-4ef4-a63c-42a4dfeab2f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "008b438e-e94c-4132-9766-6a02e5c1d737",
        "cursor": {
          "ref": "8e3c39f2-be02-43ad-adc8-5a4f9ea2d36c",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "b39ade7e-ec2e-4d28-91de-71a706aca105"
        },
        "item": {
          "id": "008b438e-e94c-4132-9766-6a02e5c1d737",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3cbd6e59-4c08-4c9e-a93a-9c49bf7224d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d28774-d51d-4991-8bdd-848c1276ec40",
        "cursor": {
          "ref": "8213aaec-9409-444b-a691-c0288e2b0f6c",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "39be0b48-2396-472a-b628-c7251d1baa54"
        },
        "item": {
          "id": "d8d28774-d51d-4991-8bdd-848c1276ec40",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "16432051-b9de-48f5-bbd5-3e3b4682c01b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45d7f94b-ae73-428a-9fc7-6dbb2098bd73",
        "cursor": {
          "ref": "15786b3d-3144-4b84-abf5-729045aa2803",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "d489e3ff-cc21-420e-8d93-e0d3b75e29c1"
        },
        "item": {
          "id": "45d7f94b-ae73-428a-9fc7-6dbb2098bd73",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "75b07424-ff00-46e9-b53e-3d9394f720fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7884a232-20ad-478c-be94-4a1db9f9f681",
        "cursor": {
          "ref": "629962fd-e37f-45e8-a30e-809032fa10fa",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "59ec350f-554c-47b0-9ae3-b0af75d60948"
        },
        "item": {
          "id": "7884a232-20ad-478c-be94-4a1db9f9f681",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c20d628d-97fa-4641-81b2-c48fde2a3e2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38c97b1c-6ec7-4b5a-b365-3bd2680c5dc6",
        "cursor": {
          "ref": "48658000-dbfb-47c0-83ea-cb0cbbe98b32",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "5c7f6e16-b95c-43b6-8b4a-9124dcd5a7e2"
        },
        "item": {
          "id": "38c97b1c-6ec7-4b5a-b365-3bd2680c5dc6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "d173323e-fab8-43a3-96a7-5c37bf5cc365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b6d3aa-c2dd-48ab-b095-0e540266fd89",
        "cursor": {
          "ref": "7849e43f-8c79-4668-8004-597652e35ffb",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "1f5e803a-db5b-4568-bc19-fe930dd1e9e7"
        },
        "item": {
          "id": "c6b6d3aa-c2dd-48ab-b095-0e540266fd89",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "21bb2d1e-da39-445b-8904-c7e97d39d3fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ccf1ca0-e13d-44aa-800b-37c49894eeee",
        "cursor": {
          "ref": "88086a7e-a2e1-4ef2-ac7d-187da7ccb239",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "ef55e68d-d686-4921-9161-1aa346c394ab"
        },
        "item": {
          "id": "1ccf1ca0-e13d-44aa-800b-37c49894eeee",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "a446ceaa-5170-4a2f-9bcb-afabd8ff7c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bce27ed-536e-42cd-bf31-6846a05841c4",
        "cursor": {
          "ref": "e83d2b24-0fcb-48a1-8f3c-905db7f9c51b",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "5442ae96-f514-45f8-8aa5-83ac46bc9af5"
        },
        "item": {
          "id": "2bce27ed-536e-42cd-bf31-6846a05841c4",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "043d94be-dec8-41b1-bf8d-f60396cf7e44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721d8f6f-adc3-475f-8014-0f2d2e7f6ff9",
        "cursor": {
          "ref": "a8b263fb-5d5b-4989-8649-3fa3e8b0d9b9",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "834744bd-8870-44ca-9e79-a2967fb5554c"
        },
        "item": {
          "id": "721d8f6f-adc3-475f-8014-0f2d2e7f6ff9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a10747da-f4a5-4f3f-8963-df872320dea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfff7263-98dc-4fb6-959f-618172b75839",
        "cursor": {
          "ref": "c285b906-89c2-4c5c-a3c9-05d238421961",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "8b2b01d7-cfac-4635-87cb-a6e17f3571ee"
        },
        "item": {
          "id": "dfff7263-98dc-4fb6-959f-618172b75839",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "2733cff7-8f68-4f03-81bd-7e185b9fb9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0d231a7-6551-425e-8624-5d5a4245376a",
        "cursor": {
          "ref": "e555931b-3ca4-4a66-9603-c002e64716fd",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "089da9a5-77d1-4bfc-8c44-d0b78343e391"
        },
        "item": {
          "id": "b0d231a7-6551-425e-8624-5d5a4245376a",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a971cb72-7c57-4996-8592-25f30ba42330",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28316641-7304-4df2-ac14-6de805e71675",
        "cursor": {
          "ref": "c5faa329-1e4a-4d6b-921b-616f1aff5cb2",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "d988d79e-72f9-4eed-bf3e-4fe28b7055be"
        },
        "item": {
          "id": "28316641-7304-4df2-ac14-6de805e71675",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "e78797ae-ee71-4d09-b096-ce973410ae20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3320703c-38f1-447c-bf1c-6712e395d465",
        "cursor": {
          "ref": "a1345589-ab5e-44b7-8844-64a55b52752c",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "393411e8-dc7a-4b10-931a-b7bb29711fcd"
        },
        "item": {
          "id": "3320703c-38f1-447c-bf1c-6712e395d465",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "0f65f87e-ed4a-4d5c-93a9-965f46579061",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5b4d9e5-1c05-4e23-bec0-54735b914f26",
        "cursor": {
          "ref": "e31d02f2-ea9f-4b8b-aaf3-6f3eabf08b52",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "08b1f530-f370-4cf9-b661-4bfaa0dd6e7f"
        },
        "item": {
          "id": "f5b4d9e5-1c05-4e23-bec0-54735b914f26",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b77a8b6e-01e3-46fc-b38d-f1bd0f210c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fe8e253-c423-46d0-b797-26f3188f68cf",
        "cursor": {
          "ref": "fee02982-fd79-421a-a6c8-c1ecb949c6e2",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a44f2c39-9d2c-4891-a10e-4fccf7db1b13"
        },
        "item": {
          "id": "2fe8e253-c423-46d0-b797-26f3188f68cf",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ffc88cba-28e9-445f-92a5-8dcad22afddb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6896b12a-4b36-49f3-95d4-469cfc8c0421",
        "cursor": {
          "ref": "fb89b708-c36d-419d-ae5f-94a5ff206285",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "aa47eb27-37ea-4ba8-98f8-9182dd58698d"
        },
        "item": {
          "id": "6896b12a-4b36-49f3-95d4-469cfc8c0421",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "888c0950-04e3-4836-97fc-de809b60061b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90aed8aa-d520-468e-82b1-73614979f626",
        "cursor": {
          "ref": "4ad77fc2-5c09-4a5f-9063-49d423295860",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "ad7b86ed-fa1e-40ef-a955-6de7dbb0be41"
        },
        "item": {
          "id": "90aed8aa-d520-468e-82b1-73614979f626",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0bde734f-2237-4a90-8b6f-2e412b793a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa13712-5468-43a2-8e7e-d8dcd1115733",
        "cursor": {
          "ref": "774d30a1-8c54-4971-9655-d74c8cafe120",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "e5bc8d56-eb3f-47c3-9d91-21f1ef3891e4"
        },
        "item": {
          "id": "9aa13712-5468-43a2-8e7e-d8dcd1115733",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "62800d13-f7fc-4807-b643-923735cda1ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "608ecdf0-cf35-41f6-9ecf-3351aa1c7758",
        "cursor": {
          "ref": "e36a8bd9-e128-478a-9894-612c4bb8adb5",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "76cf91da-eae2-41cc-aef2-f585b443b0a9"
        },
        "item": {
          "id": "608ecdf0-cf35-41f6-9ecf-3351aa1c7758",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "f03dce1a-1ce0-44f2-9fb4-93e811d42df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f014754b-747a-4aae-a810-14f2038c6f0c",
        "cursor": {
          "ref": "473f4af9-5470-41e3-98a7-ff149e5ab755",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "af2ba102-ee8b-43d2-922f-8dad466ccc24"
        },
        "item": {
          "id": "f014754b-747a-4aae-a810-14f2038c6f0c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "04f0a3ce-13f1-4e69-be35-44a1e376dfab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676a7796-f983-48fb-9fe4-8d000e037a5e",
        "cursor": {
          "ref": "bf97a505-428e-4ecc-86f7-c93c5dbc9fac",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "9cfab77a-afd8-474f-9d3d-068c9584d0fa"
        },
        "item": {
          "id": "676a7796-f983-48fb-9fe4-8d000e037a5e",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4b3f56c7-c1a6-40d3-bebe-b079432ce796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d32e73b-5a16-47d8-a437-ae254147c939",
        "cursor": {
          "ref": "60042515-34f3-480f-9051-88fba4d542fe",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "75549cd7-bdf3-4a5c-9f02-fd41e0d4196a"
        },
        "item": {
          "id": "8d32e73b-5a16-47d8-a437-ae254147c939",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "453585af-6782-4b45-a5bf-cf533c073752",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b53d1f8-3c32-4bd8-ac66-fc7c51b2bf9a",
        "cursor": {
          "ref": "5bbb7f20-02dd-4697-90e0-85df7826a87b",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "6aeab29d-b555-4a3a-9753-2fb48f5904b0"
        },
        "item": {
          "id": "3b53d1f8-3c32-4bd8-ac66-fc7c51b2bf9a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d4b7160f-6425-40a0-b17b-308c122e9ba2",
          "status": "OK",
          "code": 200,
          "responseTime": 28,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bfd3248-5006-4bf6-b1f0-f8c08e1db1ee",
        "cursor": {
          "ref": "29d77bf3-3bed-4e35-96d8-3b79ab8c2761",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "642edca4-b9c9-4bd8-81eb-bec03e5e95bd"
        },
        "item": {
          "id": "2bfd3248-5006-4bf6-b1f0-f8c08e1db1ee",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d8b5e5d1-1a0d-4a39-9908-28fcd2f8916d",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2755c41-e713-4901-85bd-af126c4c2595",
        "cursor": {
          "ref": "621afd01-7cd4-4afe-b86c-8ae40de0039a",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "09f75182-b55c-48e8-b785-622217cad8e8"
        },
        "item": {
          "id": "a2755c41-e713-4901-85bd-af126c4c2595",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "08c8034b-64bc-4db7-9902-ad0a0f3b7aff",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "29424d7a-2c98-476e-bf55-718dbb3bd03b",
        "cursor": {
          "ref": "3fe2654c-add9-48b7-ac6b-ce05bfb157cb",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "cd00d99c-e101-44e2-b1ca-7c40d6cb50ca"
        },
        "item": {
          "id": "29424d7a-2c98-476e-bf55-718dbb3bd03b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5ac337b8-ecc7-4d31-9b8c-89f159f58ce6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29424d7a-2c98-476e-bf55-718dbb3bd03b",
        "cursor": {
          "ref": "3fe2654c-add9-48b7-ac6b-ce05bfb157cb",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "cd00d99c-e101-44e2-b1ca-7c40d6cb50ca"
        },
        "item": {
          "id": "29424d7a-2c98-476e-bf55-718dbb3bd03b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "5ac337b8-ecc7-4d31-9b8c-89f159f58ce6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8f822da-63fb-4b8d-bad5-04b94aeb0e99",
        "cursor": {
          "ref": "0efa8566-9f10-4975-9e92-5ff641d79e97",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "834a7fb0-d3e4-4478-982e-635cf843aeac"
        },
        "item": {
          "id": "b8f822da-63fb-4b8d-bad5-04b94aeb0e99",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "66af22fd-8fd4-4d44-8b2d-1c0ad4ac50db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d51a03f-a511-403a-8a9e-19780a81a84b",
        "cursor": {
          "ref": "3dc08ec2-0d07-48d9-b2c3-65f28b77682a",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "36ba9d56-760b-4557-9837-01ae6cfbe723"
        },
        "item": {
          "id": "7d51a03f-a511-403a-8a9e-19780a81a84b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2184fb70-2ccc-42b8-924f-a49cf1b25a1a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}