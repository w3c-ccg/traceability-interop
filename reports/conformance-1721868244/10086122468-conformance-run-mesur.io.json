{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "848ecf71-929f-48c5-a023-ae21765939aa",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c05d6595-6abd-47ef-93be-9f92a757f1a1",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c1366557-32a6-4308-9049-a63498a49f41",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a269d304-e853-4c0b-9158-d7450413db28"
                }
              }
            ]
          },
          {
            "id": "8283faaf-d2dd-4ea5-a7e1-2153aea44192",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "61a66e14-71e2-4642-b2c3-0e42f300c571",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "642ade9e-a40b-4c07-a021-197cc26595ec"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "c4df9030-32a1-4f6d-97b9-68a79c23a889",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "822d1d87-e335-44b3-97a7-ae109bfde338",
            "name": "Positive Testing",
            "item": [
              {
                "id": "dfb81910-a839-465d-8a41-bbb6351ef4ce",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a385d2ab-34c3-432d-ae8c-c84af941961a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "723e1f35-584e-464e-bb57-dc7a7450128a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "339b44a1-aa45-4f1d-a5b3-ed5061532e38",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4214c8dd-b949-4d74-8b76-003f46abc913"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c0a11a12-5cd9-4c76-adea-0844f6729b26",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "67d4bcb7-3326-4d0b-ad0b-d7a3b26f0325"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d978fbbd-8398-4eba-be02-078b45c20c66",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "afcc54a3-fadf-425c-a279-a332bea3ee97"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b36deb78-a542-4d34-b1c9-2a2cd4d5d39a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3e9a206-3458-48a1-b84a-0cff67148e75"
            }
          }
        ]
      },
      {
        "id": "62bb0a55-8bda-409f-b1e5-4ab86588251f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "aa7a1217-0c2f-4df0-ae1d-e1dde11043c3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "bfbe9523-4b64-49a4-b4ff-c495b0e44f3b",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0a2275fd-09f6-4276-8cf7-998a6b38ba8f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c38e557c-1cbf-415c-a40d-fb19d439e2d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6552a6f0-df28-4c98-8ee6-206c793abc96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30e030d-e729-4c87-8a12-884f16100e29",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4483dd61-7903-453c-9a31-38c09d6bd6da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de30651a-bba1-4945-a484-b1a26207589c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c903f7e0-6e95-4314-89aa-4246867c3275",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec992517-79a8-498f-91d4-f3ef11a4954a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a905c344-b19c-4b2d-87a1-cc6eda13392d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "712c0d31-38e9-4be2-860a-0e6b8d463ab0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4caf5d83-1561-4720-b8ed-8893d94bef89",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc5e36e-a525-4337-9f45-e9fd8f94b205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7eb4414f-f959-43a0-a137-e448b1a5f2c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc3e04f9-2252-4917-8cfe-1ada71e1916d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "229b08b0-ebea-457a-ae60-0c808e68783a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "72f1643f-125b-4ce8-b638-1aac022021bb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ce416727-53a7-4531-807d-b56a79511786",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "226d0a13-a32a-4eb6-8cec-46ac2331636c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "db8517a3-a81d-49f5-9e51-cedf95ccf10f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "623b4c12-70fc-4fbe-948d-857008343332",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "4b077fd0-b00c-444f-bdb8-d6ce12dd54fe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e805dd1-e0d4-4811-889d-a0b0e2e3905a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9645253c-0148-40ab-af36-18f64b21fce1"
            }
          }
        ]
      },
      {
        "id": "8415a3c7-5472-410d-9123-742e9a5a1b0c",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "779e813d-1e78-479a-80d0-7204d51faa10",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7a4c9eb8-dae0-4518-bad5-011c5a94db8c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9e2c4939-5f63-43e8-bdd5-a89f705d1bab",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee4ca39-6fae-4563-9cc5-9f8ab6eea652",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84044714-d855-4d65-aa67-00a4a33f2a5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2871d58f-5459-4fb8-baef-30d3e817711e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c9818ac6-1b53-408a-bc28-b4dfa7e6597b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7656f50-c090-45d5-b839-459ed39c9ad4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d3a6d7e-f622-44de-8f32-393acb4ff0d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94af2877-2894-4981-a9e1-c7faadbf9fb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9af1370-10db-4e26-b58a-f0fed0a549ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b5e782a7-50e3-48ba-a798-d8f962b799a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e98c5dbd-2c6c-4998-bb4e-f9affc2f9cd8",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "923879f6-5a96-439c-ab6e-f79568b2bbb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76e3ee1b-5bb3-4e86-a879-c9702de026de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c686608-c75b-4afc-bbbd-3ecdd6396683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d99233b7-eede-4965-bc87-7348bcb0c397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8975ee-920a-4b5b-a468-3087b7972dfb",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57a7be7a-e8f5-424c-bdd7-e32e92ecc5e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13c6cbc2-cc3b-4b8b-8769-c620f6dbeb14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a37f963-cbfd-4778-87a2-5d1d6357332d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f18e0838-461e-44b2-9cae-5fa26af407e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff81204-66a8-45a3-ac47-a1389fe74e10",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a59fe68e-5dd5-4b6c-850a-2c1f0ae8e286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add7f201-481f-45a5-9fdd-c35ae37dd5a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e701258f-427f-446e-b554-60d25ba59003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7bcfde61-57ec-453d-8868-0a5bd78c1276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13d11de6-0f6e-4333-9a7a-fad08d81ff31",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac6467b9-e6bb-46c8-a21d-ac92cc8a64d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9080c0a0-738f-4603-92a2-d348aa2d1d42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053b6721-0555-44fe-b7bd-b4f84a8124ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a6fa66b-dde6-4fce-9dd9-89e7f324b651"
                        }
                      }
                    ]
                  },
                  {
                    "id": "945259cc-affd-441d-a60e-0b84f167ceb4",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7be9e8e-a5ef-4bf2-b37c-a4c43596fd66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f453cfd-4c6e-489d-9f2f-267930abb572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c59c4b5-c246-4043-aaa3-234158246554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c7f7f3fb-9db2-481e-89c7-4efc7d06ccd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d379cb59-1303-41f8-95c4-e2cccbe1098a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "519d1271-32eb-4028-a7e8-a2d6f65f4651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4ab9343-9764-4344-901c-40ef3a065dda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fffd00cb-a49c-4ea1-9827-1b47d8eccde5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2f43d0ec-7567-4827-aaf0-0792db5ccadb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d05bed0-146d-4624-899b-9faca2992f06",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00747132-1549-4afb-a773-8d8d75e1617e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "282129a5-83c7-4333-a176-b48fc7103a12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b5d6c8b-c93a-4982-a9de-2e3432dcef16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b442950e-ec65-4337-912d-eee277ce7b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "226edb7f-61d4-4be4-8d6c-42870c9e1d53",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb938aa9-c8b9-4fd7-870d-f033189bd0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1b0d47c-0452-4f64-befe-ea66b077447f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d57e59-edec-44d5-a93f-fc38d2db9335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8a6fce16-ce97-49a1-a46a-e566f852d83e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45777387-c0f9-4b31-84ab-c02de1268950",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47bef26-75a5-474b-84a1-809909649e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b101cbd8-06cb-4910-b9ab-59ef96581721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84658932-33ed-4135-98c0-82fa11918128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac3aec46-d3f2-41ea-b9fb-a66e67a84192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3707142-915c-4a14-ad7f-535cd1f000c7",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1421c039-bf59-4d54-b96e-6cce670b862a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51b6dd02-0064-43de-b54d-c29a91310841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1ccf2c-4362-456a-ac2b-8dfa0bab3058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42678ec1-893b-4760-8a45-4efbb6be0799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeda95c6-2ff7-4328-8f13-a30314e1328d",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c17b3a-d259-475c-97dc-14c277a8cebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62e276f1-92f9-4354-863c-c1928b5d739a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "017bf1ba-1e0a-45dd-8a7a-b2e31c40dbdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f3fb86a-a784-4364-9b5a-90a810338009"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59970248-b78d-4f11-a6ed-2cc30ea9d422",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9801a460-f110-472c-aecf-3819a13e402c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0562e164-b013-4ac2-b266-e808d1c32112"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d862a2d9-50db-4a63-a4eb-84f536530446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "42753432-9b62-4b40-9e60-5bc416e21ff2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0025797d-18ee-4bfc-aaf5-3f5402a0e496",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a03cf91d-3276-4eb7-b858-a17127202455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64accb3f-ca0d-42fb-bb98-90e67b0e29db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a043248-67c7-4f71-be95-21498699cf24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f7fd4a5-6609-4f2e-a01a-c6cf02cb14d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2409971-a78d-4a46-9f08-4a9dcc1a5ac4",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "341c34f3-ac45-4169-9203-3371a3a78251",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87725019-2818-4839-9896-ec5efa8a14e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79d8bd13-1f27-4430-b3fc-892468ea4fde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a14f3dd3-2370-4a31-8372-2f0f515ea63e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beed628a-97b2-4316-800c-94c70aead27f",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e11b28-8ae2-4efa-8ad5-4fd3d82807a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2c3eeb7-7268-4e4c-b127-da655a594bc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ad48ba-9ef2-4b3d-9dd9-f644cb26cdc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a7cce629-000e-4e5d-a439-2081143b4b60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fdde1a1-955d-41d8-aef8-89dcd9658de2",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86011685-61ca-4d1f-be2d-36ba0349f59f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20089650-fbfd-4aaf-8560-3d5b8241109e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f1f609d-2ada-4871-8aa5-5d3e2c5deaa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad7ba9c4-7b7a-4683-b17e-9696287fc0eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc2c47e-03be-47f9-a21c-1527f8df3fe4",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3dcb8c5-2ce3-43cb-8611-39c0a8763673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "758d3551-0ec5-4139-ad82-064f8cd3ed4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c6c69f8-9751-4b09-9401-6218fd33d180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bf6ca54-4535-468e-9340-d20f5a05156d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af18e4ab-7707-49fe-92d2-4215bb5f92c0",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ddcb31-c1d1-49f7-b017-285ba4601f5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3adba60b-3a90-406a-8f5f-51ee003b352c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e89117-1e58-451c-90da-e5d0db467019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4224958-fc37-437e-bae2-077c8a4814ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13a499b-2e7d-4aff-a40e-94cd6f96fe69",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a420561-a578-4532-bc2c-6b8375d6dc4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a007dfef-d140-4d05-94c0-999e240a85a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "581ee2b8-15e6-4f57-9877-b38ca955607b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "570328d5-b29f-404d-a860-2506dc9d7f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3e23714-df80-48a4-8866-e31d93c7bb8d",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c845914a-a28e-409b-a48b-1129d5f015ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b5e7e31-2e57-41fc-86fa-77ee40cdb0c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba0864ff-06c5-4f0b-b74a-b726a0dfe967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7df501ed-a55c-451c-98f9-78c70bdbac87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33254c09-c8c5-4d27-9c52-67b72f219deb",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b970e95c-1561-4a81-8992-6e285bc699e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e229aca-a66f-47c7-b2a2-e3bcad3f300e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628a1a42-1647-4860-b61b-ad8f2f552eb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5e265cb0-49f5-47bc-9680-baf160b5e77e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6517141c-57fd-47d8-ad81-0c22cd7f091e",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "929062c1-ebd6-426f-8b39-c40e65e37f00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa0f1876-f602-45ee-87b9-adbf36fb4faa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c221c19-a104-4fed-ae57-8fd31104a7f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "323e7d4d-b7b6-4af7-8252-dae99538e29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dddaf9e5-7984-41cf-a2bc-c01c0111f816",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d6c73c2-2093-4885-b80d-361357b24f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "517b8efd-bee0-49ba-b9e3-9ca5438cf1d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7237415e-f473-494e-989f-f074cb86be06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfac6d55-0627-4a47-8b97-a7ab75039c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080e3035-bf72-4adc-bd99-7fb519d05835",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6396875-2ceb-4ee9-9bef-bf370ee11485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e017997f-f9e0-4923-b983-68810f4f921b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1398199d-6603-43b6-826c-7ebedd001b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d80f5093-15b1-427c-be20-7ff2c260281a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7cfa7e-830d-4296-9213-db03fd8089f7",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edc76064-a406-46b0-bc0a-d7585ecb73bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd04cff6-39d9-48f2-8074-de19ed17a91e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9eb25a6-c083-4e6f-9b50-4b3d272d21c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "da5dce0f-8ea6-4847-a67f-e1afc61aee5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f303c8d6-d53d-49c9-b805-699260bb015d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f34ef5fb-39ef-417d-ba44-dae7ecad72e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55c56a05-67c2-4a78-8b1f-3ba66b7764dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a20c8c-59a7-4e66-9fd0-5f327ecc0a16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "16f85239-9f5b-44ae-aa08-5fb1ed77992f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0a85dd0-88b2-4a53-8925-8379d6327dfc",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c024a2cf-6b19-4f0f-9c20-0c75a6e0ac13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "941307aa-f4a6-4e1d-a987-7db00cb4ec95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0205411-9a44-4f6c-9d11-c193b043be54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "878dffce-bb12-40ac-9f7f-5d9b98585e6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db02af46-bf63-48ae-9d7a-f9a66bb7c605",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35cd2eda-4427-430b-b339-34ad6632b6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97732833-751a-402b-8acb-29ae127c6541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260bf9f6-6511-465d-977b-387dd3df8806",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "36945f33-942a-409e-827b-7fd07012ae42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe4128f-2b63-480c-8dec-fddb7ab79fab",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d37d03e-0c31-47c8-a0fc-1df50f0775eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6490e19-9761-40df-849f-204e9a9f8601"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ac9b25-483a-4617-a720-e18c0e95d281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b27ee25-63fc-48f3-981c-afa398b669b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f402aa2-4caa-49d7-9818-f584e6c17d92",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10cab21b-6b80-4ca8-8dd3-bcd707f1df85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49710713-f993-4038-9e1c-42b1d57d0756"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162c9c21-69ec-4c94-8e42-fba31b3e807b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f963f0a8-5215-44fb-8731-38e864a0bf5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d3133a-5c40-4442-8537-173ee1be0c8c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46be91ba-2143-43f6-99ae-a5e9e50d916d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a7e5883-de9b-46c8-b354-71bc5917b55f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c1637b-baa1-4d7d-9c9f-3ba31c296ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e26f784b-cb7a-48e9-abc5-49975a2c9ea1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed5a591-1f4c-44ac-8c58-922a3090c94a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43116518-8fcc-46ee-9fc9-5f5b196a6445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29f64556-9b4f-4221-b0f5-ee0cb09a2cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a694cd-48b0-4027-a999-af5764b39077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17dad447-cef5-4af1-888d-89e919eb44d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "130c7673-63af-41dc-b4c8-f968926b29af",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cdb96f3-d546-4263-8c7b-174c06d30e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9312853-d22f-4916-ac36-a0915a030345"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3301768-8b38-4bdc-89f3-e281d2b252f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f916a6ca-14ee-42b4-a730-0731c053c987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c77329a-137c-4705-81bb-2cf472d117ce",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7423198d-dedb-4612-adee-dfab08678b09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "202b0289-3178-477c-8a55-e3bf50e591d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40b43543-30e9-4e7f-ab24-f284f05202ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "38532890-4183-4092-bd6e-0ef0173dc6fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6945837d-0cb5-4b7b-9a4d-279ed35510e6",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ac9d95-15d4-4d96-b28b-b5a1f49c7723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de08fdae-aeb2-4a6b-8cc3-354962486209"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04e88d9-362d-48e4-84dd-25c806014586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b7c68c9-3122-4770-947c-b1d3886fc373"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec93434f-4008-4f0c-a726-148e77742e5a",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "841fb90f-53f3-4713-8777-41404add6645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af025e6c-0076-4b28-a35f-8efc86201b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ea8d8a-183c-497f-a739-ab30dec654bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cbde3008-3a44-4fdb-a597-8bf1397b6d94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aeb857f-b873-41a7-9557-0599875aabc1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c47b1eb-7c79-45e2-9a67-6b7f90557df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61c67fb5-4aca-4f0d-a68e-4d6c3009338d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9762da15-c874-4152-afab-5f20a8680ec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "28d87303-8b63-4457-ad64-4db3af79dcae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "994f3756-1e18-40f6-b794-25c995f80971",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95b7a81-c43a-4998-9d1c-b0fc7c4c107b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eba5d9ce-c1ac-4483-84f3-d0052955f1fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6940c330-377a-4755-b730-c71d8076467f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d14ce37a-8d9b-4142-8ef2-c2eb0ff8474f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2d39bf7-9e21-4f18-ac51-10f75daaa520",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba256a9-8de1-473f-ba2d-bcd1f7bd033b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb88aa9-d209-4ab4-b6e1-0d3e98cff6b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81939750-1ddd-41cf-b4c8-327b6fe2f79a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "93cc4bf4-6b8d-44a4-ad9b-c879460d8c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897115d0-13c0-4de8-aaa4-ee1fe79e8e78",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0277261c-93de-4275-80b6-d590595a7fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0475709b-f17a-4182-aa5f-9bffbf86f412"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2eb17e9-e009-4d81-8bde-2633b3828dd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "8c5ff99f-7d07-46f4-86d0-5c95e6dc1f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a428808a-0aee-4140-971b-e71672aff111",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0269e75-076a-435c-8dad-152d1bd92dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bfdccbd-94ca-4427-af05-c782bc5fa474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250b6b80-743d-4ba1-9df4-8157e479254e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ab67348-e4cf-494e-ab48-e7ace184bc51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bee4719-522a-4655-80dd-7eabc4b8d1e3",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e993ee55-ea0d-4e62-9efa-9525efb845d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ab83bd-8e4a-4e7c-8388-003d1908a5f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51d450e6-fb56-400c-834c-9b494a993891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b78a13b-868a-4638-b15d-fd05a1ac9d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9ca9a42-0788-4548-a710-32746d6931cd",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfd12234-f85d-4fd7-bd6d-8d988ea6585c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07c4eba6-82c3-4a35-96cb-e8da3a33e88a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ce1f629-0928-4b4f-8c5a-9b4a2b7e795e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d597455-19e3-4bd8-9590-89e99c059fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "167ca2a5-9832-4933-9f60-8cb94ca5f4bf",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d513c73-0b88-47b3-97fd-1a68439cc932",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d599bde-4150-49ca-84b2-336f71fa3d5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a2f8188-125b-430c-9d4e-170682c65c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3297c9be-896d-42b4-a27e-d25708e3576b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc09069a-e8fa-4175-b2db-93ba46a5b4e8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe677b56-c899-4693-97b0-2523ac90e9fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee72ab44-c6d5-42d6-b24c-dcb85b8daa0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fc45311-87d0-4bdb-bec8-b059371956dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9050ad71-0fe6-4436-b3a1-1261039ad5f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51cf34e0-156d-43cf-92ba-50779e7ead29",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf3ae08-867f-47a8-9294-e865c10a8fd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a0f7312-a891-4406-82d5-61ecf60d33b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31bd8d3c-319f-4350-800f-872f0d2efaee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "33b9d508-ef0a-48a9-ad5f-86eb9a88c1f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a48665-1a80-4637-8bf3-2d34cef1dc2b",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f546133a-6533-403c-8b57-b0d033e6e1e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0be06394-8bde-4321-b23b-d1e2fe82e96d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "414da234-1f99-490e-b474-04c2f7c3f5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7632ff49-fec1-4512-9570-01612453ce1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db710b97-c033-443a-bf6e-c3fcd53811cd",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac17c40-a224-4a38-a946-51286df858ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd3b02ea-d75a-4667-8cba-e77bad87fc8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "660b7ae5-d825-4dda-a5e6-752c55bd5427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a5d2c888-850f-4f82-b39d-386fbd5c02e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06cdca68-e0a8-4658-8a7c-44d84f129c2b",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63319fa0-1b1f-44b3-937f-697b692cd14e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84ec8608-cdb0-4392-a278-eaed5fe5291a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2369cf29-31a2-4caa-881e-1f09fe383411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "48fb104f-8bf6-4fd3-be3a-156bab192669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4030960-d6ad-45f6-af34-162f311ceeba",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4cd837-2ba1-4743-9ba4-adcaf0691c67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9af48b52-7ead-446e-899d-5643c01de218"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7072d140-aeff-4065-9b6f-41b68d90a83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "61862686-ff35-4f8b-b15b-372a7dbc7690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "572f8dd2-bef5-45e1-86e1-7594899adc2a",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e796bd3f-7d85-4b82-a5e2-c47ff5cb3f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5291e335-3f39-4e7a-9b06-0f9f733ce2e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cc53ab2-b095-4476-9d2a-8e2c4612c903",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aadcd66a-30a2-4d9b-ba42-6b5795560f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b9a256c-decb-4e3e-bbbf-fa659dcf4212",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "210af5a0-cbb9-4d20-83fc-af23954a556b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0a7c1a4-5695-4aed-84f3-c9c14366ce7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c6db1e-f834-48b4-a98e-190d7dceaf07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "727fde08-f0c5-485a-b094-920b473a49ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3fc746-690e-479f-bd45-50b252419a2e",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d745349d-1b1c-4334-997e-e738e2ed7e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5f29376-4ff8-4141-b147-4a96eccab836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7befd4ce-601a-49ac-8d71-5aa185646611",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6df728ca-e69b-4f52-a5dc-213ef8e1cd1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c783ce6-467f-4df8-8695-7792e58bfc58",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "387d04bb-ab6e-4fcf-babd-141b63f6013f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bfdaa55-eb92-4b0f-bbdf-74997badd7da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2836367-42b2-42ce-9d7a-78c6ded68d6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "daae8708-f61e-44ce-b55f-a62835e5aa38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8040bc26-9241-4e51-9cfa-45b293347d64",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "758b398f-871f-490b-bd8e-59a3905c764a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "951cd95e-917f-4af3-96ba-9f988693f549"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b092e2-1606-4cfe-b4d9-f9adfe847acf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "755d835e-5c27-40c5-bc0a-0ff24b6eaa7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "792d61ce-42c2-4277-aecc-6d7b82ff9545",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d48476f-7b6c-4e44-8a67-df2a12b0bf30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edc8f1ec-3aa5-49af-9903-f9e385ef9db5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ecfbf99-ac61-44bf-bde7-f956b8a14913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0aba5312-0222-4d1f-88c7-32f243994665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "372bdd34-8d0c-4a72-a0b2-d9141bd477f5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf6fc801-2ee1-4301-9d6e-5bcb47d932a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "307d7db8-d685-4193-a578-2fea2c37cfde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e375d13e-8785-4cb0-a57b-2a7221bbe058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0293fef9-aadb-4ee6-b50c-88c1bcc7284e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8c0c37-e570-4683-8e7a-dc774725867f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fe735a0-4793-4f41-99f4-6817a8bb348e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a69e4ca3-b8e3-4884-9d46-c965e8b1001d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29f3ba4-2ec4-4464-b1b0-f68b9a06d758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e6b89ed-58e8-4c02-b79d-2e9f42f67095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d89825b-26d7-469d-81d8-1b5ad033ba86",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5dc7238-1f9e-4839-aa66-72944383a297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc9b6bc-77fb-47c1-89f4-4b019a6b241d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7108fe-029d-4b13-8a8b-39d3febf1a30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ed08993-d67d-400e-a87c-38e5947e4561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76c2d0e8-0fb9-4f0d-8778-6bf7876af0de",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b19648a-b418-4b5c-a7ee-7cb090185755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf402e58-d097-40f3-8833-4db29075b946"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f88607ad-db70-4d99-91c2-9d2a78c3f5b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a48aca9-4547-4fe4-9778-370364ff4d4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc091b1e-d29d-445c-8966-36dfcecd93aa",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "223171a4-1b1e-497d-8a8f-4985736c93da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49b0fd94-04ea-4c55-8a60-6076fc79bd9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41946f30-2631-4862-9372-cce1dd063bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "857cdd0b-b0f8-4041-89c5-fb0fcc4e7a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7db504-52a2-4365-a409-306f98ebc7b0",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e66f48-7202-4004-aa59-d4825a7013a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "792b2d16-d6d2-4295-b52a-649f736a315b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8688346e-74e9-4726-a621-3e9e1919514c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "919b08de-0716-4a8e-8dc2-bb635a568d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8e29bd9-7a31-4780-8f76-e78dcbe21e25",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2722cc-82e0-4de6-a71d-46079a525e90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4edadd14-966a-499c-bb4c-05c37e60813d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a2b2d21-4181-4aa8-b2fe-899460943b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b511d1d6-4510-473c-9938-a31c356bc8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95035772-b9c2-4ba5-be17-aef137e16a0a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "948089f9-d60e-44c9-a75b-9417eb88105c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77ac5484-4b04-454b-82b4-63d20e5df897"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fef65e99-8239-4c3f-83d9-258dbd7b60d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a9a1701-d81a-418b-ae31-a2d6adbfda23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb3197a1-7b3a-4bb7-87d1-cba268945207",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81797c61-966b-42a7-b3ae-42c57ca9385c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "755eb909-ae63-4914-a454-b78a64c92078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca7c198c-a7ba-4cc9-a272-7200ae4b5fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f5636260-6cd6-4e6f-93cf-5e3b3e79b7b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12ebfc7b-33d1-4fac-8423-71b671205f32",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c3edeba-df23-42ac-98a8-76b8a3d8911d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfcc135b-1af0-47ab-8931-f83555a00e87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf27da0-9a52-43c5-bc9a-a5b0c3a17ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "996c16a0-0e04-409b-8794-f96f1213982c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa926864-2d51-49b2-9811-f7004f8a968f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641a9415-dd0b-4d3b-92c0-cfade28bf789",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac905f9-a65b-4244-b78d-68a290967351"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5273a64f-a064-45e0-b7e7-94d106425e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e17e7c2-ca4e-4be9-a776-8c86f79f2a95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1bca5fd-b493-4ae9-8ee1-bac2ce0a1cee",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d929c77-2f1f-4119-9bd6-228de6be3301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38201ea8-fed3-4aa7-bd23-cf17d0c56534"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34f355cd-e877-46b7-8836-51ed53b5e943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "211dc0e0-84c3-40a5-ae39-b13de5d15b12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eadc123-8a1d-485b-b1da-88129243ff64",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "564accf3-fe4e-49c7-8b99-1b614b749127",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "787bb8e3-d5f1-422c-8f15-9e039543a3fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b9b58db-2c61-40d9-ae74-1e9a170e4194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d488c59e-1a85-4617-8537-af19ee3e6c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd473ba9-2585-4965-8227-afface441c23",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc1dd9f-d8c8-41a9-80c5-31adc81b2aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eaff38d0-ac6b-41da-8a46-744a364b4d52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39f7a425-525f-44ae-891d-99d0c8ebf972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b6fa9ccf-b89f-458e-a115-3ca567111c64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "036747be-7351-4f65-b93a-4f48ad658de3",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7142a1-ac2a-4855-a04d-62cec0913f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6512aa54-e832-4f07-a4ed-e22f54d3d3b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baef6ddb-e6da-4e1e-b1ae-496d0163a24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "189be525-1398-4828-bc37-097bbbb00908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdcd1139-1739-4d73-b4f8-62c164cb2fe3",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d8316e-09f2-46ec-8aa8-64c6a4ba22d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e07f081-7b03-4488-99ab-4ad343766717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa539f7-5baf-4f86-97fb-e22280a55623",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "afd024b8-ee01-491c-ad4f-5d363314a019"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b84d7363-a064-4311-9c13-2d1f80a6824e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8b6762-42a8-4191-8d6b-b27acff6e2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d3b6428-1198-4955-bdbc-5f471949b15e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36be59eb-ecc7-40ed-afec-94f552abcb18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "47552514-d2fb-49d8-8d25-828269234038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcc61de5-d6c9-448e-aff0-d9ddf5f3de4f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6929b91-a7d0-41c5-9f0d-cc0d4af45e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b24378e7-d33d-4ff8-84ec-9e55b1a4dba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f9b90a-9ee6-46d6-ac5c-cb565407a7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da026129-8fec-4bf6-8557-aa32b3e89c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da270e6-6f96-40f5-8cd1-81060b17a6fd",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70182bd2-ff6e-4598-b5f3-36c5a5a74a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f4a0606-cf76-4641-862c-e70dfc4cc239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2fd0e0a-a03d-429f-8fa1-77c59bdac981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "13456478-b7f9-420b-806a-74cb1e30ce37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd5f7ad4-6512-4004-bc26-a5e2bdb45f25",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9b6220-09a5-4825-a37c-aa44a9a262e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c555fa91-5dc5-4244-b97a-95d490ef6fc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278e0ffa-fe52-481d-b723-51ea65c6d8c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5142e74e-3065-48aa-9eaa-5ce1034ce0ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b106a69-4d96-468a-bbfa-2e4970e4550b",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9b44f2-73f8-46fc-b6a0-cbcbee800e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6840574a-69c2-48ca-99fc-dd6cee1b73dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4041e507-ac81-4a3b-ac21-d1523615cdb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0da2a6ed-22b9-4419-9b3b-0e370b1b7aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39328dfa-f077-4053-9023-c547928deb27",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7413562-852a-4c20-a0a5-f2234b51cda6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6660e7-a00a-412f-a4d2-dc4a391cf9ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1422dc33-296f-4b29-bbf9-13e4f814d01a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ebc5e897-c066-48a2-9631-0cb8e162953f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0decd19d-bd18-416b-92ad-d1255cdc7e1f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "880dccc9-e28b-45f8-a6db-ba6753ccf724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33cc497e-ccc9-4dbd-a3d1-9abd55483e9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad95750-9835-4f67-8e03-37d8b10949b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "82a4f927-bfe6-41f3-998b-4b1cfdd99eae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1baddc9-d846-490f-b8dc-21826f5285a9",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61420a74-c7a6-4224-a542-fe50fce93197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a7dced5-5f35-44a3-9e0f-90115e5d94eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3300d0c1-0066-435f-b04a-43eabfe44758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "50ba4dfd-71e2-4394-b6a5-adc62854f5a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c836ab9a-c9d9-47e3-9ee0-4467ce83f5b0",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "172463fd-5361-49d4-9c39-0be5e959907d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7670b4d-834d-4534-910c-82c2e8cd1451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8be0942-a674-4d60-bd17-6a46f4276804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d3fbc3ff-f8c8-4cfa-9111-74fdbaf25aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba21f83-9ea4-437b-9b7f-b341f80deb0b",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5118f7-3daa-458d-895c-30c053fff1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e0a2160-3621-4601-b013-faa7165a6ea2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eca10b5f-129a-4b45-9b84-e263099361a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "64d71157-146f-4bd8-aafa-c9414efce6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8373d0b-222d-48ea-9815-b435da6fd232",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eeb0be3-8bcd-44ba-83c2-50b8e8388efa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6fd6c72-c47e-4c87-83a6-bd551df3ea5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7edb5d9a-c1d0-4f2f-99b5-a017f46481ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea704c29-7f98-4085-a700-0c6876e434b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72d11cc3-4c00-41ae-b848-6e8c8d5be3b3",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1c9066-759d-4bbd-9cbf-565abfe53bc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c6b92c1-b57b-4cd6-92aa-e4956733fac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6498035-1aed-4bdf-b932-7f6fe5aa274e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b0e76f1-b452-4ae0-8ea5-a41a167e92d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33db36b0-a6e9-4eff-814e-afa865392e1e",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "460b50d0-2761-4426-b6f3-4cffd8cfc103",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a17ff22-4b6b-455a-ab2f-a0dac7300686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "180217d9-cbb3-4944-8f73-fb048307d059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1db714eb-aba0-48d6-89f2-2dc0d5f85099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3151ffb-8f83-481f-a5b5-9c5c79b03749",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ad0834-21da-4b41-852d-60323e50c6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31aaafd5-cf49-494a-afdd-bb072fe108ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614ce91c-8d0f-4dd4-9607-6d754d5ec2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "40590ea4-85b8-4f9a-9ea3-10e29ebacf38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90eed087-2337-456e-b890-063e662d8387",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e612eac4-e099-45c5-9056-7e9a11b3d01c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a97b4cf-ca43-409c-8188-e77116e1e1fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e71e334-2a71-468e-a2c5-2b4d9620c8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b4d1a503-4d04-4ff5-b21f-2fc1fab94f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1db7c69-c3b9-4ed2-b548-369a08ca4ecb",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1763ea2-b2e4-4e57-ae9d-ad4963dbd772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9656e9de-ca5d-4e61-b159-27c908d0f941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d8e61c8-a195-458e-be99-e3409bc171a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e634905-4aa4-41fb-8b75-ef1d288c6e94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e16825f-e978-4795-9160-17806fc037ed",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a366d946-ff4a-463c-bc4b-486bba5106b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "728485c7-64c7-45eb-951e-c98b9e79b7c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1840a953-b693-42e8-9906-92ee07496ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "76ead8ec-3138-470d-a1eb-7c865564e621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42a210b5-17cf-4205-ab21-aaf8ab52895a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e6c451-1613-443d-bdd1-1fe2a5a9c852",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "98ba6580-9e9f-4d28-8b98-9ae8823fd48e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6ab66b-dd1e-4b11-967c-98915d3ca862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b71f796-d5cf-4414-afd3-9c8c4c6153d5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "56fa802c-a629-438c-bd4f-453db14cb111",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "555b8f88-6ec6-4f5d-b5f2-e1d5554ac5a9",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43577645-d854-4ce2-ae30-387eab073c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9ec81c35-b53f-42fa-943e-f7c0acf6cb24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70bd9f10-16fb-41a1-99af-f40a9c5be9ab",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2970ebb3-9336-405e-86d2-024ed73ccf91"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "709a262d-07b6-4ffa-bf5d-b6aab0b74706",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af3ee485-c49b-4a6f-91e4-83e0876562d5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e8fc411-5765-4ef2-ae87-869af610436e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ec6a586-e3ae-4690-8b26-6ae3f629960c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2d301899-dc86-41b8-9a29-5d8ca78e0ca6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d0da7bef-2ec0-483d-aca7-91e22cb03197"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e0d8dc89-276a-470d-bae5-3b451e8786ba",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "560772cd-4d36-450b-9eb7-e15d1f3c0ede"
                }
              }
            ]
          },
          {
            "id": "bff0f4a6-dbf4-4566-90a4-43d0daa57cc0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d580661e-bb6c-4920-9467-f94840b2f4b9",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "966d4caa-ba78-4941-8f49-f94e5e96bbc6",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d04574b-dbba-4dbc-b800-de3f62855c37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0e0a82fc-f5a3-40ac-b02e-f5065661e1a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843974fd-2097-4c8b-9834-118b0a327796",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8973ff5d-45a3-4077-92db-a5437ed4752b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c58485b7-cebc-4768-a801-b7fc038207ec",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ce54f9b2-c09f-442b-9df6-640b76fcaf16",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b5410d3e-47e7-42d6-b371-acb6ef6b9fa2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff334dd5-a7c3-4471-bacb-6ab8a671602c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "352655fd-9510-490d-a900-00b0ee9ef9da"
                    }
                  }
                ]
              },
              {
                "id": "54e04eed-d394-4d48-9d73-6b3f191ab8ef",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f47c7b9-f655-48e4-9622-74985338b832",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "236fd71f-aa42-4579-8c32-5811dc9b7428"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e710dd4-7aa9-45ef-85a1-18d111d8aff3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "86d512eb-0ba0-4a28-ada0-cd9f88e549c4"
                    }
                  }
                ]
              },
              {
                "id": "67258c17-6d5b-4ffd-89f7-b4b50b8cc7ee",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f09ce79-e13b-4fd8-b452-76920fbc2e04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "84af81fe-990b-4b8e-a46f-7be471405aab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61c6ec76-947c-4e34-b3da-0e42adb6e607",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "40bcf7e4-d626-432a-adb3-893605afbafc"
                    }
                  }
                ]
              },
              {
                "id": "fc1fc986-92e7-4e61-81c2-21cea961fa79",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "db7d99db-4e07-4bcc-bb59-56dfa643e252",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "87947e98-24fe-4121-9f29-505d1bafe658"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26e9f5f0-fb0d-42d2-b83f-6e4528e0ecf9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "dce02ded-c5fe-4e84-8381-1b7bd24ae363"
                    }
                  }
                ]
              },
              {
                "id": "55287e6c-03a0-4f88-8bc0-6794c6919c9c",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "659cee8f-63b8-4d2a-bc8e-26c2d7b2029f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7209e921-93b8-4524-ad67-fd3b546abc65"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ec60f3a8-6673-4cec-8091-59c0b9ce4a2b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "281d2518-0942-4693-9dcc-98879c78641c"
                    }
                  }
                ]
              },
              {
                "id": "577b601f-b70b-49a5-b02a-95159d1a7438",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b96c7675-faed-4546-ade8-a739dfd32e15",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c45fe005-5332-46c2-97a7-a8be102cb7c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bcb69dad-187b-402c-b7a8-45b72e9e52ad",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c6b968f4-b956-4e82-b699-44d8fb300250"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ec9e9d14-379f-4f4a-9edd-46738a6623bc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f8b67b19-dd48-4558-bac7-4505866e80a3"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fce3f7c0-f497-4a4b-8e35-d8c3996cd2dd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c8b0668a-9d94-4aa0-88ae-4355e402522b"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9606f007-ef42-406d-aa3a-e760e6de7819",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b415772d-7f87-4c1f-8900-568f1ea672c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "482b4e29-6179-43eb-b8db-46078f8f2773",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "819932f1-d80b-481a-9674-f3be32ec41cd"
            }
          }
        ]
      },
      {
        "id": "1e2d6924-d8e7-438d-98cc-190ba6813945",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "e91777c0-8df7-4691-8cb8-ab1734eaffa0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fb35f82b-60db-4acc-9306-9403b5b4dbf8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "aa1707ae-0efb-4ed5-ab23-0363c45d7df8",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c58c448-bade-45b6-a6aa-58c8e6518f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d432d911-5f72-4949-b29a-2cca2f27aef6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81869225-9b39-4978-b1d4-2cfc3c534649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac4a61a0-b5b9-474a-8fc8-88c9487f1254"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a15ca35-4fc2-445b-a729-66cf057da53c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b7b4527-1f64-472d-8791-ba276c937fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b96bb35d-acc9-4d1f-872e-0f8caa17ff12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f408140d-6512-4714-aea9-87f205ccd12d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f47fc2f-55a1-452c-ba74-720209e6aba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47eeba72-c9d5-47f9-9bfd-fd4db49a6740",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9a3ad7-65a8-4374-bf04-3ecdd3715425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0abceb58-3078-49d5-b1e5-7bcc9831fda8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba75f68e-65ce-400a-8d6a-041cbb559985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cfc31da3-4036-4a93-a243-70edc606d9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdeaaf92-0917-41ad-a457-782a9384c9b0",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "908a4416-69b6-4569-bab9-a4a204f48525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce39717d-5d78-4cfb-a77a-5355bdd10ec4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bfd0cb5-bd8e-42f0-b5ce-38e4dc44f09c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4e7d06c-56c0-4f93-bc73-1ca3498d8792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdfaa9a4-493f-4043-9907-bee0ef3b1d2e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6063405-12c9-4ea6-b195-2f3ba55597fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eab0b08-c0c1-4a2d-b466-37b989b4ffcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffabe158-1599-4cfb-aa21-f2505043e8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "885fc12f-e841-4641-820e-a163f727e28f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "857d3222-b43a-4244-91ac-ef3082700fea",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ba2a3c8-a99b-405f-b23a-30103cc4cf9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5ee10a6-35c0-436a-a7fb-b3dc5da5a1b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87bab733-5878-4514-bb6a-68ad54b32a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9d3535a9-f7d7-49d9-8271-47e4c87f30de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b038f67f-f6d9-4bef-b23a-13b3d79ce42e",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7717c52-a57a-4b0e-b635-7ddd1341deea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1129c3dd-3a35-48d7-ae2b-0a4fc76cf772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d4eb00-8b7f-49b1-b792-4c9f3f1988c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f14e42de-533f-432f-bb2d-eb9d3ed414d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3f2d05c-eeeb-4237-a9f9-77af10326f0c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61adbb9a-db37-4378-b48e-ffd8b0e1653a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c10863e6-690f-410f-8cf0-f021beb0714b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a0bb20-d84d-4ec0-8586-ab6089840e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c94af80d-dee7-4e2a-a74c-48a519a798ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b99a845-d677-4c8c-9db3-8b66b560d943",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0a0545c-c046-4f5a-874c-b954e8aa7c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0277a666-fd63-4832-9033-01734d152002"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efde82f0-c185-4479-90ad-70b8e008ac73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "89c8e4a9-1cbc-4fac-ab20-883510a04806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2693de8-2752-458c-b3e2-2f323bc244e8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4be36968-6ff3-4176-bcd9-2c1429a30ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21dcdb81-b003-4015-b2a3-d371794f5bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccfe24d3-e0b4-4052-a922-d376c9dd61b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb6e276e-f382-4a2a-a703-43d18fb7673c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0fb45f7-7a73-49f0-87e7-33e868280b85",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b330ef-51cc-400b-b157-df80a4758d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4515f86f-0d6b-4db6-af0d-6241b65507ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d83ee0-3135-4ae6-bf15-b194cb77225b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "07dee000-fb04-4ede-8c3e-41da435d30fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e46cbe2e-ddb3-4b9f-85a4-fd2acb9980cd",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3d75f89-0816-446b-85e5-86cc9131aac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "418e7edf-1b17-4cc5-8036-766c29b8e28c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1daab7d9-44e0-4223-98ba-b1ab833d33ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "88042b1a-bd17-4b31-969e-dbf1a267194b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d8c650e-1522-4ef9-959c-e1a88d3fbf24",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4311b3ce-ffd0-4bec-826c-e24300a51c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83cd92d5-1ae5-4695-9704-5be9f8a642a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbfdd01d-5ec4-4467-a1dd-6738940c1e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3355a671-98cc-40c4-8ee4-1117cae87454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc18ff1-a71a-4c4e-aa75-b904e688d567",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "488e7df9-ddbf-46fd-b5f1-4b9410b58c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6df0387e-6052-407f-8890-e02613561127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c0bd42-fff7-4c85-962d-1610c5d180d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "da93c844-acb3-4c91-9fb7-7715ea99b3e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76daff48-d4f2-41a0-a66c-3236689f2679",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53404ba2-f829-4dcb-8e43-da5a392c2005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c01af497-0d28-4aa3-aad9-b6c321d9e87c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06fc41e3-c563-4e0f-a524-553aa45d0e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "bef773b6-fb9b-4586-bfde-93ca4326c172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b9c214-e847-4000-b350-2afdc8be602e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f4c723-9159-4f60-a190-13a0e978b2af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71f0a57b-9dbe-4988-8337-402a2e572283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17df8bb-dacf-44d5-af44-52db1fb7af84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc8d3aa8-d4e6-4171-b2cb-995d4345abb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9ab11f9-9c6c-4e33-aeb7-d09ab25ff12e",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac43fda5-3acb-4162-a5a0-6b55bf98868a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20fc137d-5960-41c3-9749-bea3e36d0fd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c326f5-5884-493e-ad8c-bdbab67ccde6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2e6058e-8e78-4122-9986-737a2037301f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "832213b2-ee3c-4779-9915-30777b23e894",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a88c576b-0fdf-4228-a667-7f8954e00aa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e64c5da7-c538-4fd3-bd2c-39b2b9b832f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028c7edf-4fde-401f-afc8-5eebc4ad682e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dedbb979-75cf-42df-960c-64d8c0d128ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "016fff6c-c769-4ecf-b314-c09ac94b4942",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e81ed49b-24b9-4e30-8182-8b3d14f43631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c72b265f-7344-458e-9e52-b8c5b7ed63c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8428acb1-171a-4498-a266-a72cfbb457ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13d940bb-c489-4075-a767-367d58bcdcef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38130571-2839-4b14-b93c-943701a13544",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb464d90-2fcc-435b-b141-f3e376323c49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dcbf94a-2685-4cd4-9433-115cf71e0c23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4cfbd7-c855-4d13-a48e-6f78c68b642d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fa1a24f-61b9-41ed-b97f-3b18d0ceeacf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61af365a-b82c-46fc-b547-d9152574400f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4d68a68-8f9d-47f4-8fd2-55d21aa0c3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b3240a5-5220-4b45-963b-115911573063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "554e6def-cb18-4b65-b7e2-21667188544d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d116266f-b91a-41e5-8b3b-2283327ad607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4b9775b-105e-48c2-bb13-dd606a36dd01",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9f7e839-047b-4e46-a354-3d51f74fe7ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a795fad-4c7c-4aac-b9d4-a9d46f8bb524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da617627-3970-4ff5-9a13-56a9aaaf4952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "133c554d-bd29-4dd9-8087-f38677c57e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "758c5a5a-5e56-42cb-8c4a-1a951ce8b3d3",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6885696-c3d3-4753-95c2-772f0267bec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06e49f81-5f8f-4528-bb5d-27154dff80d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb1b8e33-27f7-4fae-92c5-a39d9a481555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38369f19-1d1e-4f63-a32b-05959f47965a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0832403-fcca-4996-8613-93a01b3bdea9",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8e40c1-7440-4ded-abe8-d119bbe4643d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b2deb91-5e13-4977-a5c8-bae67b5c254e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08390dec-5aee-4a9f-a366-c73a7e6ff176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e5dede99-3b47-400b-828b-76251aa7f85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031d7046-6cbb-4b33-ba2b-5a50dc267d0c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc07e390-084f-4d98-85b0-ab7904e7c5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f6ecea-3197-438b-9764-513a111f4206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7980875-916c-42d8-812b-9fd34a74461e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf918f0a-a2b2-4e7a-82d8-52c1250b309b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1959460a-b37c-4138-b9f1-1c3310b79919",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22259cc9-948e-42ed-a88a-cda1c7802f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d5843f1-58e8-482c-85e0-49f6a8eb75d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf181be0-c70d-4aec-9ad3-33c1ac013319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39c63174-4f56-428c-8f29-1911897f9308"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a5ad2d-ab0d-4c45-9d22-1215c4b8444c",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481cba6b-d224-484b-be8b-de9da03e158c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74cbd385-b60a-4c33-bf42-24844d27a9a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1910cad5-1fcb-4e44-bdee-515a625156c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c5292ec-4d60-470c-b481-52037a48cb22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f4b4a1-a6db-4e8b-9122-c14066bcfedf",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d857c55-2a67-47aa-ae0d-96aac2496fb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e432e2-3e50-41af-ad64-b390ba23e02f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99e0a222-9605-499d-b3fc-14aa0167a752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e902fcd3-602f-44a5-9201-b79c8566554e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16a05920-9c4e-468b-9128-9b98772f8608",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "984a92a4-18af-499d-b554-a9541fdbf9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c34fc756-2117-4e1e-8296-666d5a238e2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e1cdef-9a29-44bf-8847-c79f48b7754b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "181744f2-9303-45d9-9dc1-08aac76716f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8970a4a1-9377-40ad-bfca-dc07337e98c3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a1705b-c1d0-4feb-81d4-0d98a367b75f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "062ba49a-858b-4aec-b6be-114ce7bbc13c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0cbadbc-8444-40c9-9af1-2f5c2074b4da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "35c97dce-a2f7-4386-bbd4-6d3547924071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f45080d-28fa-498c-bede-ea9f8001676f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f9fa0b-d895-4f9e-88f3-47349de69dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8f3072e-966f-45bc-8acf-a255c85c659d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc9b0216-9fa1-4153-943c-4008b017041c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b77b7a79-8b84-4080-a2ec-ace587fc99aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124bfc42-b755-4845-ab26-fa87cec142ba",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd489e12-a563-479a-b493-0e36c0e0cd96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04f31bb2-498e-4e4b-b1e5-45f181aaea17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21d98635-806a-4cc8-80f6-b32a6899fd8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8a86151-c920-49d0-913d-12c9a0f3b62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46cbbf71-ea9d-407e-9cef-716cb2b675ba",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab5d488-6043-4e3e-8482-151d8c632992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1ae92db-e9cd-4631-8c80-a4da1cfe9dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac47f6b4-bfca-49db-b710-77c166b0790b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d47d3a2-db80-45af-85f3-1c769f816392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a623bfd1-9d7f-4249-8890-39c5d778212c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5986413d-2f7a-49fb-ad42-37fd140796ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73639fce-5b98-4f3a-be6c-d71507e1fa0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69b936b7-88cd-4bad-a895-90ecf7ef3a2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "055927e9-caf5-425b-946e-b27eacc736c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37c61e6a-0944-433e-999a-c9d6702b9be3",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0dbca1b-3e7e-4f88-bc12-e31e148be302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f8c0926-e91d-41c3-8335-f7bbc6a1afbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21553de-3b57-46ca-82ab-8969f764fbcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d0850b6-5737-4532-a1aa-25caeec74cf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd3903b7-608b-425e-aab3-50ca7a61bd85",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67a23c43-2d27-4685-81f5-f5d9bc298bd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "102484ec-c412-40a6-9165-99e710c2b213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8061ea0e-2d81-41af-9a53-2dd0c010cffb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1096e781-0628-4bac-afa5-cd6b86afe98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376df056-8804-459c-bbf3-2f4f3b611f1c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e7a38b0-cb1e-4798-8479-d39e456fddf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c0ae04c-2577-4194-b137-5c3f9853d775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0208bbc7-e093-4e88-80c1-b84042f771ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6e7be9e-7f0a-4c6e-9f26-28536fe5541e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "96c4741a-7ddf-42bf-88fc-c831bbfcea34",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "84678977-04b8-4690-a106-30955f1c8dd5",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa60c689-7e02-4d6d-b051-c433fd471dca",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "2ac3e529-a1f1-4574-80e6-b16aef7354db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cf951ca-328f-4114-8325-f64f3710dcc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b8ee18dd-1ac4-40d2-8c1b-3b4341be0db1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e1fbaf2d-e578-4340-bff9-176c4c88f746",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "47421784-e1c9-4732-b493-fac202c2acbc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "526bbba9-a064-4c19-aa5d-67bb521be123",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9da9f19-f224-4267-a600-043950073a8b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f2a368bb-d05c-40b4-b0db-7a6a948b173b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d43dabd7-3949-49f8-8b15-c53258a482fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "42ec83f4-d453-4841-86b6-54fe7e4f3da6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c99e24f9-1236-4f42-9104-93f399e27ddd"
            }
          }
        ]
      },
      {
        "id": "fc60085c-6bb9-4d3f-afb4-2eb387937b9c",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3e7370cf-3980-4abb-a0de-9b4229780276",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e11660f3-d26b-4641-8581-614e166df3d1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "adb80f8b-618e-4491-ae32-0e8677009aae",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39aaa5c9-1ae1-47c9-8fe8-6ed1de00d403",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5870102e-cb33-4fcd-8573-dc898f9a620d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33b85bf-7204-4eee-8aa6-e7af49d0ad64",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94650e7c-261f-4d98-859f-2c73f39b4b8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7171acb5-3b42-48a4-bf6f-98b3a68ccf71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81d4c9df-6f44-4a3e-8b69-a199f8b54dbf",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "197e68dd-88d0-48ad-a681-496f36bf4cb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71536300-dc7d-4306-9c98-0d1b4590beaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc96a44-1a50-4e97-a797-83b0d5ef45f4",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c26d684e-545f-4ae6-9320-1071a5ae167c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8b8ef47-a728-4181-b4bc-821d385a8a92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5704c67d-91c6-45a8-8e5b-8fc4184072c3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99139c15-2e29-4168-a0c0-b95f9b6856fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d89f273-3299-4d5c-a169-3014417dcb1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "199de3da-5d44-43a2-97e2-398558baaecb",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71554774-9cbf-4760-934e-937ce21e3388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a51928e6-5d4d-45db-8333-373d5227c8fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d080f62-f6f1-40e3-bdba-d1ef6ed04228",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a6fa8a-4918-40b9-9ee2-7e566d83b45c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0364028a-cf74-4c38-8054-4bad342695a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd07d329-7b6e-4ca7-979f-e878a7416c72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17b14267-a12a-475e-af05-5b742ea4bb6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c3a363a-8f22-46dd-bcba-c4d9dd47cb99",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a704e582-015b-4ac9-a2a2-7c489baccdc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "701e9c6d-135d-4d09-9f95-3025f14e70eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be93803e-23d3-4d66-b056-8d4843b18bcf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c77845-0740-480d-87b9-e5e9d5afcc64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09fc85a-8196-40f7-a375-f13d7b2ec9c3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0882e36-ea16-4b85-88a6-b255d0ac5338",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a35af9b5-e8d5-4cba-bab6-c890134a5772"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "810d79af-3540-43e7-b27b-6b8c66476480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfb9e9a2-94e3-46f7-8102-91b402e81080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380eedcd-ace2-45b1-ba46-529ba6b18482",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c953b15-82d4-4bf8-90ed-30e58d9d52b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b9b0150-3eed-4469-9bfc-64a82c60c5a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d730ed04-f291-43f3-a7f2-414d598d50ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1dafd0c-3cac-480d-9970-3e31f2c82135"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca000c68-2999-4029-8d21-d3ce29d9d3ba",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e85f10fc-f464-4652-9733-f3f40907f480",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "263d0886-421f-4745-8065-7630331ff4d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ed1430-a42c-44bd-8284-b3899a70a0a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5cc79ab-14e3-45b2-951d-007e83cc514f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa1db790-f2f7-4877-ab33-904b93f9e4e0",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b50a82e-8ef9-4a53-bf70-5829363bb72c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0a1eb16-d96d-412d-8c8f-cae0309dfcb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01f24085-d838-48fd-895e-0c686eeb24d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee584382-dd69-4608-a339-e06dbbd97894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec6826ca-d1f6-4db0-8d43-c856483cb6e3",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72c2acba-1baa-493e-a0bf-2c2ce2b3db4b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7acfe4a1-df66-43c9-b275-b2ca6d7c0b92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cfa52dc-bf72-4aa8-b632-850259da3284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2faeac54-92e3-44f2-b5bb-a286f3e9fa5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "199053a6-7798-438b-8d0d-7d1fec174079",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93448307-a5e0-411d-9674-95a50d7c1076",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02252a46-72bd-4bb4-a45c-e796d258ce18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5075da5d-aed5-4adc-98dc-e888592a729d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93be9bde-2b3d-43b8-8693-bbca5bc25477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29ee805-99d9-4988-97d0-3daa5a5da97c",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66a7902-c660-4fb7-906f-c06394e052e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a71e6b49-56dd-476c-a187-6593fe6dceb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "019df0b5-5ebd-4520-99b9-2f97019fc13c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "846920c9-4f21-4c5f-8c95-44d37b1741bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b1be543-890c-4532-bd20-09ebd29f96e4",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c62c36d1-2df3-4e92-9598-e33c3140a593",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6cfca0fe-d0d9-4119-958a-6291cc660345"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b2d310-e97c-41c4-aa04-6cb27d268308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3d3e4c6-8952-44fd-b7fc-5f9f3b5e5ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf75b33-cb02-4be4-9970-d741c330d0d1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fc18a88-cb4a-4e69-8df1-122ff26872f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e8d33c-d8f1-4f69-b7cf-36607a4b2f35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a056aaad-08fa-4190-ab33-1a839225e5d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cdb395cf-89d6-4cee-824f-a3aa746f306b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e66146-ecd8-431a-a9d6-c5d50f42f412",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e47c215f-2f7c-4f7f-a78c-02fb1ebabef5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e14f347-a327-49f0-a626-0621d6aa9ab1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb17110a-8918-4259-8ab0-4b2231cad296",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3042b6df-2207-451d-8d8d-db7b4c4861da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e59e4388-a49c-449f-a881-5891653ae5e3",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e18559-2818-46f8-bb4d-051345c5ce71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce9dc101-3705-4f96-80dc-697ef759c510"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1128925-871f-434f-b9b8-0bfcaf783a64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e8daefb-9a85-4666-83f3-807731d415c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2cae3eb-e67d-4e31-b2bd-6055520a33df",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34d538f-2e57-400d-96c6-95221cce8f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "136b31ba-fc6a-4276-a912-a2a7dc7dffb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b7e214-c888-40f6-8996-c6f5cf1fdbcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81416b14-3c86-475c-a7b8-e2dc35be861b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b513b190-e754-4d36-aabc-10c29a3a526d",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38d10c2-a442-4311-aa42-6c83e8589c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f602df1b-add4-44e7-99b2-bc6ec3f33dce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92465874-2f20-47cf-b2b4-10e7a5c78779",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b19117ea-8b56-492b-87f2-db3cf358bf74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4146f2da-e530-45da-a76c-109cb6a532dc",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8036fc27-3ab9-4d76-89ea-f3db7ca8b079",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a949564-328a-44f3-93d0-c2e050508a44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0bf481c-7d2b-4945-aaf7-f4658f7374ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e03931c9-20fb-4e36-bc33-c4d32c6ffbf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "711345bf-38a8-4b06-b181-8f18e616c00c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72bbe924-454c-4ef8-8e45-fa93a54d3058",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4100a43-81e7-4583-9939-d1d6fb391036"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e09a1a3-c081-4942-8c70-bcaa8a128654",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4927b59d-0496-40bd-8d0e-aee75f9b6b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8854c2a1-a418-4432-bcb9-4df84a6437d4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbe0ad46-ed5d-49f4-8013-ab47eb4ef769",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3edd79be-dcab-441f-b85e-aeadae5f0b41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3feec434-f99e-4654-b565-a70105c949e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "594f13f4-744f-4d9c-a483-88412edfbb3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a014e137-22fa-4b45-92c7-e2904bc47767",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5ef04f-f8c1-49cb-85bc-cdb0b5365aaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ef4681e-2842-4957-8e85-ff68818c7e72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a02e5311-1bf2-496e-999b-87cbf334a690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c30e9791-9600-4880-8f0d-75a6c5f82663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad39c7a5-c550-46e4-905e-9644814d3aa8",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5840f5-28fc-4a48-bcc3-58f11fbf5f1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fba5b414-8d0a-4462-a098-d929e942ca08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e460bc-a2a4-4b28-ada0-d82bc9a6044b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb8cd549-bde3-4fd7-8445-036939998798"
                        }
                      }
                    ]
                  },
                  {
                    "id": "996ddff7-ad99-4922-aa05-10105bcbe1e3",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14cf52ea-d403-41f8-9ab0-e99186ca50d2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd77636f-5b0e-4d8e-b147-a3e752a714c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64861944-3482-4512-8b28-09d2d11ff793",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6003b0c-829f-47f5-897d-8fc78c04321e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "424893cc-294d-48c9-aa42-a72ecd838a84",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0738c9f-9807-4c26-8bee-e19df84bef3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe19bb1a-83d1-44aa-805b-832eb0b63bb3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3a6c81d-8da9-4366-bffe-7e176eaa2b0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3da7c008-bb75-44a9-9ab1-1e8efa668f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5befe71-7aca-4a2f-a92f-9dba2e5af275",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd1dd5a-6154-4825-9d22-379ba795acfc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ea6e505-a629-402e-9234-dfe8fab2384d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0065ee1-81f1-4a32-ad79-c814511367c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad22b7d-4e81-4b33-8fe8-0db3eb23d0db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8ef08b5-7e03-43ad-b550-5982dfd3c94b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f168cdf6-21e3-4844-83a8-6c9cd228d3a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c41ec78-0dc4-4ddb-9cd0-fd1fc57c9579"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "311555e0-6387-478d-ab79-67aee98e5055",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f747b488-4850-4940-bdb9-84bf8944148e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "badc62f4-4445-4003-acfc-f74c7adb3a1d",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12b43368-2921-4c98-9941-6a27d0f1a8c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f8a97c0-4a92-47da-9aba-3549e54f99c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bb16b5-2298-448c-a6cb-ca56c07c6dd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c54bad8-cd99-4f81-8c84-222b5b62e229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b853132-ac0f-4e62-a6e6-75065d6b4aad",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68b4838-f55e-48b1-bd89-f0372d1ce412",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cd2294d-8157-454e-bb98-f44ef6888835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "686595d4-6109-47a3-972a-5d36bdf029a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f1769ed-c84d-4a39-8c6a-07a4f7486e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325dac37-6203-4437-bb7a-957ec8c315ec",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "376b803e-14e1-4907-a5f6-4d8462781987",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1658468f-3bcf-4811-a828-1deb9b99ba54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "020bf2c7-89c8-4865-a885-ec4d05519ea5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63118063-dd72-47c3-b908-23d88ce14b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa44262-9bb2-4fda-9b24-210d319ba8af",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e122734-b36e-4dad-ba63-814284a29e8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed94aa42-2848-4978-bfc2-81396948be4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5c9757e-81ac-4a65-b099-f598e2d2b3f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a6a2aa9-6dd3-4482-9f74-54398f2907c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b7d02d-8020-450a-a942-cabb258824e3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "130b4d15-6380-43b3-99a6-9eecd792f25b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08e2849b-dc35-40c0-a0e8-5726da902850"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b100557-7acd-429f-b346-4112a580d857",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "374c206c-ec81-4a7a-8548-f770e6e670af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513317f9-0964-4e28-85f8-dfcd54cbc9ab",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe6ebc8-c5d3-4310-9fc2-ab60e30653dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f70815b8-db24-47d8-bbc6-a11ef1e89bfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a586c406-ad73-4f60-9acf-012ae886d05a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c029120d-3fc1-48c5-9f93-16d721e093c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bdfb187-e609-48f5-9e8e-b108525bdb57",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6c2390-e908-46db-bcf0-e55768b0e481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22410118-80ce-4597-bff9-2c9dddbcd73a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c714deaf-1687-46a6-8982-1200cbc423eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed434ab0-9f88-4ca0-b41e-b6cf8ef024a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b755407-5e4d-4294-841d-19a49d838564",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c46db89-898b-41da-9a1c-1360025e5ec2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0a08e77-05c3-4c5a-92bb-136d803fc24e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "842e2d11-f155-429f-8eff-3c0b6484ebc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba9f5d8-b426-48b1-8665-96ba11d0635f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae5a1bb-5bfe-4cc8-adce-83c1f2ee0eb7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4563b7b8-f8d7-4355-854a-174ec738adbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "982d3487-f7f1-4b2d-ad4b-1c90d1727730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d10cc86-c58f-4552-bc64-0d29cd1fbb7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d8ed1f-a921-4bb6-8531-cf7db28656cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1eb1269-4c78-40ac-b26d-3764c6f0f4fe",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7003227-b1ff-47b5-89a0-ee52a5557875",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c30bee9-5e3a-42d2-ba01-0ce2af2031ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fccb55b8-8da7-408f-b6ec-937f76c0983a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "032ac2e9-8c7a-4200-8e9e-bca51c488ba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20c18453-4e65-41d8-807d-92cef75af2bc",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce8eaea-9837-49df-9470-4d1ee956bc83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "104bb8b6-0d76-4ad7-81e4-2a06f3fbe17d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "37bb4c7b-6c9f-4122-9763-5e6335ce6593",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59156c0a-5705-4353-adfd-8b875b9199cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b291a36-221c-413f-a195-fa43e7221438",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b97ac437-fbc4-4fae-82ed-68e5cd3dc430",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07678898-e437-4da0-9be8-c0ef682ef442"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f28f646-547d-4304-9e2b-c2ce4492f667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d7f9e7-ea55-4bb2-bb68-621002d64666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d621acd8-690d-4fc8-9ac7-3691b6508c55",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f7e1bac-58a9-497d-8617-f02b3026b704",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6474d52f-e95e-4ec7-ad3e-e92de3abb3b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45320fc7-87f5-49ec-9aef-9e9e5fb949b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d69a9bf-c9eb-4dcd-a6c6-578ae1fa2bca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d0cacd8-4d35-4bf1-8992-5b43cb9b40b0",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e000f3c1-0527-4160-8969-5defcea10ae8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81f41c6f-edab-44c9-8fe9-22f347d45f0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "303277d1-24b9-45f9-ab9a-e48b1cfad9a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61e1c344-397b-4f58-bc10-bac02d62ce4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1469c239-711f-4a3c-88b4-611e4e467895",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42346545-f5f3-4d87-83cd-dd6ba0310985",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c91cdc-5f1c-4951-9751-21cb84edec65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "120b6e9e-6cbd-41ab-ba01-b8addb1d4f40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc3c490e-b2fc-48f9-b897-0c32907ff0e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f743197-4710-4904-be17-9f398c92fe30",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9332619b-081f-453c-be89-6bfb13bc61f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7944b783-271c-4317-afa5-0efab7702230"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8709afe-2a88-4910-b1d8-0ee6758c95d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a3471a3-090d-4186-98ef-2c31e5367c36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676270d5-33b4-4aae-bfe4-c6744d5211c9",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0970e6-cf13-407b-bce8-e62b01091715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1002894c-da60-4949-aa8b-65c613749b9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0933192f-4210-4a22-8043-8e6c6138bbd6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26779a22-6fac-42a4-b491-b98d6d2b64f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "110b2556-c5e5-476c-b831-fac9d9db7d42",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4083ab9-8c3d-42f4-8412-463d190db7f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28d510f2-8859-4a64-8312-609e9c5ed10c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7a43665-3902-43e5-aee3-47db8ece6b00",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04cef5d6-c05c-4700-a790-6b870509f6ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c058415d-f2a3-4bde-81c9-8890e1ff5c32",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03eda45f-d838-4eb0-ad83-91a6884b873a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b30fedfd-b205-4672-a4a4-7f2bc9ec2183"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ec0f28-5348-45b0-9a72-40256f7b678b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0356502b-3664-4ba3-a338-4898c757038c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f497779-dcf2-4f0e-81f4-fad9d508066f",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec1278f-0817-4ced-af31-e3b8346c9f78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c56188fa-9037-4df9-b2cf-bf58d06f72e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65622849-e8ff-480c-b5e9-6212ddfaa3e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da81bcb9-17b2-450b-a8b5-683de276cbd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7292f89d-992e-4a37-8b21-eb4b26ed1e2f",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a8ac7b3-ffc8-4119-9f99-0207888cba8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c9853d-0512-4fbb-b698-cade33644ab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b677ba9e-dafd-4652-98a4-dea8b17bf08c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8597f372-c633-45fd-8279-a52a8016a4dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77f8b39e-b706-4ac6-ba9c-45d28f0a1657",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6802cea4-a1fd-4516-9875-fceab331f81e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6116fac2-66eb-4098-92d0-ac771875eb60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c46c643-d369-41ee-940a-ddf6e7ecc11e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a9adf90-44a9-4180-ab11-0a072abbd2e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfc8e8d7-da4a-43ab-a3a5-678faf4ef971",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc19fac-447e-48a3-bf3f-6ed4a4cfa441",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e07f189-558c-4824-b867-75aafb39aa4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d4e0da-8d2f-4748-8a96-de7448fed039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3013133-d278-4c51-8f47-474b8557a28f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d199c8a4-373b-49b4-8425-d2380395cf9c",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7a3978b-964d-4bab-9557-b3e2800c090d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee544e00-0bc2-4e82-9cf8-1e343ad559bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb79f837-b9c6-46a2-ac9e-de78b20d95d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22181583-4c12-44a4-9d98-dd6fb6aa5e5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e4afbe-fdcd-46ac-a08b-7d7133724c56",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a80ae0-d022-44b9-be45-a6600adb6527",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3b4c18d-997e-4b5b-881e-9cca657f7aae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d54f61b-8e8d-4c6d-a32d-e1a806bf7bec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76dc7e63-becb-46e1-af90-bd6345655f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a0daf05-6e70-4ea8-9d02-1aedd362310a",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9901e70c-ad68-4c89-8e3e-fcc1415b8495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caef67e2-9aee-47a5-b96c-191647aa699e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b724ac92-849c-4cd6-ade3-594fcc2bc528",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9885f515-9faa-45e1-b525-ca17133ac434"
                        }
                      }
                    ]
                  },
                  {
                    "id": "854f07bb-d44b-4c8b-8555-176de15f8f92",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "515018a7-e4dc-4bb4-aa25-0221b9e6bd61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb4ba3b2-3e9f-4bcc-ba92-6eb281948ba2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf83c25-646d-42b4-86d7-ea730f58bbfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2eb225c-e26c-45c9-9c20-a924f1af60a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1529ef03-ad67-46a4-b750-3b9ae0638169",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9f6a27b-f8f0-4f8d-a2bc-aa97b3f069f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c78b2c-1f86-4a60-9f0c-81bd8a617f74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7f5f22-cdea-48b9-a5b9-c3560ee04eb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82ce4dd3-4904-488d-95c5-b6f7a9eb458c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "762414b8-56a6-4e38-b425-2747ec78e64b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e41a130-98e0-4e75-838f-68bf422ab54d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab9829d8-0fad-418a-8efe-368c3061d8d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d19f851-f249-4be7-a8b4-c08f18dd2c23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51610ad7-6551-418f-8080-e229a74cbde0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "663153df-639e-45d0-a7bf-b8d6a7554195",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a979d18f-d3db-41ed-9fc5-e00948fe0977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e5dcdf8-88b1-4a5a-ace2-5a794ac0eb89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2766b681-41e1-43d8-bd25-6f8525ebc52f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bee86d67-ee21-4b3a-a022-469608ea1a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8433249-8cb3-4fbf-ba98-de49e45ff754",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafcfd21-7701-4463-8d41-487901039f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f77d0ea-9aa4-4134-8a5b-92537881b064"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e27f784-2fe2-4d6d-ad0f-859702577de0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eda58bf7-84a5-4936-ad08-9c36c619052d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ffdef8-68a9-49d9-a8a6-870669b52558",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35ebb436-4589-4772-8f7f-bbe367392ac0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f846c48-0122-4e33-80d8-9de7251ec8a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c106fdf-1594-4318-b858-c189c6ebebdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee98f044-5ab7-45e7-9c44-61f0468108df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b873bdb5-49a8-4700-b80f-9f35e9a05935",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137ec86d-a4d5-43a9-bf84-06d3c824dd17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8103baf6-dacc-422f-ad0f-10d3dbc1d222"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aeff0017-4577-41ff-b637-68fa54a19062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b21daa-1ece-4330-ae57-6f0e9aa7476f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c5999f-b1b4-4257-ab4d-49824062f9e6",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c5a8b3-7d47-484d-80c4-d6f608f5cd9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38ae7164-dd8c-4a43-90b7-2aa356817605"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b477f0a-1708-4797-974b-5067a37d79e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa3319d7-5108-4425-bdf1-64afc367b056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b65da4b-5225-486c-b383-4ef20b1ff8ff",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54f253d4-08b7-40f9-a6ed-6a9bd8d795ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4f65699-1f69-4145-a7a6-c9a375ec1723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dafb7f24-60a6-404c-91f8-68ed56a27aed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4a9fced-285b-4222-81a8-292764f286b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d12eb20-172a-4139-a7d5-ebf90f37ccf0",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1f287c-4fae-48a6-9fa7-8780deec1cb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95c8adfd-b6ec-4807-a79a-68ab7d88c326"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e32c4fc-7e95-4ef3-ac49-8eb21c16bda6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f4d9661-6994-4455-aa08-06a63573a8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adcbe3dc-a8b6-478e-a1fd-82127c98651e",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b84b5fca-0eb8-49c1-826e-f6b96e6d6f7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9a0c070-00aa-44b4-bb7b-2764ed263d71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd7e400-018f-465e-bf7c-97f9c844b6c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "939de6a2-6dec-43e7-a00b-b6b061177a46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056f1b26-22f7-4857-a133-511893fe2570",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8009a018-15e7-42e9-abdb-06b27d1376cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51d43139-5ee1-4ad3-b6bf-9a6a77723f83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "083e78ce-727f-4672-a230-f0cb0925a67b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a8236fc-e663-4cce-9cee-7ed2e17c3cef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c11af3f-7d82-4bc4-bf94-0c5efc89d131",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae397f47-86d7-4106-96c8-9d73552a7e3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3286b7e6-973e-4004-af6e-e846201c6a04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d1345be-2e9f-4cf7-8b04-7c3577462900",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0b31e15-7b5c-4343-90d5-ae72294aa98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f77d5c-40cc-496d-8ac5-804512518e8a",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "882fb8f2-79e2-4b7f-b063-5beada52cc97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68178726-25b6-4153-9d91-9e99f60ebe5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4da0f62e-fa8d-4b7d-b263-84376abd079d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9205359f-ce13-4c69-ae04-7062bad590a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28e6349d-8a24-4ae4-9a13-55f46b6bf670",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56444d3b-1cc6-4263-8922-8d28c13fe59d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7763135b-7bca-4fa8-b316-800ad85347db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1faf16e6-647e-4064-bdb0-500122f5dcb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab7ec1a3-3bcb-4599-a0fb-5615a1c3f79b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b44bde-4e17-45b0-8b5f-c17ee36e2b6a",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5203b631-d9f7-440c-ac33-3848aa04b102",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3822bd82-802b-4e87-9131-ec421a45dd88"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5e69c3e-2ceb-4885-b413-edb231db289f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3f3af1e-e919-418d-a703-713aa93d6b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c557e0d-cc29-493a-9678-b5375730bfd3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06fdb6f4-5d21-4d78-bba5-5547d77e4dc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc68e05f-24c7-4437-a990-5626fdd466fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f86b77-1d4f-4713-9cc7-e6f57bfd054a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a02ffe69-7429-4f85-8f34-794a916ed8e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c922bf-3810-439a-b6e1-13bc77e7f805",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2664ae5c-defb-462a-aa7f-8eac41006e96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43e81c7a-4511-4498-b20b-2148462bf8a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab68bbca-a865-4dcb-9288-633d727f3a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc2d091b-0106-4623-8340-ccc524d1d82d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad79047-e52a-42c5-8b1f-e6bb890e81fd",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d711ddcd-1f63-462f-9d8f-fb78eb0b0730",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "859ceebd-7700-45c9-9904-c4ee7a69fc91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e1796d-0eb8-4db9-a920-54e52d157346",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5d1cd5c-35e8-406f-8f6e-46967e6466e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3cb52a-8a0f-4606-9937-eb2bc78afec9",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02bb0613-4243-482a-8d56-d989eb45b77e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81905890-5039-47c1-8f17-adcf6fe84f38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b71210c4-fd91-4009-9874-17f571e47693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fefb71e-e72c-4bb4-b815-764223d7a2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72eb81d6-d555-4841-974c-9a913f05cbb4",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01536ffa-e69d-4263-9a62-02ba56571893",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3c1f277-c3df-46e8-a170-97aaf7e1bc18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d2870e-90f3-445b-871b-c30b0f9f8c13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "797bfdb1-a427-4b52-b8ac-78ef94528f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d5092e8-4616-42f3-abcc-e54357285b5e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555c6a18-5bc7-4efb-9f6c-03581375e1d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c21ef6c-fa37-4187-887e-1551bdbca6ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9d0ec8-174c-46bc-8be3-08ba5a2f40cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "536d4807-930a-4ccf-9100-3d33cddcc486"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6c8b643-5add-44af-8445-1e1955a835b2",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01cbb9b-d1b2-4161-bff0-ce60ab72b750",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "822704af-a708-42bd-bf66-7b40fd151c9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f69875c7-f1fe-46d7-a793-8d54f797adf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07cedf45-e90e-4a74-a60f-4fc5968e3831"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12453b53-9ec5-4a44-b866-60fe8992750f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69fa4d12-da05-42c9-aa40-5e84b525aa41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9ac11cd-259a-405a-9505-911a54c79260"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5441a50c-6acf-4e0e-9c36-e9a52fca72a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc3e3de-1f41-47a4-8d37-1209bcad17ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "407db784-a3ab-49ce-ab78-b639355bc314",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a8d6af-c5bb-451a-afe2-1fd68c7bf7a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e93748b-8083-49d6-b84b-b6284d883007"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b7b150-66e0-4fcd-83b1-5e3c65d1caf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "489436a9-b02d-46a2-9fc1-b95b8ccdac48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3443fca2-b038-4c58-b27d-d3419769c954",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b086e481-c83a-4bcc-a25d-2e0cccdf9e33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "585f2c61-ab07-4e79-8154-68da322a5fc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "04cc4087-d496-4a87-a357-b122bfc8505e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71c4fb0b-e04c-4c42-8de8-d1adc6cdbe0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8600f7-1e3f-4189-8bb4-a0c801239d1b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b537f749-c0c6-4b84-84a2-bc5a704b7378",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "800fd1b0-0b8a-449d-b5a4-3d241eb5a9af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c498a00-6d68-4307-b007-854f9a6a36d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75e1aae8-b36e-439d-84ae-cabe817b12b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cda76cc-9b70-498e-b968-58f54cb8c630",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dd148a1-4565-42bd-a521-fbd8665b0ed0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a85bcc5a-599e-4a31-b6b6-d789ec245e4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35e1ea83-9e2e-4618-a0b5-09b42ab0c2b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "978d5daf-8da7-4cbd-bf66-e56e3656de45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b88d8b29-5c86-4936-8480-f790e4271dcf",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ddb885a-b55f-40ec-b2f8-509893b87a78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e1aae57-9b09-483c-b8d9-2b6615eb53fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb02310c-d696-432f-ac2b-38a1baa24f39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79f30e37-9822-4600-9b93-f035111f87e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41520516-ce73-42da-8436-277f62f108a2",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bdf5bef-1046-4209-ab80-758458591af9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81eca69f-6e0a-4526-9b96-68d1efaf7594"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d7706f-fb9c-401b-9b88-38e46c61fcba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1de264d4-23f4-4c2e-874b-c73aa46bce63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bb66ec3-a07f-484a-bdc7-83c94ee2d1ee",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41b6ef82-ecbd-46b8-914d-67888c65cd1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "510419e3-8b44-48df-a627-e4125c255f54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac3df35-0ff7-4725-9759-f49f37c5cf8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8f9ce47-6a9b-4099-b1ac-4f93df4d6567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd3e8b05-4934-4bbd-b3ee-e83d92a6fed2",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9019613-718d-4a6c-b8d1-ff07e8951fda",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db301384-6dd9-4979-90ec-c4d9eb15a0ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c759f14-acb8-4359-b96b-290b7a9165f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "504fb1bf-383b-4f5c-ac2c-7216693db90b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b47df3b-b7e1-4707-bf95-64965100d80f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "510baa42-5967-4e6b-b693-eddc86c9b40d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12f89b62-6655-4d12-b159-9b47cd73d75d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4843e5f1-d786-4f30-8e6c-690af9984c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b974ef6-9a51-4bff-8f4f-b475e6a85df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f87e1810-27c4-44c8-8033-b044c65e8e08",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40695c65-611a-4536-8c67-ae33532591a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc4c71c7-e2b5-4647-9e17-191e6fe3be5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88df4fcc-67be-4d54-951d-04007c115b55",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d00ccd3e-e859-4051-a349-8c7c3ba6fb65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04cb50c-7e78-41c8-b734-8bbc3daf6453",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96f1e1b0-8e1a-43bf-bbde-64c0854ebfab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "494ef470-b2e5-4a6b-be20-bc31e5a863f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ec79d0a-3c0b-4032-be4f-9827b800bf17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6679d0f1-0eac-496f-8436-d7a4ccb0e292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ecb81e3-4af7-4379-bc32-b522afd81d1f",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131e0cb1-7a44-4f9b-9940-e5f42e84f44e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d14e7ed8-9b9c-4a7c-827f-9edda7bf3653"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10c2355-d1ee-470d-8bdb-73cf51728b6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c0735fd-e4ce-4f64-bb74-9a260c5da7dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d76ef19e-ea09-43c3-8532-5803efbbbd71",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3674a82a-9f16-4cb8-9eb4-c14dea6f739d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22fb954a-bbab-4e0a-b925-c4102d142bc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fbfc1f7-29ea-4e56-adb7-25cc4155a87b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e7f513-3854-4818-a717-93250a504ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a461088-7c04-4683-a997-3448d4cc0998",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4bd46e2-e9bb-4eb9-8bb3-6bf9a1093e4a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fa2e0972-54ba-4efd-ba45-bf4cd6a3c80c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4369aeaf-2b52-408f-a180-fafa79a0e359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff059ce-2c65-4ddf-85b6-c2f61d52fbc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9e820de-d159-42fd-b8b3-e5f1a96c49e7",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b5f329d-f350-49d3-80b4-8186f5991708",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7ba67573-5b09-48dd-a48e-8f70460e59f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f763865b-5d23-44de-973a-1b921ba513a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fc1d60d-d632-4d74-951d-b09405509c19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ee8805-fa50-4dab-8fba-db82622072d8",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0133949c-80c9-4ea2-b90a-7c0c9095ba7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5bd6bc04-235c-48e5-8885-413b4b8b6814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "262c502b-0cec-4b62-9630-1877a57b2162",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db1c1b7c-01ce-48e1-9970-8a7a7d21b5ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d640577-3f1a-42a0-a8ef-ca1df4bad5d5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d589b4-572a-49a7-a286-11670e91cd7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5417fe43-bc3c-4bf3-8fea-85953ac89082"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d3c2d58-f884-4ffb-b628-a807a8b3adbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ec1fcc-82e4-410f-932a-3100da41703b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a689e807-2ce6-4700-a3a0-eab20de1343c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dace3e25-16e8-430b-b2b0-1381f9864513"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2f69922-88b3-4817-bccb-fefb8de8d332",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e0a707f0-a09d-4ff0-ba3c-96e2a9a317fe"
                    }
                  }
                ]
              },
              {
                "id": "bbc33e18-940f-4646-acec-dfc4baa5cb9c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d7c29e1-4908-442b-9631-d35734c9ac83",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53bbff8d-dc2e-47d1-bdd5-b605795f8ae2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9e9a8f2e-3f7a-45ca-acc0-1f3d30221fe5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01b9131-8901-4e3d-9f1c-e132c45cd31f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd030dbf-bfcd-4e0d-8627-04a7ceeafb4b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8f324f1d-5fff-4df1-bb51-0d6d93f8cf19",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fd5655de-c1dd-4fa9-b664-ead95633df23"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfc6cf71-a9bd-41b4-a40e-6b5315dd2db9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "628dd626-4a1a-4967-ba20-4ab30596e589"
                    }
                  }
                ]
              },
              {
                "id": "0fd8a655-0c5c-41b7-b1b6-fae32ab38ba7",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "e3737400-7041-4960-b862-b294176207b2",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a773c977-ebc7-4b6e-bde5-3a05c7fe2406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "dc910ddd-915d-4d93-83ef-c24648a5e86d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fbec54d-36a5-4c94-8cb9-1fcc23684817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59b262d9-3d04-44a2-88c1-6b15a04248f7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d7e0aaae-9a53-4918-bef8-9163687bfc89",
            "name": "Positive Testing",
            "item": [
              {
                "id": "12f7e699-3be6-4a96-91e7-efc78d8df336",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c3c301e-0924-48fc-bae0-f2a8dd8dc499",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "499bb75f-90fa-49e4-8838-05d2c04cef68"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7ba6101-9f70-4c8d-829a-30ea690e4ae9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb252154-8279-461c-b358-15f546a0786d"
                    }
                  }
                ]
              },
              {
                "id": "bbd0067c-4f7b-4c13-9900-1fe4f9246e59",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "82e8a41e-8edf-42f4-a750-a0121d423185",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "7b76bf37-0f1b-4b49-9b74-9132205e171e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f03291e8-c534-4cce-9c09-8d17cd5dba56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28db016c-7248-4aed-b05b-71bd2e96f8e1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "63ce554e-96b2-409f-9372-644d6173b4c8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "fddb185d-0925-4a98-8311-b4065b44cbf5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9ccb6c7-53fa-47bd-96ed-f45b3bd8fc56",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "117cdeb8-bed5-4b54-b9f5-7de51517a307"
            }
          }
        ]
      },
      {
        "id": "e51ccc40-f663-4015-84a2-72fbd5e15dfe",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "2d0d6b45-4877-45e1-adc3-e0f6ca5bd9b2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9513b3ad-c59f-4e0c-853a-192726c00dcf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c57d6e06-3d0e-4f9e-ba41-07189b06b7ca",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad2e7223-f90c-41b1-bfea-aab830d12a24",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "673f1db5-c825-48a8-8913-1933317ebb8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c51e317a-cfd2-43f5-b65e-ea90f112390f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9f28f2c5-e8e8-4bca-8079-ad7892f0bb15"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6dfc55ad-f4bd-4dce-9a1e-42fbcb6878dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41631b8e-77e0-4085-99b1-91b5179f2980"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "457fdc22-be42-47a2-a3d5-f68410f57b42",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e309a63-da3c-421b-93b0-87dcab0d839a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b53c337e-9c03-48d8-b071-f54a01bcd436",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e058b3d8-7546-42d5-83aa-2b7eefc02464"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f14d0aeb-a386-4c4b-8ec6-093f2e1343f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e1056d92-074c-4cab-8314-f647e0a5c7b7"
            }
          }
        ]
      },
      {
        "id": "ab5d79c7-1381-41c5-94f7-3a0f37e10b6a",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "4f228cff-15db-4a0a-8dbb-721284e86ca3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7f71a6d9-59f8-4c08-8cd0-bba18737e76a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c4ee50d5-42a8-4de8-ad73-7539d6715d32",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93148c06-8c18-44b6-94b7-a432fa71bb88",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1d22f49-8fec-4265-8855-2dd6d8a58e61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9726e57e-9e21-4371-b78a-2394babb5998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "28ca0e20-0226-481f-9906-7c90060d41d1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ce238d26-9a07-490c-95c7-89003b4148b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b2722ce0-adeb-4b2d-9411-8c9291453d10"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "25615e31-8dde-43b2-baa4-dcf20950f0f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "187b1c16-aeea-4979-9c60-e94e951fa924"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "59fde683-8b66-4c59-be64-34b26316d1c9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3d79136e-56dd-403b-aeb8-4816f0d76599"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1c7b35c-dbf4-451f-80c2-e248041279ed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "86c74285-7609-4218-b0cb-8fddfef26adf"
            }
          }
        ]
      },
      {
        "id": "c59aa49a-7595-4bcf-8eb9-53fc00ed52fe",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "645b726b-7d7b-498f-beb9-e5e1e2b338f3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cfa6a502-b6e9-44a1-b195-d5026b0ab560",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7c5578da-d54e-420e-a18d-97144d24f0a5",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef2f504-947d-441a-946b-40a62346b785",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0673adf4-7855-48d8-8b29-329f22cd68fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07234209-8edd-469c-8e60-238154bfd0f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5682d08a-08ab-4e3d-990c-e43f9deeb680"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "106d3ed7-e640-44a6-91eb-375f2707defd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "96ec7393-694c-43c6-b193-81657e4d7184"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bbc1622e-30bc-4c73-8d66-4cb3becf49ae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4dabd27c-3a9c-4fa4-9602-93d3bdf09adf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af354868-4e17-4b5c-96ad-9cebceda21e2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "be4df81e-bc36-4de5-aacc-74eaa55b111a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d06af8f1-208d-426e-9455-529fa73541d2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "13018661-338b-4bc9-8b7c-1757cb85894a"
            }
          }
        ]
      },
      {
        "id": "8d351137-53a9-453e-be33-78de7a50eb26",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7e488d9c-7776-49c5-bbf1-63c578567af3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4798193f-949d-4ab2-a712-05a710ad666b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "33224a2c-094d-45e5-9f65-91dc51b73947",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dfb5456d-26e2-461d-9c83-723883e0d01f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9ac00ff3-8a22-45b0-b8bb-38a63e169efb",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 37
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 11.734126984126984,
      "responseMin": 6,
      "responseMax": 305,
      "responseSd": 27.039006693442044,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1721867985238,
      "completed": 1721867996256
    },
    "executions": [
      {
        "id": "c05d6595-6abd-47ef-93be-9f92a757f1a1",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "72190414-af17-4cd9-b425-c00089417156",
          "httpRequestId": "cf0d792e-9a22-4b27-98d9-9985c159cd15"
        },
        "item": {
          "id": "c05d6595-6abd-47ef-93be-9f92a757f1a1",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "bfa059e7-f091-4834-ba02-c757677715f8",
          "status": "OK",
          "code": 200,
          "responseTime": 57,
          "responseSize": 0
        }
      },
      {
        "id": "8283faaf-d2dd-4ea5-a7e1-2153aea44192",
        "cursor": {
          "ref": "7bb3dc49-67ef-4b3b-83b8-73c7f67d0954",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7ed68da3-1bf2-44ff-ae79-39226cbfacba"
        },
        "item": {
          "id": "8283faaf-d2dd-4ea5-a7e1-2153aea44192",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f59b917f-d3e6-489d-a2b8-da3d8c69e52f",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "dfb81910-a839-465d-8a41-bbb6351ef4ce",
        "cursor": {
          "ref": "d5212355-91e3-4a6a-a606-2de4fb50510b",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "82a48707-1cd3-4c15-997f-bdc9cb911ba1"
        },
        "item": {
          "id": "dfb81910-a839-465d-8a41-bbb6351ef4ce",
          "name": "did_json"
        },
        "response": {
          "id": "426c8b4c-11ff-4159-863b-6777a36f88bf",
          "status": "OK",
          "code": 200,
          "responseTime": 221,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2275fd-09f6-4276-8cf7-998a6b38ba8f",
        "cursor": {
          "ref": "e64cce6e-c7bb-499d-b22a-af86c3d959bf",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "69dd2c26-3a97-4605-8c15-b1fe2ca31149"
        },
        "item": {
          "id": "0a2275fd-09f6-4276-8cf7-998a6b38ba8f",
          "name": "did:invalid"
        },
        "response": {
          "id": "91a551cf-8165-4cac-85be-69b8442bf445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a2275fd-09f6-4276-8cf7-998a6b38ba8f",
        "cursor": {
          "ref": "e64cce6e-c7bb-499d-b22a-af86c3d959bf",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "69dd2c26-3a97-4605-8c15-b1fe2ca31149"
        },
        "item": {
          "id": "0a2275fd-09f6-4276-8cf7-998a6b38ba8f",
          "name": "did:invalid"
        },
        "response": {
          "id": "91a551cf-8165-4cac-85be-69b8442bf445",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30e030d-e729-4c87-8a12-884f16100e29",
        "cursor": {
          "ref": "96825898-5a8b-4104-9dfc-336304829759",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "2414257a-e196-49d6-a048-e9549ef40550"
        },
        "item": {
          "id": "b30e030d-e729-4c87-8a12-884f16100e29",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "020ac548-9dbe-4b16-b1cf-77f745b1f436",
          "status": "Not Found",
          "code": 404,
          "responseTime": 61,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c903f7e0-6e95-4314-89aa-4246867c3275",
        "cursor": {
          "ref": "ceb264dd-5fe4-4273-9952-0b12a223bd65",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8c336af5-8288-4569-b7cc-b683eef46b90"
        },
        "item": {
          "id": "c903f7e0-6e95-4314-89aa-4246867c3275",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1536b884-fbbf-4c3f-81a6-c25bbb47bdc6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4caf5d83-1561-4720-b8ed-8893d94bef89",
        "cursor": {
          "ref": "6be962a1-2fa2-4785-b973-4d96479708c4",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "0a7bba84-1ed2-4072-a8b7-d88d29facb68"
        },
        "item": {
          "id": "4caf5d83-1561-4720-b8ed-8893d94bef89",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "87cd881f-b0fa-4cae-9e7e-15f70dc41659",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 9,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce416727-53a7-4531-807d-b56a79511786",
        "cursor": {
          "ref": "566af30c-bb0a-4888-ac09-ed2f0d97c28e",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ad31dfe8-7430-4c22-888d-95e42701edc7"
        },
        "item": {
          "id": "ce416727-53a7-4531-807d-b56a79511786",
          "name": "identifiers"
        },
        "response": {
          "id": "4cfc9bdd-c69e-4de0-ad0d-bdcd8db47eb7",
          "status": "OK",
          "code": 200,
          "responseTime": 228,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e2c4939-5f63-43e8-bdd5-a89f705d1bab",
        "cursor": {
          "ref": "0b84ca21-932c-4a05-a6bd-47f908e2494f",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5df4bf11-438c-4c74-84d4-b836d9524269"
        },
        "item": {
          "id": "9e2c4939-5f63-43e8-bdd5-a89f705d1bab",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "48360ffe-2895-4e9f-91b4-50ebe3192bb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7656f50-c090-45d5-b839-459ed39c9ad4",
        "cursor": {
          "ref": "9f212696-e1a9-4517-bb14-9d7086bd69b5",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "dd656eea-88c6-41fe-84e0-51830d9315d9"
        },
        "item": {
          "id": "b7656f50-c090-45d5-b839-459ed39c9ad4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "dfdfbb20-c3a4-4439-af10-0d1b14bf3169",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e98c5dbd-2c6c-4998-bb4e-f9affc2f9cd8",
        "cursor": {
          "ref": "702edf24-e960-4e72-97c4-90640d0d9e71",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "fd0dd7c1-17c3-4ad9-8707-6260f674d533"
        },
        "item": {
          "id": "e98c5dbd-2c6c-4998-bb4e-f9affc2f9cd8",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "ef098709-feb5-47fb-8721-c1fc03a365a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8975ee-920a-4b5b-a468-3087b7972dfb",
        "cursor": {
          "ref": "c3b67ec7-aa59-4d41-85b1-6e3c56a7c33d",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3b501ef0-5c21-412d-add2-17e3d8de07ad"
        },
        "item": {
          "id": "1c8975ee-920a-4b5b-a468-3087b7972dfb",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "15fca0a2-92fb-4c4c-a160-8e9b0a63d5e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff81204-66a8-45a3-ac47-a1389fe74e10",
        "cursor": {
          "ref": "06984658-69fe-40c2-bd9e-050da083b94b",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "33a76f1c-d22c-4513-9b19-07cc008fe1bf"
        },
        "item": {
          "id": "9ff81204-66a8-45a3-ac47-a1389fe74e10",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5fc90e75-6fcd-45e2-8593-2ad673ad0348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13d11de6-0f6e-4333-9a7a-fad08d81ff31",
        "cursor": {
          "ref": "7e50e8d5-6252-4f71-8e9a-eb4ef2b3df68",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5dddd4ff-a348-49f6-af55-4addde93cd00"
        },
        "item": {
          "id": "13d11de6-0f6e-4333-9a7a-fad08d81ff31",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1d69280b-5f79-4a0e-aee6-ea3bb4edd668",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "945259cc-affd-441d-a60e-0b84f167ceb4",
        "cursor": {
          "ref": "13c63d5a-f64b-44eb-b32b-8a34b3672ec0",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "572f85a8-cbbb-48b0-9d43-d2d0d576f65a"
        },
        "item": {
          "id": "945259cc-affd-441d-a60e-0b84f167ceb4",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "414cc9f1-8961-4fed-8d2d-1ab4988b9809",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d379cb59-1303-41f8-95c4-e2cccbe1098a",
        "cursor": {
          "ref": "6f076538-c93c-4c95-9873-e736fda81f45",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "dc403fb1-353e-4f03-94ab-0befb00365e5"
        },
        "item": {
          "id": "d379cb59-1303-41f8-95c4-e2cccbe1098a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0cba4d27-85ad-4d23-80f7-1a61b79950b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d05bed0-146d-4624-899b-9faca2992f06",
        "cursor": {
          "ref": "f7fce318-0a64-4405-8708-6d0b636ba09e",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f7217f61-3741-4f73-8f5b-417bbac0b8cd"
        },
        "item": {
          "id": "3d05bed0-146d-4624-899b-9faca2992f06",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9b59b5e4-c28f-4f99-a43e-528d623fa7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "226edb7f-61d4-4be4-8d6c-42870c9e1d53",
        "cursor": {
          "ref": "c73cff14-9e12-4ad0-93ff-c5c0c28a39e7",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "fe327369-845c-4e51-825d-4625d79a19b7"
        },
        "item": {
          "id": "226edb7f-61d4-4be4-8d6c-42870c9e1d53",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "cdd3df3c-1e28-4b6c-9a61-82e5160443f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45777387-c0f9-4b31-84ab-c02de1268950",
        "cursor": {
          "ref": "48f9eadc-f997-4b3c-9e9c-a54455cd897c",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "84c89f50-50ec-4e4f-a9dc-61aa18c48606"
        },
        "item": {
          "id": "45777387-c0f9-4b31-84ab-c02de1268950",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "3d045ad3-00b4-4e56-b73c-0ac989b426cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3707142-915c-4a14-ad7f-535cd1f000c7",
        "cursor": {
          "ref": "f70bd445-7347-4497-b8e7-0e0f430e37c9",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c23a4076-ab0c-4392-a56c-64be00d46b7d"
        },
        "item": {
          "id": "c3707142-915c-4a14-ad7f-535cd1f000c7",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "0c12d110-ef63-4e73-ac0e-2f56cdd633fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeda95c6-2ff7-4328-8f13-a30314e1328d",
        "cursor": {
          "ref": "eeac4ce1-e68f-4eac-bbf8-e537d7277753",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "73154e5f-7e3c-4474-b34e-e6f913c91ea6"
        },
        "item": {
          "id": "aeda95c6-2ff7-4328-8f13-a30314e1328d",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "e335ece1-e1ce-4f5c-9cae-868b16b6dba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59970248-b78d-4f11-a6ed-2cc30ea9d422",
        "cursor": {
          "ref": "46c5572e-e830-4b7c-b3f3-4b8dcc3799d0",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "4837bf5a-f108-4cc4-b232-16b59b866101"
        },
        "item": {
          "id": "59970248-b78d-4f11-a6ed-2cc30ea9d422",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c641cd31-ea55-4f49-b382-62a85f1d81b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0025797d-18ee-4bfc-aaf5-3f5402a0e496",
        "cursor": {
          "ref": "e6483069-49d6-4eb2-8ebf-14969555246e",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "400b570e-853b-4bb2-a740-ee2c09849476"
        },
        "item": {
          "id": "0025797d-18ee-4bfc-aaf5-3f5402a0e496",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "8c492cfb-dcc7-40a0-ba0d-a8600af39d8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2409971-a78d-4a46-9f08-4a9dcc1a5ac4",
        "cursor": {
          "ref": "a1725399-71e7-496b-bf4a-c7b285ed0108",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "27b4eef4-da66-4cc3-94a9-a448fa2b3e62"
        },
        "item": {
          "id": "b2409971-a78d-4a46-9f08-4a9dcc1a5ac4",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "46ea8aa3-2855-4043-b7a4-d792727feb49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beed628a-97b2-4316-800c-94c70aead27f",
        "cursor": {
          "ref": "5de4bc82-41d9-4c07-9f3c-aa616f1fd49c",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "7681ec36-b6f5-4300-bf49-4185d355baf2"
        },
        "item": {
          "id": "beed628a-97b2-4316-800c-94c70aead27f",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "8e7e83b8-cccf-454e-ab61-5bf51b5586e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fdde1a1-955d-41d8-aef8-89dcd9658de2",
        "cursor": {
          "ref": "898bced9-3bf8-46b6-a1ec-5fbd736799df",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9a31b580-5016-4bb1-96e4-aec1cf605670"
        },
        "item": {
          "id": "3fdde1a1-955d-41d8-aef8-89dcd9658de2",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4e4d107e-81f9-48bc-89fe-702582d679f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc2c47e-03be-47f9-a21c-1527f8df3fe4",
        "cursor": {
          "ref": "d91bd43c-201a-473f-8d08-2656721bd7ed",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "9a3b0774-89b4-4e2f-8b9a-bc8557b07d70"
        },
        "item": {
          "id": "8fc2c47e-03be-47f9-a21c-1527f8df3fe4",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "51d004a5-ef9c-4a73-ac9f-3caa07604cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af18e4ab-7707-49fe-92d2-4215bb5f92c0",
        "cursor": {
          "ref": "34b08bf0-efc1-4d0e-bc41-1fefabb8f303",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "170da707-10ba-4a7b-a30a-11853fc30311"
        },
        "item": {
          "id": "af18e4ab-7707-49fe-92d2-4215bb5f92c0",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "e491f998-cf1a-40ee-bba9-04dbeb3a6799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13a499b-2e7d-4aff-a40e-94cd6f96fe69",
        "cursor": {
          "ref": "1509a0b8-16e1-42bb-bc00-e8289c080d0a",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "52848dd2-b55c-4616-bb58-c07f0e229ace"
        },
        "item": {
          "id": "c13a499b-2e7d-4aff-a40e-94cd6f96fe69",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "21d59c98-f6f4-43b2-b16d-299ef7cc48b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3e23714-df80-48a4-8866-e31d93c7bb8d",
        "cursor": {
          "ref": "56279c84-78a7-4834-be7b-025bb9f65576",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f6b6bc6e-dcff-4d3c-b24d-d1813e659f85"
        },
        "item": {
          "id": "d3e23714-df80-48a4-8866-e31d93c7bb8d",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ff225131-6e6b-4c7d-a623-dfb618d90d13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33254c09-c8c5-4d27-9c52-67b72f219deb",
        "cursor": {
          "ref": "3530eed8-8b1b-489b-b123-7c3cb551d86f",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "fb79c1bd-28f4-4f03-971e-55cbbd067072"
        },
        "item": {
          "id": "33254c09-c8c5-4d27-9c52-67b72f219deb",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "25e290e0-66ee-4e0c-ac77-5dda1430677e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6517141c-57fd-47d8-ad81-0c22cd7f091e",
        "cursor": {
          "ref": "b24ac9c4-a6e5-4ae7-b31f-586792db1e31",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "8918834e-85f3-4405-b23c-d17da44fff1b"
        },
        "item": {
          "id": "6517141c-57fd-47d8-ad81-0c22cd7f091e",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c03fe5c5-8f78-4de1-8c45-9008d4231aef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dddaf9e5-7984-41cf-a2bc-c01c0111f816",
        "cursor": {
          "ref": "1a608c43-e096-4048-ab6d-c6daf2c8b248",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "b06893db-2365-4304-b920-0af0f857a9bd"
        },
        "item": {
          "id": "dddaf9e5-7984-41cf-a2bc-c01c0111f816",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "58f2cce8-f065-4916-81c1-5722f60b31a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080e3035-bf72-4adc-bd99-7fb519d05835",
        "cursor": {
          "ref": "a8bc2578-9fb9-4ac3-a07f-40c3a26d6a07",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "3761e2e6-cacd-4f75-b5b1-d6bda900c3a2"
        },
        "item": {
          "id": "080e3035-bf72-4adc-bd99-7fb519d05835",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e8a2f036-be3e-4046-b1c2-2fb87831a1ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7cfa7e-830d-4296-9213-db03fd8089f7",
        "cursor": {
          "ref": "f1fcf12f-f7f9-472d-b334-477b9bb34b32",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "a5c031b2-7579-4661-a39d-ed992ab58514"
        },
        "item": {
          "id": "3e7cfa7e-830d-4296-9213-db03fd8089f7",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3fe92588-adf0-4c33-8980-98a83b8c1622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f303c8d6-d53d-49c9-b805-699260bb015d",
        "cursor": {
          "ref": "44b0e883-dc94-4196-995d-5b5cfc3e36d5",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "71c86e77-df1a-4e81-a1fb-d0ff816f068d"
        },
        "item": {
          "id": "f303c8d6-d53d-49c9-b805-699260bb015d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "b5757ca4-4acc-47c3-af91-462a681fbfcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0a85dd0-88b2-4a53-8925-8379d6327dfc",
        "cursor": {
          "ref": "8a7cc90f-26b5-4f80-98ae-c05d43bd8d73",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "9a94a236-12a4-428a-a480-62ac5ce635a9"
        },
        "item": {
          "id": "b0a85dd0-88b2-4a53-8925-8379d6327dfc",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b2368c01-574b-4529-ba65-daf8b7300166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db02af46-bf63-48ae-9d7a-f9a66bb7c605",
        "cursor": {
          "ref": "f795d3de-25cf-4891-9f7e-9bcff4ca2a7c",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "e438f25a-2a2f-4bca-a227-04364377d18d"
        },
        "item": {
          "id": "db02af46-bf63-48ae-9d7a-f9a66bb7c605",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3c50ba9b-123d-48a2-9c48-23eed933ab73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe4128f-2b63-480c-8dec-fddb7ab79fab",
        "cursor": {
          "ref": "0951a742-0a1b-4ec9-8e61-3dfe5fca07ca",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "48070b93-4ca7-4c83-b15d-38dc4e9ec1bd"
        },
        "item": {
          "id": "0fe4128f-2b63-480c-8dec-fddb7ab79fab",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "dda261e3-64e4-4341-a5c1-98869c4c0a5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f402aa2-4caa-49d7-9818-f584e6c17d92",
        "cursor": {
          "ref": "dd712b4b-63af-4fbd-b650-547e1c8fffd6",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0e9608ad-f0e9-494b-8bac-3428c7c06668"
        },
        "item": {
          "id": "4f402aa2-4caa-49d7-9818-f584e6c17d92",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f63bcc6a-3473-4e75-8aa9-d4e21a3cf976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d3133a-5c40-4442-8537-173ee1be0c8c",
        "cursor": {
          "ref": "3a9af1f3-d79e-4c5e-912e-974645c15d89",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "f95681ca-e9be-474a-9d1b-92807189caff"
        },
        "item": {
          "id": "44d3133a-5c40-4442-8537-173ee1be0c8c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "ca4ea0fa-9d9b-4337-b1dc-b9ee45da1126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed5a591-1f4c-44ac-8c58-922a3090c94a",
        "cursor": {
          "ref": "4cd50bcf-f090-4038-9dc0-0a6775cc81fb",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0146caba-99cc-4926-9900-2860a974df4f"
        },
        "item": {
          "id": "6ed5a591-1f4c-44ac-8c58-922a3090c94a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c2eca467-0e52-4b32-8ea6-66ef057d3be8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "130c7673-63af-41dc-b4c8-f968926b29af",
        "cursor": {
          "ref": "5d342cc0-d0c0-46c0-9689-1ce6c1ac2c3c",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8358ee9a-c3f2-4da7-b28e-949689411b98"
        },
        "item": {
          "id": "130c7673-63af-41dc-b4c8-f968926b29af",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f4b859e0-5d7b-452b-847f-1fbbc058c5e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c77329a-137c-4705-81bb-2cf472d117ce",
        "cursor": {
          "ref": "28f26948-bdc9-492a-a5a0-ffaaec51b7d1",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "e61a4131-1a14-4fc6-a515-27e7de8e76fd"
        },
        "item": {
          "id": "4c77329a-137c-4705-81bb-2cf472d117ce",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d5edfa19-d6cc-4ee4-8d96-196b9d38e984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6945837d-0cb5-4b7b-9a4d-279ed35510e6",
        "cursor": {
          "ref": "8f9901a8-6f8d-408d-acaf-fe6cf627412a",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "7db174e7-4dd7-4781-89f1-8d7fc9c759c0"
        },
        "item": {
          "id": "6945837d-0cb5-4b7b-9a4d-279ed35510e6",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c3f312f4-9ee0-49a2-b159-90785a15ac3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec93434f-4008-4f0c-a726-148e77742e5a",
        "cursor": {
          "ref": "8d14fcff-af5d-4d86-9b51-7bd8051892a5",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "726963b6-bf5f-47e8-bf35-3c5b5b7e3676"
        },
        "item": {
          "id": "ec93434f-4008-4f0c-a726-148e77742e5a",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "469bcd32-d589-4f95-8526-dcabdafe2eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aeb857f-b873-41a7-9557-0599875aabc1",
        "cursor": {
          "ref": "bc0353e9-54a3-4af7-ae34-df867bcce484",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e6ab56f6-56c1-4b12-98b5-b3a916780d07"
        },
        "item": {
          "id": "4aeb857f-b873-41a7-9557-0599875aabc1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "0bc8da68-99eb-49fb-af92-9065d5fb3201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "994f3756-1e18-40f6-b794-25c995f80971",
        "cursor": {
          "ref": "17a5ab0f-1673-4b42-bfb0-96a9f948ec86",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "4c237875-145a-4eb5-8bc9-deac4a0f429b"
        },
        "item": {
          "id": "994f3756-1e18-40f6-b794-25c995f80971",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9702687e-5e44-49a8-91d8-e8d1d49cb945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d39bf7-9e21-4f18-ac51-10f75daaa520",
        "cursor": {
          "ref": "4b044829-26c2-47f9-87e2-7c74e4632b66",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7f32d6a7-3cf8-46fb-ab8e-e4f8ae07b1d7"
        },
        "item": {
          "id": "b2d39bf7-9e21-4f18-ac51-10f75daaa520",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "23751213-d657-498b-a8e0-4a39e77a7220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897115d0-13c0-4de8-aaa4-ee1fe79e8e78",
        "cursor": {
          "ref": "24b27349-4bfc-4445-8997-f7b2b842ecdd",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "a127e1d7-0021-4ea2-9bbd-2ffda31bc192"
        },
        "item": {
          "id": "897115d0-13c0-4de8-aaa4-ee1fe79e8e78",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "8bb871f9-cd3f-41a9-95cf-5a7f919ac3b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a428808a-0aee-4140-971b-e71672aff111",
        "cursor": {
          "ref": "eb097443-d1dd-47f4-8dc2-4c13b161b808",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ce60e321-917a-4751-8ed2-e81d2e3560dc"
        },
        "item": {
          "id": "a428808a-0aee-4140-971b-e71672aff111",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "668b60f5-6be0-4f72-8123-e70f1027e75c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bee4719-522a-4655-80dd-7eabc4b8d1e3",
        "cursor": {
          "ref": "4dc4e095-5c99-4b76-b02e-a18c6cb866d5",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "1cdab3e3-1655-4761-a2d8-89f7b18a9df7"
        },
        "item": {
          "id": "8bee4719-522a-4655-80dd-7eabc4b8d1e3",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f637e103-db83-42ce-b2d3-cb4813d399fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9ca9a42-0788-4548-a710-32746d6931cd",
        "cursor": {
          "ref": "25c3a989-af69-4ea2-a912-575bcaa7bc8d",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "c8e75f28-b981-47de-ab0d-a9e19e161f37"
        },
        "item": {
          "id": "c9ca9a42-0788-4548-a710-32746d6931cd",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b9e94530-5e25-4c6e-88bf-4baa3e787d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "167ca2a5-9832-4933-9f60-8cb94ca5f4bf",
        "cursor": {
          "ref": "018db06b-eb3d-497c-ab16-1a64bc5d122b",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "36bb4f23-a7fe-4084-a31e-55b68b35c2a7"
        },
        "item": {
          "id": "167ca2a5-9832-4933-9f60-8cb94ca5f4bf",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "afa1b497-4b64-49d6-ad7b-0bc15d723d89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc09069a-e8fa-4175-b2db-93ba46a5b4e8",
        "cursor": {
          "ref": "0d67e3fb-e9a7-46a1-be39-4ba438fe27a0",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "6c063acf-5eb5-4881-a75c-8244e88b033c"
        },
        "item": {
          "id": "dc09069a-e8fa-4175-b2db-93ba46a5b4e8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f5de69dc-af9f-4a5c-81c4-525f622831d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51cf34e0-156d-43cf-92ba-50779e7ead29",
        "cursor": {
          "ref": "d26c376f-8d2e-4fb2-957f-2370ccddb39e",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "35d28317-baa6-44e9-a72d-d86ad62ef506"
        },
        "item": {
          "id": "51cf34e0-156d-43cf-92ba-50779e7ead29",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "758f71a9-bfe5-4049-977e-ea72d3110188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a48665-1a80-4637-8bf3-2d34cef1dc2b",
        "cursor": {
          "ref": "eb5a0c3e-56a6-4bd9-977b-c14d3dcbcf11",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "380473b3-7005-44f5-9a59-abbab4858344"
        },
        "item": {
          "id": "94a48665-1a80-4637-8bf3-2d34cef1dc2b",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "e53a27d9-87bf-4bb0-ae6f-0a4bbd8fd814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db710b97-c033-443a-bf6e-c3fcd53811cd",
        "cursor": {
          "ref": "3eaf455d-234d-4e68-93fc-ea2da94536b2",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "d6914bcb-e40f-4f33-8cee-f339a811f36b"
        },
        "item": {
          "id": "db710b97-c033-443a-bf6e-c3fcd53811cd",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "08e2c085-0ea3-4174-b9ea-f487083b8766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06cdca68-e0a8-4658-8a7c-44d84f129c2b",
        "cursor": {
          "ref": "bc2681b8-7d7f-4269-8eb9-71592b980490",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "66389fc8-79e2-4b9c-b7e1-38b0d3457ea1"
        },
        "item": {
          "id": "06cdca68-e0a8-4658-8a7c-44d84f129c2b",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "aa598e46-fa62-4404-8210-5a3f6a0c9ae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4030960-d6ad-45f6-af34-162f311ceeba",
        "cursor": {
          "ref": "e7e695a2-ac96-41b6-a547-97e9b0783732",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "9137e5c3-768e-4a2e-8d66-1c9c37962691"
        },
        "item": {
          "id": "c4030960-d6ad-45f6-af34-162f311ceeba",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "72b9d75b-1a2e-4f91-835a-9990a7a5d3fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "572f8dd2-bef5-45e1-86e1-7594899adc2a",
        "cursor": {
          "ref": "af66ce5d-de95-4cb1-bb05-b5524414b7d8",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "5ee80eb0-e348-4983-828e-66c5a9e655d8"
        },
        "item": {
          "id": "572f8dd2-bef5-45e1-86e1-7594899adc2a",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "99fb0eff-1a10-4bce-98cb-9e957c999dc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b9a256c-decb-4e3e-bbbf-fa659dcf4212",
        "cursor": {
          "ref": "64e6b32f-4b2a-491f-9b30-bc73f2b720f5",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "e392de59-94b2-4b45-aae0-ca2e6ef9bd66"
        },
        "item": {
          "id": "0b9a256c-decb-4e3e-bbbf-fa659dcf4212",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "56c61197-c199-4344-8419-dddeb51b9749",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3fc746-690e-479f-bd45-50b252419a2e",
        "cursor": {
          "ref": "d844b853-133c-4966-a9cd-bfa51e323fd8",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d11d39e8-11e4-4c85-98a1-547e26850aa2"
        },
        "item": {
          "id": "7c3fc746-690e-479f-bd45-50b252419a2e",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3c83480a-0b8b-4ea2-962f-2a831f7e2076",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c783ce6-467f-4df8-8695-7792e58bfc58",
        "cursor": {
          "ref": "a0371d2a-b7e2-4911-8eff-21fe083352e8",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "08e83535-2642-47db-8cce-439396cc9235"
        },
        "item": {
          "id": "2c783ce6-467f-4df8-8695-7792e58bfc58",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "8258cc2e-0b25-41b4-8ce4-c36bd405589d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8040bc26-9241-4e51-9cfa-45b293347d64",
        "cursor": {
          "ref": "2d6252de-0363-4d0e-a979-b2dbfadf56d7",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "04e9abf9-c3c6-49e2-a37e-7d7180d18f42"
        },
        "item": {
          "id": "8040bc26-9241-4e51-9cfa-45b293347d64",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "9cd31c27-707e-461f-8a0e-b7b0324afa9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "792d61ce-42c2-4277-aecc-6d7b82ff9545",
        "cursor": {
          "ref": "c956ccae-8153-4876-9a77-ab57af5fca8d",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ca131d4b-eee1-40d2-bf66-1dc0ed1cd572"
        },
        "item": {
          "id": "792d61ce-42c2-4277-aecc-6d7b82ff9545",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "643e4635-bf1c-4247-88cb-044ca66053bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "372bdd34-8d0c-4a72-a0b2-d9141bd477f5",
        "cursor": {
          "ref": "77786d2d-1d43-495f-a21f-c17910b69621",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "1d9bf233-17e4-467e-952b-d9e0e85ae62d"
        },
        "item": {
          "id": "372bdd34-8d0c-4a72-a0b2-d9141bd477f5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c98be126-df11-4257-bfef-11153e6306e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8c0c37-e570-4683-8e7a-dc774725867f",
        "cursor": {
          "ref": "3ac3492c-748e-494e-a360-cac76b1cc61a",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "22fb45b3-fa9b-4c82-943c-0f15af932cff"
        },
        "item": {
          "id": "af8c0c37-e570-4683-8e7a-dc774725867f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f3fcb7c3-8841-48ef-8b47-80b00ca9c015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d89825b-26d7-469d-81d8-1b5ad033ba86",
        "cursor": {
          "ref": "ef0cdfd1-38da-49ff-b284-9ad3f467c6ad",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5dc2890c-19dc-462d-9443-ff9cfc183d17"
        },
        "item": {
          "id": "5d89825b-26d7-469d-81d8-1b5ad033ba86",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "4905f378-199c-4cde-a6c4-8e65e8a3ce06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76c2d0e8-0fb9-4f0d-8778-6bf7876af0de",
        "cursor": {
          "ref": "2bbd15f3-e548-42d1-8bec-58ff74010d3e",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "61b2b319-3e8e-4c0d-9374-b79ea53f997d"
        },
        "item": {
          "id": "76c2d0e8-0fb9-4f0d-8778-6bf7876af0de",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "106c6e6c-8976-4740-8caa-74d9ba616494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc091b1e-d29d-445c-8966-36dfcecd93aa",
        "cursor": {
          "ref": "b02d7c48-3ea2-4d9b-ac6e-10c7d6e341ea",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "99003bd5-3ac2-4a4e-a432-e488dbe2bc57"
        },
        "item": {
          "id": "bc091b1e-d29d-445c-8966-36dfcecd93aa",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e5a21ef7-fe1e-444e-a322-97ec6a670961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7db504-52a2-4365-a409-306f98ebc7b0",
        "cursor": {
          "ref": "af1fa1e2-b547-4efc-8b57-5bb5c996c0b0",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "95332fab-a6b9-4d41-950c-26c0a301e405"
        },
        "item": {
          "id": "cd7db504-52a2-4365-a409-306f98ebc7b0",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "a6739d04-aebd-468d-a313-580b6506974f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8e29bd9-7a31-4780-8f76-e78dcbe21e25",
        "cursor": {
          "ref": "8230fdd1-be44-4e29-95f2-67cf3179fec4",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "94064e7c-2367-4f38-b8fe-373395feaf82"
        },
        "item": {
          "id": "c8e29bd9-7a31-4780-8f76-e78dcbe21e25",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "711db656-63fd-466e-9cd4-116849cb21c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95035772-b9c2-4ba5-be17-aef137e16a0a",
        "cursor": {
          "ref": "4cb71fd4-c3cd-4796-aa70-9f7d65391ea6",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e8cc0b34-05f3-4f76-90fd-bbee95cbb825"
        },
        "item": {
          "id": "95035772-b9c2-4ba5-be17-aef137e16a0a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "8603bb3d-fb17-4069-829d-0045bf4f713e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb3197a1-7b3a-4bb7-87d1-cba268945207",
        "cursor": {
          "ref": "c5d0bb6d-0f15-4e01-9ccd-61278f8322a6",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "b08d29e4-52b4-48df-97c8-5fe66b8def69"
        },
        "item": {
          "id": "fb3197a1-7b3a-4bb7-87d1-cba268945207",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "361f20f9-c74b-4d44-ae15-f3fe89e6d72b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12ebfc7b-33d1-4fac-8423-71b671205f32",
        "cursor": {
          "ref": "97960396-2ac2-4839-846d-04006cd20e01",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "fa83db05-b01e-4f2d-926e-4d2e9b6a8e50"
        },
        "item": {
          "id": "12ebfc7b-33d1-4fac-8423-71b671205f32",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5ec6cd61-c461-48dc-b190-594c29ec0954",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa926864-2d51-49b2-9811-f7004f8a968f",
        "cursor": {
          "ref": "0ca90b34-4e0b-44b8-b88b-013e32bcefe0",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "843433b9-c28b-42ef-a63c-d4c43d67ecbc"
        },
        "item": {
          "id": "fa926864-2d51-49b2-9811-f7004f8a968f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "0610dab6-179d-46c7-a260-6a2e870f1e72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1bca5fd-b493-4ae9-8ee1-bac2ce0a1cee",
        "cursor": {
          "ref": "7e63aab3-bfa6-4d7d-b0c6-8467d0c5b3c3",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3e8a980b-f449-4179-b827-bbb57df079ea"
        },
        "item": {
          "id": "b1bca5fd-b493-4ae9-8ee1-bac2ce0a1cee",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "139dce76-ad04-4e30-8ea2-48e2593b8aa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eadc123-8a1d-485b-b1da-88129243ff64",
        "cursor": {
          "ref": "7b0c9298-70dd-4645-8208-60a63bb8fadb",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "261d2dd0-abd8-49bd-8b7d-54586395e684"
        },
        "item": {
          "id": "0eadc123-8a1d-485b-b1da-88129243ff64",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "bcbd4634-601b-4cf1-b1b7-a4b6ed45e0ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd473ba9-2585-4965-8227-afface441c23",
        "cursor": {
          "ref": "6f1e0435-1634-4b02-9aa5-f90466129296",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "29bfa23b-2bd6-4962-a01b-b6f5827ff99d"
        },
        "item": {
          "id": "cd473ba9-2585-4965-8227-afface441c23",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "82462483-bb9e-4237-949e-ff80621f750b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "036747be-7351-4f65-b93a-4f48ad658de3",
        "cursor": {
          "ref": "7090f3d5-2b25-45ba-8b6d-3a12f931362a",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a9e62684-6385-483f-8782-5fee460d6ec7"
        },
        "item": {
          "id": "036747be-7351-4f65-b93a-4f48ad658de3",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "17367235-9d4d-4163-91cd-8e4515a3694b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdcd1139-1739-4d73-b4f8-62c164cb2fe3",
        "cursor": {
          "ref": "879f36d7-0429-4173-a7fa-d00eecc241f1",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "01689ae4-6cf4-446e-8499-bfe0b539c6ab"
        },
        "item": {
          "id": "bdcd1139-1739-4d73-b4f8-62c164cb2fe3",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "f700aaf6-711a-427f-8137-d68d0ab4f12f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b84d7363-a064-4311-9c13-2d1f80a6824e",
        "cursor": {
          "ref": "4cdec4b7-6887-44d5-a36f-4d12f0442382",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7af59ab2-6e3c-4878-ab95-3f156f5e0606"
        },
        "item": {
          "id": "b84d7363-a064-4311-9c13-2d1f80a6824e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8318f14b-b4c5-4d21-aea4-22da8fbf24df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcc61de5-d6c9-448e-aff0-d9ddf5f3de4f",
        "cursor": {
          "ref": "37226b1b-f14a-4c3e-adb1-97d5de5c8f84",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "42acb8e6-2bed-4090-a52f-0f599ceb69e9"
        },
        "item": {
          "id": "dcc61de5-d6c9-448e-aff0-d9ddf5f3de4f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5b0410da-aaf8-4e97-be88-4f1821c2ef75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da270e6-6f96-40f5-8cd1-81060b17a6fd",
        "cursor": {
          "ref": "528f19a1-2686-46a6-a4b8-3ba5d9d2cc53",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f5e23647-de0c-40de-9451-1cb83b4ccff4"
        },
        "item": {
          "id": "3da270e6-6f96-40f5-8cd1-81060b17a6fd",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "6d0f87f8-e2b5-4501-830b-eca099cf7a1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd5f7ad4-6512-4004-bc26-a5e2bdb45f25",
        "cursor": {
          "ref": "4bc17c4b-fd68-4fa4-aea3-a87c33a3a030",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c50a8e38-ff07-4713-9260-73af4e9038e1"
        },
        "item": {
          "id": "bd5f7ad4-6512-4004-bc26-a5e2bdb45f25",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "7e510861-98b1-4e4c-ab8d-6a96a50f29ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b106a69-4d96-468a-bbfa-2e4970e4550b",
        "cursor": {
          "ref": "4ec255cd-8094-4f52-90aa-95903938deb2",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c2062bfd-f449-49f9-a5da-694b27296a84"
        },
        "item": {
          "id": "1b106a69-4d96-468a-bbfa-2e4970e4550b",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "dddb9ea3-4f15-444c-b3e8-da97e7e9641f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39328dfa-f077-4053-9023-c547928deb27",
        "cursor": {
          "ref": "df04b79a-cc27-49f1-94f8-f9af9e10f0e7",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5a11c3d3-d723-4d6a-b4d1-a67460adc51a"
        },
        "item": {
          "id": "39328dfa-f077-4053-9023-c547928deb27",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ac5a9a32-6413-41dc-ae69-497feb7c1d9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0decd19d-bd18-416b-92ad-d1255cdc7e1f",
        "cursor": {
          "ref": "695c7e04-dea2-4aae-8adb-426f1974fe26",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "76e693bf-a8c5-4152-b636-9133f751022b"
        },
        "item": {
          "id": "0decd19d-bd18-416b-92ad-d1255cdc7e1f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "33947466-cf78-4759-a511-268d85d896c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1baddc9-d846-490f-b8dc-21826f5285a9",
        "cursor": {
          "ref": "3980ec99-7fe1-4b92-8c26-bee0254e1ba2",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a34814c8-eac4-4745-b1dc-bf51e2aefa38"
        },
        "item": {
          "id": "d1baddc9-d846-490f-b8dc-21826f5285a9",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "08a992ac-5d14-4dad-a5b6-79dc9eb90b53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c836ab9a-c9d9-47e3-9ee0-4467ce83f5b0",
        "cursor": {
          "ref": "1ea6a84e-d126-44eb-a61e-8ed958b66736",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "719138c2-6337-48d1-b0da-368eeb2f9b35"
        },
        "item": {
          "id": "c836ab9a-c9d9-47e3-9ee0-4467ce83f5b0",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2b995c1a-f9b7-4a88-9ea8-5a36bdcca183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba21f83-9ea4-437b-9b7f-b341f80deb0b",
        "cursor": {
          "ref": "02a4947f-ce58-42db-9226-f8bde1bfb72f",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "89cb80d3-fce7-45e4-abc8-0437fe14ed55"
        },
        "item": {
          "id": "4ba21f83-9ea4-437b-9b7f-b341f80deb0b",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "1113f3c0-788e-40a2-9f19-851956fca307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8373d0b-222d-48ea-9815-b435da6fd232",
        "cursor": {
          "ref": "cc18aae8-c79f-4910-8b36-531ad9b38cee",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "23286839-15fe-4773-a30b-d0d1d69ac2d4"
        },
        "item": {
          "id": "f8373d0b-222d-48ea-9815-b435da6fd232",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "bf5164fd-8e19-4f04-bde4-b6dc40073462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72d11cc3-4c00-41ae-b848-6e8c8d5be3b3",
        "cursor": {
          "ref": "44565813-8e38-421c-bdfb-8bbb2d175a6f",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "b5f09d18-7844-4331-b3ea-ea97863b4110"
        },
        "item": {
          "id": "72d11cc3-4c00-41ae-b848-6e8c8d5be3b3",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "59095997-6a7d-450a-976c-7965771769c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33db36b0-a6e9-4eff-814e-afa865392e1e",
        "cursor": {
          "ref": "b9043b46-9397-4db8-a1ec-d958ae521f40",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "449d88f2-8e1c-449b-a7cf-6f051a08e56f"
        },
        "item": {
          "id": "33db36b0-a6e9-4eff-814e-afa865392e1e",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2a814915-fdf7-4620-ba5b-298bcb4e346b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3151ffb-8f83-481f-a5b5-9c5c79b03749",
        "cursor": {
          "ref": "12f80fc9-6c2d-4bd4-ac1c-a1dc9029470d",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "590ef3b8-abf5-4610-adb3-fdd5132e23c1"
        },
        "item": {
          "id": "b3151ffb-8f83-481f-a5b5-9c5c79b03749",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "56293428-987a-4aa3-9122-f108344d5ab4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90eed087-2337-456e-b890-063e662d8387",
        "cursor": {
          "ref": "acde1c67-cce7-4486-a559-089383b27812",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2477a12f-c1ca-49d7-b6b2-e83926d90913"
        },
        "item": {
          "id": "90eed087-2337-456e-b890-063e662d8387",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b39ed2e1-43ae-4b72-8c6f-debcfa8ca4b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1db7c69-c3b9-4ed2-b548-369a08ca4ecb",
        "cursor": {
          "ref": "99a4d579-48af-4a03-8217-79493af16961",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "eeb3067e-37f1-4e4d-948f-fc3573a1f67f"
        },
        "item": {
          "id": "d1db7c69-c3b9-4ed2-b548-369a08ca4ecb",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c2f86413-4040-47c3-9db8-5ac847d73612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e16825f-e978-4795-9160-17806fc037ed",
        "cursor": {
          "ref": "9d5463e2-0a25-4aa3-bab9-a1d14091a47e",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3930cd6e-83ed-4dd3-b32f-d93022926388"
        },
        "item": {
          "id": "0e16825f-e978-4795-9160-17806fc037ed",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e070d4d3-77b9-4ea3-b74d-da91ea00ba63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42a210b5-17cf-4205-ab21-aaf8ab52895a",
        "cursor": {
          "ref": "8bf788fe-d863-4936-a2cf-e28d3afce128",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "0bd7c3da-1a0f-4f45-9a0b-97eb4eac3114"
        },
        "item": {
          "id": "42a210b5-17cf-4205-ab21-aaf8ab52895a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "778dc8ce-d9fd-408a-bb7c-45a9882e86b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555b8f88-6ec6-4f5d-b5f2-e1d5554ac5a9",
        "cursor": {
          "ref": "56228cab-044c-4b97-8997-5852544c4d95",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "00efc9bf-4bfd-4b05-951b-8db270dfb45e"
        },
        "item": {
          "id": "555b8f88-6ec6-4f5d-b5f2-e1d5554ac5a9",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d3dd89d5-e101-4f8b-ad18-d24f535db1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:101)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966d4caa-ba78-4941-8f49-f94e5e96bbc6",
        "cursor": {
          "ref": "2a3f0498-ebb9-4f16-b5e5-8d2afa1338f8",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "cdffef68-4c9a-4a1a-af76-0630640cdc01"
        },
        "item": {
          "id": "966d4caa-ba78-4941-8f49-f94e5e96bbc6",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "8ddbea4f-9582-4fa7-90fe-7ac87ea87bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "c58485b7-cebc-4768-a801-b7fc038207ec",
        "cursor": {
          "ref": "b33c7a6b-f6fc-466d-8ae5-2117f554c01f",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "55905201-df29-4518-8097-3b3991443d01"
        },
        "item": {
          "id": "c58485b7-cebc-4768-a801-b7fc038207ec",
          "name": "credentials_issue"
        },
        "response": {
          "id": "60a77d40-9a2a-4813-9dc1-2975de9371e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "54e04eed-d394-4d48-9d73-6b3f191ab8ef",
        "cursor": {
          "ref": "90efd024-75ed-489a-a1f9-8288d3b1347e",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "7782a25d-c667-4c87-bc2d-4cac64ea8e4d"
        },
        "item": {
          "id": "54e04eed-d394-4d48-9d73-6b3f191ab8ef",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b5aecfc7-b5b9-4a02-82a4-11a4058b140c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "67258c17-6d5b-4ffd-89f7-b4b50b8cc7ee",
        "cursor": {
          "ref": "a0d1bbce-028b-4f88-aaec-569710afc96f",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "925189f3-63b2-47c2-b2f3-8be9079cac60"
        },
        "item": {
          "id": "67258c17-6d5b-4ffd-89f7-b4b50b8cc7ee",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "333ad0be-d72c-4808-ad15-7703c9a68d4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "fc1fc986-92e7-4e61-81c2-21cea961fa79",
        "cursor": {
          "ref": "88f6a9f1-f3c0-45b9-8f44-8f3a092b67b1",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "7651aba3-205c-495e-8500-6573d2b60e77"
        },
        "item": {
          "id": "fc1fc986-92e7-4e61-81c2-21cea961fa79",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "1d9b2001-26f1-49ea-8104-9ca6118dfb9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "55287e6c-03a0-4f88-8bc0-6794c6919c9c",
        "cursor": {
          "ref": "d3950698-d8e3-4b39-9833-34875687108f",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "aa9e0e39-4d99-4938-b99e-74a30d9a656f"
        },
        "item": {
          "id": "55287e6c-03a0-4f88-8bc0-6794c6919c9c",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "cc283c42-a0d2-40e1-8305-2c12811a0996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "577b601f-b70b-49a5-b02a-95159d1a7438",
        "cursor": {
          "ref": "3f58464c-77d2-428d-a20f-88ddd242fe07",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c7db6d09-8b66-4650-9831-d329dae864f6"
        },
        "item": {
          "id": "577b601f-b70b-49a5-b02a-95159d1a7438",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "4908f9b1-8ef4-4f47-a157-50b136c9495d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "aa1707ae-0efb-4ed5-ab23-0363c45d7df8",
        "cursor": {
          "ref": "9b330936-e6d4-41a2-aae2-ff341126485f",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "1e91bd3a-857a-48e5-b13a-58346d014db7"
        },
        "item": {
          "id": "aa1707ae-0efb-4ed5-ab23-0363c45d7df8",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a85a14ad-38ea-4442-9db7-d50868ee2ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a15ca35-4fc2-445b-a729-66cf057da53c",
        "cursor": {
          "ref": "f37f7200-b477-4472-864c-be9854618915",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f95736a5-8bc6-4cee-bd91-a1601b6ff3ae"
        },
        "item": {
          "id": "2a15ca35-4fc2-445b-a729-66cf057da53c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "72278e2b-1e41-434f-9d71-ffe4439f15aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47eeba72-c9d5-47f9-9bfd-fd4db49a6740",
        "cursor": {
          "ref": "a426b7e1-5a9b-4603-9a69-a19e4712b4c8",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "c4a2340f-c515-4d2c-94a9-4200f14d92f0"
        },
        "item": {
          "id": "47eeba72-c9d5-47f9-9bfd-fd4db49a6740",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a74354af-4d6e-48c0-861a-6985069fb6a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdeaaf92-0917-41ad-a457-782a9384c9b0",
        "cursor": {
          "ref": "34e9a979-aee4-47bb-992e-8a508965de38",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d5c1bcb5-c089-49df-b68f-7b38c994a22f"
        },
        "item": {
          "id": "fdeaaf92-0917-41ad-a457-782a9384c9b0",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "26047702-44bf-4579-85f5-3063257274bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdfaa9a4-493f-4043-9907-bee0ef3b1d2e",
        "cursor": {
          "ref": "cfbc720c-c252-4cec-8822-c6d2fc6474f3",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "76e9f0c3-593d-428c-9a52-d117f48862cd"
        },
        "item": {
          "id": "bdfaa9a4-493f-4043-9907-bee0ef3b1d2e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "cd7d489c-4f9a-4843-82f6-477aae1a53ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "857d3222-b43a-4244-91ac-ef3082700fea",
        "cursor": {
          "ref": "4a76f1df-527f-4369-a99a-b6debc211281",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "55ab8419-a3c6-43d9-8340-b582768047fc"
        },
        "item": {
          "id": "857d3222-b43a-4244-91ac-ef3082700fea",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "97f156c1-4cc5-4739-a353-9b8bd0bfaecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b038f67f-f6d9-4bef-b23a-13b3d79ce42e",
        "cursor": {
          "ref": "44740eb6-0997-4267-bcb1-96d50c1e8e0e",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "9bcb8872-583d-40f7-ab7b-432bb9e18a80"
        },
        "item": {
          "id": "b038f67f-f6d9-4bef-b23a-13b3d79ce42e",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a148ad0f-b84c-41b6-ae4c-82a661e524e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3f2d05c-eeeb-4237-a9f9-77af10326f0c",
        "cursor": {
          "ref": "975961a3-0c5f-4099-9b1a-3778b89093af",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "312bc4f3-8324-42fc-a429-15b65ed24ca1"
        },
        "item": {
          "id": "b3f2d05c-eeeb-4237-a9f9-77af10326f0c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "5aad8365-e40d-4358-b565-e0fc911dd021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b99a845-d677-4c8c-9db3-8b66b560d943",
        "cursor": {
          "ref": "55424ae5-a628-4432-803e-8da0fd6ce02d",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "73f9945f-250c-4584-9a38-0b23cfb0dab7"
        },
        "item": {
          "id": "5b99a845-d677-4c8c-9db3-8b66b560d943",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "cb38e769-65d3-446f-96cc-04d0d8495975",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2693de8-2752-458c-b3e2-2f323bc244e8",
        "cursor": {
          "ref": "57a118ca-6481-43a1-9fa9-3aa582839fae",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "c2bf997c-13cb-48cd-af7e-bad77d835e59"
        },
        "item": {
          "id": "e2693de8-2752-458c-b3e2-2f323bc244e8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "46f7fb4e-78a3-4f2a-b92d-7cf7570591c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0fb45f7-7a73-49f0-87e7-33e868280b85",
        "cursor": {
          "ref": "d547d2cc-53b0-4083-9cde-d70ca3af7de6",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "99d40abf-c94c-4f39-80c4-0abb8de7548c"
        },
        "item": {
          "id": "c0fb45f7-7a73-49f0-87e7-33e868280b85",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "debe19ff-0f18-4e17-9a78-ab5ec86a8bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e46cbe2e-ddb3-4b9f-85a4-fd2acb9980cd",
        "cursor": {
          "ref": "897c5fc9-e170-4fc1-8f42-a7a38b12830b",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2f2fce4e-4ce2-4bed-89f4-b820892e2df5"
        },
        "item": {
          "id": "e46cbe2e-ddb3-4b9f-85a4-fd2acb9980cd",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "35c91ed3-6920-4a8c-b389-6f8d5d7a2f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d8c650e-1522-4ef9-959c-e1a88d3fbf24",
        "cursor": {
          "ref": "4e2db97f-e8f3-402e-bfc8-6bda8210e873",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d4291554-1aea-47c2-b07d-890caf2b4b5d"
        },
        "item": {
          "id": "4d8c650e-1522-4ef9-959c-e1a88d3fbf24",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ad692fe2-af48-423f-8f01-9be3f8331354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc18ff1-a71a-4c4e-aa75-b904e688d567",
        "cursor": {
          "ref": "87224eba-6144-4aa4-8f08-45acdaa7acba",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "4168c838-b098-469d-aca6-45b4af7f586e"
        },
        "item": {
          "id": "bcc18ff1-a71a-4c4e-aa75-b904e688d567",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "55e4fecb-02a7-4ad9-9a8c-9054a1e9ba01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76daff48-d4f2-41a0-a66c-3236689f2679",
        "cursor": {
          "ref": "8a1e3489-4952-4a78-a853-db357aa56b97",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "1cebb594-bf88-4daa-a06f-aeff6afad6ae"
        },
        "item": {
          "id": "76daff48-d4f2-41a0-a66c-3236689f2679",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "e067b728-3dd6-4dc5-b873-c08bd0ca9d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b9c214-e847-4000-b350-2afdc8be602e",
        "cursor": {
          "ref": "393e6c8e-6ee8-4d03-b380-ccd05c66a981",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "27f3ff74-d42e-434e-905c-93d2c6a4dc18"
        },
        "item": {
          "id": "b8b9c214-e847-4000-b350-2afdc8be602e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "45b0a7ac-a749-41f8-b937-41a94744603b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9ab11f9-9c6c-4e33-aeb7-d09ab25ff12e",
        "cursor": {
          "ref": "43a8a39d-a9d4-45f3-8cce-6a04b26b8e49",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "6546f14a-87f2-49d7-90a8-433fa7ab30b9"
        },
        "item": {
          "id": "d9ab11f9-9c6c-4e33-aeb7-d09ab25ff12e",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f3967e90-f3f0-4df1-9a68-9e8a4a6ec364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "832213b2-ee3c-4779-9915-30777b23e894",
        "cursor": {
          "ref": "7e7dd497-dcd3-4abf-948c-d6f3f27f6607",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "d2384707-90ea-4459-9b17-6f84d94160ba"
        },
        "item": {
          "id": "832213b2-ee3c-4779-9915-30777b23e894",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "672a8323-124a-479c-b336-82b2670e9aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "016fff6c-c769-4ecf-b314-c09ac94b4942",
        "cursor": {
          "ref": "9eb04791-7bd6-44da-bade-7579b3d0f6d8",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "67ba14b8-9cc8-4b23-8a57-747b18a83237"
        },
        "item": {
          "id": "016fff6c-c769-4ecf-b314-c09ac94b4942",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "039ff565-8a32-41fb-9c08-d7a43160cc99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38130571-2839-4b14-b93c-943701a13544",
        "cursor": {
          "ref": "b6b5b27b-f754-4e5f-8fdf-8881b800fb24",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e68c6773-9633-490f-8700-207d0a30d3ea"
        },
        "item": {
          "id": "38130571-2839-4b14-b93c-943701a13544",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "29ea0cdb-cb18-465c-9b76-1ca27f48b60c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61af365a-b82c-46fc-b547-d9152574400f",
        "cursor": {
          "ref": "42d8e669-3c0c-4273-a97c-e6d90a790341",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "57b2ae80-96b0-4b5d-ae04-8cad612bd483"
        },
        "item": {
          "id": "61af365a-b82c-46fc-b547-d9152574400f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "230421bd-3c02-4cf8-9975-302f21e9a1d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4b9775b-105e-48c2-bb13-dd606a36dd01",
        "cursor": {
          "ref": "49077d4d-498e-4f87-b270-e57f5e2b565e",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "f27c458a-9ede-4dcc-aeec-4d5b35cfe870"
        },
        "item": {
          "id": "d4b9775b-105e-48c2-bb13-dd606a36dd01",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "8e858b94-12c5-429c-819e-e8d74b1ccc83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "758c5a5a-5e56-42cb-8c4a-1a951ce8b3d3",
        "cursor": {
          "ref": "85b5cc0a-1da6-4d18-8624-28b20739cc06",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8c324a48-2ebf-4b0b-a177-475c65b343e8"
        },
        "item": {
          "id": "758c5a5a-5e56-42cb-8c4a-1a951ce8b3d3",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "491941bd-6c5e-4a39-b630-1b9d2b95f1ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0832403-fcca-4996-8613-93a01b3bdea9",
        "cursor": {
          "ref": "f0306757-a96e-4190-b6d6-974e4b67e03c",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "71e0665f-4dae-4ba0-9b09-364f4e43c8f6"
        },
        "item": {
          "id": "a0832403-fcca-4996-8613-93a01b3bdea9",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9ecb49aa-6387-4ee9-a7c9-8657ceceb847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031d7046-6cbb-4b33-ba2b-5a50dc267d0c",
        "cursor": {
          "ref": "66752575-feab-4f6d-99da-cb18a4066467",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "76b3c2e4-4cd2-4c6c-9bbd-1e9073d47faa"
        },
        "item": {
          "id": "031d7046-6cbb-4b33-ba2b-5a50dc267d0c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "1e651f05-814f-4b53-b59e-c9534e9a48e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1959460a-b37c-4138-b9f1-1c3310b79919",
        "cursor": {
          "ref": "2a480b51-878f-4710-af77-d7fd708533f4",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "9244bb9a-848e-4776-a28f-1e7a24762197"
        },
        "item": {
          "id": "1959460a-b37c-4138-b9f1-1c3310b79919",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "6510b52a-accd-402b-a907-694339acf19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a5ad2d-ab0d-4c45-9d22-1215c4b8444c",
        "cursor": {
          "ref": "86393f77-983f-4e7a-980b-0449f69e980c",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "5cec0b08-10e3-4117-94ad-46e6aa6091bc"
        },
        "item": {
          "id": "e2a5ad2d-ab0d-4c45-9d22-1215c4b8444c",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1b797af3-7e23-4191-9771-5805696e47fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f4b4a1-a6db-4e8b-9122-c14066bcfedf",
        "cursor": {
          "ref": "6dee1b68-ff97-49fa-9fa3-e89ae1b6d0f5",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d8ef5ef6-b484-44f8-a284-e35b71f14587"
        },
        "item": {
          "id": "94f4b4a1-a6db-4e8b-9122-c14066bcfedf",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "7941a938-a71c-4ef0-bc3f-a40a84ae4dcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16a05920-9c4e-468b-9128-9b98772f8608",
        "cursor": {
          "ref": "85510c45-0439-43bc-9844-84e331335200",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "4d6a2941-27b8-46b6-b5d7-9156053bc053"
        },
        "item": {
          "id": "16a05920-9c4e-468b-9128-9b98772f8608",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "ea9eb04c-7758-422d-93e0-efb6bf2f5d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8970a4a1-9377-40ad-bfca-dc07337e98c3",
        "cursor": {
          "ref": "62988aa9-e5ac-4fff-a354-778c0c1eb7d7",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "88ce20db-9688-4628-a5a0-bd169aa7861f"
        },
        "item": {
          "id": "8970a4a1-9377-40ad-bfca-dc07337e98c3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9d4ece8c-fb20-4a68-b1b6-dbac3dedfcc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f45080d-28fa-498c-bede-ea9f8001676f",
        "cursor": {
          "ref": "0b8315bd-6db7-4b2c-a6a3-300145ea85a2",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "2d4a9804-4a33-49cf-86f5-db43168912c8"
        },
        "item": {
          "id": "3f45080d-28fa-498c-bede-ea9f8001676f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "69791291-15d5-4666-a2b4-056e91dc76b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124bfc42-b755-4845-ab26-fa87cec142ba",
        "cursor": {
          "ref": "e87029be-a64c-46d2-b002-0b20b87980a5",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e4d5dedc-c856-4055-8c66-b6d45439a32b"
        },
        "item": {
          "id": "124bfc42-b755-4845-ab26-fa87cec142ba",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "247bccdf-9aa5-44fe-9ec6-a819176e926c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46cbbf71-ea9d-407e-9cef-716cb2b675ba",
        "cursor": {
          "ref": "96f79a66-d80f-4365-b4b0-0efc4c7641cd",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "9de948ca-6ae8-46d9-b5a6-ea152cb291fa"
        },
        "item": {
          "id": "46cbbf71-ea9d-407e-9cef-716cb2b675ba",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ccabe48e-f821-4d63-af34-fbbd3a115bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a623bfd1-9d7f-4249-8890-39c5d778212c",
        "cursor": {
          "ref": "0839e981-fac5-4909-b030-578a87751d8c",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e4640b70-3429-4f3f-a442-c7864d2dda2c"
        },
        "item": {
          "id": "a623bfd1-9d7f-4249-8890-39c5d778212c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "a0f56699-c29e-4550-be4c-d94e9cc616c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37c61e6a-0944-433e-999a-c9d6702b9be3",
        "cursor": {
          "ref": "131d0192-ddb9-4684-bd0d-d30a9357f851",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6b4c221c-4b39-48ee-9591-5f003de51d59"
        },
        "item": {
          "id": "37c61e6a-0944-433e-999a-c9d6702b9be3",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "6e3d7e67-f7a2-4e4b-aed6-3f2b3ab6222e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3903b7-608b-425e-aab3-50ca7a61bd85",
        "cursor": {
          "ref": "d6067bac-023f-4b55-855e-318c50da5e5b",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "569a0b8b-4fa5-4efd-854d-3bdd11f36398"
        },
        "item": {
          "id": "cd3903b7-608b-425e-aab3-50ca7a61bd85",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "eb51eb5d-a88d-41b2-8d5c-810abf259b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376df056-8804-459c-bbf3-2f4f3b611f1c",
        "cursor": {
          "ref": "97858df5-1918-47bf-90f5-888be51a7265",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2b7a8198-9235-4aec-b73d-8e7565bcdcc4"
        },
        "item": {
          "id": "376df056-8804-459c-bbf3-2f4f3b611f1c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a1c694a8-5499-494a-b5c6-952c10a87b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84678977-04b8-4690-a106-30955f1c8dd5",
        "cursor": {
          "ref": "8e19876d-1537-466a-ad78-f4a3ecb850f5",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d761fdc5-b6ec-4062-974c-5ca52b395970"
        },
        "item": {
          "id": "84678977-04b8-4690-a106-30955f1c8dd5",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a857f546-572d-43c2-bb65-eaf5a97f1815",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adb80f8b-618e-4491-ae32-0e8677009aae",
        "cursor": {
          "ref": "6489ab40-6961-4482-8fb1-ed253b0380be",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "af7df968-f14e-47de-91ea-530f0b1533fb"
        },
        "item": {
          "id": "adb80f8b-618e-4491-ae32-0e8677009aae",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ff3b532b-6c0c-4c1f-b311-38d073d8ebfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33b85bf-7204-4eee-8aa6-e7af49d0ad64",
        "cursor": {
          "ref": "287d5e0d-1bf5-49b9-8235-034e36c8be79",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "ee986dfb-d388-4c28-b197-3cb6fed9abae"
        },
        "item": {
          "id": "a33b85bf-7204-4eee-8aa6-e7af49d0ad64",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "07d3790d-9c29-43f9-b958-9c0f8391026c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81d4c9df-6f44-4a3e-8b69-a199f8b54dbf",
        "cursor": {
          "ref": "2fc95663-5385-4700-aac6-8305d5258a24",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "29e2125f-0ca4-4a83-b62e-46808705a369"
        },
        "item": {
          "id": "81d4c9df-6f44-4a3e-8b69-a199f8b54dbf",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "f1ba79e6-cb60-4c08-8c13-87336b9cf179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc96a44-1a50-4e97-a797-83b0d5ef45f4",
        "cursor": {
          "ref": "a4d7d7df-e826-4445-90f0-71fa53c62620",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "9049a691-2b3f-4646-8187-193e91f8bf51"
        },
        "item": {
          "id": "2cc96a44-1a50-4e97-a797-83b0d5ef45f4",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "a6369153-eed6-42ae-9bfe-7e259bbfd577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5704c67d-91c6-45a8-8e5b-8fc4184072c3",
        "cursor": {
          "ref": "70b8293b-b4e4-43d8-b759-80e354bb8546",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "cdff9e6e-a83c-45f8-9d56-6d240c20f110"
        },
        "item": {
          "id": "5704c67d-91c6-45a8-8e5b-8fc4184072c3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "333e3257-33c2-4141-b839-871975fd7f59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "199de3da-5d44-43a2-97e2-398558baaecb",
        "cursor": {
          "ref": "fac22155-a29f-45cd-887a-5b8d66647576",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3ba949ec-d4e1-4d6f-9779-66fa16502a7e"
        },
        "item": {
          "id": "199de3da-5d44-43a2-97e2-398558baaecb",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "08732811-d94e-4066-8420-574704964ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d080f62-f6f1-40e3-bdba-d1ef6ed04228",
        "cursor": {
          "ref": "a9053ffa-a94c-4f83-84dc-f003fc6a785a",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "7be53287-e6a0-4bc3-8c8e-9e71d09ef67e"
        },
        "item": {
          "id": "1d080f62-f6f1-40e3-bdba-d1ef6ed04228",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "e42520d7-69ae-42d1-b9e0-0d44ebf1e0d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c3a363a-8f22-46dd-bcba-c4d9dd47cb99",
        "cursor": {
          "ref": "8f91599b-32da-4624-b310-9a656b5f137c",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "d635e3a8-f45a-4f44-972a-5d543375079e"
        },
        "item": {
          "id": "9c3a363a-8f22-46dd-bcba-c4d9dd47cb99",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "35d737fd-2110-42d6-b7a6-d774caab9866",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09fc85a-8196-40f7-a375-f13d7b2ec9c3",
        "cursor": {
          "ref": "e6cd3af6-1d8f-4474-812d-8e0800d732a4",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e347161f-a2a1-47d1-9b6c-c597128e6e8b"
        },
        "item": {
          "id": "d09fc85a-8196-40f7-a375-f13d7b2ec9c3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "94da4f28-2469-4003-9177-63d19c927f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380eedcd-ace2-45b1-ba46-529ba6b18482",
        "cursor": {
          "ref": "e99db158-4742-4f75-bf01-f9c5e08bf335",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0f02e43d-163d-4bb1-b22e-10f7efb50afd"
        },
        "item": {
          "id": "380eedcd-ace2-45b1-ba46-529ba6b18482",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "0a82d87a-6025-46ef-afe4-754d992e1c08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca000c68-2999-4029-8d21-d3ce29d9d3ba",
        "cursor": {
          "ref": "7008efc0-31dd-43ac-b5b8-db546ce9eeee",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "307c96b8-7260-4988-af79-d65c6433cf70"
        },
        "item": {
          "id": "ca000c68-2999-4029-8d21-d3ce29d9d3ba",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "697d00f6-c572-42d9-a55d-66b0c2f55158",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa1db790-f2f7-4877-ab33-904b93f9e4e0",
        "cursor": {
          "ref": "631876df-da76-4d1e-a3a6-93c7c9a2daa5",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "09aa77e8-6ca1-40bd-9dd5-ae693a039305"
        },
        "item": {
          "id": "fa1db790-f2f7-4877-ab33-904b93f9e4e0",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "7f3ff4fa-bc13-4e59-8254-474e6501c8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6826ca-d1f6-4db0-8d43-c856483cb6e3",
        "cursor": {
          "ref": "b7698dfa-fc89-4174-94bb-daa108e57f55",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "e91fa61e-ba05-4623-8297-59efec24ec41"
        },
        "item": {
          "id": "ec6826ca-d1f6-4db0-8d43-c856483cb6e3",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "4b676a19-4fa1-47db-9d45-1a1722a724ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "199053a6-7798-438b-8d0d-7d1fec174079",
        "cursor": {
          "ref": "3fd168b9-efa5-4dfd-ad5f-df99a9a5b049",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "2fdfd106-5fff-4c53-b5dd-7a24404e42e8"
        },
        "item": {
          "id": "199053a6-7798-438b-8d0d-7d1fec174079",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "69ff0f8a-addd-44fc-956d-2073127cf1f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29ee805-99d9-4988-97d0-3daa5a5da97c",
        "cursor": {
          "ref": "fc9a241b-5e05-4e62-913d-978815795acf",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7ed81406-1c79-43e8-ba74-792450fca504"
        },
        "item": {
          "id": "b29ee805-99d9-4988-97d0-3daa5a5da97c",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "250054bf-d2e5-4aca-8bbf-ffad9522fed1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b1be543-890c-4532-bd20-09ebd29f96e4",
        "cursor": {
          "ref": "1b92ab86-a36b-42f7-9b2e-dc8630afafb1",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d3771cba-9a11-41f9-9946-5bf1aee4b772"
        },
        "item": {
          "id": "3b1be543-890c-4532-bd20-09ebd29f96e4",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "575b14ba-8b3e-4f0e-b4dd-635a9c2df13b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf75b33-cb02-4be4-9970-d741c330d0d1",
        "cursor": {
          "ref": "68bb4446-bcdf-4ff8-896d-a795d9f95853",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "db1360cf-e86a-4d97-9aa4-335d6315ad34"
        },
        "item": {
          "id": "0cf75b33-cb02-4be4-9970-d741c330d0d1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "4d1234f7-ae33-4231-bb1c-efd708908e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e66146-ecd8-431a-a9d6-c5d50f42f412",
        "cursor": {
          "ref": "95f26302-65a7-4700-99f5-5ccdee655f4a",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "89b51a24-8fd9-4a90-b59e-9b162e7c2d83"
        },
        "item": {
          "id": "04e66146-ecd8-431a-a9d6-c5d50f42f412",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "529008b0-3d34-4cdc-8415-2f5f986ada2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e59e4388-a49c-449f-a881-5891653ae5e3",
        "cursor": {
          "ref": "4d609675-4815-4e18-a950-cea53a373fff",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7b1710af-d7f7-4aa6-80ab-42aeadc64513"
        },
        "item": {
          "id": "e59e4388-a49c-449f-a881-5891653ae5e3",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "efc122bd-21b6-459b-99ac-ff4a33d74bcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cae3eb-e67d-4e31-b2bd-6055520a33df",
        "cursor": {
          "ref": "3799388a-e0d5-4727-a73d-332523dafb75",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "6b0b91a9-fdb5-4edd-a842-7e78650fe07d"
        },
        "item": {
          "id": "a2cae3eb-e67d-4e31-b2bd-6055520a33df",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "95827341-ca5c-47ac-9711-d1dccd4c7c06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b513b190-e754-4d36-aabc-10c29a3a526d",
        "cursor": {
          "ref": "c89686ae-9376-40e1-beb1-0f93d588a07c",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d032040f-9e21-4c12-b5be-4b6760e62fcc"
        },
        "item": {
          "id": "b513b190-e754-4d36-aabc-10c29a3a526d",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "c01057f7-a3b2-4b94-943c-eae20018dfe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4146f2da-e530-45da-a76c-109cb6a532dc",
        "cursor": {
          "ref": "f5bea4ea-9b18-43c3-96d0-d0545fc4534c",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "a9d97252-c063-4589-a890-e23959479712"
        },
        "item": {
          "id": "4146f2da-e530-45da-a76c-109cb6a532dc",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "379ee77b-a8b5-4660-88f3-b3786c9cc204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "711345bf-38a8-4b06-b181-8f18e616c00c",
        "cursor": {
          "ref": "6bf64cc6-8fdf-47f7-9849-2a4eb7ab0fdb",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "4bd5804d-3e27-4520-a2e5-8585680fc0f6"
        },
        "item": {
          "id": "711345bf-38a8-4b06-b181-8f18e616c00c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "d66c3e57-16f0-43a3-bd7d-f3aa421cd3a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8854c2a1-a418-4432-bcb9-4df84a6437d4",
        "cursor": {
          "ref": "7fd9c2f5-4795-4183-bdb8-b0ea6453ebbd",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6cee7c9a-d8e9-4cb3-9719-bd77f694298e"
        },
        "item": {
          "id": "8854c2a1-a418-4432-bcb9-4df84a6437d4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "bffa64d0-5dab-4440-a9c5-e89b095dde66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a014e137-22fa-4b45-92c7-e2904bc47767",
        "cursor": {
          "ref": "85d2e6e1-84f8-4a1b-bdbc-239d4f8aeb0d",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "0c92e7da-5ddc-4449-8ecc-890efe8fabdf"
        },
        "item": {
          "id": "a014e137-22fa-4b45-92c7-e2904bc47767",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "ed61c142-6c0b-434b-8678-4b0e35a292ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad39c7a5-c550-46e4-905e-9644814d3aa8",
        "cursor": {
          "ref": "75cb79da-3a5d-4a0c-9e73-077d1670d288",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "11750529-2c47-42e0-9cfb-78cee20132a6"
        },
        "item": {
          "id": "ad39c7a5-c550-46e4-905e-9644814d3aa8",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7b4ecf51-ad0e-443b-b27c-d0ae2d043e65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "996ddff7-ad99-4922-aa05-10105bcbe1e3",
        "cursor": {
          "ref": "e5f4de4b-bc4f-41a8-974b-cdc220cd5d68",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "c5262e8c-6665-4c19-995b-8ca0dd0c28cc"
        },
        "item": {
          "id": "996ddff7-ad99-4922-aa05-10105bcbe1e3",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "6cc57b9d-7bd5-4ea1-8c96-106282ce0117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "424893cc-294d-48c9-aa42-a72ecd838a84",
        "cursor": {
          "ref": "9c534322-bf75-4d93-bf95-0cd905a09f27",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ed58b269-9067-40b8-bce6-82eced2ef6e4"
        },
        "item": {
          "id": "424893cc-294d-48c9-aa42-a72ecd838a84",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "e06d0f01-8e43-46cf-96c3-3b43ee7499eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5befe71-7aca-4a2f-a92f-9dba2e5af275",
        "cursor": {
          "ref": "cddbb377-3cd5-45ab-9b39-f8499cb943a2",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "21f3c5d3-b619-41ad-a070-bca32f38d047"
        },
        "item": {
          "id": "d5befe71-7aca-4a2f-a92f-9dba2e5af275",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a6dd38bd-7656-485f-ad17-5e8fd53262fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8ef08b5-7e03-43ad-b550-5982dfd3c94b",
        "cursor": {
          "ref": "c8ca2fc2-ba6d-4bd4-ab91-4bb7c6ec63a0",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "8586c7ab-6aa8-4642-92cd-e6e7fbdfca4f"
        },
        "item": {
          "id": "c8ef08b5-7e03-43ad-b550-5982dfd3c94b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "658dc6c3-71f0-41d3-9940-c28a7b85b0ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "badc62f4-4445-4003-acfc-f74c7adb3a1d",
        "cursor": {
          "ref": "23ebc1bc-1b92-40d7-a18b-e43f14575502",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "faca024d-3822-4468-88f8-21cd694f0f0d"
        },
        "item": {
          "id": "badc62f4-4445-4003-acfc-f74c7adb3a1d",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "8bbc64b2-1ab1-4cd3-b190-14b1b20f448c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b853132-ac0f-4e62-a6e6-75065d6b4aad",
        "cursor": {
          "ref": "ac47a8f7-e79f-4802-a8a3-a9c606d08dec",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "519322cb-49a9-4348-8222-954eef4177ea"
        },
        "item": {
          "id": "9b853132-ac0f-4e62-a6e6-75065d6b4aad",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "95fd7c96-dac6-4464-932a-ee9c9a2754e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325dac37-6203-4437-bb7a-957ec8c315ec",
        "cursor": {
          "ref": "22062c61-6dd9-4d6e-ad2a-9d44c26d1fbf",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "515759dd-28d4-44cb-8c35-fdf897b1e898"
        },
        "item": {
          "id": "325dac37-6203-4437-bb7a-957ec8c315ec",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "ef1a2e7d-2bf7-4a38-a9d5-b08c15df545a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa44262-9bb2-4fda-9b24-210d319ba8af",
        "cursor": {
          "ref": "ab08ba33-56dc-4546-a4ab-533c772c1990",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "ea6275da-6414-4901-9f64-8aaf29548b56"
        },
        "item": {
          "id": "aaa44262-9bb2-4fda-9b24-210d319ba8af",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b7c9f54a-8025-4e47-8af1-2cc76c8cb75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b7d02d-8020-450a-a942-cabb258824e3",
        "cursor": {
          "ref": "2dacf899-3c93-4df6-ab20-36f17c7d4f2f",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e0afa84c-487d-48fa-b31f-cf698bb2003f"
        },
        "item": {
          "id": "d7b7d02d-8020-450a-a942-cabb258824e3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "c67eef77-3228-4521-a15f-0a8bce52c71e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513317f9-0964-4e28-85f8-dfcd54cbc9ab",
        "cursor": {
          "ref": "68493995-59af-47d6-84a3-9a31c33a0521",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0de5d8b2-5eaa-490f-89de-5e852fba093d"
        },
        "item": {
          "id": "513317f9-0964-4e28-85f8-dfcd54cbc9ab",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "30e970db-6361-4062-b39f-5f0d2f55d67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bdfb187-e609-48f5-9e8e-b108525bdb57",
        "cursor": {
          "ref": "8bde62fb-1b0f-4c7c-bfd4-12a12d40614e",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "9b852d9b-607f-4e61-ae9e-7ec57294901a"
        },
        "item": {
          "id": "8bdfb187-e609-48f5-9e8e-b108525bdb57",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "f2aa45dd-8b3e-4d1a-9ffd-ae1d252702d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b755407-5e4d-4294-841d-19a49d838564",
        "cursor": {
          "ref": "569affc2-f55b-4e8a-b93b-d44b67013ded",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d78fb725-7c05-4eab-baa5-100645346677"
        },
        "item": {
          "id": "0b755407-5e4d-4294-841d-19a49d838564",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "537ce80f-7a8d-4389-a069-46c2e411aa55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae5a1bb-5bfe-4cc8-adce-83c1f2ee0eb7",
        "cursor": {
          "ref": "9209af50-599f-43f4-b62d-fb62b2f39408",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "4117e0f6-3bdc-42e7-81ca-11c855ba5d28"
        },
        "item": {
          "id": "4ae5a1bb-5bfe-4cc8-adce-83c1f2ee0eb7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "a07c7301-814f-44bd-8533-e1864effdf04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1eb1269-4c78-40ac-b26d-3764c6f0f4fe",
        "cursor": {
          "ref": "94a8bba9-f83c-4d63-b8e7-4589456024e2",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "14d9ee4f-33e0-4ebf-a1c2-d6695618d8d3"
        },
        "item": {
          "id": "a1eb1269-4c78-40ac-b26d-3764c6f0f4fe",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1db22d1f-67cc-4158-bfba-b39b6f618e00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20c18453-4e65-41d8-807d-92cef75af2bc",
        "cursor": {
          "ref": "d043528c-b170-4202-8e21-d6a08f1ce720",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "fa7d8c3d-6763-4697-8273-5a27c6e82310"
        },
        "item": {
          "id": "20c18453-4e65-41d8-807d-92cef75af2bc",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "8f94a24c-b7a6-4448-90ba-d49cc6d1c7fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b291a36-221c-413f-a195-fa43e7221438",
        "cursor": {
          "ref": "860dfc8a-abd9-4ee9-84de-5103e6e68050",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6f6a9bba-0236-42f8-af28-31ece7e5e7c5"
        },
        "item": {
          "id": "5b291a36-221c-413f-a195-fa43e7221438",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "c6f70692-0489-472c-9632-d5b7be8aa093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d621acd8-690d-4fc8-9ac7-3691b6508c55",
        "cursor": {
          "ref": "a6981785-0474-4a63-bed5-caa0f5b1a3a6",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1dbb46f0-992e-4590-95a9-6626037477f1"
        },
        "item": {
          "id": "d621acd8-690d-4fc8-9ac7-3691b6508c55",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "4d16790b-aee6-4fb0-9086-f0b95142d89c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d0cacd8-4d35-4bf1-8992-5b43cb9b40b0",
        "cursor": {
          "ref": "6d3e2110-71b3-4362-b297-e5db42731f83",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1240b786-e27f-4c98-af8a-6b0e10847daa"
        },
        "item": {
          "id": "5d0cacd8-4d35-4bf1-8992-5b43cb9b40b0",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "192b44b9-619d-4162-bafe-20d4477ed2e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1469c239-711f-4a3c-88b4-611e4e467895",
        "cursor": {
          "ref": "3969689d-1ee0-4799-8e3e-c86076c8a682",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b2e914fb-625e-4297-bcf6-6b6cdd175468"
        },
        "item": {
          "id": "1469c239-711f-4a3c-88b4-611e4e467895",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "b7305c5f-295e-4c91-93ca-a72451da1fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f743197-4710-4904-be17-9f398c92fe30",
        "cursor": {
          "ref": "b72b3200-f63b-457d-9cb0-ef9af0102761",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "de37d2ae-85b9-4fd8-85f1-b44a4511afa1"
        },
        "item": {
          "id": "5f743197-4710-4904-be17-9f398c92fe30",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "bda682ff-32e9-424b-adde-9481238243f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676270d5-33b4-4aae-bfe4-c6744d5211c9",
        "cursor": {
          "ref": "e938c8e6-1da8-42b3-a3c1-ffeda6952ecd",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "614ccf63-4ea7-482c-8fcd-399212f98526"
        },
        "item": {
          "id": "676270d5-33b4-4aae-bfe4-c6744d5211c9",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "f458c64b-f9b5-4f14-8e1b-33b6ff3b6902",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "110b2556-c5e5-476c-b831-fac9d9db7d42",
        "cursor": {
          "ref": "9dff2452-7dd7-4d2b-b8aa-ecbc124b5a31",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "23224e48-8b5b-4988-ae93-42ecac721f14"
        },
        "item": {
          "id": "110b2556-c5e5-476c-b831-fac9d9db7d42",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "b191a05c-e77c-4142-aecd-151488ccf3b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c058415d-f2a3-4bde-81c9-8890e1ff5c32",
        "cursor": {
          "ref": "2cfe1343-c82e-49fe-9aac-c8eef20eb066",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "b23d9c0e-70d5-4d86-a840-9df67f6f2f26"
        },
        "item": {
          "id": "c058415d-f2a3-4bde-81c9-8890e1ff5c32",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "5df3939b-3b7e-4414-9caf-41931f31b6a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f497779-dcf2-4f0e-81f4-fad9d508066f",
        "cursor": {
          "ref": "890f5e7f-9e83-46e7-bcd9-c395624f04d2",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "8b5a31b4-ce42-488f-bfcd-e3e96828cc49"
        },
        "item": {
          "id": "6f497779-dcf2-4f0e-81f4-fad9d508066f",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "35efe7f6-d737-4567-b60e-39ca4f0d93cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7292f89d-992e-4a37-8b21-eb4b26ed1e2f",
        "cursor": {
          "ref": "f52b0366-0228-4f30-b802-54463838c960",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "fbbfbbb0-e8ac-43c9-a36a-f589570a1eb1"
        },
        "item": {
          "id": "7292f89d-992e-4a37-8b21-eb4b26ed1e2f",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "01d8e699-4f38-49e5-8b81-c3bb40519ab3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77f8b39e-b706-4ac6-ba9c-45d28f0a1657",
        "cursor": {
          "ref": "5879bafa-6dd3-44c7-a661-46749693b3b8",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "6c13bf6e-8b2e-47a8-92e6-bbee35397f0a"
        },
        "item": {
          "id": "77f8b39e-b706-4ac6-ba9c-45d28f0a1657",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "1d0bb6e4-5ba1-4b38-ba63-633aebc416ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfc8e8d7-da4a-43ab-a3a5-678faf4ef971",
        "cursor": {
          "ref": "0d5b5b19-3cde-4df9-9c1d-797af3af0564",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6cc05eb2-87df-48a3-b915-a1e1067d919a"
        },
        "item": {
          "id": "cfc8e8d7-da4a-43ab-a3a5-678faf4ef971",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "63dbdd73-b02d-4d89-afdc-1c5a5b9ac7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d199c8a4-373b-49b4-8425-d2380395cf9c",
        "cursor": {
          "ref": "0f072072-d89f-4078-bbda-31cb2f141d50",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "526b0ccd-92bb-41c6-8605-52791257e754"
        },
        "item": {
          "id": "d199c8a4-373b-49b4-8425-d2380395cf9c",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "91ffb7aa-ace4-47ca-9f93-2f7c527d8eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e4afbe-fdcd-46ac-a08b-7d7133724c56",
        "cursor": {
          "ref": "7902ae91-e17f-441e-8fc9-ccae9ab8bf56",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ed37d581-b782-49b3-ac85-3ae6aa7f7b38"
        },
        "item": {
          "id": "b9e4afbe-fdcd-46ac-a08b-7d7133724c56",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "aec3d80a-d777-46cd-b409-ee5476f56bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a0daf05-6e70-4ea8-9d02-1aedd362310a",
        "cursor": {
          "ref": "0a23d189-9985-4028-b1d3-95f2012d553a",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "58301c17-179c-404a-9bab-cabfbaae2ec2"
        },
        "item": {
          "id": "2a0daf05-6e70-4ea8-9d02-1aedd362310a",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "1439df39-3e0f-4fde-8270-73361a824208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "854f07bb-d44b-4c8b-8555-176de15f8f92",
        "cursor": {
          "ref": "d72d925b-6cb6-4448-9f0a-6c30fc038cbe",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "0254f4eb-1d75-4f4f-8445-c1bc0478047f"
        },
        "item": {
          "id": "854f07bb-d44b-4c8b-8555-176de15f8f92",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "7044be1d-2e05-4ddb-91f7-48e831c43af3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1529ef03-ad67-46a4-b750-3b9ae0638169",
        "cursor": {
          "ref": "1d9de9f6-e1ce-45c5-ab20-70d52bb76bf5",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "48c34a70-f619-4c78-98f7-9ad504b6cf9f"
        },
        "item": {
          "id": "1529ef03-ad67-46a4-b750-3b9ae0638169",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "6c5ce752-1106-4be9-a03e-7ec7811a5f1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "762414b8-56a6-4e38-b425-2747ec78e64b",
        "cursor": {
          "ref": "8b2c1165-a8d5-476b-a3ae-f3d81bd1fbc5",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "82e6d4a6-1f1c-4958-bf21-0e48e3a1d097"
        },
        "item": {
          "id": "762414b8-56a6-4e38-b425-2747ec78e64b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "2db7c52f-c203-44f3-a4f0-99542a89ee81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "663153df-639e-45d0-a7bf-b8d6a7554195",
        "cursor": {
          "ref": "b3ccd43b-ddb6-4763-8acf-6711efd7a3cb",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "9a80f303-4bcd-4317-9bdd-69dc2906c8ec"
        },
        "item": {
          "id": "663153df-639e-45d0-a7bf-b8d6a7554195",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "aa22e23b-1766-47c3-b977-4e79dcc76c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8433249-8cb3-4fbf-ba98-de49e45ff754",
        "cursor": {
          "ref": "6df341d5-8080-42d9-8a0c-c0dc1acc266f",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "18dab8ce-adbe-42a7-aca2-96f41a36fb99"
        },
        "item": {
          "id": "e8433249-8cb3-4fbf-ba98-de49e45ff754",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "13d1d6a7-fd8d-4afa-8f63-a59f41c525aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ffdef8-68a9-49d9-a8a6-870669b52558",
        "cursor": {
          "ref": "603a758f-a093-41c0-838e-f0718add8d21",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6f556a46-0544-4c73-80bd-d3734a75d071"
        },
        "item": {
          "id": "82ffdef8-68a9-49d9-a8a6-870669b52558",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "a95b435d-4424-4885-a002-55c13005df9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b873bdb5-49a8-4700-b80f-9f35e9a05935",
        "cursor": {
          "ref": "cae528cb-8f99-4d69-962f-b5709d3fe700",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6577bbb4-b230-4dd1-b607-02f9d6e65293"
        },
        "item": {
          "id": "b873bdb5-49a8-4700-b80f-9f35e9a05935",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c9a76d4d-b5c2-4915-92cb-505156c0d24e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c5999f-b1b4-4257-ab4d-49824062f9e6",
        "cursor": {
          "ref": "3eb7a871-163f-414f-b80e-c8f5e7ba954e",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "37f2a338-f6cd-43e1-b26e-bf661fdadb37"
        },
        "item": {
          "id": "01c5999f-b1b4-4257-ab4d-49824062f9e6",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "074bb481-a21d-40f2-a586-3d03825787a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b65da4b-5225-486c-b383-4ef20b1ff8ff",
        "cursor": {
          "ref": "8198f47a-5f62-4f86-839c-76d6e5acf917",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "38e28032-dd89-4bb3-a8a1-9569227f2b5c"
        },
        "item": {
          "id": "6b65da4b-5225-486c-b383-4ef20b1ff8ff",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6ca6dd97-f67d-4d5e-a172-d40999a318fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d12eb20-172a-4139-a7d5-ebf90f37ccf0",
        "cursor": {
          "ref": "c456f0ec-b362-4ecb-83d1-19ee7136acae",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "955fa186-dfcb-4037-9567-9092f7acc7d9"
        },
        "item": {
          "id": "1d12eb20-172a-4139-a7d5-ebf90f37ccf0",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4f5ec06b-56ad-4462-bd7d-cda79ad7a563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adcbe3dc-a8b6-478e-a1fd-82127c98651e",
        "cursor": {
          "ref": "4aa1c102-947b-4c5d-a3e7-74911aa9a1da",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "d381d733-7a80-4e1b-b258-4b8c10eb98de"
        },
        "item": {
          "id": "adcbe3dc-a8b6-478e-a1fd-82127c98651e",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "f563cbf3-cff3-4112-a32f-f45c7f7c31d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056f1b26-22f7-4857-a133-511893fe2570",
        "cursor": {
          "ref": "0240cde2-a814-41df-b6ca-f708dcae3b8a",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a2561174-527b-4c55-aed4-3ec89ff8da95"
        },
        "item": {
          "id": "056f1b26-22f7-4857-a133-511893fe2570",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "03a4e85c-cb2c-43f2-a3ea-f9a5df9a97a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c11af3f-7d82-4bc4-bf94-0c5efc89d131",
        "cursor": {
          "ref": "e25596ee-4187-44d1-8aa5-7814ab79ddb9",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4667fac2-c2e4-4534-98a5-f87ff34a57fa"
        },
        "item": {
          "id": "1c11af3f-7d82-4bc4-bf94-0c5efc89d131",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b45496d2-e5d0-4aa8-b950-c8e61fcb0d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f77d5c-40cc-496d-8ac5-804512518e8a",
        "cursor": {
          "ref": "ca76a6f8-08e7-4eec-b977-ea670b0d7a9c",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7ec0ee3f-a6a2-48ba-a03f-aca659e8f951"
        },
        "item": {
          "id": "85f77d5c-40cc-496d-8ac5-804512518e8a",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "4727bb48-e6a4-4369-a847-336ee365316d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28e6349d-8a24-4ae4-9a13-55f46b6bf670",
        "cursor": {
          "ref": "86b2d8bf-1b0f-40e2-91c3-244c8e94b3a7",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "7b63b824-2c57-4852-b9a5-3de5c1495b81"
        },
        "item": {
          "id": "28e6349d-8a24-4ae4-9a13-55f46b6bf670",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7ea4d556-8cb0-4d2d-a837-824740b7753d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b44bde-4e17-45b0-8b5f-c17ee36e2b6a",
        "cursor": {
          "ref": "d71d2ff2-9652-4c59-aa30-cb8c6a2deb3c",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b5ac3cd9-8389-46cf-9426-940261af36c9"
        },
        "item": {
          "id": "69b44bde-4e17-45b0-8b5f-c17ee36e2b6a",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7f5de59e-1221-418e-ab54-e7aa75f90c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c557e0d-cc29-493a-9678-b5375730bfd3",
        "cursor": {
          "ref": "5e5cd7b1-8d7e-4e48-bb64-399f3bdc1eef",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "bf9caac2-67a7-4fcd-8738-d2ffc6f5b536"
        },
        "item": {
          "id": "2c557e0d-cc29-493a-9678-b5375730bfd3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "771a17ec-760e-4349-b2f0-894018f89e20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c922bf-3810-439a-b6e1-13bc77e7f805",
        "cursor": {
          "ref": "7d81f43b-a296-4640-82be-9402c9307dd7",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "60972bcd-b113-4818-90c1-946a08d965e4"
        },
        "item": {
          "id": "b2c922bf-3810-439a-b6e1-13bc77e7f805",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8e9314ac-f487-4a10-adc9-0d7203e68f05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad79047-e52a-42c5-8b1f-e6bb890e81fd",
        "cursor": {
          "ref": "0b517d92-a583-4292-a5c2-04d59d3a7541",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7e4fffb6-0e6c-4377-aef7-30e02e10368b"
        },
        "item": {
          "id": "fad79047-e52a-42c5-8b1f-e6bb890e81fd",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "cfe19473-33a8-4898-b42e-9b62c3a43ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3cb52a-8a0f-4606-9937-eb2bc78afec9",
        "cursor": {
          "ref": "f27bb2d5-3d91-458c-a04c-f34c4814a02d",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "18e7fe80-3ca9-4c18-8e14-4b0098e59599"
        },
        "item": {
          "id": "ad3cb52a-8a0f-4606-9937-eb2bc78afec9",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8e7b84ef-7323-4673-8dc3-1a5e85a8ded2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72eb81d6-d555-4841-974c-9a913f05cbb4",
        "cursor": {
          "ref": "0fc26f16-0aa2-414d-ace6-851cc4accd1e",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4853285e-200b-4817-9066-b739728b174d"
        },
        "item": {
          "id": "72eb81d6-d555-4841-974c-9a913f05cbb4",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "1a64ebeb-b485-4fbf-bf6e-22c054254d0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d5092e8-4616-42f3-abcc-e54357285b5e",
        "cursor": {
          "ref": "caf38a6e-4bff-4981-8c8c-e86a698990c4",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "d689ec6e-e03a-49cb-b393-7f280c61653d"
        },
        "item": {
          "id": "1d5092e8-4616-42f3-abcc-e54357285b5e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "8656cd86-186f-4ab3-9e2a-e876f8072f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6c8b643-5add-44af-8445-1e1955a835b2",
        "cursor": {
          "ref": "74246bc9-05eb-4b57-82b3-598c9af1816b",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e5bc1234-b9d6-4ee3-9415-10c7b030ba7f"
        },
        "item": {
          "id": "c6c8b643-5add-44af-8445-1e1955a835b2",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e0d0767e-0d56-4dfa-9099-7bca88094f1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12453b53-9ec5-4a44-b866-60fe8992750f",
        "cursor": {
          "ref": "e4f07922-d1d6-4dd7-9867-85b8369f8e7a",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "bcb1fece-f95c-42c7-9e0d-ccdeab1e1d6e"
        },
        "item": {
          "id": "12453b53-9ec5-4a44-b866-60fe8992750f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "49d20702-69c7-43ad-8162-cd836de41490",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "407db784-a3ab-49ce-ab78-b639355bc314",
        "cursor": {
          "ref": "325b3f89-aef5-4a6e-b57c-bfd50b02c021",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "435cec7e-f54f-484e-a8f5-0a80a7810f08"
        },
        "item": {
          "id": "407db784-a3ab-49ce-ab78-b639355bc314",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ee88ec23-1027-478f-89ff-d54651563529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3443fca2-b038-4c58-b27d-d3419769c954",
        "cursor": {
          "ref": "3d2e17ab-7228-4607-afb0-7a5aff7323e6",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0f967bd8-1b24-441a-b2d3-ef8248c3a317"
        },
        "item": {
          "id": "3443fca2-b038-4c58-b27d-d3419769c954",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "1579cca6-56ba-443b-b004-a56e0fa57093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8600f7-1e3f-4189-8bb4-a0c801239d1b",
        "cursor": {
          "ref": "b974a3f2-2adb-4031-98ef-c310a373cdc4",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "bb4b4abc-0551-4556-828c-bed57bced43a"
        },
        "item": {
          "id": "fc8600f7-1e3f-4189-8bb4-a0c801239d1b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "015b30b4-a662-4d1a-8e32-e9806fdd7435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cda76cc-9b70-498e-b968-58f54cb8c630",
        "cursor": {
          "ref": "bfabc7dc-9c45-4911-b181-a17f9d2ffa4f",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "955f505b-e2aa-4109-85bf-1d0dd672246c"
        },
        "item": {
          "id": "0cda76cc-9b70-498e-b968-58f54cb8c630",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "03869864-b6fb-478e-b7d3-2b0fa581c0a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b88d8b29-5c86-4936-8480-f790e4271dcf",
        "cursor": {
          "ref": "c826360b-b2e1-4994-abd2-e8d2737138fc",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "ddf60c7a-ac96-4ffb-bd53-78b1dd17fc13"
        },
        "item": {
          "id": "b88d8b29-5c86-4936-8480-f790e4271dcf",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ca1d8eea-2404-45ca-87d4-30c99a6438b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41520516-ce73-42da-8436-277f62f108a2",
        "cursor": {
          "ref": "8d8aaca5-2b32-45ff-8370-8f0f5a0fae84",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "aea9852b-6fb0-4209-a2e2-f1f0bc42162a"
        },
        "item": {
          "id": "41520516-ce73-42da-8436-277f62f108a2",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a5bcaa35-81e5-41c3-9345-e408c36018a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bb66ec3-a07f-484a-bdc7-83c94ee2d1ee",
        "cursor": {
          "ref": "789c0aeb-a4ca-4aed-b456-aea16ba300c9",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "374633ee-3cb1-4a1d-bcf8-99980cb2cd8f"
        },
        "item": {
          "id": "7bb66ec3-a07f-484a-bdc7-83c94ee2d1ee",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "62f04d17-b023-4c5f-8a3b-181ee9a59a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd3e8b05-4934-4bbd-b3ee-e83d92a6fed2",
        "cursor": {
          "ref": "159d51c2-33a4-4dbe-983c-625415b7f547",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "8ae6c62f-549e-4795-a2e5-cd1d8e1efb28"
        },
        "item": {
          "id": "cd3e8b05-4934-4bbd-b3ee-e83d92a6fed2",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "9dfa9a97-3cb9-4be1-ab8b-e8e7210863e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b47df3b-b7e1-4707-bf95-64965100d80f",
        "cursor": {
          "ref": "9d99e03d-af85-413e-86dd-7c17bcf87b25",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f6ba270c-7270-4dee-a795-2fa77e91388a"
        },
        "item": {
          "id": "3b47df3b-b7e1-4707-bf95-64965100d80f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "3b91965c-ca76-406d-a512-e8ab4d191441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f87e1810-27c4-44c8-8033-b044c65e8e08",
        "cursor": {
          "ref": "f1a7583d-0f81-453f-948e-9bead754a542",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3f093c1c-0214-4435-b046-db453bd39dcc"
        },
        "item": {
          "id": "f87e1810-27c4-44c8-8033-b044c65e8e08",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "ea9371c6-a67e-460d-a65f-b0adc2b08e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04cb50c-7e78-41c8-b734-8bbc3daf6453",
        "cursor": {
          "ref": "4e6f8a19-3a0c-4615-9b20-29441e9379bd",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "51b85a98-1b78-47b2-8d87-892c84dd6ef0"
        },
        "item": {
          "id": "c04cb50c-7e78-41c8-b734-8bbc3daf6453",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "a4702fe8-ba7f-4321-8c7d-42378756fa75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ecb81e3-4af7-4379-bc32-b522afd81d1f",
        "cursor": {
          "ref": "a0e8f8a3-9bbc-456f-8fba-a6bea1e9d11a",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "61db2177-a007-42eb-9140-2c68a1b48115"
        },
        "item": {
          "id": "7ecb81e3-4af7-4379-bc32-b522afd81d1f",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "1d3bdfac-7fa0-4dfa-99d8-b4b73842745b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d76ef19e-ea09-43c3-8532-5803efbbbd71",
        "cursor": {
          "ref": "3b964d5c-ee59-48fb-ab8b-7faddac0dff0",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "ab313225-db8f-41ad-8a98-d85534b609ff"
        },
        "item": {
          "id": "d76ef19e-ea09-43c3-8532-5803efbbbd71",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "3dd08576-2cbb-4337-bbeb-1b547c4c14c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a461088-7c04-4683-a997-3448d4cc0998",
        "cursor": {
          "ref": "014d82e6-c33b-43fd-bc7a-f14ce44cef61",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d6e39533-bcc1-440a-92a1-49d913dc5a4d"
        },
        "item": {
          "id": "2a461088-7c04-4683-a997-3448d4cc0998",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "959913a2-b301-449a-8769-99334c928752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e820de-d159-42fd-b8b3-e5f1a96c49e7",
        "cursor": {
          "ref": "04a4a455-0ea1-4048-b7cd-e5343686e567",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "03202ab6-5e95-4e4a-b7f6-57d8f96bb5fa"
        },
        "item": {
          "id": "f9e820de-d159-42fd-b8b3-e5f1a96c49e7",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ef47a06f-8858-4f07-bbae-69f3ae207fbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ee8805-fa50-4dab-8fba-db82622072d8",
        "cursor": {
          "ref": "3a3c3d00-6756-4a9e-ab4c-cdd9168d0a03",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "35eee7a5-5f9b-4bbc-80fb-17f3908dd137"
        },
        "item": {
          "id": "17ee8805-fa50-4dab-8fba-db82622072d8",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "1412d166-29c3-4215-afa2-972544446db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d640577-3f1a-42a0-a8ef-ca1df4bad5d5",
        "cursor": {
          "ref": "178641e9-8c4f-458d-85be-e1c742ab66e1",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b841fa41-722b-4762-97d2-877e92ec68f8"
        },
        "item": {
          "id": "9d640577-3f1a-42a0-a8ef-ca1df4bad5d5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "6a191e0f-2981-42c0-9d2a-bdc3299dc46f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d7c29e1-4908-442b-9631-d35734c9ac83",
        "cursor": {
          "ref": "9a71b25c-bc96-47fb-a3e9-7b972ee25cb5",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ecfeb6e7-c67c-437a-baa0-b497ccbd7599"
        },
        "item": {
          "id": "0d7c29e1-4908-442b-9631-d35734c9ac83",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "435bd4d5-aad2-4bb4-844f-c5010e853a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:244)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3737400-7041-4960-b862-b294176207b2",
        "cursor": {
          "ref": "b0d571c4-933e-46ce-868d-ccbd3d5a2260",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "965d07d1-3f31-48b2-8f46-2492bf1da19d"
        },
        "item": {
          "id": "e3737400-7041-4960-b862-b294176207b2",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1a2af8cc-47a4-4ef1-a7cd-c4e6252441d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "12f7e699-3be6-4a96-91e7-efc78d8df336",
        "cursor": {
          "ref": "5ee0e10f-6a8a-4fc5-93d3-8f29fcddfe5c",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "b164570b-c534-4d84-803a-a87f2d84c8db"
        },
        "item": {
          "id": "12f7e699-3be6-4a96-91e7-efc78d8df336",
          "name": "credentials_verify"
        },
        "response": {
          "id": "6493252e-5d67-427d-9de6-7d153344c132",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "bbd0067c-4f7b-4c13-9900-1fe4f9246e59",
        "cursor": {
          "ref": "40311e90-b44f-47cf-a1d3-c4952de26325",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "50aa9bbc-af3d-4ea5-8437-12d9345eb378"
        },
        "item": {
          "id": "bbd0067c-4f7b-4c13-9900-1fe4f9246e59",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9587c5b8-7c20-40fe-a550-1382d62f8b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 400",
              "stack": "AssertionError: expected response to have status code 200 but got 400\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "c57d6e06-3d0e-4f9e-ba41-07189b06b7ca",
        "cursor": {
          "ref": "8856e45f-18f4-46f1-ac53-fe9088be91db",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a5849a47-e7f1-4d02-83bd-7489aae919e3"
        },
        "item": {
          "id": "c57d6e06-3d0e-4f9e-ba41-07189b06b7ca",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "52d19021-730f-4fb5-92b1-355f73b76f0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57d6e06-3d0e-4f9e-ba41-07189b06b7ca",
        "cursor": {
          "ref": "8856e45f-18f4-46f1-ac53-fe9088be91db",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "a5849a47-e7f1-4d02-83bd-7489aae919e3"
        },
        "item": {
          "id": "c57d6e06-3d0e-4f9e-ba41-07189b06b7ca",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "52d19021-730f-4fb5-92b1-355f73b76f0b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 8,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ee50d5-42a8-4de8-ad73-7539d6715d32",
        "cursor": {
          "ref": "c3cc0c30-c783-4ce1-ae40-8f10c43d5f3b",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "facb86cb-d348-44dc-9092-f76acde334ff"
        },
        "item": {
          "id": "c4ee50d5-42a8-4de8-ad73-7539d6715d32",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "6e5b27fa-e224-4924-a4be-80aaacea4464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:249)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5578da-d54e-420e-a18d-97144d24f0a5",
        "cursor": {
          "ref": "dedc60d8-e15f-4616-b4c8-81ff51663295",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "c1c80e74-9452-4ff3-bfb7-3b765bd2616f"
        },
        "item": {
          "id": "7c5578da-d54e-420e-a18d-97144d24f0a5",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "142f9485-b714-464e-892f-8e8f53b8cd51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 401",
              "message": "expected response to have status code 401 but got 400",
              "stack": "AssertionError: expected response to have status code 401 but got 400\n   at Object.eval sandbox-script.js:1:250)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}