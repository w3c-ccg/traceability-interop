{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "535f4d05-1fd0-400b-965a-af52b604bf9c",
        "name": "Clear Cache",
        "item": [
          {
            "id": "10cc576f-6028-4612-99ed-a1eca3f3670f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4f8f6266-94fa-4e63-89a4-fd8667cc2ed6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "aa756430-4464-41eb-ac04-010780dbf73d"
                }
              }
            ]
          },
          {
            "id": "e4176dd3-4870-4a76-84fa-0f9999bbc3a0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5bdab67a-df68-454d-bf30-950b4ad9e39c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "95f95f70-209f-467a-9fc6-a0f663a02d36"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "36364003-1d38-46d8-ad51-459053e80027",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "da7608a5-d604-4cc0-89d7-0c5e02b5c982",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8dc3e7e9-a8cf-4668-9d40-72544df28b7a",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2745d8a9-7b64-408c-9e2d-48454babacc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1809ff8a-5b82-4376-ac90-2217efb61604"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "433cef86-3e4c-4485-bf77-f95dbabfe099",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "787c25ce-f5c2-4232-ac3e-f8edea9cbc75"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "0c49ad46-5f56-404b-bfca-0443a085b1b2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "807c4696-0610-4806-b924-ac9e9d8d8190"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "dd93f267-fc49-43d0-842d-061dd21a1660",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "cb9cf021-9302-4d04-a6fa-9b8e3de640d4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2704cd00-3326-4d9d-b2a7-0ab017f022f2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a5cb199e-4385-4cf7-a804-601b248d032c"
            }
          }
        ]
      },
      {
        "id": "92f6c72f-2892-44fb-9416-334dccb8a773",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "65dcda50-1d2b-4108-8fe1-924d41e60bb7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "22c4a860-1df1-48fd-a8e1-96037811914c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e29217d6-6c65-4ca3-ae75-56f24d15428c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5915f01-f073-4134-b533-6c4b666fca0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b7f7a8ea-e5cc-447a-ba1f-e5cbb9cd495a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab405926-ad2f-4a97-8d6a-bc3783dcb62d",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3f65c94-ba2f-4bc8-bf6c-63f9bb2b8ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8c4a777-f244-499b-ba9e-59be7e241752"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2431efd-57ae-4689-bab3-d2bf1df9beb6",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b1f738-738f-444c-b0dc-668a52c1b09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa7b83a4-8768-41e0-aeb2-6f9bddc4d890"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2ceef55f-45bc-40e1-a926-7f4c3b7b5dd6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "03fa4582-cf6f-4540-8bea-0c79d5574174",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "289d85bc-6304-49fa-aa31-ad2fa0cf2027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35d6d440-7edb-4795-a63f-4a4706a8b6f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b025aaf-ae55-4b28-8d34-2334e33186fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ce1edc6-808c-4bfe-9bed-e98238737288"
                        }
                      }
                    ]
                  },
                  {
                    "id": "327d51b3-6a7a-448b-956d-295e1e16205c",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "537998ce-713d-4164-9bf3-bd663e542c48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f50e2206-6225-4325-9855-69d5f09e4dfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32903684-89a1-454f-95f0-6bd950d67db9",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "5b680b25-2c2b-4e04-bc6a-b57a8bbdcd9c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ab4e1985-78a0-477a-a941-9b18bd1a4d97",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ef69f474-add0-46b8-a9f5-03238cab01f5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "74ff7eed-38bb-468f-aac0-8b11363b6e9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "39497f40-7a73-4a66-a954-c41de169f5a8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "14108586-09b6-46b1-8fb5-74aa4e1cd076",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "0bec9a43-8c06-48a6-93c1-88324eec49a8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "38a206ac-ae69-48d9-b7ef-34663c974255",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "89d7b05d-ea4a-4846-8883-09e0d755cc98"
            }
          }
        ]
      },
      {
        "id": "6724b29f-6de4-486a-a00c-ceb107942a53",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "5af2957e-8f2b-4f93-a87f-33c6d5ccef64",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f6dbfb99-0685-41ec-91bb-d6e77d552f0d",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "bf48f36d-7b1c-49aa-a074-9918e88ec45b",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f630e39-8528-434a-a711-66285de87972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1733e5aa-a3a5-47a0-9d60-cd47c35b2f81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ecb4a83-2c63-4420-85e8-cee21bd308f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a4a8d1ba-9f82-48e7-a9e3-f5fe4fdb88d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33903795-197b-4517-bbdc-ed0150f85172",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb4ac0b-58b8-4d25-a65f-029b5af35ad2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bca885f-685a-4b79-936a-5e33bad68203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e0c0379-360d-4117-9f1a-a8b154ef6023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7768df66-a68b-4fdd-b883-acc64946dc13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ac421a-f9ad-4508-81ae-3c37ac4eda52",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b29ea8-8967-4ad7-b629-e77370a070b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b733f067-191f-4683-bda2-368898a2a6b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd777ef8-e325-45ec-ae9c-1a716248d3c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e357204c-e3eb-46c0-ab6a-edddf28a4ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203a0e11-151f-4dc3-bb6b-b1b8f792e54b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0df5741c-8b9f-4936-a8cd-2e62045057a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea48fac1-2c10-48ac-a372-4e227db3fff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bf9b211-92ca-4285-aa55-ae088ce8f528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "514a7f93-352c-4eed-9e50-01cec6461d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ebc1310-68df-4c20-8a7d-4f3f757ddd8e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ff111e-e38f-456d-8bb8-c1851a2cd19d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0831f698-8cda-4119-97bf-2ce5cd6a7700"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a27f781-babb-4e41-90e0-8ec6723ffd4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc5e3a05-898f-4d3d-8686-03567b9bfe76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7a9c0a-92a3-4bdb-bf2b-f16dc9599c9a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a2f8da8-3e5e-4bcb-acd5-499546cb9541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ef6e5c1-805f-435f-9d2f-86f01cb3670c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfee04f-ca1c-493a-a273-35476879f120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29a630cd-351b-4d44-b161-1e1f1a8c113b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4c6148-6600-45d8-b8c1-6a641069a44c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59478847-d049-419c-bdc2-e5599e4d30da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c094046b-de8c-46c8-adae-46dee396a9b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfeddaf3-2edd-4c89-98c4-16bab3ae71b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7b16dfc-d636-48e3-ac52-5650befd8fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c262909-936c-4977-be2b-6e71b172c668",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a90ef0e-9444-4050-82f8-52887baaf29d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e20e5306-6dbf-4d68-9bd1-58509b1be558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc64a00-3ec8-40c6-8575-dba44278354a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bea1ae57-9e5f-4b55-9012-12ee9f734080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6024d17-c629-4527-b980-858cb50e618d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e434643d-89aa-4f4a-b222-9c58080873d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db992ba5-6d5d-4296-821f-7aaac64f5c13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb8ac07-10d5-42e4-b814-10fca487b674",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18b37097-3208-40a8-a573-805e0ea8fc49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6295b833-4a98-4b48-9ae1-18e1a14fcadd",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dc16440-d0ea-4a1b-8857-adb4bf9250f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "270b2ec2-29d3-40ed-9b00-1ebc9d06b159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec9b69d-48fe-4ff0-9e48-9eb34679a8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "276e2a93-e26f-4de7-832d-141a4d3c8a59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be02c1ac-4e66-433c-b45c-c9e90e3c8574",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4873fdbb-5b86-41f3-a450-21419ee8a858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3f8d857-1770-4f57-a84d-8ff6f75a350f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76f16b7b-4c5e-4135-80a1-511a9e8eb489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e447c5be-71a0-4ddf-8f93-b8e9e733eba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1692a90-3f5c-453d-9373-a117f03eabf2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ceed6f-b4f0-4ea9-a960-ecee190323eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b89850a-0252-48af-b016-9a1654c1786b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecacc108-4dd8-470e-878f-638085f14544",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "427890f9-385a-4d98-a3a8-511e1b299bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8685d6f8-e2b0-4e3c-ad41-10bbfcb44a63",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d78588a-65dd-411d-8411-050e57f089a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4815f418-1781-438d-994f-adb8bcb287dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e928719c-1282-416a-88d3-86ace699328c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abec08ae-b496-4a78-86e9-3ffc858850ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97899aa0-9cd1-468a-ba73-e23e4286d3cb",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba7af53a-c393-4706-9d8b-5e2b3ff11fe5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "999bba26-1ad9-41b2-aea3-94699ba61119"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c14c0a-1873-4e7a-81e9-2f3221f3fb49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "004eaf77-e7ea-4dd9-b7e0-a48bd9106c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a9cb7d-d1c9-4de0-baf8-071911b57e54",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ce805d-8480-425d-8e17-9c88cf4fed70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dcf439d-057f-493f-9226-f9472c1b0102"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c76d3dcc-5cb0-4d7c-9abc-77e0c03be606",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "069892ca-3401-40d3-aadd-1454018a0e4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22446013-88f0-45c5-80f9-94b57d3e83f6",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba5a1cd-33fe-4043-b4e1-f166db1e7990",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81e75663-ecd9-4915-b515-7ffd5fddfadc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431e2405-2372-4656-b24b-12d6b9fefd3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "93684bd3-e776-4231-a1a5-8bc32693f2e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d54f0ae5-cfdc-4d84-a3f1-5b219afbd1bd",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35f3d21d-3a09-4790-9846-d0f0d40f95e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe1e5ecb-bebd-43bf-83c1-c091a585d120"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30384c58-7396-465b-afb8-ef3b7f168769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "99a79d49-d6c5-47f9-bfbc-f47d0a0882ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62e59183-7ca2-49f1-95f2-971e79de759b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "908dffe6-7db7-4235-aff8-eac2c0e83f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "890f2fab-7738-48cb-ab20-aff53db36016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1242f792-5ea2-4fcc-b946-c5a15b19a2d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "55123b7d-52ec-478b-8ae5-01b5c8d787d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb0d584-f73f-4770-beb9-031897619696",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e5d2ddd-46a5-4c04-ae66-7557ed1e6601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a169c95-33a6-47dc-93cf-b8f3d9c35762"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df88d9e5-c1e5-4d01-a7a7-f5a63cb13b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "26ce1a87-0071-408c-ab37-636cc0c0918d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25281e5-da1c-4344-a72b-b52dc80b292c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7364d73f-ab68-4940-9632-1c9ad447bbbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "616e5792-f586-4853-ba01-3830bfe80dab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3aed612-e0d2-4682-821d-18ad9c83f97d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d4aa45e-43fc-4f9e-857d-a648031baf87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248c63d0-628a-4138-ba11-1d049f532143",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d76c26-0ebf-4be0-8840-b0880dc019f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45901d17-03ed-49b5-89f2-34ac17f079b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5041b876-8363-4701-9bb8-e5bb623beb28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0898129-5037-498b-b0cb-5eb8352fdc87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486d2c18-2ec5-4fd5-a615-0bf82b0b88ac",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79ab46b-dc76-41d6-b935-eaddc25828b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "252568b1-1ea9-4672-9bc9-dca037a1c927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af70a570-df82-49ad-95a1-400b9437e042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb148fcf-fa33-4ce5-97cf-ca8b6253e1ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff4f828-2e00-44fa-964d-56b4c3630679",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6cc7006-7d36-475e-ab9a-cedd9194a4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9958241-a7b3-488d-8b9b-b77e9276a10c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08cca984-6074-4df0-8ac0-6c1dbddfe23d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cd7d163b-177c-449e-b1ff-56e483817e9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02c4e457-84d0-4b28-a2a2-1f8cbd5d45d6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86c78ce8-e325-433c-b9b0-aca3002c644f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5282f44a-3c33-46c5-8149-0ca988b3aa7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90cc8ca0-538c-4f89-a23e-5b36c0025b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa60e541-481b-4f18-85de-33fd3fcc209a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bf1eb06-5fc9-486b-9da2-0f8edbb91787",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94bb6275-8b48-449f-be49-a99018e6ab62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f25151e4-f104-4cdd-a80e-bf3f472d97b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d43c5166-a27f-40e6-9653-68a4d921468a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a29cc1fb-e79f-4153-b44c-4a8729b66cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2725482-01c3-41dc-b012-35a548cd653a",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03d3496f-ab94-4e49-bdb4-e09d65d3199b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47de13e7-83fd-44ae-9831-bd1f5d021754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df61f9b-493f-4067-af51-8c000038bcb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f310eb67-d695-40fb-97a6-926fe56295be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d833579a-9f7f-445b-a3c0-0070e738efee",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6266c00f-6914-4a55-8773-7f0b11d59b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0d2bf2d-2fd8-48f8-806e-3bd3b32ced1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e25686-3747-4261-bf8a-c0a2197f1234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ab20c15-026e-4902-a0df-78f70d8eaa3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3740b4a7-e7c4-49fd-8ead-1d3da5a29042",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9366b386-9ee6-41c8-ad22-4c0d0d0f73ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "212ff52a-d48c-4998-8a04-9b5bc297d386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c745062d-7721-4fef-92c1-5d7c3b440662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "982d7d0f-dbb5-4050-8890-68645598b46a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb15703-1f48-4725-8432-eda4c24a4f57",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9654eb9-38eb-4271-ac26-c518631b4592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5b6d1c4-4743-4a64-b2ef-11733f1075fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd61bf0-04db-48ee-8071-59f1238bd271",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a92cc06-364e-49b8-810d-2817d55418a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a959e99-b74c-4199-b144-8283641e0537",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d107d4-8049-41d2-8802-360721474e9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5739d82c-759f-413f-879e-d06f60b2147b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "712188de-c45f-4450-b700-3acb5ce60e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c5437e82-f646-4985-b55b-d51dd0f0db03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5c4a0af-01a8-49f0-a585-13e0fc0e034a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b0a47f-163e-45a0-b449-29e0add997ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c2eda7c-d334-4fb4-bfc1-5ffa6a71f954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa9401d-7b42-419a-b7e8-b66e16026456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f18ed607-c507-41f7-b6d5-37dfd0ab1f51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0f3e745-30c4-4679-998a-37609cf250b1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "780b6768-6370-4bb9-b56c-10fbf64b9ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c945370-cf9d-49c9-9a34-71dd654db373"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0994c292-d958-469e-b4d5-3696d12d01c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b9ed732-c17e-49aa-b8e3-c7daab0f905c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60a48f0a-0f3d-4857-85dc-e56e90caeb4f",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "103a0104-fff6-4b0e-a15f-2821a8b55a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d037e8a1-39d8-46fa-b29f-3e4078245ae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1bd581-3641-49c8-b3b8-2936159fc8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1b52469-542f-4375-bd75-5a606a9f0791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2812baa8-2b5d-4263-91ec-aaf187013cab",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "558c67ae-5270-409d-953a-cd2d5e57920e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3396d81a-1391-4412-ac64-51afb0d2047d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f7a569-2b2a-428e-86b8-b69e4eee22d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e4cf18bb-d3f7-4982-9804-a77a5a10b9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8faefd-4760-4eae-a250-14e6b26ff3a6",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "427ed980-ada2-42a5-94dd-a68b8bd40142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05264e15-51f7-40e2-8797-0784e9e857d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bc903fd-19ad-444f-8e96-ae7f79ac6208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "c379f66c-7ac8-4b77-8212-cb3a83fe3a2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629dc11f-b504-4ae0-bf42-187dd4e68768",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aaf572c-7659-44e3-85ae-8bce447a10a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "db7b7761-522a-4b8d-9bb8-c499ee92f02a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fd1dd1-3762-4dbd-8864-8ca1be14aad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c6e515b8-71bb-4bc6-b8b9-6138d2c27b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b73e85c-65c1-4f1a-bdac-f8f7a82bf5e7",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8f51e5f-27f4-45fe-ad96-9e6445dc844e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc7c21a0-3768-4f4c-86c2-74bd441e2649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3ebad0-09b4-4f61-8b9b-d7e6f76f842c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5ac445d3-f86f-4c91-9838-28f98407e2b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9d7cbf-8599-4091-b4c8-82b28a05d169",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8166b3a5-85d3-4dee-94dc-043d6d8d3284",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b67a20d3-3499-4fc4-9dd8-5438cfa4e8d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc02d183-1c40-466b-b750-f911ee2b4581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "83fd25b8-8568-44f4-a229-bcd459d8f2ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a322033-96ef-4d45-8e3e-71056fc697a9",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "593497d8-d3a2-46cf-a9f6-82ffe7503cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf3f04d0-48ef-47f8-946e-c7e9239c2638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda893cb-55f2-4526-bfab-347619bd6ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "310954eb-cb10-428d-b3a6-39f8c877ced7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bf36ab7-a1e7-49f8-958f-32b936606fc3",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b559782-d9ff-4649-a9f6-3ecd3859e249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb923eca-3a16-4e0c-9e55-4be7a4a346fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "051ae90e-0d54-47f7-a7d6-e195faf62906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2e9a9c9-0ca0-4959-a951-ee9fc8b6cc98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29b087d1-3be4-4539-81f7-c611575b22ce",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b063e02-127b-4ad8-89ad-eecf1a0cdf51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7cbd3e5-9bce-4181-b2ed-f292ac39937f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b84249-0c4c-4c19-9dbd-fe86ba3a7f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "630b7d9c-ef79-412d-94a2-cda55995fbce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9de463-8471-41da-aa48-ddd75872cb80",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e54b1006-1450-4dd9-b5aa-552139af4be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "233fa152-7fd2-464d-8713-52fc94094279"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38875651-5ed7-4632-b163-2751114911ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5cdd7637-83c2-4bd2-ac10-a9cd86e0ca9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08d354e-108a-4c5e-9b79-1fc25d4f5b70",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8e46e5-6ade-458b-b507-8a63e5d2bbc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e9138e3-8bcb-4d60-8b73-7552de5765f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2258a06a-c730-4fc3-b3fe-53b3faaffc93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac1a3421-e57e-47dc-9d5f-9d394bb35efe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb06d9c5-0358-4eba-8ba4-fa7eeb59df96",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2eaac3-ef3f-409d-abb6-800a7324d828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e95e152-f3d3-41ca-ae9e-85adf2661068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c3dbb9-7e50-448d-bcbf-08cbd7e06445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9f50b47-d3af-4938-864e-ec3ee6508b1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee213cb0-f8d6-43cd-86dc-fd5988ef0bba",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8be11751-138a-415b-9c3a-74a3e02b0dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03eaf3a7-0daa-44e2-b9f4-9f6a1e32f13a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dee4889-377f-42ca-849f-b9c939f30880",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c08531a4-a7da-4add-8266-1155ef05e5ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b24e39ec-270b-4221-8a9c-9e16643a6552",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7216e5f4-9474-46b2-a309-207f93d8bc2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b535d39a-a051-4242-b723-ac6b5cd03a5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0cde85a-a654-4d38-848e-49b085bb80b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "416d6777-61dd-4e1c-9401-82da89e79c72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16c670cb-b109-455f-843e-f69a56670393",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c01ae2f-c0b9-4149-8549-1b22222e5c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9121ce94-c5db-43ee-a76f-fe578802ea18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f4bf3f-0fe5-49e5-8d55-23c63feaa3fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dccd0d0a-40c4-4c73-bfba-811894ec870d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44127adb-42a1-4c82-9d17-abb25e51c26e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d9b6db0-0cff-4c20-914b-bd20d4adb20c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bffc64a2-18e9-419d-9769-e050d1011da3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e18910-b7d2-4676-ae91-bd6fd6850ced",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0adacf44-f9a6-498d-8455-1328bd36e7d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a3fe30-e7c8-4add-a65e-4c72b927a4fc",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c86f3d-0ec9-42be-ac6c-29e8e2b148e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e6e58bf-0dc6-43ef-b3d1-a376152b2d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "440aca78-0960-4a76-a370-012650a17564",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bbe3dfb9-11c8-486e-9cb3-dd7d83c9d513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380b3643-d89c-4560-9e4c-6a9c03041a8c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39abd01e-0fb4-4f8d-95aa-9b35eb478ec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81f9f405-7f30-4776-92fe-f070fb1d9bc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e2d7ad-58e3-4cc8-af7c-afcd7b065f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7825bdeb-4df6-4339-8b26-b01d609a7bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8c3fdb8-006c-41a0-8ead-18ac7393b900",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42326b92-2857-4383-bd3f-afe857cedc9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50471c30-61f8-47af-aa51-547efe56d8d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a5313f-ea84-4d67-acfc-0c68fdb4f56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e4d4263-ddc8-4be1-84b6-ba0a5cb6425f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d50640aa-852c-4f0f-b256-865baa2475a3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce4ef4a-0764-4406-98db-9ce1a435003c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23d73f27-49ce-4558-9ba0-0405ad4d62f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab9c5ee-8dfe-481a-8c9b-1e04027bf11e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "29788f5f-6226-45b4-9841-6b6893eeb0d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c208ae7-0c26-402a-9cdf-e849b45a3d5d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5748eeff-6c08-48cb-bb8c-e0a4d9697da8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10364eb9-aa06-4160-8ec5-49f3f5877258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "131b9d76-7f6c-4b8a-bfae-b8133b17a2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e72bd555-571d-4487-9754-cc2b14bd4f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a54d481-9236-4f91-9139-4c73c537aa7f",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9b7128-d28c-473f-afab-6fed27ccbf49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f9ff9f2-1540-4ba5-b798-6fcb6df9a72a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d3ec24-4080-4295-8872-cf6002b6136e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc61710c-646b-4273-bace-81c23fc70bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56afd483-dcae-4237-b50c-9bf278aae835",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51cf390-ec5a-4f6a-b492-788efea96a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4c9e220-26aa-4e60-9456-8d28ba76a1f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc1ea75-7144-40ab-baef-4535a1cc850c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef990c25-bda8-4233-8348-da0d3c495c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "324f1649-e58d-4356-83c7-b81a43fa2967",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a56d339-2cc7-47ae-9e07-7a181b25ed98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc255a2e-051d-4a2f-9abc-ab7226fe5d85"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6c61f4-ff2e-41e9-992c-313481d36489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "81e93905-33bc-4960-a409-3ce59f4d6745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff028cc3-6887-4f45-8b74-9e27d2083704",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ba0e6a-fd06-4bc7-a595-e9489bcb386a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2375d5a9-2f07-4751-bc0b-ffa844789020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3764efa-5aa8-4c6d-bfae-6b588f40e1f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "4833c981-3dbe-47aa-a04d-7e7d011bd2f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888f0492-ad43-4880-a047-931bc83db914",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f09427-9562-4e91-94f1-e97003a38816",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "623a4001-b954-4e90-b49c-ae95085e24de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db682fdc-56f7-405f-add8-9ebe474012ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1bca1f8-e6d1-439f-9af0-8f52c85b726e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "838a8996-6ce2-43d5-93f6-7d651a147eed",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "834941b0-5de4-4a6d-b22f-d8d5aff1e59b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db72393d-fb9d-4992-9987-55d888e3bd80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ee36d5-6df8-4536-b1a4-cc97c8155b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "166e1290-5dca-4f78-af63-8faad4736bac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95e0a376-cc9d-4c7e-8344-0966a87b9175",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5735b46e-69ee-408a-8d1a-994c019ed36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5ca135a-e976-485b-838f-226be5bf1c65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31fe98b-3350-49e4-9759-fa4b8273f547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8c369cfa-421f-4d9c-933e-6eac96d4a0c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa551cb3-a75b-4f07-bc66-1dfc6102c7cc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b1409d-2010-4af1-8669-e2c267fe1f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfed6a85-c738-4d87-acd2-1f3f3893a668"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ae9a53-7243-4286-851c-2c4cbf445165",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8ca81814-feb3-4700-9061-60a633db4817"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204cdab3-945e-464b-ad8d-075de653e03b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f02091-0956-4417-a6eb-d384a11cfa7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a418c55-456f-487c-85cf-951e67df8dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e84e5938-7589-49ca-b9e7-b55df49f764d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5c2238d-ee4f-4eb9-8d74-079c63d34639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5067bea6-168e-446e-b846-cdfc79e5acc7",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1fcf23-efd6-413c-bb28-c25e8328a434",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77cc2b11-dd73-4aa1-b96b-6ad4db7abd47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d063b4c1-9aff-46a2-9b27-7b856fd9d8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "99d95661-cb86-424a-ab53-6e98cb7301e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53e91ae-5020-44b7-a743-c860e3748754",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b9e6e3-dfa5-4853-a3da-f87b91e089fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca851f6f-0c5f-480f-a65a-47eab48cd443"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c59ab449-3ce2-4d1c-b4ab-3ca08f39d93f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "257d9d7b-0a63-4d11-a6e2-29ea24906c9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df013158-eda0-4e56-aa0b-25d27d9c3151",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f7a433-3536-4b34-b05e-7fcbf7db4875",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68647a8e-e0ad-4391-b0f1-4e2d0077a620"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b5ee4e0-472e-476c-a337-270eccbd2152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c642a1fc-8763-4186-a553-6376f057e5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae7b35c9-19f0-47ab-bf51-11e541346690",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1add6648-c9ce-41d2-8d31-461f32a5922a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6329c4b9-bcb4-471d-9807-92d380723de3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "423b96f2-1f1d-49f0-8efe-cd38911dec72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bd96820b-1540-4b50-ad03-4d7e221ca326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66636290-9fe8-40fe-b1fa-db7582fcc23d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0ed642-f7bb-4193-b2aa-635204d74c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "740925d2-9031-4a4d-a388-09240461e463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fffba9a4-26f7-4d6d-b47d-e2ba01bae30b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "01f54831-1824-4253-a608-81b7dd15221c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c62cbf14-5235-4474-bb15-bdc469c91241",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b3255ba-0293-454d-8e10-0fc907e57bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce81bcd1-cafb-4e89-8c33-c7cee615c03d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d4d780-adf5-413a-b0e0-fae30fa3c86f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2081700e-dbf1-436a-9e4d-8d6cf4e536ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d23fbc-ef09-47a1-8c58-6455a1350f3a",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78b744ab-4534-4c0e-b9f6-a44816d8c39a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb36cbf1-3b74-471d-b3aa-965e8c014187"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "077fde50-a1f6-4787-a392-24ff89f23c80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "575f9f25-4021-4853-a39b-b4ac61030f1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde5ffc7-0422-499a-9990-0d5a60b50d18",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa456a9f-6058-4408-9572-5054662f8eaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41be7957-64ae-4d6d-80f2-07012f79ea47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76ba4afc-5678-4a0d-a9f4-4b02847602e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d5c91bc-ef4c-447e-8d79-2ff86adf90ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85253cce-8e7d-4b0c-bb39-a5104d93a113",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb0f714e-d633-43c3-95c2-3ac7b6f591b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41d36930-5eaa-4365-8527-76fc2069ff73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2171bb-b774-4667-893a-c667757b4f95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7122977-1917-4b61-bcc3-e77dd5c79663"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4106eca-0a72-44e7-bbb6-a41db996375f",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f778200b-bc68-486b-81c2-09374b6fe22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b97239c-9959-43b5-a852-b89a98903a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f274975a-55be-488f-ace9-5fa436535f2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "58044e8e-5b0c-4258-8517-c66a92fac32e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8dc6b1f-bcd4-41de-8b0f-2414bcc84d65",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01316915-3a7b-46fb-9df0-c485d58536a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9638357-5250-466d-ab6a-5bbf58fcff8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "883aa8c2-caf3-4ec4-8e67-edb9936f2a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "eaa1c03e-7c65-4955-bc0e-9ef915ed7c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10565e4e-4493-4256-9cd3-d2571c53de92",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "509f9499-fae2-4495-a537-57b44b4956ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7788612c-87cc-4d5d-92df-2c8fe820d175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31b66caf-8c1e-44d4-9057-837402b72532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "899f41e7-e4c1-40fc-8ac2-7f11d41f3437"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26766c4b-b8bf-42c2-9db5-18317fbd3906",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93a7ab16-2305-46f3-ad61-9e9ea37ba7da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d34c7585-6b22-47b7-b526-06e304574ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b082c985-88d8-43fc-a54e-40c014d724c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "42ecd580-a27c-4cce-b71e-960f6ad225e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fbc8f89-b08f-4c76-ab66-33997313df51",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fff3114a-bf84-473a-8243-3a95a01081a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5586f5d-5325-409a-8da6-74dc5ea215fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffe7dba9-ca90-421b-a83f-cc5f11a26959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "64ffd335-6920-43b1-958d-bc7a8635a0c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a9fb557-2780-4dce-9b75-d5943eec104e",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d9181d-7a9d-4e7a-9807-7d9412a6094b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "536e1977-b1ae-4c3e-920b-9fc57394b16b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be58a6af-928c-464d-b57b-2222e7cc1fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c272c30-5881-483a-83dc-7e3a266a2f2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecbbfaeb-bc9e-4587-a1a1-a973e903c7a0",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e154c39e-8419-4d44-ba81-7f78c31cacdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb734ff-e0fb-4da8-8a83-44946e407501"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e4189c-998a-4ae4-acbe-9dbfc96425bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c1e9b400-86a8-49e9-95e9-c7da3dabf5c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f264f43-f6a9-4323-ac39-47e12598f690",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "392b0087-ec72-404f-ba1e-4ec749037075",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7eee06c-45b8-4ff5-882c-8d3a72a236f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2afe811-f07d-49d9-a0a6-16b1779c2455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aa9fbea6-83a0-474a-b3fa-ac74e61d5394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "992e7db9-7747-4370-8c5b-2ed4291634b6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f2b12ba-bc13-4aa4-b4ff-a934818362c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ae70e59-d677-4268-b804-d2f5c77191f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a69081b3-97ee-41e3-a6ce-0f177f303476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "21968dff-db6e-4d0f-80d9-4c12fe79775d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6293215f-6fe5-46b9-b9e6-cde4ceb85e7e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96953590-d9a0-40d7-a80a-41426db2f102",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "086619d9-1a84-4b00-b4dd-e44462e92ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69626431-383c-44ba-b752-9fbb30966d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d79f951-2b09-4cc3-a6f9-4366294ee1e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e51b11f-f5b1-4d16-8a59-bb4ca1f80e6b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2dbbc79-eed2-4643-b356-a7f5bbb6fe24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36b73029-3923-47bb-a485-f076eb8866e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "895d991e-b94c-48eb-855b-f832527d3049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b1c2cd55-c459-4db8-b3b2-232c03bfe548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c22529-7601-418f-aa3f-a64be96d0c8a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47e7ac2a-cd42-479e-a4fc-0a1912c9df67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27af06c2-32af-4373-a0ad-23636b4d50d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eac5b8b-f140-4dc9-a10f-4c6db8f103e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2907044-be22-4a98-bbfc-fa8e3a05dde3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c682795-634d-4659-a85c-dfd79594c231",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f583d9-7273-40ae-ab04-2688f721206f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a0ecac3-dd10-4f18-a832-95eeeda64b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16c9c47f-d78f-4904-bd66-243cc3c35b93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "342734f0-0dc0-45c8-9d8b-7839034a1f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648a9de8-6dc0-46ce-b26f-9e5f859f21c1",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b223f12e-b599-45ea-8efb-10bc635e903f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9727b091-1eb8-4065-a44b-b964e90eb2d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f0311b-07fa-44a1-82fd-956ebaffcb96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "61716560-0243-40ac-bef9-d8abf4850a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f60b9f3-d41f-4c59-9a79-d6f303568dc9",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06d8d325-af88-45a8-8071-f635f927bf7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9e0c0c6-2d3b-42f1-b9e5-5fac996f8886"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc65077-579b-4cd1-9aa8-f73cc8103f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "38be7818-8836-47c5-9c8b-0a57e3e6126e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec22601b-174c-411a-9379-45c57a1e1ecf",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "171cd1b1-2052-47f6-8cff-0298d767c926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce8f00a-4ea1-4559-bd60-5b591c105f65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f6bc06-78a6-450d-93fa-2870d24667bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb5b1325-7d37-4441-81bd-1c49408d894f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11f9744-0b13-4a1e-b172-04162e5ee565",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b207ae4-a40e-4ef4-8308-bf2a1956e0d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "693c0eb0-364b-4d4a-9956-81515db8cce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf6489ff-4cf2-4619-a174-890f24f080e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d0f3343-d58e-46fc-a591-2f3b78b55536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5efeafba-52a0-4995-ae96-7b840950edef",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f384d420-14d4-43c1-9d17-02b955481db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99af1504-4ce2-46ee-bae5-60298f7cb8e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "845b39a6-888c-49d4-acbe-6fa630db1968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "79847bd5-6a98-4665-a73a-eece908e698e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b380e5ef-fd09-46d5-92f1-3b0a6d884b72",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc603076-9793-4b3b-9f25-4edb178afc1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24063a43-e202-4cf5-b4c4-d99b22135664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49def204-4fd8-4415-b95a-a74f7315de53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e10cfe13-bc3e-47ca-a7fe-2db6c1b08ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc00c5d-850f-4249-9826-9f94bd9069d4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27b86fa6-46b1-4594-852a-4ec4d0ba0a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4aee8f9b-c2e0-4c19-9dc6-da7e5416736b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3283031d-3871-4225-8d12-8c2818900474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3d01326f-887c-4d44-bade-d32810f26f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da55329d-456a-409e-826b-8feba7942022",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e7339c4-e12c-40da-b8cb-2b76028406ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f2429768-0541-4c27-8180-e5a199feb96d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a09839b8-119c-4ed8-b98b-3a5a92480c50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b461ce3c-f59a-45ff-8430-79a457cda3bf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "62ba398c-7df4-41af-bc7c-e7dd48c75c6c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ddb03450-9dac-4427-a7df-757308066e74",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d51465-0c72-4092-8155-cad59ec80046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7597df9-18cb-4b4d-8d11-f9c6b9fdb347"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af285791-3460-4408-bc14-3d0398e89ece",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9e72a9e7-95fb-4a95-be2a-81c22791dc0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ea20e0-5c23-45ac-ba4e-6021a19a47ea",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "965e3722-92ee-4873-a5be-79851eb24f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a34478b7-7b84-43c4-a9e7-bb2409ee64cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d675f217-a81f-46d9-912a-2ab9de6b60d1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "218c3ff6-d439-48ad-9314-ef25d95f51b2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "116495b0-daf3-40c6-9251-8928e952ad7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "54bbd4f2-fca4-449e-b828-80c8872864bf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "40d19f98-688b-4832-b321-e2a090e5fcf1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "032b7bfc-6455-4314-b5b3-824eaa189f1a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "81dc7dd6-d854-4e47-a3b7-e687d7736f06",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cca5445f-f234-4dc5-9537-8f4b32e21efe"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f7492e05-a71f-4e8c-b747-f66a7e5e66a7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "fadb50d1-418f-447f-9ac6-545e07815049"
                }
              }
            ]
          },
          {
            "id": "07c05115-fd81-43cb-b329-027daedb13e5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fed2d668-f525-4301-8c99-52b9a85c70c3",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "00c58346-469d-4935-b2e0-ea0b4ce18adb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "75569baf-2358-4e4e-86bf-6e9e90bd1ef6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2250a4c8-ddf0-4935-879c-d608539fcb9c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "65debd91-79a8-4dd2-a7bd-4d526d229736"
                    }
                  }
                ]
              },
              {
                "id": "84d4e39c-12cc-4220-966a-f4ff4a5dbd42",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "02b4b396-ee43-4fab-84ca-e8849f4800cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "58e70794-c187-4fb3-a129-9e8d69f22274"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a5d907c-1acb-405f-8900-b9063f90ff29",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "34aabae5-6037-4c35-b3d6-cb14f20a46ef"
                    }
                  }
                ]
              },
              {
                "id": "e7f0675c-f7ea-4dfb-88b6-1a04b9ddb2b2",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bcde694-8cd6-44de-bdec-ae3db01c4928",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "84386ad4-402a-4d5a-91b5-4cd940db4bb0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c757312a-0b4b-42b7-8cf7-25c430cdad30",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1b55a57b-c260-4b31-a162-910aa26b2fbb"
                    }
                  }
                ]
              },
              {
                "id": "454253dd-48a5-42db-958a-2bcc15698028",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7b1eb5ef-3892-47e6-bb04-8d52a2f2b613",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8a7bfb38-ee50-41fe-9985-de13a6e6eff1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9487463a-23b6-44d5-832e-7f9a6b564d52",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ee39d5dd-ea74-4638-ad2a-8789b77040bd"
                    }
                  }
                ]
              },
              {
                "id": "d8bd6e1e-7812-44bf-aefe-0dc4e0c8429f",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "289f3a14-53af-4a2a-9c1f-570d4ef4f015",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f6a1de4b-f2df-4586-aa01-c8d555abf044"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "998231f6-056d-4386-b6be-f90fb948b8e6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d60d1e30-32ec-4453-86b1-45b88aec18f3"
                    }
                  }
                ]
              },
              {
                "id": "034509b0-b3c3-4b1f-98ab-6c0ef69baff3",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "087e7706-87b0-4c50-80ab-93c734b01254",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7fe4b437-8bf4-44e0-856b-abea110eafd0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04693c7d-2e59-4ce2-b417-36b1f6af02ab",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fe7df433-2274-4114-80d9-fcc236aa714c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "768d7059-98d2-40a9-b9de-29efead74f07",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "915f6236-2f49-41bc-93b5-56664ab4242a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b13595f5-96bd-4255-a036-c0446cb55b4d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1600943b-2f1f-4bd0-876d-453b3c1531c4"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd19fc9c-6a7e-4890-94b1-e48c362e24db",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "b51bbc2c-0775-4886-b739-7d41898a79b7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "42459517-a346-43e5-8c8b-f8b7dfe909a8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b4604d4b-4254-4088-9a78-e52aa0691c5f"
            }
          }
        ]
      },
      {
        "id": "6cc28eaf-acd0-403c-9208-0f10bfe9c1dd",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9c5d55f6-9dac-45f9-9169-43daecee8460",
            "name": "Negative Testing",
            "item": [
              {
                "id": "96caca9b-eb8d-4ef3-9f9a-7b73332f4f36",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "59eaddd0-8ba7-4bc3-be18-b959ade14364",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59419ed-623d-4509-902e-c6631ebf81a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c06ebf8-51ad-416e-923d-3bba2b9db799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d89e195-14a2-4573-9e1d-3825ac89c854",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "216aba2e-e0b3-4d07-945c-5e3ae5397e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888e8bc2-ade9-4ed4-9ce5-59f4c6ff7fbb",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7146bfc0-55c2-4fd9-9ae0-ac1e2465d53c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "627c972c-0ab9-4fc9-9cf7-357a741452ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7efcb413-6b02-4749-86a8-cd95e6c773d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "47086b28-9d9f-4650-8611-89080566c578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f503e02-7e0b-429d-930c-8ab63851cee8",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c1191d-e6ce-48e9-a308-2c11b6ccc974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c40ffaa-1f6a-4eb8-97ff-6bcce430fca3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae51d3fe-0285-4f79-9a3c-29714883bd9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1dbac702-1996-41be-ac9b-ff3e3c48d39a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05acf07-9718-4767-9b65-4f71e51f086d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df05332-2def-465b-9359-d81e896d17dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bda6634-dfb7-499c-97fa-5023c2ded80f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d9ae4b-cdfc-4b14-ac5c-e4c0e810191e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "722646c9-badc-49f2-a178-ba663eab050b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "027d29d8-c26a-49e2-9adc-5e4f4dbcc97c",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b17a65-3c99-4d89-9acd-66f1143b1871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27932980-0345-4be4-9f5e-fb45868d9e97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d1177a2-17e1-4af4-9c19-fc212dddf446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12c7840d-c362-4570-b0d7-aa8d06c4007d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7c376d-99a1-478a-939e-f7a6c44235ef",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04e323c0-7a3a-41af-9e39-09220f3780e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d6d0120-e941-4cde-9958-05e49fa385ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b5f3df-d64e-4db5-8ee2-d2091e87a392",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ede9ca26-ac38-422c-9d6a-2f6479896176"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40ab87d1-aad8-4717-9e54-a25542748202",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d91a4b55-0108-426e-8056-f5a5133a9949",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c8b9415-f1d8-4197-8dd8-37534dfed3b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90cd06f5-a3ab-47a5-a17f-64d803532742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "84212bb6-761c-4a62-9552-7d1c6d55367f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c5547f8-53f2-4463-b1c6-fb5bc7cf0f80",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b923a0ed-d962-4a0e-8c5a-8d91876e7203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32c5af14-122b-4040-a82b-a9a666819794"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7da28c1-b12d-47a8-84dd-eb69022bbe76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0449fe44-1659-4a2a-ab72-15a2066662a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f0a51d-ee64-46bc-8693-185e14de1893",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e587a9ec-7992-47a5-b655-6d3cccdc7ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe9c3b0c-a881-408f-bd8b-f928df702ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "645cd59c-e0fb-40f8-ad41-f2b47f845ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d4eae3d6-2256-43d2-8653-3cbdc9dc2ce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "566900c4-4c73-446f-acef-7429448dbe2c",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12a51b4-4453-4f7f-962c-0881767e3642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0430edeb-d74f-43a5-9024-ef4dfddb4a55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08acce7d-9abc-41ce-b338-d672b080b2ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c263a62-f18d-4efe-83fc-b903d04fb9d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4effed55-f33b-47f3-9253-e90248aa0c76",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46c43ab9-a4f2-4995-bd31-b35514df0996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4aab54f-6930-4fea-aabd-122da5e63483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6b0917-7ea2-4d6c-8fa1-dd0d8426af95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "0c5f5a42-97e9-4c70-b177-69f8876b4558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1c9f0d3-2735-45f5-8501-d4a0b5583d95",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb17248d-e697-49a6-8de4-ae4c3178fe0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6db8a47-4554-4e21-9b46-784b21cc8b78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba0f551-6c4a-40c7-b841-d41e64a2af48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "590152e1-4f64-4bbe-a634-9af1d70f8b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3974b98a-c647-4edf-9942-c10ee4ef6726",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc1e2a7-6455-4d56-9e4b-03bf328b6943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e283e82e-8a66-4bcc-b12d-9426f7503389"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5773eb4-e430-4e4b-b431-b34ce5a06848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "69a67054-f87a-476c-b0b0-adcb6f8ea0e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ff33ad5-e004-4b8e-8b62-246ffa1d6bba",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8675dc4c-5bdc-431e-bc35-d1f5437b7ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5688e34-2756-48e2-ac2b-b8fc80d66f88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f71ad70b-74b0-4ad2-a529-4216be41c0a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "82c3b0b9-c75a-4a4e-9570-7c6c24fb335e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccf78aa9-24b8-4004-84f5-e3632ab76b6a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be37aa59-34ce-4011-af98-e5a17819ae62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d858ece2-f9f9-4956-8873-d1db4fdd48dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c56ffe-0972-4308-9ac3-d5781ca5ab58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2368924-dc6e-45b0-be3f-e8d50ff240a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be4204b-fcd4-40d8-ab34-6294fd565236",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e38b320-4103-4de6-b082-bbadda65b9da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d88da7bd-5de0-4ad6-885d-72de2b8a06b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ba25a1-2932-459c-b30d-4b7a7de5aece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "1fe25388-c827-4538-ab6b-5ee3459764be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07ad9d8-d841-47aa-a6b6-d2ff6de2da84",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "860e2b51-6495-4097-8094-968b64d8d3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "075d5f26-85d5-47a2-8eab-7ac364e50c69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c212564-7acf-4099-9ea9-8e09cd6042be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dd8a949-9b7e-4ad7-8e24-8138c7ff5ab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2462dd8b-e5c3-4b78-ab6e-f7674ebf833b",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0730855-5e16-4b49-97ea-7b12cfb79a8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "909a393a-d84b-4b78-b642-721f6ce79740"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07f39ccb-d8bc-48fb-b919-c72f1425a4c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ed13177-c4d1-4d7b-b365-35ffefeba9ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1daa19f0-9d1f-4d47-b3aa-1570ba93c990",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4f95e3-554d-463c-b12c-985679467e5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a4fddb8-4556-4ca9-803c-6864b19e7315"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbcaa546-a8bf-4f3d-b81b-7e05faba9b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a03b2dd9-db24-4d47-854d-090ad0298c82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3ca87c-4f01-4f63-9d85-9d3401520885",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef4406a-1dd2-4658-aefd-ecf7f8dc98b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "562c3ded-6c12-47ee-9202-bc4ff7768a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a91db96-94a3-4c02-b7f8-95d160a6562f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c97cded4-e70f-4ccc-a6dc-afe45579628c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e1e076d-64a6-4425-a802-98d522b043f2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8b53ef-3c78-4e1e-89f8-6f1ef19c59df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fdfde89-0f23-4be1-b29b-0b582dc95e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f973a6b-6ddf-48f0-9902-7e29d83d22b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7b977ea4-a540-4a79-b9ac-b3399d6d738b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0edb0faa-7fed-483b-8a94-db13c70b0417",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6edfa27d-2d6d-455f-9c4d-4115b249f092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a670539-1cf0-46ef-833d-e9c560491818"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e547ece-9cc7-4a71-8726-76db08d67e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "169a3dcf-f8fe-4b02-804d-b00396acb086"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a2a3a3-9f86-4ab7-80a3-b1cf59d083e5",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c16352dd-16ff-478e-ba75-6aec14aadc0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f159fec-6369-45b1-abd3-9a917586e1d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2c4ff1-58e5-4369-889e-9dbf3c46bd1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77e18daf-df01-45e4-b137-832083cf0579"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ba16544-b4c9-4039-884f-9d8e7acf3e8e",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41203ed3-1e51-43fc-8de5-0d7c29e72182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fab16be7-8cda-42bc-93fb-57d815d6e951"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f62fabc-54a8-477d-a902-173e9267be9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38b02a0d-352c-4733-ab3e-6d3cd24b0fdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f695f7a8-d465-4365-af90-252ee82173ea",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a64b229-caf5-45cf-af5c-a1b439aec0c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b554cdf4-c151-41ab-94a0-8d87cb7874e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0656e9b-d878-4a0e-9a5f-6e5893d7889a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5dccc31-b261-4e84-81ce-6f338cc9f6be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54f8be42-d178-4476-b0cc-d451b9038085",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86a71fb1-bee1-43d7-98c2-5b1bacdde321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "486252bc-bc17-4b9b-8c5e-0ba8a63b9be2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8bdfe9-653a-48f3-bb3a-3983eb5365c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ea2cca5-521c-45c2-aebf-0f71789e66aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ce692e-3b86-49c2-b842-f6c8655c455b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98acd1f0-1759-4b02-a458-8dfcf850ff92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "460aa06d-0708-44a7-8fc1-95ff807707b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db34aed-d502-4194-8666-8d75a1a10f61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79db0fb2-02cb-4fb0-aac9-495f0738ee16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b798cea6-71f3-427e-a5f1-b9d6bc51c846",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b839f5-435d-4605-afc8-cff7d4cc7fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb7263a0-7075-4b74-a029-b3156e245a04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135a56d7-85be-49a2-a6ab-07414c552b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e0bba1b-5847-4ee9-9bac-5d12e1f49d42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcb1da88-db8e-41a9-862b-7c2546690e93",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ca22ac-1684-4e2f-b2f4-6718f3849e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e8b128f-a482-4fe0-9928-cc7ae2d835cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe72092-6864-451b-8bde-f02bdbf3357c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4cb2973-82c0-499f-aee3-dcb699b83947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdc3adb2-616a-4a95-b802-51bcb4e3171e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d10991a-6f2a-4e13-a30d-bcd956017208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cbf2150-e75b-410d-b8dc-b98678040357"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4364da-e3ae-494c-b74d-8e3b7d2cec70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93c7e2cb-37e8-4103-a305-4b6a89dd301b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b360d96-08a6-4604-89be-5edeb55571af",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc632c07-d2bf-45f6-93d0-831ddbca7b9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9918807-4531-448d-9eb4-6a2b79784ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76113af5-2583-491e-af5c-6232f8970eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dacf7a65-5664-4641-b95f-e17d095a208a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39b3e178-780f-4054-8d97-75b7e6242644",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ec6c1e-ef20-4a9a-8163-3df8ab4d1a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5a803bc-4254-425a-b487-85c16b4d31ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269c8eed-9c10-4c80-bd95-92062b1a38a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c351e87-d153-4d77-9971-2e9691051f0d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d36fef05-a247-4c79-9dab-908d018ef20c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "91688aa5-7344-4572-a8a9-03d327cc5d3e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8dd5de5-6a17-4a5d-b4b0-674c56552085",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "aa2355ed-b55a-40e9-98de-63dd90546a11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "242bb731-d6f4-4a39-92f1-5e7bba6b1b6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e8791669-d01e-4090-8e94-1e2e22a1be0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71b7456b-9bbb-4cb8-bac2-56d48c68545d",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb6cbf82-da42-479e-a6d6-9c6a688fb39c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "7223b324-b93a-450a-8215-192352896732"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb468a78-1e01-41f4-bd52-2ee35f392864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14062803-4683-4152-8b45-fda9667c69a6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "74e45c88-72ff-48fa-8018-723becf3c95e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e259649-bec0-4201-9d6c-29fbfa197f86"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e2c68e8-b936-4e27-add6-c3709f51f2d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d72bd84b-db00-4f3c-b1ce-1cbe25a8194e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bda00c5f-3e97-4208-8ec5-c96ab1fde3a9",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3676b307-c0be-4eee-ba1e-269a7c981d98"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0fe899e4-1ebe-4d06-8e8b-c6e521ff5176",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7de1fe5e-9a94-4c68-a15f-ccf037403c1c"
            }
          }
        ]
      },
      {
        "id": "2bf34333-ea4b-442a-8a8b-21692992b5f4",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "0f85f6c9-1188-4435-9267-916b07e64d64",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f92b921c-93c6-42bb-856c-6cf565ddbc14",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ee052211-24fd-4162-be2b-59c1a139a30f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f91a0452-0b0f-4468-9705-5530a5a8b4a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f90be2d0-ccb8-44db-8e09-af329807546c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c9d0ec3-690e-41ea-bc81-475d78f34fb0",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "350b9a13-885c-4890-acce-9eb2fa6282b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e10e264-6458-4942-9e17-211e24bd22e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d1e73b2-c48a-44f1-a753-bfab326dbf22",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccfc4177-4258-43fb-aeaa-eac0cf84cef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47fcc061-7b66-4608-a81b-8b2baee45784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a4df24-c177-4197-92ca-91dcd59fa200",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd51ebe-d79d-4c03-9cdf-8b0555fbbf4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2797f5c-c7de-4720-9815-5378338c5673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3162d8bf-5a31-4e2b-a1bf-f2b5a6e84880",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "897c6fd8-483e-401f-9151-59041727007d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07a4240d-507b-44b3-bdd4-ba4706a1dd1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b30b2b6e-8a1e-4d88-9620-11a2ba66aa2b",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e7de77e-0b12-408a-af7d-e96c6eafaa61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e6f0306-abcd-4423-83e7-ded75b8080a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c1e31f-4287-4a1d-9bff-5485d940914b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb0bcf6-2e92-4dfe-a5c5-9e2f5bca13f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f43fd873-dee9-491e-b092-39698e477141"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "821c4d52-f815-4182-b3fc-2b42cd791795",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d0fde1d-149d-45a8-9681-8d86e168cafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdc83efe-51eb-4925-9746-c8e80ade82a3",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509fc816-39a7-4a3d-85df-259fbe41feeb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "689fec67-6028-4f5e-b2a2-1827ace56591"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb81ba10-c444-4bb9-bfb4-b7e7b9725333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd0863a1-5eee-418b-a236-f9b4c23cf53b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b77724-7bc8-46d7-b639-6db3e49158de",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2023e55-ef28-4238-88dc-f4d3cf624f2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c00d1da-9dd1-4145-a361-f86f4a95ec11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "761e5b2d-9ec4-4f70-a42c-145a67a9e22c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0ea1323-c348-4baa-9409-63b9e1c645c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c31b3c02-1c82-4628-8bcd-56f1b3b3209f",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9468a8a0-15d2-486f-ab02-315de46eb0b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22aa2f66-cd26-4e7c-8770-19d68448b1bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4f7dbc5-34e1-4811-8b03-c4bf82f02049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f43ccfb-4b00-4216-bf03-8a45f5de8901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c3b4f3-42cc-44b8-820f-3ba39de559bd",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a667b847-a8d0-484e-8000-74f64e7353de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23a22d3d-34f2-4e1b-8996-36830f805959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6a4885-7535-44bd-b865-35049a607753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b98f8e6-6a28-49c4-813a-4227021df9d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b93d57c5-6e57-4e8d-b1b8-9e643cb9722f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "993b3fe1-de62-4d1c-9fde-0a1f8766163a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46579415-2fc2-4807-956b-91b954b8d4a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6348549f-efb3-40e4-ae03-a43d5a949bdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6178e15e-0cd9-4240-91fd-e70e542d9879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b8397b9-2f00-4813-ad95-9e3ddfb1677b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4e916ef-a210-459f-ac20-0532ab84378d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffce383f-898d-49b9-9775-99154284c62c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa5a11b-aafa-4095-8422-b51d2a8d3e5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fea68da-59bc-4bd5-b1ab-a93677aeb40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7662cf7e-3256-4d2a-852f-120952fdde62",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bba3133-3faf-4aa7-afd6-ebdc7d8d3b2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3d96809-3062-4b25-b208-3b15a7efd586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4042adc-e4f3-4951-9ef3-a656bb5aaec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11629cf6-b1f2-4229-a115-27d6ca7891ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7517a55-8ec8-47db-b994-e62d7db7c9ad",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc2e234-9d6e-4113-858c-4f64771fa894",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66ef1252-c8d6-47a8-90f2-be4876958b29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f434b97-1060-4f8d-92ac-1aeadf1e5fab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "750ab609-9cbb-4ef4-b8f9-c8ec0fdce9cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd4ee853-c033-4437-a3d8-21b1a5278dfe",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b32833e7-1649-492c-b5fc-8b4ee1f3164a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "382e6f3b-f56b-4dd4-873f-d538a464daf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdc9d0b9-cb0f-4f9a-adec-04406df03d3a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f967463-a95f-424e-b534-7c96b82de7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7763958-35f7-47dd-b529-4d975173ee42",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72495dd2-d806-4087-85e9-94a265a1c920",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "223a3147-825c-4258-bb76-d99ab80a6a2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3958fdb2-d07f-4dc0-93e6-dbe0b3e9c224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb23480-8561-4329-98dc-4626a3cfb472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3c14aa-cd44-4825-91ed-5297ba5f6fd3",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0ae4ee9-b350-4bdf-84a5-818e96bccd13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04df936c-996a-4beb-be60-1677d24b184d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09f36d7-d4ad-49e1-8bd2-dfb23c968c35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d9bf253-fd5e-4162-a4cb-15d665346f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c78f9402-e92b-48c8-a0c6-b2f5687c9fca",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd0c313-71dd-44fa-97b4-e1ac79350295",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f74fcf0d-6211-4fa2-b249-dab2db9abc7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a1b303-b210-45bc-a455-08393df513ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db15cbeb-01bf-4132-8067-e060503adeb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0035f663-ef09-4f1d-8f89-a4fc5d551878",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93063e54-ccab-473d-9d9f-7d76b314e54d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b99f0e3a-1d26-4070-8547-90896a3b3e2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c3cb252-e959-44ad-b4e1-3ad397c1f037",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4080e1e-25bd-4b4b-aa88-10c0efdbcbe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36bfaaf6-2e50-471a-b8d0-022df6f85532",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8d67206-085d-4158-a189-b68c2b0ea509",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26569f41-42de-4d13-be4f-e71e403db599"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3bc6200-c871-432c-81b4-fe3871eb0592",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa30226-94e1-483d-9c77-c829053f4069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad921aff-13e9-43da-afb6-33891c5a6ed0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8fa5ea7-aed8-408b-8363-c1c5b79e7006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4676cc8-8082-4e4b-ae47-f2ea82bc0b7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "008e1c95-3903-43d5-becf-a1bbe44a8a5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ac58183-df49-4095-8388-48d5d5d81264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "601d12f9-e9a3-4300-8361-8c2289c9ea69",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d9784db-0c04-448d-ba7f-ab38ebadf581",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8916c291-57a8-4b2e-accd-604e8f4397b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7bdeef-120a-42ce-8bfe-437c2da8a720",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c858c8f9-21bf-455e-90ed-c225deb6da88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9cb021-8273-4438-8b3a-6f41eaca1087",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7531d2-2cd2-4009-a531-acf2e9ae5258",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cf752b8-9619-4d10-b3f4-9f356331a1d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2afd052-eb9a-46ba-8f98-3f678016651f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "169f9045-742a-4bbd-88a2-ef5ff658382b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab26f6c-b402-467f-97f4-04b74d879607",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0be557e8-d1b1-41e3-9b27-4729aa15568f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dd594a7d-c6fd-404d-9666-c653110fd9cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0b1b42-f394-48ed-8a04-160d953d1830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53ad8edc-f913-4af6-8c24-25f3cb15bd8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f0f663a-3317-4416-87d2-acdee4f528a8",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1975d1bb-c3de-4f48-bb1f-dac80d55fa87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea7f0796-7578-4143-8cc8-e38f96309a35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2abbfdc2-3cd2-4bac-9d92-478d76d29095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3aa7bd0-8068-430f-ba99-eebb6156c34f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "188d10d9-5ee8-40c1-a33f-9abb7fffa563",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e552c79c-db66-4c90-8d5d-ffedc346fd44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a0fb117-b8dc-446d-85dc-b64219f775c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6086cd-b5da-4d3c-ab1b-92575b0c1cb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78dfb9cd-536a-4d84-b784-dab47f934b48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a6e5a4-967f-453c-b05c-6870d0ef6cc7",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015e09fd-586c-410e-a47e-fd00e100cf94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ea5f99b-ffc7-4013-8ed2-46843d39a932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "363a7f6d-43f9-460b-b233-205469196aa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da131413-3b0e-4f6a-8d6c-3a69e17d31bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da71680e-114b-4805-af68-3320f9cd24d8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a81bd86-24c8-44d9-9f25-d9a2d533d0d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "750c8574-b478-4a54-b779-656de46d3845"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1db67e26-1534-4310-905b-ccd7a7159d7f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "561677f3-8680-4376-aa58-58786bf3b895"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4edefa96-24cb-4b5a-a359-ac7fefec9535",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c12ff720-6f3a-4c64-9676-a851c4e3cc6c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbd62382-22d6-4308-975e-f7c117128c3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5351e6-877b-4d90-bca1-e46021b8e0bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "197e83db-1c20-433a-bec0-9b3360a58d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf8e8e5a-350e-45c9-a1f2-3fd4850cb9c6",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd36c500-ad37-4587-9682-873f0c9a66a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0da565c-6f20-40b3-b8d4-2e5db804b474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "194ee0a5-a662-47dd-89ca-03cbd0febc7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ade3fb35-5bea-426a-9ee8-342325e289d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4e56bea-de95-472d-a4bf-ca6c9796b8e7",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5224d96b-e8e6-4907-ba8b-75ccab753d79",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da1b7490-d5e6-4b10-b691-0d67e9705d1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86e64bdd-927d-4d81-8c88-ca04f191c570",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3aae986-faa3-4cec-b6ec-d74f10e84753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0230d5-98a9-4f49-afb0-dfaed5bb7247",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34bae283-0ee8-4f66-8f07-47992997a952",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ca040f3-8da4-4221-871f-dcb4ff1e440f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf6c7c3-8a32-4fde-8429-594a2e7c3019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14a41926-1c59-4c2e-acde-814acd158ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8539b26-feba-4285-9de7-530a293702bd",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "981edb84-cd60-4eb3-83b5-107c1e63677f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbb45b99-f273-445d-828e-2d740f6304c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d2e67a-b52f-4ddd-8dac-784554c6b012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0330c96d-a835-4360-8ae6-8ada2c422e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f343dca-a7bb-4285-bb42-d0c0e52f4827",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676670f9-2b2c-4466-bda7-9df6cbc51c1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "338dceea-5a57-4d09-b664-75d3d5c4185e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3d2727-cb57-4526-88a2-8d0b08b5a7bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51615be2-fcfa-4d58-8d1e-5b286aac3960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f612d4f-c3cf-452d-aa34-816ec00a60c8",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29976d60-e744-4e7a-b9b3-e679f8552759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6828c73-7f10-4b05-a099-2f716096c30c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "525d951b-80e7-40df-b17d-3598dc1818ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df5296fe-d85c-40be-a98a-b1754c2d639f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73ddedd8-0be2-4c10-b2d5-3e9f1a005b43",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50dcda08-0c80-435c-b064-df3ecd3f5587",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a038c97a-e95d-4abc-a5e9-6aea4cdc5e82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fef10682-62be-4ead-ab83-66457ef92808",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04bf1321-0775-4778-9499-071f619abe44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76bcb6a8-e579-4f47-89c4-5c0db94c0fe4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b410ed28-29c8-46fa-8e97-00159b238c67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe94ad98-8294-49ab-a45f-d71e313239fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aafc40eb-d259-40ca-96c5-309268050fc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "767b4dc2-6ba6-4fd9-9d1a-0f602bb9f94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe27055-8ccc-4dfd-aa24-ea8a3410dcbf",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "933d8e8d-f108-4c06-9c9d-1a222cfefda0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f622fe72-b003-4ddc-9dc1-d927b4b6c742"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ed44dd-252e-46e5-9f46-8b91808aabc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1586366-e13e-4b00-9b88-ae1a43b28011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac0aee5d-d3be-4760-a2fa-de78be25d636",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27271eb0-6979-4d5e-91a9-ffe05bff8c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2528397e-0522-4345-bd8e-091bee669190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f915ba-48ec-4e92-aafc-dc5c67f347ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a4ffb8c-58ca-4a9b-9717-117001d84c0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a07c7b2-9f0c-43e8-9e88-1fbde5748a3c",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13c83e67-02e9-4cec-b5ab-2589cd781b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed3f50fd-e495-43ac-a900-b7712ef659e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13d35eec-7fa3-4f5b-869b-d5862b3dd0fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "effb4be2-fae7-4056-9fba-d873523f3b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd0df8bb-9735-40fb-89c9-387955e1c64e",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95cbc10c-8d08-4f3b-b707-bb74576e835b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38457379-46ab-47c8-ad44-60c28672515f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aa3bbfa-0377-4933-bfdb-a47074f26c68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ce1734c-6a31-45c5-b4d2-a4d8958b6c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83edb2d-880b-4f40-90f1-5b1b0e20b15c",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59880349-3ee2-4963-b7c6-278cc6cd8859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a80815d9-1291-4669-8411-e6b71e13e083"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db065e1b-00a8-40d5-b9e4-81f612131cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b21665b-9e11-4810-9de9-5eacbd034877"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0764e84f-03ac-4ab3-a728-d83774de4861",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77f5760a-15b0-4970-a473-b7da6cf97ebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cfe0c6f8-5fc7-45f9-945c-674bde77ad79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd27c4d-96f3-4883-95cc-5733d168c299",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a69da23e-5e69-4d10-b717-c478f0239b99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f539587d-8b3c-4c00-8688-ba578d8ed537",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cac92ab-715a-4d5d-acd6-f2648037ec68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8384a3f7-23a7-4a58-9294-37770635c745"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aabdc0cb-3988-4c6d-8068-4240eb6d808c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82b2bd48-5a8b-4d47-afbd-39a414c0a429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ba435c-66dd-4960-b728-aaaeeba857fb",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf4f3c4-559b-4e21-8f65-0a5801ea4fc2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c86d5611-e2b1-4c68-ab18-596e5a288089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "add56da6-87ba-40d5-868f-8a80d67d6f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1f12ba8-2b31-48d3-869d-58142207747d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34921e92-3b4c-42e2-ac89-b7158bb87964",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668d6011-a760-47b8-b59f-efc4831b9486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f733017b-b5a3-4409-8a2b-953155e33779"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f08af0-dec9-432a-937a-8b381f0129b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8089486-efdb-47e1-aba5-8341f76b2a50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61c67d27-11f6-4cf7-beed-29f67d44f608",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93d65aac-88bb-4499-99a5-d753326cc8c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e54c137d-a566-4279-99b9-d0355ff28673"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4510c8bf-c1c2-426f-8ac7-ea70a7531680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38c6b380-b0f2-42b9-ad96-7b8be319771c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f3c3431-bcd4-4613-9bd9-9166ca34191e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f374ff2-e158-4d82-8b16-8d9458eeffab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "686e7354-9a15-456b-9785-3f2751d854ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ef09893-4651-4092-a7c2-1573c4c17739",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e23e006f-1a9c-44cd-8360-24beab387c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b331550-8433-4cc8-913b-f4f0737d6754",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9728b7c8-b724-4ad2-be69-fa3dd2230b71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cf4cb3c-3c23-46b1-9556-f19e54c43859"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb10898c-e4a5-4691-a0c2-fc521d40a864",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcb0dd26-b5f5-4a1b-836b-79f1d35bcb2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "044dc7fb-3283-478d-b8ae-b6e3ce47fe7c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "420779ca-a87d-4642-9a59-11cddad1c519",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20f624f6-211e-4080-adb6-2408e83ae8a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d43ec749-c972-455b-a1f8-decfcc043a90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40423c80-16bf-4547-aa0d-0a20baa28715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a240c39-9f4c-484e-8a94-c0d23da5a44e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a7eb475-a5be-48d4-8bc5-8c0509b01439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63d08da9-fc7a-4f71-8d3b-c618c92cf489"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0d1b9b-a851-4b2f-b286-6ab4eb88c0b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe13ed45-5d2c-452d-bc0f-7ff9ce59cdd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42de58b6-bb00-46fa-b99b-0a907ca164ef",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "705c43dd-6db5-4300-9c07-975dcfe07cac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a29edb14-2427-45ff-932b-f7709513a840"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9857122-9d32-401d-a91f-688da4aacd97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8abeaac2-6685-45f5-8598-9772fdff4c18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "980cc213-7a92-4dc5-a5d5-3fd45a1cfc66",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b577e7fc-7d1a-4191-8c7f-5b480c176c86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80eeeb7d-a3fd-4c63-bf99-19f2db1a699a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba3deafe-e52c-433f-b5d3-e796924b8aac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20314a90-03bc-4d1d-a335-e8d3fbecfb34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "382e816f-6078-4c38-88b1-48efdff7cdf4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8bb45f3-5921-49aa-942f-ee8f8ab55c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1ebc50a-462c-480c-8b54-88b27b17ae05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da29145e-f7ea-4249-ba08-8450a6ff2a3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df2cb1e-3a10-473f-a0cf-6ce08e4dbc4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8179d4-75a4-4c49-a654-3650bb08bff8",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6849e8c7-f0a6-4b41-9093-a29de8ef7843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52d7cb5b-9e5d-463b-a3ff-8174d90e00f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "379e10fd-5f7b-486c-a108-82810ae07627",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70fd2c9f-dca1-4ff4-9962-56b73af905f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d50b2e-3a12-483a-aa92-3128949612de",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba76e7d2-ec3b-4da7-8336-d522607f3c10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ea3879d-98cd-4a30-81c5-c34c829d4541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3bade8-331a-4aec-a008-45714f44cce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de65470f-51de-4a98-bcf4-6b8a617f93b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "007e7b4c-c499-4678-8aa9-e0380b2573b7",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "851938e9-68f7-452f-83c0-55130d425ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f1dcbc3-9a68-41b2-9d32-4e61c31c2a79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "616d457a-bdce-4c94-a3e1-8e6363f42ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ef3d41d-d245-49a6-a847-f03b0e0998ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f372790-4efd-4d3e-8742-b3445d12d3c2",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9250fa52-63a0-431e-888a-83dbd31b1b4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4319b62f-04de-4e80-8e7f-ce4f95331304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c5c24a2-7c3b-4633-9a12-00f2c74a907e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51b2185d-d871-485d-a2f3-51d57243c724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0ab1be-33d2-4169-80a9-e6709d9e2ae6",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b3097b3-a7ae-46c7-a2ef-524495430789",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29211884-29a9-482f-87d0-37e5ae73b890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa4aa8b2-b2bc-4835-b08d-67074aff3beb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddfefa2b-b360-4949-80c4-295873036eba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4437c317-d747-41dd-9b7b-731e03574190",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c86ad1c-d86b-434f-b507-2da59ce4faa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d1cac7-35ec-46a2-b974-6fd562d24c43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2babcc0a-263c-4160-9e34-90cbdc84aeb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "385f7a0e-d3c4-4362-b735-09eab2b47a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa34d159-81d8-4438-b1c3-389b73b9ce5b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29230071-9d19-4306-9fe2-a5686a8fadf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "235e8178-1e42-4d0c-9a68-7f908ed209c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a62a23-b021-4401-8992-98b1e4b0096a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c9793b2-3e0f-4e56-b187-5b388dcc7b2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "556ec9a4-10ac-4f04-a635-58f56d22c423",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65cd02df-e617-4187-95d8-a61bb0eafde3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecf5b1d1-b860-447b-be09-56b6dec4a23b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75488db3-081b-486a-8330-2dd4deb0b05f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b36783b-9e36-40b3-88de-25856ce18f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbb3da70-211b-44d5-89b2-1f8650d8db5d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "608eef08-61d1-48d7-b31e-c7a5341b6c89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "476cca6b-8dc7-4a28-b529-5d06fb4f42d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4df570e2-d26e-4933-8185-4851a8f0255a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ceedf42-fa24-4b65-913b-8ac4c840cc75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3fa2a67-8e80-4cda-86a0-1ec357036125",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b33d4e4-f084-4197-8708-4d3196e1c8cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebde5997-b355-41a6-9e05-927e1bc5c18b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d022ab0-5a66-4630-8379-0f11b3509a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccc0eb8e-5deb-4be9-9202-1623a4ef9472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d88e10a-9b35-4ac8-a23a-69f32b6bb17a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4479a9cf-12c9-4964-b801-af34c56d54a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c797c6e-7465-4e9f-b92e-98df78f73105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa3889b-dbce-43d5-a41b-7cde82f38066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01558ab7-b833-4700-a4db-e7f0a7b14152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0852c38f-77c1-4949-b389-7e27c8bfd217",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b261ff-f77b-4f2d-a31c-2b5f1789ba1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cf1dafe-604f-4cf2-9b5e-cf79f6373ddb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bd2bb07-cc00-423b-8063-11cbba368b40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d770617a-8821-460e-8b30-3ac43969ba78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e46b7b1-bd36-45ec-859e-f1e87caf03df",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99d11b83-0aaa-47e1-860a-cd2bdcc0fa28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bcebb2a5-eb6c-433d-b07a-0323a2f93429"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2565644c-2b4f-42da-ab10-de19717b87df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51e9d953-cbc0-4e44-87ad-53737f0abf63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e417380c-667a-4f67-9639-1b0d89dcdeb5",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd9272a5-4411-418c-a68d-68f879e60b68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54d64466-1e03-4def-bcf0-80f1d1bf2e01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca218391-56db-48cb-ac69-f4647c852205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f2e40e2-55ac-4b00-bec7-21892c11c702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14dcf6d1-a575-4c9c-8e82-cd191033918e",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c9ed612-521b-4b30-904c-a80eea4e2953",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9267ce56-5f64-4764-9d56-44a3877b7d00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b040811-a6cf-4d52-9cd3-71b1bc2a5afd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf2f9f28-7f7e-47ad-adf5-f4f032a7a247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9e3281-2f33-4f6b-a172-d98e7b5c3db9",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50b7abf4-6630-44ea-9a46-c0dea24a8626",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52ce6eb6-0c1a-4ac2-be07-4780343cfdae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5994e2-7b57-4396-bfee-2bb896a05ef7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ce99c1b-cde6-4a44-b854-50abc8b46a41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b2cbbf-1e52-4fbe-9ab6-5f68a9dc4eeb",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61cc1e02-eac8-41c8-a585-a7f467878ea1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "824d16ed-4b6c-4c11-8ff1-0a3f3aca510e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7475f309-d073-414f-91b6-a3d156837d91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c15c3359-e19d-4966-99f8-23e7c8b7db36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27af20c2-ae22-4ac7-9ffd-0addaa375cb3",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2f19de-e695-4720-81af-19bce81eb533",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70424f8f-e2ab-421f-9798-08f82ac3c9a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e5897b6-93cf-4cb9-9613-4e3cd3ff8f82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e9d9e6d-56e8-4e12-b5bd-bbb45e388d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5e7f4a-cd20-417e-9a05-ac68463a71e5",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf167b9c-936e-4bdb-b064-eecd7357c6b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a29683c7-1838-40dc-b45f-a5b377f683d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2309760a-9494-4b88-964e-a0f18dde142d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d660735-b437-4aef-873b-bf3d25ca20a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52441944-53aa-438e-9b25-39258dbcc12a",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db671477-26ad-42c4-891f-9e031573fd7b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "981b6188-2ee0-4637-a357-20dd2fa3fd1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5de18842-db67-4c79-9728-33017eb2404f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24db0940-160e-4e00-a7a7-05364d376994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113ebbff-ba73-49fc-86d3-aa1e02001ce6",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8526f8e8-0f9a-46c7-bbdf-8be4893feac4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5cbaf8e2-90e9-49a9-bf16-3e21ff6aba72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6c1e880-083b-4939-ae1d-9b037fe224b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac3324e-fea9-405f-9f2c-643b9c2bdd6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4ee1fb-a1f6-4285-99bb-24bc61ebb96b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50321e7d-eed6-4c4c-a6e9-5cf62d76a5c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81b1630c-8932-4421-87bf-a48206965d5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4574186-a7e4-46e4-86ed-ef37ddb53ff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e988483b-d633-481a-8546-4f74ada2af90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c6c439d-0bc2-4c10-8aaa-28458e2dd435",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa44ff8a-b03a-4f1f-877c-edaa343eb635",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e597a5c4-f787-4c0b-b797-e5ca037666d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7487fba2-0f5b-44fd-b005-53e9e802d738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6638b51a-a82c-4869-a50d-3d87a70fc988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efd24006-9687-4280-be6f-255427150135",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60a4acb0-0de8-49a9-8e99-9f2d850224b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7130a774-cc39-4d13-9f71-b1616b0eb268"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9539ed27-142d-4f36-90da-a17a4a692e24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2837be4-0a2e-4c9c-a1f4-d09ba7893261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e59d0e8-454f-4dec-a270-1651c23b7315",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f308e77b-da72-4aa5-b824-700b0ed5c944",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ae02ea4-fa9d-4c3c-9a3a-19d5d42d08bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f4336b-f423-4e57-b80d-d96b383bc884",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b430af8-c2c1-4a85-9847-b28277806ca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c77915-a34e-4f75-8ac3-51ba6bc7dfdc",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c3c15c7-487a-4e5c-a932-2f071413d609",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eeb60932-8a1b-4484-8975-ed1786061105"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b1d436f-9802-4f6b-9291-5489657ae615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a09ae4-e0eb-4b37-b67c-4fb0f5c717d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbd93c3-baf9-44cc-a497-ee14a9935a12",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2ef7712-2bde-4a97-b938-e316fcb90200",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c78cd939-40fb-4ae2-8a03-8bc0e1a42015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "672d161a-57bd-473b-8eb3-88bb2da22af8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaf38a28-4e4c-4d61-95c3-3f9dc72a1489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8da29dcf-b887-45e4-96c9-9e377d2e2319",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07d2e7b4-26a5-4599-be01-e967440d658a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7a1d4f30-2bd0-44ac-9b78-31dcad941df9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a9c942-ed67-4cf3-b739-28591873b945",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0e0473a-6b52-4e1c-bbed-c6ac6ad4deb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "718c8edf-0ea3-4ad8-bffd-13233706eac1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08876968-ab37-4d75-aac9-29a0eae49359",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b68502f8-a9fd-4888-bb99-c8dbbbd31686"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bb26877-76de-44f0-b771-74538a510614",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a17930f-a948-4468-a620-d70a4c15f788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3c7fe7-1fcf-4090-ae0b-c659f8ce2f51",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0fccd22-a416-42b5-9b0e-eb67c01a7ec1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98db7efd-0fb7-4e38-abad-58cf245446ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db873caf-065b-4bc6-aaf5-35bf869415a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a217480c-17aa-4f1c-ac52-1d1b79a0bcc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5648440-b5c9-41f9-b46d-15f1e62373d1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d4a052f-b3ff-4d01-b05e-4dbf275c7fb1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e564c098-d41e-4884-9de0-1e42f5525c35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb6e776-9441-4d5a-8aa2-4578d97bfa28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c0e699e-4358-4237-b7b5-b018128cdfb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de64f3b9-1ab0-4637-8590-89c0fbd047f8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c19ea3fd-b534-443d-9cc8-abdb12a0c206",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b750e53-c12c-4266-90ca-9c893fad824e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83e2743-bde1-44ce-a698-147cce0a965f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "451d6736-a031-4e7d-8ea2-f05ff3e125a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb615b4-bf51-4ae6-b0e5-73208fe78f76",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef5a87df-5a66-4859-88a0-c34498c22d0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f23a5d5-49b0-4f12-abff-259088a6f735"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a025573f-a987-42fd-9fa7-1810e3fdab96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df06d7ee-2521-455b-b2fc-20974094dd58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2495534d-9e66-4717-980c-e1e803955728",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47f25ec4-acc1-40b9-b33e-4cae28c96eca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ecef75c-1e86-48f2-96f8-032f26a59c64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "430d981c-2485-4158-a0e5-3de1dd0bf54e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91af7d88-161a-449a-9ef3-3ae1b7f58e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80641c81-bdc9-4bb6-866f-0bd2712afbd6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70c0992a-2e72-4af4-8979-9a02d967a88a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "688dfd06-27c1-4f98-9fa7-12111c2dd9d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d247a45-e05e-4d6a-9c1d-b8c5a3885344",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a111a71-9169-47ad-b83c-2b2fca02fc9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f05bd3a9-f663-4eba-9085-48914694b5d4",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60245511-b1fa-4004-bd5d-16165a5d259a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a1fee63-2e7a-453a-a220-a865488c3d7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "713abe3f-226f-4692-98b6-2a5c01fa27d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c1bc0eb-e398-4d5a-b093-a6acf98435d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ff6d2d5-bc56-4b1b-9a07-73ea7956b006",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71cadc9a-9adf-4743-bf14-7abf51bb9741",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f9db996-406e-4de6-ae28-24505bd4caef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "419042c2-b3f3-4f64-8591-1f65e8e5c25f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcee81a5-a7db-4621-8eba-718367e48f53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ec028df-07fd-4963-ae61-70c3832afe43",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a9329a-e6d9-4948-a6ec-47973ed0d7d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d827d940-ad40-4224-b9ab-0a2d6ad1d47a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cbd5ba1-ba84-4388-8bd8-983ec2d4c753",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c67ac8d-85c2-4987-a2ad-049682c24523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "208d7edf-3d67-4930-b27b-5015722713fd",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67f0808-0568-431f-8a70-3aca50bc18c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7748f9bd-faac-47b6-8949-4159a029d917"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "016e4b40-44ee-486b-8a60-df1bc6c3cf8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32cbaf6c-487c-40cc-b7ab-76e927b160be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed50fc6-6031-4788-978e-8e791f178c5b",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01ae368e-c135-4d92-b5ad-37a482f05589",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "192df595-bf86-4185-96c7-d0adecc28ffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "696e769d-6411-4622-bde9-ecc45d10fc9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "298f0c2e-20ad-444e-8040-cb5933a395c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "562df86f-105c-45da-b45b-a42313103657",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840087fa-9a73-40d9-8f6d-d75aed89a3f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b344846c-0f39-4898-85b5-1893e2fb4383"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13e35b50-8ee1-4125-b643-c06f0f49a390",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4575af5f-318d-44e6-a852-96b9e6f9622e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccd3a521-95c9-43f5-957e-bbde9c06d177",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de1057b4-833f-4769-a240-152e35a89b9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdb76d82-732c-49d9-bede-cbd9e253117f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd78cc3-a833-42c6-a84e-8d1110634117",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfb5ffaa-e0f1-4cca-84d6-7d8732d59af4"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b76e4afc-e3c7-42f8-990e-39538c971f84",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6effe81-2b85-45a3-ae55-cbd5d09527cb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2c62831e-79e9-4c5c-993c-3bba4a79ad31",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9055403b-7ab0-4e13-bb49-06782d0fa7fa"
                    }
                  }
                ]
              },
              {
                "id": "e9189edd-393c-43f8-aa2b-f93e4202fc48",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "28623d92-c27b-4aa1-baef-4b417f5d57d8",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd1a5e39-aa32-486b-845c-0dabfa6257e2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c125761e-e146-4ada-abb1-de6611880d6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94033b6e-0291-4e80-9829-f7d2d1f0a5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8bb013fc-2262-4af7-a5f1-2c51a52325c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "449a7e86-53d6-45d7-a075-bd629aceb8d8",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98af4dae-c39f-43cb-9579-e78c47f36e03",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "121e399f-a993-4803-b95f-2d39c263f2e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ae79cad-d21a-406f-8554-a6dc2d95cad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99d3979d-b177-48db-8cc5-a9d7288bf3aa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e47fe896-2458-45ed-9bd3-df05f5b77725",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e81b80c-f2da-4c2b-a134-e6ea28fb76e9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ccc47319-45f7-4a5a-a2a8-7879b0511880",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c394f0e4-a245-4d8a-a15d-171a6dbdb0b4"
                    }
                  }
                ]
              },
              {
                "id": "a3c184de-bc3f-49c4-bca2-d6da73a7ecfc",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "cfaf94c2-8c6f-4b53-8efd-9b0f66235792",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a4859a4-c10b-4044-870b-1e797b40aa42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "97d77bd3-49c5-4361-8436-6a6cfff8facf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c29063-96e9-4e09-ae72-61eafff658dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0ea1b2f-c379-4abf-af0e-44920289def8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0e6ec7a1-b9c5-4bd1-9309-f91ece5074f5",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d8489fd4-51eb-431c-884e-3b785cb339dc",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7d2cc0ce-56f4-40cc-92b1-8db1178646af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c7a026f5-97e3-480a-b2dc-bcf26056f46a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6eb21385-51bf-47bf-aafb-0304acf8b524",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f627c82f-6bd9-4d3f-ab9a-09816298dad2"
                    }
                  }
                ]
              },
              {
                "id": "eeb8ff99-141d-4df6-a982-c7dbcaa6d0c7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9a92e2f-d43d-4930-a114-047da966e446",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1f24e321-fbc8-48c3-8f94-b326ed40cfa9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6ee3bf48-520d-4ad9-b546-7a5242afceaf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a2fe8ca-dfad-4dc1-98a8-7bff5293cd57"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4fc9676e-aa99-4762-ba9d-f469ffa73501",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "cc729183-7fdc-4218-8cdb-733ee37713f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de4980ce-ee9f-4bd5-948b-3386689e98e7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a1f9c9d9-e5bb-4a3f-8d22-ce3f641f041e"
            }
          }
        ]
      },
      {
        "id": "d437db37-d78d-4b6e-9ec7-e228ac143899",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "b169a8ea-c24c-4e5a-9b16-ed0ba92e2d98",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3634e007-280b-47dc-9e79-c7549cd65e5c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "871f4dfa-1222-42d3-b6ea-1e9e398b8bd1",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0244d8e-41ad-4d2d-bebb-09a1218036ac",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "96a11ad8-2c24-443e-b6e2-7dd04d8d48e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ff6dd7f-0b48-46cc-b14e-f4c045f7a177",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa06d125-790f-479b-b49a-2adfeb13284f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a19cf7-9986-4c00-b2a1-8b2eba7daee3",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "270c9b82-64ac-445e-8599-b4453835e9a2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "06d6925e-6cc6-435d-8ae8-e395ec1ee1a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c868e475-3439-4383-92f0-474e4c520161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ec4b0890-18f2-4203-8ba0-595307c29767"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b3b65fe7-e98f-452a-82e6-41795284c72d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1d11155e-ee94-46a0-b69b-ae6b3a4658ef"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5adafe83-8aff-4cc2-896c-2671cce352d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81549326-e410-4352-b196-2d281efc07ea"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "51f8c3c8-ac08-476d-9389-a9a6894b0272",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "5269db89-f8e1-4b7b-b358-bf81ab378230"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e723158f-a579-419e-a35f-60d7ce20ae4c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8b9ce4b1-444b-4850-b9e1-a8375d970b08"
            }
          }
        ]
      },
      {
        "id": "a08f03d7-1bed-4791-9942-34adef7a10c5",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "2618e1bf-7fd8-4fd6-a81e-9d372ff51fe3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a5d91998-4e88-42d0-9726-6d4bf3e43704",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "029c5f2d-f517-4b48-8b4c-32fdd4091eb8",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c53eb856-2757-486f-9d9a-c0b6c7663079",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72e508d0-1bce-4294-a361-096b0e856fac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b3f784-bb67-4978-bc8b-63f65a24adef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fa180d31-21e2-40bf-97b4-03f2dbfa12e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca32caa-ce4a-467d-b5ef-9e224fb8fd80",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2a4a60-f4c2-419e-b398-cac0217c7634",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "57ef0707-6036-4ce1-8fe0-ff33d35b9a2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ac0fdd2-e12b-4351-af73-f8c574e754a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "378a5858-80f3-4e50-9802-dc0bfe9255a1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc76adf4-5e86-4a64-b484-f9dad0aac567",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0baef46c-4657-424f-9aa3-4f4c9a762daa"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e32aeda2-d81e-402f-a84a-dcab33f8c56c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fe0a9246-0e79-4e86-bc93-b821533b365c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8d588ece-6f74-441c-b9d6-1cd68e8b6482",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ed2c7616-6c9b-44c4-b099-cc78478d911d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e729e67d-88c1-404c-a24a-083ea45afbaa",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "37f8f25d-4b07-4c3b-8e29-ab71f0b041f6"
            }
          }
        ]
      },
      {
        "id": "56a7c89a-2da6-4923-839a-885492bfd822",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "148f97fe-e659-4376-8301-376c864aedf8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "94e9ddc5-25d5-4698-ada3-476736c949a7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1002cdd0-02c2-490f-9a6b-87675624d96f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00552cd2-a6f0-488f-be54-8ec4ac67f4b6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "83374866-5a9a-4ba0-a97c-b7fd7c0f1c21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9edc0dda-b0fe-44b7-b117-cedb0cf9ef05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b92f6940-ca45-4a1c-b305-be2653ddeac8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e902ddb-f546-4e73-af39-e9dc77b06a6e",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cf7db7f-6662-4e7c-824f-4bb10858abfa",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3ab9a352-7d99-4411-bc78-2ae153bf0067"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b16410f-6ae4-4218-a95b-20b4dfd1b5a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "590fe80e-7d07-49be-b171-fc1e79372103"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ac3149c-001c-4f90-9082-00f340f7ed81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5b8f9f55-65ec-4ddf-bae0-aded19c390d8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4c70bdf3-fe99-4909-901d-c42fce8f433c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15daba56-c832-4b63-8b0e-db8e4f193c36"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a9e148dc-a1bd-4cf5-aee5-4bf2f0e37e9e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "98d8ea56-0f92-4566-9ff2-183e20b35a58"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e5333e0d-5cc9-4959-a5c1-e28ab4a5d9bf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ad7a226b-27a3-4f89-a887-ae37ea72dc81"
            }
          }
        ]
      },
      {
        "id": "2a92d05e-e608-4e31-b658-ee5cfe4515e4",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9786a29b-dcf5-4f18-b8fc-93baf0357edd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b88af867-865d-4bcf-a401-3d9f2e418499",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "da4285ea-2a10-4511-887b-2e506f83ac0f",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82238f44-ac5f-46b7-a191-34c66945d8c6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e4bc56e7-38cc-4920-8bb9-7657c8e8db62",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.507692307692308,
      "responseMin": 3,
      "responseMax": 392,
      "responseSd": 43.0770769228022,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1683074208421,
      "completed": 1683074222611
    },
    "executions": [
      {
        "id": "10cc576f-6028-4612-99ed-a1eca3f3670f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0135aefe-2ea0-4e13-90f4-d19b7e7741bc",
          "httpRequestId": "d53d6888-525f-40da-bce0-445348cbc8c0"
        },
        "item": {
          "id": "10cc576f-6028-4612-99ed-a1eca3f3670f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "2ab49c16-5ccc-411a-8f43-b3feee127949",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "e4176dd3-4870-4a76-84fa-0f9999bbc3a0",
        "cursor": {
          "ref": "889040f6-c1fc-4142-aa86-dada070b1f68",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3f0bcd2d-5231-42de-aa2e-a395e8e80f88"
        },
        "item": {
          "id": "e4176dd3-4870-4a76-84fa-0f9999bbc3a0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "6b16b37a-1a7d-4374-b84a-bc2dd4bf5fb5",
          "status": "OK",
          "code": 200,
          "responseTime": 11,
          "responseSize": 0
        }
      },
      {
        "id": "8dc3e7e9-a8cf-4668-9d40-72544df28b7a",
        "cursor": {
          "ref": "dffcee3d-5248-404d-a64c-bfd8d5ac1f66",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "31b370a3-487c-4f80-9226-8e282fbdddaa"
        },
        "item": {
          "id": "8dc3e7e9-a8cf-4668-9d40-72544df28b7a",
          "name": "did_json"
        },
        "response": {
          "id": "90f9611b-a3ce-4afe-a83d-23daacd86466",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29217d6-6c65-4ca3-ae75-56f24d15428c",
        "cursor": {
          "ref": "6fda7211-66a2-45b7-ab31-9566e2285863",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "28eeb9b3-d86a-442b-82f1-b84e57b96333"
        },
        "item": {
          "id": "e29217d6-6c65-4ca3-ae75-56f24d15428c",
          "name": "did:invalid"
        },
        "response": {
          "id": "020ebae8-8471-4bf0-a654-cefd8c5a40fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e29217d6-6c65-4ca3-ae75-56f24d15428c",
        "cursor": {
          "ref": "6fda7211-66a2-45b7-ab31-9566e2285863",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "28eeb9b3-d86a-442b-82f1-b84e57b96333"
        },
        "item": {
          "id": "e29217d6-6c65-4ca3-ae75-56f24d15428c",
          "name": "did:invalid"
        },
        "response": {
          "id": "020ebae8-8471-4bf0-a654-cefd8c5a40fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab405926-ad2f-4a97-8d6a-bc3783dcb62d",
        "cursor": {
          "ref": "e9d86612-d3b0-4e2a-864d-5694cf0c9e2b",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "8c03e1df-d231-4ac5-be70-a1fc126761f7"
        },
        "item": {
          "id": "ab405926-ad2f-4a97-8d6a-bc3783dcb62d",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ffb6d330-2fb7-4fa7-80b9-88e0c5376dc2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 43,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2431efd-57ae-4689-bab3-d2bf1df9beb6",
        "cursor": {
          "ref": "581a0be0-4316-4234-918f-6e8a3b7d9291",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "fbd62c4f-5742-457e-a7c7-ac9f06a1f53e"
        },
        "item": {
          "id": "c2431efd-57ae-4689-bab3-d2bf1df9beb6",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1fffd821-c5b5-43ae-8a33-50da065b225d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03fa4582-cf6f-4540-8bea-0c79d5574174",
        "cursor": {
          "ref": "296c9e80-f4e9-498c-8608-9c1220956cf0",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5c17d0a6-82e4-4a0e-93f6-7e16ddb15017"
        },
        "item": {
          "id": "03fa4582-cf6f-4540-8bea-0c79d5574174",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2327c385-3154-4f46-8c25-5226232b6cbb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327d51b3-6a7a-448b-956d-295e1e16205c",
        "cursor": {
          "ref": "7bb699f7-0f95-41a3-80fe-0b7e09503acd",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8fc47849-3ff5-4c78-ac29-269ba9debc0e"
        },
        "item": {
          "id": "327d51b3-6a7a-448b-956d-295e1e16205c",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "dc6d205d-5999-4e95-bdaa-7853ba87a7a7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "327d51b3-6a7a-448b-956d-295e1e16205c",
        "cursor": {
          "ref": "7bb699f7-0f95-41a3-80fe-0b7e09503acd",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8fc47849-3ff5-4c78-ac29-269ba9debc0e"
        },
        "item": {
          "id": "327d51b3-6a7a-448b-956d-295e1e16205c",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "dc6d205d-5999-4e95-bdaa-7853ba87a7a7",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef69f474-add0-46b8-a9f5-03238cab01f5",
        "cursor": {
          "ref": "0c549fbc-3c0b-4e60-9226-5f065f0fc5fb",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "ca7bf4d7-9321-48af-9cfe-f2fa54ed2be4"
        },
        "item": {
          "id": "ef69f474-add0-46b8-a9f5-03238cab01f5",
          "name": "identifiers"
        },
        "response": {
          "id": "195c8919-e812-41b3-b468-44d6083ed0d2",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf48f36d-7b1c-49aa-a074-9918e88ec45b",
        "cursor": {
          "ref": "b5dfdfd8-aa3e-45f1-81f4-0141e4d725df",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1d294060-3789-4364-ae42-1096fe35b1a5"
        },
        "item": {
          "id": "bf48f36d-7b1c-49aa-a074-9918e88ec45b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1796e670-3b29-4675-8575-34d14451164c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf48f36d-7b1c-49aa-a074-9918e88ec45b",
        "cursor": {
          "ref": "b5dfdfd8-aa3e-45f1-81f4-0141e4d725df",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "1d294060-3789-4364-ae42-1096fe35b1a5"
        },
        "item": {
          "id": "bf48f36d-7b1c-49aa-a074-9918e88ec45b",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "1796e670-3b29-4675-8575-34d14451164c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33903795-197b-4517-bbdc-ed0150f85172",
        "cursor": {
          "ref": "634636f6-d343-43d8-a7b7-9266b1815fde",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7d0e14f7-e7fc-4d03-b7e4-10121b0489f7"
        },
        "item": {
          "id": "33903795-197b-4517-bbdc-ed0150f85172",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "c9963b38-b6b1-42b4-a1f2-2e0ee79bc7bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ac421a-f9ad-4508-81ae-3c37ac4eda52",
        "cursor": {
          "ref": "ca3b98ec-6577-48ab-9b05-7552de9ae538",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7de768a1-27ea-43ba-bb2c-fcb937f1abbc"
        },
        "item": {
          "id": "25ac421a-f9ad-4508-81ae-3c37ac4eda52",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "de5edf7a-e6b8-452b-929c-611507643ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203a0e11-151f-4dc3-bb6b-b1b8f792e54b",
        "cursor": {
          "ref": "a12e95d8-a9f1-4385-9aa6-ec3c04f712c5",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "405f5906-ca30-4e7e-a49a-6240cd8acd2e"
        },
        "item": {
          "id": "203a0e11-151f-4dc3-bb6b-b1b8f792e54b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "25018737-ea2c-4791-a596-86598d5d310b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ebc1310-68df-4c20-8a7d-4f3f757ddd8e",
        "cursor": {
          "ref": "efe3ea28-339c-45e7-a549-7f78f35e934d",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "3e0a9e56-a2aa-491a-8feb-0956bc5c9b00"
        },
        "item": {
          "id": "2ebc1310-68df-4c20-8a7d-4f3f757ddd8e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "98f6d45f-3446-457a-8f3c-b9fe2361a812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7a9c0a-92a3-4bdb-bf2b-f16dc9599c9a",
        "cursor": {
          "ref": "1109713e-219b-47d3-9bae-8047a4a74a86",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e8e1e1d7-a062-4ec5-8649-6b53487637da"
        },
        "item": {
          "id": "7c7a9c0a-92a3-4bdb-bf2b-f16dc9599c9a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f9789756-dafd-4f73-bea6-8bb27025e90c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4c6148-6600-45d8-b8c1-6a641069a44c",
        "cursor": {
          "ref": "0c4196b5-aaa7-498e-85fe-00b49482db30",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "174027c4-826b-4a20-9baf-521ccdb1a997"
        },
        "item": {
          "id": "ed4c6148-6600-45d8-b8c1-6a641069a44c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9664f8f3-c38b-4f39-b7c2-602d9f1d9c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c262909-936c-4977-be2b-6e71b172c668",
        "cursor": {
          "ref": "5d68ef4c-1e0f-4970-9269-04509e38ce48",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c10e624c-3c65-4df4-8829-64e4ce09fd5d"
        },
        "item": {
          "id": "6c262909-936c-4977-be2b-6e71b172c668",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "11e8cd26-7de2-4885-8279-488eced0401c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6024d17-c629-4527-b980-858cb50e618d",
        "cursor": {
          "ref": "e1263a3d-576f-4a67-a600-d6f85a44d4de",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2eea65c8-a233-4040-8d21-1e2c5b203264"
        },
        "item": {
          "id": "c6024d17-c629-4527-b980-858cb50e618d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "bf1ae1ea-9816-4ca9-9554-2e3d60aac101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6295b833-4a98-4b48-9ae1-18e1a14fcadd",
        "cursor": {
          "ref": "5316eb00-aafc-447a-874c-fa1350d53c86",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "09131b3d-6223-4b71-bd55-10c36fbbb3e4"
        },
        "item": {
          "id": "6295b833-4a98-4b48-9ae1-18e1a14fcadd",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2a6ccbb9-92ee-4adb-97ba-916a7bc01bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be02c1ac-4e66-433c-b45c-c9e90e3c8574",
        "cursor": {
          "ref": "163b7397-8de2-486d-b35d-e1f7671205e0",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d72e0e7e-36d1-420c-8b86-62e91b7d8c29"
        },
        "item": {
          "id": "be02c1ac-4e66-433c-b45c-c9e90e3c8574",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "38755ae2-f847-43dc-9e2e-c2318aad5fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1692a90-3f5c-453d-9373-a117f03eabf2",
        "cursor": {
          "ref": "d93a66a8-4b65-4622-adb2-f43deb106a47",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "2855d0b3-0c5c-4375-98fa-3407b1b142b7"
        },
        "item": {
          "id": "e1692a90-3f5c-453d-9373-a117f03eabf2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "a152e1c4-9d2d-4e20-bb2c-75c1ea485cd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8685d6f8-e2b0-4e3c-ad41-10bbfcb44a63",
        "cursor": {
          "ref": "cd3d411e-3758-4b73-81d1-ea3a50340737",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1d201338-8ba9-46a1-b5ae-210849375686"
        },
        "item": {
          "id": "8685d6f8-e2b0-4e3c-ad41-10bbfcb44a63",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "44c7af6c-040f-454c-a49f-027134156a6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97899aa0-9cd1-468a-ba73-e23e4286d3cb",
        "cursor": {
          "ref": "e4b63c54-2590-49b2-861b-180a67d20987",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "dba6655c-aaf1-4687-b6f8-a9f216592233"
        },
        "item": {
          "id": "97899aa0-9cd1-468a-ba73-e23e4286d3cb",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "a77d9272-baf3-4c7b-9c41-6b63ec87d931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a9cb7d-d1c9-4de0-baf8-071911b57e54",
        "cursor": {
          "ref": "37cace92-8956-45e0-b750-315b24322b70",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "4cc87570-c738-43be-b03e-6072437aa9fc"
        },
        "item": {
          "id": "c4a9cb7d-d1c9-4de0-baf8-071911b57e54",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3caf70d4-81c8-4330-a223-8f612515ecb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22446013-88f0-45c5-80f9-94b57d3e83f6",
        "cursor": {
          "ref": "93e47d13-7341-47e6-b19e-03d58bce6752",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "71926cea-fed2-4b4d-94f6-774706dc1f1a"
        },
        "item": {
          "id": "22446013-88f0-45c5-80f9-94b57d3e83f6",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2505cd71-1895-458c-8229-14e2ccdfce86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d54f0ae5-cfdc-4d84-a3f1-5b219afbd1bd",
        "cursor": {
          "ref": "8a12b65b-65b6-4036-bac9-b86d03113f70",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "48da8e64-0f36-41ce-95e7-25b51be9d937"
        },
        "item": {
          "id": "d54f0ae5-cfdc-4d84-a3f1-5b219afbd1bd",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "b436b34a-2178-4b50-8b55-dc0cc9b35a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62e59183-7ca2-49f1-95f2-971e79de759b",
        "cursor": {
          "ref": "f643416e-4cdf-42ec-89c8-f868dd867922",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "83ac3dab-ad9f-47ae-98b8-a6f44711aa6d"
        },
        "item": {
          "id": "62e59183-7ca2-49f1-95f2-971e79de759b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5119acd7-eb05-47c4-9c61-5000f1dd3f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb0d584-f73f-4770-beb9-031897619696",
        "cursor": {
          "ref": "d1825f92-c1f7-40dc-b686-78e3463f1da3",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "059175cd-b20f-412a-adb3-c1c16d93faa0"
        },
        "item": {
          "id": "9bb0d584-f73f-4770-beb9-031897619696",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "4dafbe92-e1cd-499d-ac6d-8c4eadd598e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25281e5-da1c-4344-a72b-b52dc80b292c",
        "cursor": {
          "ref": "6822a66c-9499-4804-9b2a-9c04be913558",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "75627f46-78ec-4001-af79-ea838c27d5b4"
        },
        "item": {
          "id": "f25281e5-da1c-4344-a72b-b52dc80b292c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8b3bf77c-ccca-4fc8-be4d-40fe7a793764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248c63d0-628a-4138-ba11-1d049f532143",
        "cursor": {
          "ref": "8b066d72-24ee-4284-be4e-1674034604f7",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "fed9f32c-64eb-49c6-855b-d03c2de90c34"
        },
        "item": {
          "id": "248c63d0-628a-4138-ba11-1d049f532143",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "07d2c36f-47ed-4445-b6d5-421df7d92a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486d2c18-2ec5-4fd5-a615-0bf82b0b88ac",
        "cursor": {
          "ref": "efc59662-f9d3-402f-a062-75c5a2e98cf9",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a2089ffc-407a-437a-b11a-7dcfe0732c48"
        },
        "item": {
          "id": "486d2c18-2ec5-4fd5-a615-0bf82b0b88ac",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a4dc09c1-eec7-439b-8a68-3d1946740899",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff4f828-2e00-44fa-964d-56b4c3630679",
        "cursor": {
          "ref": "383bdca0-3706-40b9-8dc1-8c95b3f86e46",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "c2537c13-9b9d-4972-882b-5216470726fc"
        },
        "item": {
          "id": "0ff4f828-2e00-44fa-964d-56b4c3630679",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "7a7b5168-7b50-4b07-9e1a-52df68bfe65b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02c4e457-84d0-4b28-a2a2-1f8cbd5d45d6",
        "cursor": {
          "ref": "85070286-40e6-41f4-8798-e10dcb0ee8b1",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4af8bbdd-374d-4959-a66b-0a4c8dd78890"
        },
        "item": {
          "id": "02c4e457-84d0-4b28-a2a2-1f8cbd5d45d6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "817bb5c0-ca3e-4a4e-9f3e-800548aef63b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bf1eb06-5fc9-486b-9da2-0f8edbb91787",
        "cursor": {
          "ref": "a2f3da19-507f-4575-8afa-89ac7e2af586",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8fb8f7ed-1440-4b60-8b5b-bfd76003213f"
        },
        "item": {
          "id": "8bf1eb06-5fc9-486b-9da2-0f8edbb91787",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "1778b58f-8890-4e1f-ae61-74a2410d5bec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2725482-01c3-41dc-b012-35a548cd653a",
        "cursor": {
          "ref": "8cdc6214-042a-436f-8d01-16bde68822f6",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "7c9aa3ad-903a-4492-b210-0939afc435ff"
        },
        "item": {
          "id": "d2725482-01c3-41dc-b012-35a548cd653a",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "00501846-3786-46e2-aefe-3b639fb854e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d833579a-9f7f-445b-a3c0-0070e738efee",
        "cursor": {
          "ref": "c05e35ea-7555-4500-b427-683d1f726480",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "d4b764e6-0b2b-4837-aa4b-d0acfed283ed"
        },
        "item": {
          "id": "d833579a-9f7f-445b-a3c0-0070e738efee",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "d3714392-14ac-4162-8c48-5a7204d92b54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3740b4a7-e7c4-49fd-8ead-1d3da5a29042",
        "cursor": {
          "ref": "44fe8a20-5cb3-4947-b451-097e45cb0578",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "010bd2b5-210c-48e6-94e6-eedafc32af84"
        },
        "item": {
          "id": "3740b4a7-e7c4-49fd-8ead-1d3da5a29042",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "ec49e31d-c651-41a1-b6b6-bb1153453303",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb15703-1f48-4725-8432-eda4c24a4f57",
        "cursor": {
          "ref": "e494c60c-bdb5-415d-92a7-f9e08a31e708",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "9560a5ed-9102-4082-88ec-fe4d3860be2e"
        },
        "item": {
          "id": "2fb15703-1f48-4725-8432-eda4c24a4f57",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "8f56d2c2-5e5b-49d9-abc2-9fcd8f387498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a959e99-b74c-4199-b144-8283641e0537",
        "cursor": {
          "ref": "40da46ba-c22f-4563-8ceb-2f6cc47fe073",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f94417fd-9505-481f-b092-6e016670b171"
        },
        "item": {
          "id": "9a959e99-b74c-4199-b144-8283641e0537",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "4d16eb16-10df-4298-9d31-ee01356e384e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5c4a0af-01a8-49f0-a585-13e0fc0e034a",
        "cursor": {
          "ref": "a245fa95-90b6-4905-a567-1947a4abb94e",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8d6178a1-0bee-4fe8-a9fa-d1714ecb3523"
        },
        "item": {
          "id": "a5c4a0af-01a8-49f0-a585-13e0fc0e034a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "259f3f8e-a19a-46b9-ab56-3afcc6b262f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0f3e745-30c4-4679-998a-37609cf250b1",
        "cursor": {
          "ref": "0c681499-a9b1-44d3-aa03-fe70f30e3937",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "8fb656ea-a9c2-4fa7-9b65-453d5182377e"
        },
        "item": {
          "id": "d0f3e745-30c4-4679-998a-37609cf250b1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a4fa1465-1ad3-4648-9a62-949e50157b24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60a48f0a-0f3d-4857-85dc-e56e90caeb4f",
        "cursor": {
          "ref": "db6747b0-7b28-49f7-b4e5-175bebd5d473",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "644aaf4d-8c3a-4a87-bbd1-016c28df96f7"
        },
        "item": {
          "id": "60a48f0a-0f3d-4857-85dc-e56e90caeb4f",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0e271037-ae47-4acc-8c27-70111f685e85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2812baa8-2b5d-4263-91ec-aaf187013cab",
        "cursor": {
          "ref": "0c31b583-be9d-4d29-8de9-802895e6095e",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "59c64e7a-8ce7-443a-a0a6-99449fbfd502"
        },
        "item": {
          "id": "2812baa8-2b5d-4263-91ec-aaf187013cab",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1aa461d5-9982-493b-9d5e-afe3382aa5ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8faefd-4760-4eae-a250-14e6b26ff3a6",
        "cursor": {
          "ref": "122723b4-9695-4668-a3cc-f75dda9e980c",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "f7fa455e-0dd6-4d8a-9543-720cec14bcec"
        },
        "item": {
          "id": "8e8faefd-4760-4eae-a250-14e6b26ff3a6",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "07206d32-63ee-4277-b935-016abe132daf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629dc11f-b504-4ae0-bf42-187dd4e68768",
        "cursor": {
          "ref": "73874935-a3f9-4133-9288-42b25259ab90",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "f5c6bcbb-91b5-4084-ad2f-38103500a41e"
        },
        "item": {
          "id": "629dc11f-b504-4ae0-bf42-187dd4e68768",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "735350b4-2efe-403d-abb8-3fec640a3093",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 14,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b73e85c-65c1-4f1a-bdac-f8f7a82bf5e7",
        "cursor": {
          "ref": "9e3122bc-90e7-4892-a91b-d34fbf51911f",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3f3b04f1-b1f6-4a4b-afce-3f3820449982"
        },
        "item": {
          "id": "8b73e85c-65c1-4f1a-bdac-f8f7a82bf5e7",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5349d8f3-6adf-4d65-b198-7bdcc007332d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9d7cbf-8599-4091-b4c8-82b28a05d169",
        "cursor": {
          "ref": "23cfb2ff-209d-4939-ad0a-c98e42795162",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "c1db8185-14fb-47a7-9a78-c40d5109233d"
        },
        "item": {
          "id": "5b9d7cbf-8599-4091-b4c8-82b28a05d169",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "04e80838-f811-4ca9-b08e-c8f54ab3f3df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a322033-96ef-4d45-8e3e-71056fc697a9",
        "cursor": {
          "ref": "a25b39bf-2a39-4c2a-b477-9bef38f38643",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "c25095c4-9c13-46e2-b827-4ecca3e9fb84"
        },
        "item": {
          "id": "9a322033-96ef-4d45-8e3e-71056fc697a9",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4157ff18-18bf-41ee-8541-dceeec8321ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bf36ab7-a1e7-49f8-958f-32b936606fc3",
        "cursor": {
          "ref": "e40b3b67-5a27-4a63-9a7a-e4b6e551bccf",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c72339c8-0e97-4f4e-b92c-7ceb4886ebfa"
        },
        "item": {
          "id": "7bf36ab7-a1e7-49f8-958f-32b936606fc3",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "5d16a74c-f145-4400-b70d-b1683f79cef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29b087d1-3be4-4539-81f7-c611575b22ce",
        "cursor": {
          "ref": "e493b69c-dc96-4be5-9ff1-510352e6b7d4",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "2ad90517-52df-4045-a7f1-cc62752a0468"
        },
        "item": {
          "id": "29b087d1-3be4-4539-81f7-c611575b22ce",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "999aeec5-a853-4dd6-a023-8c674225eb31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9de463-8471-41da-aa48-ddd75872cb80",
        "cursor": {
          "ref": "ba185700-9d55-4949-b322-8aba96073dc8",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f9d6648c-78d8-4695-a9a8-768771e7d4bb"
        },
        "item": {
          "id": "6b9de463-8471-41da-aa48-ddd75872cb80",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4848f729-ee6a-4d92-8db7-bed528eaa107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08d354e-108a-4c5e-9b79-1fc25d4f5b70",
        "cursor": {
          "ref": "9b004a51-13d2-4366-8e0e-cd93e6a71aee",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "c328be91-2723-49ab-a824-81f976e25b15"
        },
        "item": {
          "id": "d08d354e-108a-4c5e-9b79-1fc25d4f5b70",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f0bce60d-14c5-43c2-80a0-e3c343862929",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 14,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb06d9c5-0358-4eba-8ba4-fa7eeb59df96",
        "cursor": {
          "ref": "e8fca14d-037f-43a8-ae48-b9f7f5836cc9",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "cdbfa7d7-9fe2-4bd1-bf4a-357695dfbb15"
        },
        "item": {
          "id": "fb06d9c5-0358-4eba-8ba4-fa7eeb59df96",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f8c07921-2248-4541-9e02-81f431d2c58a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee213cb0-f8d6-43cd-86dc-fd5988ef0bba",
        "cursor": {
          "ref": "0068cc3e-1f45-4bc7-96a6-7313770bac65",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c642bd79-b8e8-43ab-b3d7-b0e354a5575b"
        },
        "item": {
          "id": "ee213cb0-f8d6-43cd-86dc-fd5988ef0bba",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "2d3a539b-b245-4b61-b64e-4d7afbdf0588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b24e39ec-270b-4221-8a9c-9e16643a6552",
        "cursor": {
          "ref": "98e1b53a-30c3-40c2-90fa-53c16eead055",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "517eb06f-81f5-457f-a01e-6d67e7cf04d9"
        },
        "item": {
          "id": "b24e39ec-270b-4221-8a9c-9e16643a6552",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "9fafe041-d056-49b2-b4c6-2954bb6c1068",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16c670cb-b109-455f-843e-f69a56670393",
        "cursor": {
          "ref": "024c7432-fcb6-400f-a6dc-a8505ddcff60",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c2460f58-415f-492b-831f-ee1e663bf0e7"
        },
        "item": {
          "id": "16c670cb-b109-455f-843e-f69a56670393",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "52515ed0-9b57-4e41-a3a2-4da45be180bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44127adb-42a1-4c82-9d17-abb25e51c26e",
        "cursor": {
          "ref": "5f8923bc-5a0d-4c2b-8afb-18c5c9fdd039",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "86b3d7db-2e6a-4b73-ab2c-904f82be5c91"
        },
        "item": {
          "id": "44127adb-42a1-4c82-9d17-abb25e51c26e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d4451dc4-e4a0-4327-bdbb-7239821cf4ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a3fe30-e7c8-4add-a65e-4c72b927a4fc",
        "cursor": {
          "ref": "dd8b6b54-d9d0-4808-b22b-18f73fd5de0b",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "61708249-3961-47c4-aa21-3352c659de2e"
        },
        "item": {
          "id": "46a3fe30-e7c8-4add-a65e-4c72b927a4fc",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "51a9c9e6-4a44-4565-b261-99d1789dcf2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380b3643-d89c-4560-9e4c-6a9c03041a8c",
        "cursor": {
          "ref": "d338081b-91b7-4873-9b6e-b3506db7047b",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "94425c11-c66c-4d87-bcaf-d7fb08e4eed1"
        },
        "item": {
          "id": "380b3643-d89c-4560-9e4c-6a9c03041a8c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b33aca7d-8306-4744-9571-866f034e482c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8c3fdb8-006c-41a0-8ead-18ac7393b900",
        "cursor": {
          "ref": "113dfaec-a3f4-4917-b689-5b28ac58ddbc",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "f603d4ee-3ea1-44d5-a44a-58e422fdf06c"
        },
        "item": {
          "id": "c8c3fdb8-006c-41a0-8ead-18ac7393b900",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "0360c489-b339-4503-a626-c0172e7f3fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d50640aa-852c-4f0f-b256-865baa2475a3",
        "cursor": {
          "ref": "bd5ca760-0c1c-4489-91cf-52092010536f",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "aec209ed-d08c-4791-9c11-bb0215e41af2"
        },
        "item": {
          "id": "d50640aa-852c-4f0f-b256-865baa2475a3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "c271e5cc-c07c-4c3e-941b-18c8cb85862e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c208ae7-0c26-402a-9cdf-e849b45a3d5d",
        "cursor": {
          "ref": "ddb809b3-bdd0-41aa-93dd-28ee3e4d6661",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2763eb01-3215-45c4-8738-8469b5d4d183"
        },
        "item": {
          "id": "2c208ae7-0c26-402a-9cdf-e849b45a3d5d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "efddf63e-799a-4914-af92-5c2dc72d58a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a54d481-9236-4f91-9139-4c73c537aa7f",
        "cursor": {
          "ref": "694df71e-5f9b-4a99-8c71-fe42f3a1fd7e",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "3601797c-1771-4b17-8795-67db3190a96e"
        },
        "item": {
          "id": "7a54d481-9236-4f91-9139-4c73c537aa7f",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0119ec6c-3bac-4516-a6ee-61372d12196e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56afd483-dcae-4237-b50c-9bf278aae835",
        "cursor": {
          "ref": "7780a041-5dea-4f9a-8a5a-1c3de3cc31cf",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "aa6f27d6-eab9-4710-b68b-28cb83deb946"
        },
        "item": {
          "id": "56afd483-dcae-4237-b50c-9bf278aae835",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ea8b3dbd-187e-4838-a467-4fa3ac1c4c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324f1649-e58d-4356-83c7-b81a43fa2967",
        "cursor": {
          "ref": "e834fd88-64f7-4788-b4de-da7f888c9235",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4e1fb3c6-2a52-45e6-9831-d9c41c365f18"
        },
        "item": {
          "id": "324f1649-e58d-4356-83c7-b81a43fa2967",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "99e1ca70-f96e-492c-9bb1-efb9153aad1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff028cc3-6887-4f45-8b74-9e27d2083704",
        "cursor": {
          "ref": "c60fcc9f-4381-4177-9e24-21f292685f8a",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "babb4be8-1734-4ccb-9e2c-931fb7bb4f9f"
        },
        "item": {
          "id": "ff028cc3-6887-4f45-8b74-9e27d2083704",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b844267e-b274-4c2b-9a84-6dabba54e522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888f0492-ad43-4880-a047-931bc83db914",
        "cursor": {
          "ref": "2c5509a9-2892-4c22-9ce3-f44961a75549",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "11870d9a-c70a-4416-8a14-629fb511bd15"
        },
        "item": {
          "id": "888f0492-ad43-4880-a047-931bc83db914",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "70f31c54-b8a8-4be5-92bd-a900fbff19ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "838a8996-6ce2-43d5-93f6-7d651a147eed",
        "cursor": {
          "ref": "bb3041d4-a02c-4aee-b8f9-efbb7d848bc4",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "9be0f262-a8c9-4455-9887-5722fc1bf6a3"
        },
        "item": {
          "id": "838a8996-6ce2-43d5-93f6-7d651a147eed",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "57f03fe7-7355-4010-bfd8-32b2fd77edc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95e0a376-cc9d-4c7e-8344-0966a87b9175",
        "cursor": {
          "ref": "7a598913-7df0-4fb9-b21e-35758ab95725",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e5c4eef7-66de-4ac6-91c2-31da6a6edd93"
        },
        "item": {
          "id": "95e0a376-cc9d-4c7e-8344-0966a87b9175",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "c405d25f-5651-476f-8827-ab3d1239de98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa551cb3-a75b-4f07-bc66-1dfc6102c7cc",
        "cursor": {
          "ref": "99dcab7f-fd08-4e0e-b574-054495525836",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "91f846f4-c6c3-42a1-8f36-960c2061a342"
        },
        "item": {
          "id": "fa551cb3-a75b-4f07-bc66-1dfc6102c7cc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "46cb8141-c93d-4282-962a-975d73285042",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204cdab3-945e-464b-ad8d-075de653e03b",
        "cursor": {
          "ref": "693d811f-0ade-48ca-b2ce-cb993f153d0e",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "9d1a0133-5005-46bc-b2ba-13ace19c21b6"
        },
        "item": {
          "id": "204cdab3-945e-464b-ad8d-075de653e03b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "d2a7bd59-7cce-4fe7-ac3f-df415b2f7dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5067bea6-168e-446e-b846-cdfc79e5acc7",
        "cursor": {
          "ref": "7b3c3ef5-727f-4cce-8d5b-06ef5defccd3",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "43d4b235-4a28-41e6-9c21-b96a0d95e4ec"
        },
        "item": {
          "id": "5067bea6-168e-446e-b846-cdfc79e5acc7",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d3337265-7024-41c1-8c60-7d4065ee1515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53e91ae-5020-44b7-a743-c860e3748754",
        "cursor": {
          "ref": "83a5f111-b645-453f-9cb1-232148e88220",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "67828a50-a14b-421e-8249-617e7b13d04a"
        },
        "item": {
          "id": "e53e91ae-5020-44b7-a743-c860e3748754",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "45533368-29e3-4627-b650-37d3a1e9be4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df013158-eda0-4e56-aa0b-25d27d9c3151",
        "cursor": {
          "ref": "4f57f0ae-f8ca-40da-a8e8-73213ee45cee",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "23ee5f39-8db3-4101-95f0-2fc1955bd5ef"
        },
        "item": {
          "id": "df013158-eda0-4e56-aa0b-25d27d9c3151",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "bc38f85a-3f60-4cc7-a1b3-ac5891e89e59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae7b35c9-19f0-47ab-bf51-11e541346690",
        "cursor": {
          "ref": "716a45e6-60b2-41ca-ae65-c0ae4ac3938f",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c8f4765c-d360-4757-bac9-fb271f5952ad"
        },
        "item": {
          "id": "ae7b35c9-19f0-47ab-bf51-11e541346690",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "98532084-8ee5-40ee-8422-9694dce72ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66636290-9fe8-40fe-b1fa-db7582fcc23d",
        "cursor": {
          "ref": "c6405b10-e192-43e0-a4f5-25e9ccdb099b",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b2fecf5f-a499-4c63-8877-d4f51d40d2a9"
        },
        "item": {
          "id": "66636290-9fe8-40fe-b1fa-db7582fcc23d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "cbb7f9e5-6d25-4658-a3e2-4b34fa733272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c62cbf14-5235-4474-bb15-bdc469c91241",
        "cursor": {
          "ref": "f7fe496f-b9b5-40d3-9728-8122e031ad96",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "e85d1b6d-733f-4203-9c96-d2e87864a35f"
        },
        "item": {
          "id": "c62cbf14-5235-4474-bb15-bdc469c91241",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "6c9da342-ead8-4cb1-9d03-57b5da33b256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d23fbc-ef09-47a1-8c58-6455a1350f3a",
        "cursor": {
          "ref": "b1bf00ba-23e7-45f4-9ea7-8624e63e46a1",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0e1b6607-af0f-400b-9e3c-566891d163e9"
        },
        "item": {
          "id": "16d23fbc-ef09-47a1-8c58-6455a1350f3a",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "00158681-309a-4f04-a5d5-8879c77ee87a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde5ffc7-0422-499a-9990-0d5a60b50d18",
        "cursor": {
          "ref": "11d844e3-b703-4203-b089-5afce889d58a",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b16d95d1-af08-4839-b6c7-f7fd648515a7"
        },
        "item": {
          "id": "bde5ffc7-0422-499a-9990-0d5a60b50d18",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "96c444f0-787b-4cfe-ac69-4067347bb10d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85253cce-8e7d-4b0c-bb39-a5104d93a113",
        "cursor": {
          "ref": "1b67f99d-2dc5-4706-93f8-1ce04a983920",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6ee7e916-4bfc-40e8-813a-2b0e56c22da6"
        },
        "item": {
          "id": "85253cce-8e7d-4b0c-bb39-a5104d93a113",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ff6446fe-2e7b-44e5-ace9-5721aaa7f696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4106eca-0a72-44e7-bbb6-a41db996375f",
        "cursor": {
          "ref": "31363ed8-0a34-443d-bf0d-d27700032db8",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "0d97fe67-79a7-4aeb-92bc-75ad06fd687c"
        },
        "item": {
          "id": "a4106eca-0a72-44e7-bbb6-a41db996375f",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "ade7b509-4b3c-4318-ab4c-f7617525787f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8dc6b1f-bcd4-41de-8b0f-2414bcc84d65",
        "cursor": {
          "ref": "2400e488-f220-4114-af59-1bec2d31a20c",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "783e4631-a252-414c-a4a1-ad1a8f18ecee"
        },
        "item": {
          "id": "b8dc6b1f-bcd4-41de-8b0f-2414bcc84d65",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "731ed73b-fe14-4d8e-b479-ee6bd1586e87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10565e4e-4493-4256-9cd3-d2571c53de92",
        "cursor": {
          "ref": "cdfd2ce2-6ab3-4d42-b92c-68455f15accb",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7b07627d-9c44-4c71-b745-58cd16bd7131"
        },
        "item": {
          "id": "10565e4e-4493-4256-9cd3-d2571c53de92",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "d7638a7b-2e31-4fb0-84be-b67f42e7b06c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26766c4b-b8bf-42c2-9db5-18317fbd3906",
        "cursor": {
          "ref": "4beced23-f92f-482e-80f3-cec697aa61d5",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0da9d63a-d782-4e46-8eda-0fbfd3b5375e"
        },
        "item": {
          "id": "26766c4b-b8bf-42c2-9db5-18317fbd3906",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "45d8a132-70ac-4589-857f-cc9033963421",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fbc8f89-b08f-4c76-ab66-33997313df51",
        "cursor": {
          "ref": "ff7257e7-984c-4d36-b44d-f63e9f8441a0",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "9fc77b3e-bb9d-468f-9082-bb3ed4ffb750"
        },
        "item": {
          "id": "5fbc8f89-b08f-4c76-ab66-33997313df51",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "34975c20-5404-4671-b75f-15cfab66131d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a9fb557-2780-4dce-9b75-d5943eec104e",
        "cursor": {
          "ref": "287d1037-3ce3-4e25-87fe-32eacaf234c9",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "87e06b57-2e01-44d4-a92e-66db6272bf30"
        },
        "item": {
          "id": "5a9fb557-2780-4dce-9b75-d5943eec104e",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b7fc7fc8-3e3e-4235-8b24-cbc55e197547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecbbfaeb-bc9e-4587-a1a1-a973e903c7a0",
        "cursor": {
          "ref": "45e82251-0ddb-4da0-a6fa-2533656a675a",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "3234dd43-fce6-4f9a-b613-8ce8ee338e85"
        },
        "item": {
          "id": "ecbbfaeb-bc9e-4587-a1a1-a973e903c7a0",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5bdd3d00-6381-481f-ab7d-f200186d8766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f264f43-f6a9-4323-ac39-47e12598f690",
        "cursor": {
          "ref": "a77e0e15-84be-4605-8e71-43b4704dcead",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "deb4c51b-8c78-4d16-929d-9e37b24fdee4"
        },
        "item": {
          "id": "4f264f43-f6a9-4323-ac39-47e12598f690",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e3a49848-9662-4287-a3ae-185c9b5efd57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "992e7db9-7747-4370-8c5b-2ed4291634b6",
        "cursor": {
          "ref": "0d77b31b-7719-47d0-a94b-4ba32d1f399c",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ec0f261b-e932-454d-830a-1b85c50c1a0a"
        },
        "item": {
          "id": "992e7db9-7747-4370-8c5b-2ed4291634b6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "4c6ee393-084d-4df1-8658-50ab6d1a696e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6293215f-6fe5-46b9-b9e6-cde4ceb85e7e",
        "cursor": {
          "ref": "35a62360-3b86-48ec-8371-5f87c29338f3",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c8022f1c-6c29-41c9-a740-d452f335d9a9"
        },
        "item": {
          "id": "6293215f-6fe5-46b9-b9e6-cde4ceb85e7e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "02dc7b23-bdaa-49e4-bb74-e264029bfa81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e51b11f-f5b1-4d16-8a59-bb4ca1f80e6b",
        "cursor": {
          "ref": "36c5e0b3-7924-4721-a315-69027a0a1c6b",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e21c6d5a-9aaa-4734-9d0c-2b374656f62a"
        },
        "item": {
          "id": "3e51b11f-f5b1-4d16-8a59-bb4ca1f80e6b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "fda72b35-036b-4cab-92ba-0b5eb85d013f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c22529-7601-418f-aa3f-a64be96d0c8a",
        "cursor": {
          "ref": "162131e2-c59e-48eb-ab1e-d951e191be91",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "37c2de07-57b2-4660-ac24-583e589691c8"
        },
        "item": {
          "id": "61c22529-7601-418f-aa3f-a64be96d0c8a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "c31fa70f-4f89-4644-b13d-30bab4af0b2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c682795-634d-4659-a85c-dfd79594c231",
        "cursor": {
          "ref": "f693b292-0c77-4673-acda-ac047a49afe8",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "4ab0f08f-daed-452c-9aa5-1767b135489a"
        },
        "item": {
          "id": "7c682795-634d-4659-a85c-dfd79594c231",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "85fb4aa2-b43d-492d-8e25-67bf15955a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648a9de8-6dc0-46ce-b26f-9e5f859f21c1",
        "cursor": {
          "ref": "b04a317f-0b9d-4661-8921-937ec74d3ea2",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "51c291e7-fcdb-46e1-8379-eaec2278f3c5"
        },
        "item": {
          "id": "648a9de8-6dc0-46ce-b26f-9e5f859f21c1",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "64318de7-b595-4b46-b34f-4c68371fbb9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f60b9f3-d41f-4c59-9a79-d6f303568dc9",
        "cursor": {
          "ref": "d83beae6-f66b-481d-a83f-d996d8f7776f",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "d7489c29-8bee-4784-9771-39af4ebf9136"
        },
        "item": {
          "id": "2f60b9f3-d41f-4c59-9a79-d6f303568dc9",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6cd24ac3-d1d2-4587-ba78-3ae7cb413da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec22601b-174c-411a-9379-45c57a1e1ecf",
        "cursor": {
          "ref": "5a9f53ca-e699-4681-a6a5-b3c517180ad7",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "23b63b5e-bc9b-4326-b725-5ecb09f51d94"
        },
        "item": {
          "id": "ec22601b-174c-411a-9379-45c57a1e1ecf",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "2ac52fe9-222b-41bb-9cc5-795b8fd66960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11f9744-0b13-4a1e-b172-04162e5ee565",
        "cursor": {
          "ref": "2626b861-eebd-46a1-b7ec-a08b1559b241",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "dd4d8412-9a51-4fde-9de0-80101bbf7738"
        },
        "item": {
          "id": "f11f9744-0b13-4a1e-b172-04162e5ee565",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d073f6b2-ed73-4295-a6e7-99c48d55f883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5efeafba-52a0-4995-ae96-7b840950edef",
        "cursor": {
          "ref": "2f9e3208-1a84-45c6-b07d-0b205d405c4a",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "67f55e22-ea86-447c-902c-e8f86e270dc2"
        },
        "item": {
          "id": "5efeafba-52a0-4995-ae96-7b840950edef",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "3d576f34-64cb-4eab-a96a-cf4e5898317d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b380e5ef-fd09-46d5-92f1-3b0a6d884b72",
        "cursor": {
          "ref": "56ccac20-b119-4d52-b727-7b5addea29e4",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "2d6ace89-4a51-4126-af90-216a67209a85"
        },
        "item": {
          "id": "b380e5ef-fd09-46d5-92f1-3b0a6d884b72",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "3e390f6a-18c9-40c8-adf9-aef903deb18a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc00c5d-850f-4249-9826-9f94bd9069d4",
        "cursor": {
          "ref": "9f68c6f6-4bf7-43c9-8e07-ca705693221f",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "37a047da-7f4f-44f6-b179-a07593000f8f"
        },
        "item": {
          "id": "1bc00c5d-850f-4249-9826-9f94bd9069d4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "423e113a-6941-4d09-9df9-cb6a26faca16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da55329d-456a-409e-826b-8feba7942022",
        "cursor": {
          "ref": "b2f3a1b5-102d-412b-b50b-1ef0b0bc4f84",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "eb6e4d46-cd86-4d1f-869d-7ef136e924d1"
        },
        "item": {
          "id": "da55329d-456a-409e-826b-8feba7942022",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "509c26ee-1718-47e1-aabd-7cf2a03e80e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddb03450-9dac-4427-a7df-757308066e74",
        "cursor": {
          "ref": "fc0d22a4-6241-437f-b1eb-2927a7346d58",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "954a7a83-8108-472e-95c5-7009b8d54efc"
        },
        "item": {
          "id": "ddb03450-9dac-4427-a7df-757308066e74",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4b4f2ae7-c4ee-436f-94d2-a15838fa011b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ea20e0-5c23-45ac-ba4e-6021a19a47ea",
        "cursor": {
          "ref": "a43c532b-929b-4ca7-8523-8f50a62b3192",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "70bd0435-082d-4268-a549-0db127db70e3"
        },
        "item": {
          "id": "82ea20e0-5c23-45ac-ba4e-6021a19a47ea",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "26ff15f9-dea4-4e6f-81a4-effe2998218b",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 26,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fed2d668-f525-4301-8c99-52b9a85c70c3",
        "cursor": {
          "ref": "8c2c2811-2d4e-4f2e-8660-a0a47a9bb87a",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c2579382-5c66-4722-8b8e-6dadb4326bb5"
        },
        "item": {
          "id": "fed2d668-f525-4301-8c99-52b9a85c70c3",
          "name": "credentials_issue"
        },
        "response": {
          "id": "da87e56f-a61b-4465-8ba4-4f689ef702aa",
          "status": "Created",
          "code": 201,
          "responseTime": 25,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d4e39c-12cc-4220-966a-f4ff4a5dbd42",
        "cursor": {
          "ref": "1a247620-6a8f-46c9-87c4-5c2e0b65ed29",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "8a79fa4c-9e97-4c5a-9d45-2f7b97eac4ac"
        },
        "item": {
          "id": "84d4e39c-12cc-4220-966a-f4ff4a5dbd42",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b2daed8c-6377-4855-b075-9ce3648b29a4",
          "status": "Created",
          "code": 201,
          "responseTime": 36,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f0675c-f7ea-4dfb-88b6-1a04b9ddb2b2",
        "cursor": {
          "ref": "907c0a92-095d-4aa7-84eb-d48dcfba8ab6",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "48ca4411-e44b-4735-bcd3-16c461cd051c"
        },
        "item": {
          "id": "e7f0675c-f7ea-4dfb-88b6-1a04b9ddb2b2",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "749c40e7-78ae-4c9a-8aae-a51326d967df",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "454253dd-48a5-42db-958a-2bcc15698028",
        "cursor": {
          "ref": "ba5c7f47-fb31-4502-b5c6-8fdc34c40c5e",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f95119c6-a3d7-4a67-b5fc-719f21094ab8"
        },
        "item": {
          "id": "454253dd-48a5-42db-958a-2bcc15698028",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "966fe475-e4dd-413b-af86-a53e0efe18ff",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bd6e1e-7812-44bf-aefe-0dc4e0c8429f",
        "cursor": {
          "ref": "0c0e6ab0-486e-4536-8877-583e47fa53cf",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e313bcf8-fbb6-4022-aab1-203b5af6802a"
        },
        "item": {
          "id": "d8bd6e1e-7812-44bf-aefe-0dc4e0c8429f",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "c01e76f0-31c3-4406-adfc-1bbf52128923",
          "status": "Created",
          "code": 201,
          "responseTime": 22,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "034509b0-b3c3-4b1f-98ab-6c0ef69baff3",
        "cursor": {
          "ref": "f7e22a60-3cc1-460e-8f1e-7c78aa4787e9",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "f037f3bc-a363-44b5-a813-6f3f73811eaa"
        },
        "item": {
          "id": "034509b0-b3c3-4b1f-98ab-6c0ef69baff3",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "8ff39036-00e3-49d2-9da0-5222bf4f5f24",
          "status": "Created",
          "code": 201,
          "responseTime": 24,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59eaddd0-8ba7-4bc3-be18-b959ade14364",
        "cursor": {
          "ref": "1810e9cd-a00e-4ae7-abd3-f6090692a198",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "19d46c33-f060-4ce5-9f24-bb47ba99319d"
        },
        "item": {
          "id": "59eaddd0-8ba7-4bc3-be18-b959ade14364",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "deee6f88-f09f-4c6e-b150-a319ea7502d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59eaddd0-8ba7-4bc3-be18-b959ade14364",
        "cursor": {
          "ref": "1810e9cd-a00e-4ae7-abd3-f6090692a198",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "19d46c33-f060-4ce5-9f24-bb47ba99319d"
        },
        "item": {
          "id": "59eaddd0-8ba7-4bc3-be18-b959ade14364",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "deee6f88-f09f-4c6e-b150-a319ea7502d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888e8bc2-ade9-4ed4-9ce5-59f4c6ff7fbb",
        "cursor": {
          "ref": "27c504b7-44b9-4967-9509-6f9e425d41a1",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b723d397-5eca-4829-a967-774940a7ef1e"
        },
        "item": {
          "id": "888e8bc2-ade9-4ed4-9ce5-59f4c6ff7fbb",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "fc46e794-ea02-4db6-b8dd-1d58ee046271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f503e02-7e0b-429d-930c-8ab63851cee8",
        "cursor": {
          "ref": "5a60bbfa-031d-4b94-8235-89cb5e6d737b",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a1a5dad1-2b78-4f1f-af5a-845c52e73191"
        },
        "item": {
          "id": "4f503e02-7e0b-429d-930c-8ab63851cee8",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "980cfe2b-6e66-44c8-8f0c-e120d44d07f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05acf07-9718-4767-9b65-4f71e51f086d",
        "cursor": {
          "ref": "bc795282-28d5-4540-91e4-4abc006a095e",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "efe51621-d633-4b71-922a-9d483e849bbf"
        },
        "item": {
          "id": "f05acf07-9718-4767-9b65-4f71e51f086d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bb3f8c03-3dea-4724-b101-fcb46c6a8cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "027d29d8-c26a-49e2-9adc-5e4f4dbcc97c",
        "cursor": {
          "ref": "a644242f-c194-493c-b4cc-d64942442fd4",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "2147eca4-5a6e-4f01-b13c-516b59b145dc"
        },
        "item": {
          "id": "027d29d8-c26a-49e2-9adc-5e4f4dbcc97c",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "0e4ef9e7-4b82-4a98-8445-cd2e7a7ca5b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7c376d-99a1-478a-939e-f7a6c44235ef",
        "cursor": {
          "ref": "b0c6cc15-8d47-45dd-8710-234613eaf6e5",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "5e39e3e6-1ec6-4d3d-bc03-fb6a4daa0f88"
        },
        "item": {
          "id": "6b7c376d-99a1-478a-939e-f7a6c44235ef",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e8fc4fe4-d884-4a05-9a14-c43101da4bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40ab87d1-aad8-4717-9e54-a25542748202",
        "cursor": {
          "ref": "23aa1ff2-1903-4a46-88bc-b903f8a82107",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "fa779316-7fa6-4cd9-a04b-1d63ecc7c8b4"
        },
        "item": {
          "id": "40ab87d1-aad8-4717-9e54-a25542748202",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d68b09bc-e662-47b1-91cf-78a49999de37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c5547f8-53f2-4463-b1c6-fb5bc7cf0f80",
        "cursor": {
          "ref": "31424813-4de8-4ebf-957a-1b8af5a49cce",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "bcd8c548-2884-4542-902e-8c849add1402"
        },
        "item": {
          "id": "0c5547f8-53f2-4463-b1c6-fb5bc7cf0f80",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0a0f5e28-0e3b-4260-a462-a8cbf1d47940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f0a51d-ee64-46bc-8693-185e14de1893",
        "cursor": {
          "ref": "beb665ba-f49c-4c1a-9a48-aa2e340901d9",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "0fd5922e-9de2-406b-8403-bf0cf58d83d2"
        },
        "item": {
          "id": "a2f0a51d-ee64-46bc-8693-185e14de1893",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "c1546ad0-dae5-4a80-9734-8f1176358308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "566900c4-4c73-446f-acef-7429448dbe2c",
        "cursor": {
          "ref": "08f9b11e-fd87-477d-8698-e8dad5324fbc",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "024d33c0-fd29-4835-9789-ef449e43c687"
        },
        "item": {
          "id": "566900c4-4c73-446f-acef-7429448dbe2c",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "20604b88-c9b3-460e-a62c-6b602aafeb6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4effed55-f33b-47f3-9253-e90248aa0c76",
        "cursor": {
          "ref": "b7d5bd1b-09e5-4140-ade0-6c1748f61d07",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "d0214f8d-5850-4cf0-9046-2903b1785df1"
        },
        "item": {
          "id": "4effed55-f33b-47f3-9253-e90248aa0c76",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "4896517d-fdb9-4658-a424-0ddc22a96c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1c9f0d3-2735-45f5-8501-d4a0b5583d95",
        "cursor": {
          "ref": "1852cd27-7741-4908-92c9-9f942fc696ba",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3be85c3a-63bf-4983-8ab0-642eb5d95feb"
        },
        "item": {
          "id": "b1c9f0d3-2735-45f5-8501-d4a0b5583d95",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9aaaa87d-c27c-41ec-afca-bb885ec5372e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3974b98a-c647-4edf-9942-c10ee4ef6726",
        "cursor": {
          "ref": "5b8e993d-f00e-4108-8b18-cb280a1d51aa",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "80a2b2a7-ccbf-44b7-91d8-c767814720a7"
        },
        "item": {
          "id": "3974b98a-c647-4edf-9942-c10ee4ef6726",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e7354abb-e415-4ccf-8f3e-151c40371fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ff33ad5-e004-4b8e-8b62-246ffa1d6bba",
        "cursor": {
          "ref": "e6b0b5ad-7c82-4b3f-87c8-398484547658",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2c5e580d-1e2c-42f8-a9b9-558b8a32a569"
        },
        "item": {
          "id": "2ff33ad5-e004-4b8e-8b62-246ffa1d6bba",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "48879473-fb79-4191-8cf3-3f15fd1d733f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccf78aa9-24b8-4004-84f5-e3632ab76b6a",
        "cursor": {
          "ref": "974850e3-d93a-4ada-8bba-f5c7fc7cbe5f",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "da09ee75-75e5-45ef-ad5e-e28d9b8f4d95"
        },
        "item": {
          "id": "ccf78aa9-24b8-4004-84f5-e3632ab76b6a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "aac6fdc2-6d42-416e-ad79-7566d41e999b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be4204b-fcd4-40d8-ab34-6294fd565236",
        "cursor": {
          "ref": "e72ab8ab-d9bb-4cf9-ac79-a0f992f6734f",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1822037d-18ca-4e56-9668-6108b268a0bd"
        },
        "item": {
          "id": "8be4204b-fcd4-40d8-ab34-6294fd565236",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "66859c28-fb52-4e49-a50c-0d0bbc3b1743",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07ad9d8-d841-47aa-a6b6-d2ff6de2da84",
        "cursor": {
          "ref": "995c94da-17e8-40d6-aa32-36d60f23b44d",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4dcbe250-c805-4e6d-a6f3-454699fec0b5"
        },
        "item": {
          "id": "c07ad9d8-d841-47aa-a6b6-d2ff6de2da84",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8aef0590-5ff3-40f0-9103-23991e015c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2462dd8b-e5c3-4b78-ab6e-f7674ebf833b",
        "cursor": {
          "ref": "8885a28e-4087-481d-9b98-e50c490e9ba9",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "bb3f5ad3-c63f-4693-b168-8b888afb255f"
        },
        "item": {
          "id": "2462dd8b-e5c3-4b78-ab6e-f7674ebf833b",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c126438b-61f4-4144-a533-faaf5bcc547b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1daa19f0-9d1f-4d47-b3aa-1570ba93c990",
        "cursor": {
          "ref": "e87e1bf4-f66f-4803-9265-e48e678ca0a7",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "466ebb59-90f4-4ba2-93c1-ad49fd69714c"
        },
        "item": {
          "id": "1daa19f0-9d1f-4d47-b3aa-1570ba93c990",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "474f9301-2479-46d9-996e-8b0422973ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3ca87c-4f01-4f63-9d85-9d3401520885",
        "cursor": {
          "ref": "e2cddee4-3a59-4472-afb5-e64a5d78d14d",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5fa03537-0f47-4d7a-a500-1445c72a542d"
        },
        "item": {
          "id": "3b3ca87c-4f01-4f63-9d85-9d3401520885",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c33cb337-c02c-41e8-8b2f-b4261860e00f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e1e076d-64a6-4425-a802-98d522b043f2",
        "cursor": {
          "ref": "f0c3692f-686d-4cda-ba95-f82cc9acd7fe",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "13fe4f76-87f2-4ec5-a165-8751993b5b69"
        },
        "item": {
          "id": "8e1e076d-64a6-4425-a802-98d522b043f2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "327d726a-f768-4c73-9f10-35a7761d1243",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0edb0faa-7fed-483b-8a94-db13c70b0417",
        "cursor": {
          "ref": "b6a79467-ed21-46f2-9086-a02aa0e6ec68",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "bbe54d96-44d9-44b2-a648-181a90b49349"
        },
        "item": {
          "id": "0edb0faa-7fed-483b-8a94-db13c70b0417",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "060dd61b-8ba4-4412-b936-e71c1c04d467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a2a3a3-9f86-4ab7-80a3-b1cf59d083e5",
        "cursor": {
          "ref": "b21c32f0-19da-43ca-a11c-8412c30e1fa8",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a1836396-1ebd-421f-ba99-7d2fde4fee63"
        },
        "item": {
          "id": "c6a2a3a3-9f86-4ab7-80a3-b1cf59d083e5",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5bbd1f29-266f-4d23-bb70-c1711ea8a1b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ba16544-b4c9-4039-884f-9d8e7acf3e8e",
        "cursor": {
          "ref": "9db1d961-cac9-42f4-9064-d39ed2b60ce7",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "c3d17141-170e-4370-9cf7-e88a187af10a"
        },
        "item": {
          "id": "2ba16544-b4c9-4039-884f-9d8e7acf3e8e",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d0b10ff8-7f56-47c6-98d2-074cc724daed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f695f7a8-d465-4365-af90-252ee82173ea",
        "cursor": {
          "ref": "fc05005b-5d5a-4ebe-929a-4407aa1b42a6",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "154b2651-5ddd-490f-bf4e-1af5719dfa6b"
        },
        "item": {
          "id": "f695f7a8-d465-4365-af90-252ee82173ea",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b4f579e9-a044-4c01-9396-b796e4b90214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54f8be42-d178-4476-b0cc-d451b9038085",
        "cursor": {
          "ref": "695c3a07-3ab6-4540-85d8-4eefa2df7bb7",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0ca6e1e3-e1eb-469e-aa03-a8330fc64ebd"
        },
        "item": {
          "id": "54f8be42-d178-4476-b0cc-d451b9038085",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3781dafc-a369-4b81-8003-9f9dcfd1c3e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ce692e-3b86-49c2-b842-f6c8655c455b",
        "cursor": {
          "ref": "78b63027-4667-471e-a376-25ee30974662",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "5cde021a-b067-4dae-84f0-00031f34315c"
        },
        "item": {
          "id": "25ce692e-3b86-49c2-b842-f6c8655c455b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1e64ee32-88e2-4822-8541-4b98d2e8eeac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b798cea6-71f3-427e-a5f1-b9d6bc51c846",
        "cursor": {
          "ref": "6ffc2ff8-4f11-478a-9a63-2e0cbcfb0e4e",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "4a69d36c-f544-487a-9c81-63351e8f2f80"
        },
        "item": {
          "id": "b798cea6-71f3-427e-a5f1-b9d6bc51c846",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "58d24ee9-eaa9-45cd-90f2-3db05e33e107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcb1da88-db8e-41a9-862b-7c2546690e93",
        "cursor": {
          "ref": "c84ed312-8276-4542-8dd6-751b1fdd0a1c",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "a80641ac-b3c1-4bdd-b10c-3583609250b5"
        },
        "item": {
          "id": "bcb1da88-db8e-41a9-862b-7c2546690e93",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "f3d9e164-b564-4dcf-9efc-226d296035e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdc3adb2-616a-4a95-b802-51bcb4e3171e",
        "cursor": {
          "ref": "a2c0bd5a-ec54-45cc-a7d2-1f9cfaff6e59",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "9678c53b-3f50-4231-a79c-e55545d5d552"
        },
        "item": {
          "id": "cdc3adb2-616a-4a95-b802-51bcb4e3171e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "69c81033-02e4-42c5-84af-3586ac4a7acd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b360d96-08a6-4604-89be-5edeb55571af",
        "cursor": {
          "ref": "46f588dd-79c4-4527-b5f3-f956b309f967",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "e6e3a5f3-042b-4647-9eb8-55934d8970a6"
        },
        "item": {
          "id": "3b360d96-08a6-4604-89be-5edeb55571af",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b1234159-7b7d-4fb7-8ac5-aacf79995dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39b3e178-780f-4054-8d97-75b7e6242644",
        "cursor": {
          "ref": "9c5c4e95-6427-4923-b4d3-df004b0d3911",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "83af7433-957c-49d2-8301-26768c0fc15f"
        },
        "item": {
          "id": "39b3e178-780f-4054-8d97-75b7e6242644",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "d66d13bc-897f-4c61-a6fd-0561c00cccc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91688aa5-7344-4572-a8a9-03d327cc5d3e",
        "cursor": {
          "ref": "00cec282-ad5d-4c69-ae62-f6948d1ff74e",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "bc403a6a-ea5e-49e0-98b4-c1f9608547ce"
        },
        "item": {
          "id": "91688aa5-7344-4572-a8a9-03d327cc5d3e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3ee084ca-d2e7-4cc2-ba09-50ceb84328db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71b7456b-9bbb-4cb8-bac2-56d48c68545d",
        "cursor": {
          "ref": "0c09df53-d13c-4251-bc57-6366dd47e775",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "68788669-eae2-4bbe-9c15-c7a6c910de06"
        },
        "item": {
          "id": "71b7456b-9bbb-4cb8-bac2-56d48c68545d",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "42450be1-f0cf-4292-9e26-3a7f363fe2b2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 3,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee052211-24fd-4162-be2b-59c1a139a30f",
        "cursor": {
          "ref": "b43ca662-0e86-43d0-9657-00efc92b3a4b",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2a223ed7-fe2c-46a4-af48-90c218fe43db"
        },
        "item": {
          "id": "ee052211-24fd-4162-be2b-59c1a139a30f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8cde9b88-5cb0-4e77-b776-5e08b5d70e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee052211-24fd-4162-be2b-59c1a139a30f",
        "cursor": {
          "ref": "b43ca662-0e86-43d0-9657-00efc92b3a4b",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2a223ed7-fe2c-46a4-af48-90c218fe43db"
        },
        "item": {
          "id": "ee052211-24fd-4162-be2b-59c1a139a30f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "8cde9b88-5cb0-4e77-b776-5e08b5d70e56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c9d0ec3-690e-41ea-bc81-475d78f34fb0",
        "cursor": {
          "ref": "0414dbda-89ab-4701-ae0f-5751464ca8a4",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "9707721a-b631-4013-8e81-7cbbcba833f1"
        },
        "item": {
          "id": "4c9d0ec3-690e-41ea-bc81-475d78f34fb0",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "d4c49e73-c0e8-4358-a74a-27f26b77aa89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d1e73b2-c48a-44f1-a753-bfab326dbf22",
        "cursor": {
          "ref": "a89b7de0-2828-47da-99e4-320a6fbf3a37",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "a5f352f3-e31c-4cba-8c38-c765f195dd75"
        },
        "item": {
          "id": "7d1e73b2-c48a-44f1-a753-bfab326dbf22",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7a6180d2-67d8-4e80-88d0-9aea9396594a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a4df24-c177-4197-92ca-91dcd59fa200",
        "cursor": {
          "ref": "f1214681-190a-4e1c-af2d-d74c1d580a46",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8612365f-07a0-4706-affa-4a7d1b965d91"
        },
        "item": {
          "id": "99a4df24-c177-4197-92ca-91dcd59fa200",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "89d4dc82-874f-488d-aa8d-1002536ed715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3162d8bf-5a31-4e2b-a1bf-f2b5a6e84880",
        "cursor": {
          "ref": "7dfb603d-b0bc-4876-9082-3e0b43be92db",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7b0ab7da-a153-4486-a37c-e0e99a6d6002"
        },
        "item": {
          "id": "3162d8bf-5a31-4e2b-a1bf-f2b5a6e84880",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "0796fa2a-2509-4e55-a60a-881e6a12bf65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b30b2b6e-8a1e-4d88-9620-11a2ba66aa2b",
        "cursor": {
          "ref": "91bcbdaf-b44e-4f42-846c-b270f6bbdb2b",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "cc2cdb58-ed0d-4316-837d-9f4bd0b535b9"
        },
        "item": {
          "id": "b30b2b6e-8a1e-4d88-9620-11a2ba66aa2b",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "56c9671a-f0b2-4e62-8727-96b35f1c2daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c1e31f-4287-4a1d-9bff-5485d940914b",
        "cursor": {
          "ref": "35543137-fa57-44c4-913c-f4ba7a82f129",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "34ca724b-2ea1-445a-ae29-2fd3b870481f"
        },
        "item": {
          "id": "e1c1e31f-4287-4a1d-9bff-5485d940914b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "c823e1b8-aa3e-4e7f-ac8c-41e3dbcbf51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc83efe-51eb-4925-9746-c8e80ade82a3",
        "cursor": {
          "ref": "8b47ab9e-e331-4c09-8de9-ba0f39ca2857",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3061dd9a-91b3-440e-b1ad-cbb14e8e14cd"
        },
        "item": {
          "id": "fdc83efe-51eb-4925-9746-c8e80ade82a3",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "f662e1d3-c0e4-407c-9d90-e9529fcb03a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b77724-7bc8-46d7-b639-6db3e49158de",
        "cursor": {
          "ref": "f885c4c9-d0ed-41bc-8487-637f7300ca60",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "b91fc1cb-1db8-4f70-8cc9-b984ee314856"
        },
        "item": {
          "id": "31b77724-7bc8-46d7-b639-6db3e49158de",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "8674aecf-6166-4e95-bf6f-7cc92e446b5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c31b3c02-1c82-4628-8bcd-56f1b3b3209f",
        "cursor": {
          "ref": "49b81cb9-7918-414b-ae5c-a19bc3e82b70",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "8610e90e-3544-46fd-a58a-876b34d50045"
        },
        "item": {
          "id": "c31b3c02-1c82-4628-8bcd-56f1b3b3209f",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ce5879f5-ed8b-49ad-83a7-fbc73be33ce9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c3b4f3-42cc-44b8-820f-3ba39de559bd",
        "cursor": {
          "ref": "e62fce21-9a2f-45ab-8d3b-efd1f246b1f2",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "7a806b71-db07-44e4-a7ae-c20debb8e53f"
        },
        "item": {
          "id": "29c3b4f3-42cc-44b8-820f-3ba39de559bd",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c17a71c9-8255-4796-9d15-9893c126cf59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b93d57c5-6e57-4e8d-b1b8-9e643cb9722f",
        "cursor": {
          "ref": "5c687ea0-7e7d-4499-bf63-1cc683f0bedb",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "2467bae1-9ea0-44b8-83fa-e50e6501c33e"
        },
        "item": {
          "id": "b93d57c5-6e57-4e8d-b1b8-9e643cb9722f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b6b820c7-9cfa-42cb-97fe-7f4093eec77f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b8397b9-2f00-4813-ad95-9e3ddfb1677b",
        "cursor": {
          "ref": "7111cee9-2a15-4ef4-ad7e-df5e66182a26",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "cd1cf096-ddb3-4148-99de-aec1f20e18a0"
        },
        "item": {
          "id": "3b8397b9-2f00-4813-ad95-9e3ddfb1677b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "0c447ec9-11fb-4aad-882c-a7761ab8a8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7662cf7e-3256-4d2a-852f-120952fdde62",
        "cursor": {
          "ref": "fc055ce3-b624-4a39-8aa4-9a360d9135b2",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7924133b-4f27-428a-ba82-5953573a332d"
        },
        "item": {
          "id": "7662cf7e-3256-4d2a-852f-120952fdde62",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "7232e467-f26e-465d-9bfe-7c39a430fa39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7517a55-8ec8-47db-b994-e62d7db7c9ad",
        "cursor": {
          "ref": "3af26f79-9268-48f0-9be0-52f58c753f11",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "e8650bbc-5638-4bfc-8921-2bb7f81877ac"
        },
        "item": {
          "id": "e7517a55-8ec8-47db-b994-e62d7db7c9ad",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "a046fda6-85fb-4105-a86c-9bead23bc43c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd4ee853-c033-4437-a3d8-21b1a5278dfe",
        "cursor": {
          "ref": "ac796aa0-62c1-4d17-b7fa-c3ba6b5b1bd0",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9326621f-2555-467a-9bc8-dd1ee9e169a8"
        },
        "item": {
          "id": "fd4ee853-c033-4437-a3d8-21b1a5278dfe",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "e01a4f48-8ec2-4510-b3b7-b942f359ab5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7763958-35f7-47dd-b529-4d975173ee42",
        "cursor": {
          "ref": "65d2dd8a-dfd1-404b-a5fe-454f2b8bf8be",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "6fc4cf33-e7d1-4523-a055-79d5f178ebf2"
        },
        "item": {
          "id": "e7763958-35f7-47dd-b529-4d975173ee42",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "6ece9f74-fde3-472c-bc0e-08a09d80e3d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3c14aa-cd44-4825-91ed-5297ba5f6fd3",
        "cursor": {
          "ref": "9909e06d-ca80-4bdd-826d-ecd06cc127a5",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "6a84a761-0ce6-44df-a0eb-192a262d27c7"
        },
        "item": {
          "id": "9a3c14aa-cd44-4825-91ed-5297ba5f6fd3",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4fb397e4-c4ff-4ab7-a8c1-01c4b7a503dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c78f9402-e92b-48c8-a0c6-b2f5687c9fca",
        "cursor": {
          "ref": "39e9f905-51e9-492c-bc9f-78e5ac509e68",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1b8be312-f276-4068-b4f4-84a09bbf12a8"
        },
        "item": {
          "id": "c78f9402-e92b-48c8-a0c6-b2f5687c9fca",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "5f2dc83b-d0bb-475f-ab7e-da94d98c5fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0035f663-ef09-4f1d-8f89-a4fc5d551878",
        "cursor": {
          "ref": "c6240360-eace-4163-a617-44e68ca1bb3e",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0e87b942-4a94-4d20-b9b3-9d8420f29fa1"
        },
        "item": {
          "id": "0035f663-ef09-4f1d-8f89-a4fc5d551878",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "0550a6d4-f208-4ed2-b7d2-b9434d0bc663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36bfaaf6-2e50-471a-b8d0-022df6f85532",
        "cursor": {
          "ref": "354dfdf1-c4e6-4ceb-994b-1090237d7700",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e0b57dad-509a-464b-8227-f274a4d76da1"
        },
        "item": {
          "id": "36bfaaf6-2e50-471a-b8d0-022df6f85532",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "947eb301-788d-4051-beca-bd123908b9e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad921aff-13e9-43da-afb6-33891c5a6ed0",
        "cursor": {
          "ref": "4c9cf6dc-a370-4836-b395-65fc1a200de8",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "0bf005e7-48a5-40db-ad18-c188ef7e5926"
        },
        "item": {
          "id": "ad921aff-13e9-43da-afb6-33891c5a6ed0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "084a1043-0918-46cf-9084-dbd52d325a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "601d12f9-e9a3-4300-8361-8c2289c9ea69",
        "cursor": {
          "ref": "0170d136-7163-438d-96ac-d67d866ff637",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "b6dcc05a-a0f5-4e40-8564-b54c099aed39"
        },
        "item": {
          "id": "601d12f9-e9a3-4300-8361-8c2289c9ea69",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "21cc7b02-ff87-4e01-b5fa-f3bccb37d570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9cb021-8273-4438-8b3a-6f41eaca1087",
        "cursor": {
          "ref": "384ce276-7b33-4d32-a050-5044de6ec5f3",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "59b85276-f157-4c51-8f1f-601bb2d6fa43"
        },
        "item": {
          "id": "bc9cb021-8273-4438-8b3a-6f41eaca1087",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c25f74de-82e2-4ef1-b0e1-d867fa4b9a18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab26f6c-b402-467f-97f4-04b74d879607",
        "cursor": {
          "ref": "e4a1138e-f571-409f-90dc-3d18a69f0917",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "18ba414a-90b2-4951-b649-514c7e2bbeeb"
        },
        "item": {
          "id": "7ab26f6c-b402-467f-97f4-04b74d879607",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "0ed0e4f3-6d51-416b-bc63-e4e3a2ed5646",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f0f663a-3317-4416-87d2-acdee4f528a8",
        "cursor": {
          "ref": "e296f708-78d5-464a-ba69-b7cb291824af",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "29efd38d-fe5c-4cba-a94b-a634895da7ab"
        },
        "item": {
          "id": "1f0f663a-3317-4416-87d2-acdee4f528a8",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "35748baf-e88c-4b52-8acd-9a3611d74dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "188d10d9-5ee8-40c1-a33f-9abb7fffa563",
        "cursor": {
          "ref": "09b65a0d-34e0-47ea-93cd-b0daddd54103",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e962fa6b-7914-4fb2-a120-07e61d0094a4"
        },
        "item": {
          "id": "188d10d9-5ee8-40c1-a33f-9abb7fffa563",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "58a009e2-7aa7-4d55-9f42-d50cb76c623a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a6e5a4-967f-453c-b05c-6870d0ef6cc7",
        "cursor": {
          "ref": "9fc82633-a681-4b0c-ab39-201844b0f768",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "9cc258f9-25d7-45b3-9ba7-4764b43785b9"
        },
        "item": {
          "id": "21a6e5a4-967f-453c-b05c-6870d0ef6cc7",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "3756726b-38b6-4c5d-aca9-0ac18a5821ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da71680e-114b-4805-af68-3320f9cd24d8",
        "cursor": {
          "ref": "d32f8f3c-3bbb-4d43-8c2d-36aedd7ecffc",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a8795c0c-1075-4b6b-8326-f963355c13b8"
        },
        "item": {
          "id": "da71680e-114b-4805-af68-3320f9cd24d8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "6b89245d-5525-4709-b11d-323001c44165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4edefa96-24cb-4b5a-a359-ac7fefec9535",
        "cursor": {
          "ref": "35eb4ede-7c44-4e0d-b243-f84873b473f1",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "696c2848-b146-4984-813f-c907a44bd578"
        },
        "item": {
          "id": "4edefa96-24cb-4b5a-a359-ac7fefec9535",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "b477ac1c-4641-4b39-9d03-d25214e64b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf8e8e5a-350e-45c9-a1f2-3fd4850cb9c6",
        "cursor": {
          "ref": "34bf7b1a-fae1-47f2-a9f8-953df2a687e1",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0a1ffbef-ee4c-4817-b203-7ca330d73a50"
        },
        "item": {
          "id": "cf8e8e5a-350e-45c9-a1f2-3fd4850cb9c6",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7559a3b4-4bf9-4ef4-90d9-4f45e75cfaf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4e56bea-de95-472d-a4bf-ca6c9796b8e7",
        "cursor": {
          "ref": "d5eb418c-3513-42ac-aad8-42233ef2a849",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "aa58e12b-483b-4ec8-9ecb-e56f6027ca8d"
        },
        "item": {
          "id": "c4e56bea-de95-472d-a4bf-ca6c9796b8e7",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "9815152e-bb29-4696-9696-35d658906ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0230d5-98a9-4f49-afb0-dfaed5bb7247",
        "cursor": {
          "ref": "0f439a54-8375-4961-95c8-398440904067",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "428ace46-21f3-4d44-a6b6-5e5a5936f9bd"
        },
        "item": {
          "id": "0a0230d5-98a9-4f49-afb0-dfaed5bb7247",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "40173c8c-487c-49ff-9f15-99c9a0af75b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8539b26-feba-4285-9de7-530a293702bd",
        "cursor": {
          "ref": "323ac491-159f-4e0e-80b6-767cda190876",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0fe79def-7b7c-468c-a4a7-1b65212fca4d"
        },
        "item": {
          "id": "b8539b26-feba-4285-9de7-530a293702bd",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a52e95c4-cf71-4c67-adc1-26c3655ce013",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f343dca-a7bb-4285-bb42-d0c0e52f4827",
        "cursor": {
          "ref": "b8ba0225-9904-4024-92e4-ac37823f6b3b",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "97107828-e06d-4dfd-9159-cb2407149288"
        },
        "item": {
          "id": "0f343dca-a7bb-4285-bb42-d0c0e52f4827",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "e7d8996c-8afb-4f61-aeb0-6018eb948e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f612d4f-c3cf-452d-aa34-816ec00a60c8",
        "cursor": {
          "ref": "82741f74-54bb-4048-9a04-3fc769e8e6e3",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "cdf6df41-0419-4c9f-8eec-21a5e3a4fa32"
        },
        "item": {
          "id": "9f612d4f-c3cf-452d-aa34-816ec00a60c8",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "027fb71d-02b7-494e-ada0-9dee520755a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73ddedd8-0be2-4c10-b2d5-3e9f1a005b43",
        "cursor": {
          "ref": "d9f03802-9700-45e4-9ff4-5f362adfc9d0",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "8b06fcee-c21a-4ae7-976b-2585834d4d61"
        },
        "item": {
          "id": "73ddedd8-0be2-4c10-b2d5-3e9f1a005b43",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "92c03c3b-902c-4cef-8c0b-8f0ea25558aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76bcb6a8-e579-4f47-89c4-5c0db94c0fe4",
        "cursor": {
          "ref": "ea04d056-04f2-4d87-8c76-2d45c9284773",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "19414382-a1c3-4e4e-a2bc-007ab4609c62"
        },
        "item": {
          "id": "76bcb6a8-e579-4f47-89c4-5c0db94c0fe4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b10c3048-b66b-4522-aefa-e38a99f9c8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe27055-8ccc-4dfd-aa24-ea8a3410dcbf",
        "cursor": {
          "ref": "3d083a02-10cb-485e-b94b-13458816c2d7",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9d1e8fcd-c562-4a67-a81d-74f5cccaa41b"
        },
        "item": {
          "id": "3fe27055-8ccc-4dfd-aa24-ea8a3410dcbf",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d29c2fd1-4ad5-4811-bd6f-87e98c1b7f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac0aee5d-d3be-4760-a2fa-de78be25d636",
        "cursor": {
          "ref": "a8b044e6-a551-4118-9859-88218a8e9dc7",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "51bf36d8-d1ca-4087-a26e-dc5bed9bf6fe"
        },
        "item": {
          "id": "ac0aee5d-d3be-4760-a2fa-de78be25d636",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5977f07e-8468-4d4d-89a0-f3c8cc5b6677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a07c7b2-9f0c-43e8-9e88-1fbde5748a3c",
        "cursor": {
          "ref": "c423920f-54b1-4b2e-81fe-39f890894e33",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3666fc11-b235-4615-8735-f45012265e73"
        },
        "item": {
          "id": "8a07c7b2-9f0c-43e8-9e88-1fbde5748a3c",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "60645d2b-6cc8-44d8-b04d-ec07f134314e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd0df8bb-9735-40fb-89c9-387955e1c64e",
        "cursor": {
          "ref": "4feefd86-adbf-48d3-8dc6-739eb25b3394",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "5fa4bc43-7642-472c-bead-f9ba8e1c3e18"
        },
        "item": {
          "id": "cd0df8bb-9735-40fb-89c9-387955e1c64e",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "43bb4e38-45ed-49da-93b9-f57849da7e6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83edb2d-880b-4f40-90f1-5b1b0e20b15c",
        "cursor": {
          "ref": "1806e01b-d8e9-4314-9e5c-670d63467361",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "9f2de9d8-5060-4c66-b2f9-775fe44b37e5"
        },
        "item": {
          "id": "f83edb2d-880b-4f40-90f1-5b1b0e20b15c",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "950f08e1-19e6-446a-b6e4-3496a11aff7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0764e84f-03ac-4ab3-a728-d83774de4861",
        "cursor": {
          "ref": "7d4dd1a6-66b3-4d65-8f3a-cfd7376000e2",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "fbb9c0b6-8c75-46b5-ae0b-ab8c8c6ccf80"
        },
        "item": {
          "id": "0764e84f-03ac-4ab3-a728-d83774de4861",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "fa550dd3-b18a-41c0-85ea-160805391989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f539587d-8b3c-4c00-8688-ba578d8ed537",
        "cursor": {
          "ref": "e3a80c4e-2e7d-49ee-a0a6-d73e79b96f01",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "040840b9-0b63-4ea5-8301-4a19a51d5317"
        },
        "item": {
          "id": "f539587d-8b3c-4c00-8688-ba578d8ed537",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "24700b7d-9bd3-42f3-9284-20b1abdfffb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ba435c-66dd-4960-b728-aaaeeba857fb",
        "cursor": {
          "ref": "1ee1b35b-094d-4d88-a707-dede52d18a40",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "e8db90bb-1787-47f7-980f-c4512a2cfe0b"
        },
        "item": {
          "id": "f8ba435c-66dd-4960-b728-aaaeeba857fb",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "df4acdef-a890-46ef-b86d-ff967d8cc518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34921e92-3b4c-42e2-ac89-b7158bb87964",
        "cursor": {
          "ref": "6b39badb-fc07-4fa5-879e-2fb661ae4797",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "31eb2512-866c-4651-935a-9faf3b1480ae"
        },
        "item": {
          "id": "34921e92-3b4c-42e2-ac89-b7158bb87964",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c8ded3c7-f6d5-4731-8d78-89d62a13b33c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61c67d27-11f6-4cf7-beed-29f67d44f608",
        "cursor": {
          "ref": "6cd4942f-6040-4b64-befd-dfe3b5d6967f",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a1cd3d43-4621-471f-8040-20b9a54c0c94"
        },
        "item": {
          "id": "61c67d27-11f6-4cf7-beed-29f67d44f608",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "3b2803e8-008f-4ac4-90bb-dc5f96926d3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f3c3431-bcd4-4613-9bd9-9166ca34191e",
        "cursor": {
          "ref": "9eeb0e8b-c43d-4c5b-b5f1-249833f94599",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ef9684d7-46ee-42b3-a58e-b1f40a383915"
        },
        "item": {
          "id": "1f3c3431-bcd4-4613-9bd9-9166ca34191e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "219e88f5-90ea-4e41-bdc4-16d800228a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b331550-8433-4cc8-913b-f4f0737d6754",
        "cursor": {
          "ref": "e4aea8dc-7268-4357-be29-7d17ff1c0165",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "0da8276c-e81a-4ed5-9b69-aa6bc0341fc4"
        },
        "item": {
          "id": "0b331550-8433-4cc8-913b-f4f0737d6754",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5042cbec-196c-45dd-b042-27a6a2670779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "044dc7fb-3283-478d-b8ae-b6e3ce47fe7c",
        "cursor": {
          "ref": "25d2b8a9-fb7e-4b6a-aea5-62e64058e321",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "67ff4fbf-80a9-4438-a106-fcefd9128794"
        },
        "item": {
          "id": "044dc7fb-3283-478d-b8ae-b6e3ce47fe7c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9f465df5-6849-4625-b40a-3e1cd5975632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a240c39-9f4c-484e-8a94-c0d23da5a44e",
        "cursor": {
          "ref": "6349a094-d906-4bff-9028-673970c68d89",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c1dbafc8-059f-4422-a74c-912f39e777df"
        },
        "item": {
          "id": "1a240c39-9f4c-484e-8a94-c0d23da5a44e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "ca8a52fd-0535-4d50-8f95-99d272c269d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42de58b6-bb00-46fa-b99b-0a907ca164ef",
        "cursor": {
          "ref": "3d04ea0f-2e81-4b6d-96a1-1a04f0155828",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "e8c06993-2855-4704-a5f0-dc18ede7c602"
        },
        "item": {
          "id": "42de58b6-bb00-46fa-b99b-0a907ca164ef",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "05532fdf-ba0f-4453-8491-a72b57e5a471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "980cc213-7a92-4dc5-a5d5-3fd45a1cfc66",
        "cursor": {
          "ref": "c32c6377-4dc3-47f6-acfb-38bdc41f7712",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "63f0b7fd-9ec5-4fdc-a00a-ab260bb7e789"
        },
        "item": {
          "id": "980cc213-7a92-4dc5-a5d5-3fd45a1cfc66",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "35d45aeb-3a4e-420f-a8fa-d99f65d9d218",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "382e816f-6078-4c38-88b1-48efdff7cdf4",
        "cursor": {
          "ref": "6f562c18-5b45-42ed-a13d-2373dc02aeb2",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "2cca83d0-3883-4eb4-8837-883a06eb7cfd"
        },
        "item": {
          "id": "382e816f-6078-4c38-88b1-48efdff7cdf4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "75bd91ca-9497-4543-8c14-a6df44caa72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8179d4-75a4-4c49-a654-3650bb08bff8",
        "cursor": {
          "ref": "4c91e345-9453-44f2-8d5a-30765f0b9b31",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "2568876d-ed3c-4269-9360-b8ef97529dfb"
        },
        "item": {
          "id": "ad8179d4-75a4-4c49-a654-3650bb08bff8",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "51a3dc87-3ecc-4734-9695-b6246c474abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d50b2e-3a12-483a-aa92-3128949612de",
        "cursor": {
          "ref": "ddbe2cf3-17e4-4693-8399-782dce9ed2b3",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "126212b3-1829-4d05-af6d-6d63a49ca146"
        },
        "item": {
          "id": "a5d50b2e-3a12-483a-aa92-3128949612de",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "0387eeed-c777-4648-8beb-d0575f718148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "007e7b4c-c499-4678-8aa9-e0380b2573b7",
        "cursor": {
          "ref": "5ece2c3b-116c-4d28-8298-40d04833a9e6",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a9d63214-aeae-4ce9-9bf9-6ceea4614da7"
        },
        "item": {
          "id": "007e7b4c-c499-4678-8aa9-e0380b2573b7",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a949160b-4394-4534-9086-7ca94b12eb1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f372790-4efd-4d3e-8742-b3445d12d3c2",
        "cursor": {
          "ref": "ef207c47-ad8c-4e18-b5a0-d75822b11ef8",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "068c9cb6-7a67-4415-ba12-34021a2a829b"
        },
        "item": {
          "id": "1f372790-4efd-4d3e-8742-b3445d12d3c2",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "0ce68039-7a65-42dc-9d31-14234988ebac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0ab1be-33d2-4169-80a9-e6709d9e2ae6",
        "cursor": {
          "ref": "8c1843b4-cc61-4f50-a45d-bfe738ea7c25",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5f3014cb-a2db-49a1-9438-20d9533c7c1f"
        },
        "item": {
          "id": "fd0ab1be-33d2-4169-80a9-e6709d9e2ae6",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a2c2a48b-edef-4de2-8353-8c62f85a1cb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4437c317-d747-41dd-9b7b-731e03574190",
        "cursor": {
          "ref": "ced45270-c40c-4e71-9407-20894a04c988",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "761b4020-7382-42dd-a9e6-33d9b8c99057"
        },
        "item": {
          "id": "4437c317-d747-41dd-9b7b-731e03574190",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ec519a9a-e66b-4a2e-be61-41492aa10fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa34d159-81d8-4438-b1c3-389b73b9ce5b",
        "cursor": {
          "ref": "5de8b5a1-f184-4bff-aa46-b02ae157346e",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "da57a7de-6662-467a-9620-392337535f5d"
        },
        "item": {
          "id": "fa34d159-81d8-4438-b1c3-389b73b9ce5b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "109ce8d2-c099-4d2d-a8e3-def4eb85b675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "556ec9a4-10ac-4f04-a635-58f56d22c423",
        "cursor": {
          "ref": "e19fc3cb-7a72-4615-9b24-bc22df312f4f",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "a8e6a57d-af4a-4210-abe8-15c2c63236d5"
        },
        "item": {
          "id": "556ec9a4-10ac-4f04-a635-58f56d22c423",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "75aca625-f353-4def-a2f0-7ab13e694e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbb3da70-211b-44d5-89b2-1f8650d8db5d",
        "cursor": {
          "ref": "de9f77aa-eceb-4f10-a49b-02562af4127f",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b6c2355d-ffdc-43db-88f2-522231b11079"
        },
        "item": {
          "id": "dbb3da70-211b-44d5-89b2-1f8650d8db5d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f6045086-6665-414b-9a15-56ff4eaa872f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3fa2a67-8e80-4cda-86a0-1ec357036125",
        "cursor": {
          "ref": "762333bf-4621-4246-a00d-5ca48ad8c3b5",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "cbe84c3d-18c8-4177-88de-d8362fa5ac19"
        },
        "item": {
          "id": "f3fa2a67-8e80-4cda-86a0-1ec357036125",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "2c428ccb-8bd4-47e4-967f-8bef91b7b350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d88e10a-9b35-4ac8-a23a-69f32b6bb17a",
        "cursor": {
          "ref": "54b31dea-f7d1-44ac-b795-07c51511d1a9",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "19d7d385-c1f3-4716-ad91-531146d2ad6a"
        },
        "item": {
          "id": "9d88e10a-9b35-4ac8-a23a-69f32b6bb17a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "295d4a0c-4e34-4ee6-9eb3-1470bda61e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0852c38f-77c1-4949-b389-7e27c8bfd217",
        "cursor": {
          "ref": "fe2e4eec-bf55-406f-882c-28cd3b2d491a",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3431d3a2-fc98-4a8f-9e16-7e3bf7846335"
        },
        "item": {
          "id": "0852c38f-77c1-4949-b389-7e27c8bfd217",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c14569fb-ad00-41e3-8660-ff5128897275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e46b7b1-bd36-45ec-859e-f1e87caf03df",
        "cursor": {
          "ref": "fa148c24-b443-4b88-95c4-e4654fb3fd52",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "745dd4f4-b21b-4aaa-9b44-f26968d2538f"
        },
        "item": {
          "id": "2e46b7b1-bd36-45ec-859e-f1e87caf03df",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "19a43a97-7041-4fe9-9dbb-c09e476a1df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e417380c-667a-4f67-9639-1b0d89dcdeb5",
        "cursor": {
          "ref": "29e0eef8-cfc7-4aec-989e-81ae944b0263",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b1a56f93-ae07-4779-90b8-bafe18d871aa"
        },
        "item": {
          "id": "e417380c-667a-4f67-9639-1b0d89dcdeb5",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "331e114e-efcd-463c-b743-7351a3cbe3f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14dcf6d1-a575-4c9c-8e82-cd191033918e",
        "cursor": {
          "ref": "b184692a-3479-42ed-937e-58f397cb721e",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "e72f1a8c-34c7-4e62-8b3e-2d189c6720d7"
        },
        "item": {
          "id": "14dcf6d1-a575-4c9c-8e82-cd191033918e",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "78aaf506-f1f9-4bbc-a8af-e6c4da706462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9e3281-2f33-4f6b-a172-d98e7b5c3db9",
        "cursor": {
          "ref": "c310c797-a618-4279-9ae1-a92e9f313f2c",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c6b3ce4d-0089-4c1b-ab8c-c31e57ed67b7"
        },
        "item": {
          "id": "ca9e3281-2f33-4f6b-a172-d98e7b5c3db9",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "7e055607-01bc-4f21-a0e2-22345da02a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b2cbbf-1e52-4fbe-9ab6-5f68a9dc4eeb",
        "cursor": {
          "ref": "7aa13d2d-5b54-4cff-a905-442880a5edb6",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "48529961-1c9c-43d0-9352-a0153a39c0b6"
        },
        "item": {
          "id": "a8b2cbbf-1e52-4fbe-9ab6-5f68a9dc4eeb",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b24a5502-7c37-43ef-8076-87804e598209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27af20c2-ae22-4ac7-9ffd-0addaa375cb3",
        "cursor": {
          "ref": "5e6af3c9-239a-4d88-835d-9a41d444aeda",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "40076d24-d8c7-4921-b3aa-f4a91d5f95d3"
        },
        "item": {
          "id": "27af20c2-ae22-4ac7-9ffd-0addaa375cb3",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "3a4d5fce-a3d7-41d5-9059-14bf6ba58e1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5e7f4a-cd20-417e-9a05-ac68463a71e5",
        "cursor": {
          "ref": "bba345a1-deff-43f4-8a56-1d9846dcd1c8",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9d2f2e35-4114-46fe-a7df-ce7de1fa3f2e"
        },
        "item": {
          "id": "4b5e7f4a-cd20-417e-9a05-ac68463a71e5",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "073d13e3-eb1c-46e0-b9a4-2638db7e9492",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52441944-53aa-438e-9b25-39258dbcc12a",
        "cursor": {
          "ref": "5b7f8394-8d26-470e-b19e-523a33444337",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "538ede19-c1c7-46d7-b2fa-765c90b724b5"
        },
        "item": {
          "id": "52441944-53aa-438e-9b25-39258dbcc12a",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9b4775e0-b572-4eff-87c9-63d075b8226f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113ebbff-ba73-49fc-86d3-aa1e02001ce6",
        "cursor": {
          "ref": "39dd020b-9df1-42f9-902f-413373737ac2",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "d584b5f1-fa27-4648-aa82-c10aab35922c"
        },
        "item": {
          "id": "113ebbff-ba73-49fc-86d3-aa1e02001ce6",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "3fb0ffbc-8e47-4a5f-96c9-e355b056b09a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4ee1fb-a1f6-4285-99bb-24bc61ebb96b",
        "cursor": {
          "ref": "3ebdf956-3b7d-4500-b86b-89be6287226e",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8919f454-90bb-4655-82cc-d405e8a067ec"
        },
        "item": {
          "id": "7b4ee1fb-a1f6-4285-99bb-24bc61ebb96b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "aae44da0-ab60-45bb-9dd2-5531f179c4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c6c439d-0bc2-4c10-8aaa-28458e2dd435",
        "cursor": {
          "ref": "479fc8b3-4dcc-40e7-8492-5133ec1855d0",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "bf392048-6ed3-45e2-a2c6-f54678adc9f4"
        },
        "item": {
          "id": "2c6c439d-0bc2-4c10-8aaa-28458e2dd435",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "860a7d2c-acba-4f5f-9137-0994363fe113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efd24006-9687-4280-be6f-255427150135",
        "cursor": {
          "ref": "2347c0ab-4b15-4bef-bbcf-48f02a38bc49",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4956daa7-b879-4729-b1a8-c24a90c8969a"
        },
        "item": {
          "id": "efd24006-9687-4280-be6f-255427150135",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "0489e473-28a6-4749-bcd3-89b43bd8d648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e59d0e8-454f-4dec-a270-1651c23b7315",
        "cursor": {
          "ref": "e4ea72a6-44df-4c18-ad28-b81e247caf1d",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "6a6acefa-c129-447b-add6-2d3429630c13"
        },
        "item": {
          "id": "0e59d0e8-454f-4dec-a270-1651c23b7315",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "ab637f2a-c887-4bf3-ace9-7af87a1612b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c77915-a34e-4f75-8ac3-51ba6bc7dfdc",
        "cursor": {
          "ref": "f39fb40e-8641-45ca-b0a7-ffd683cd4272",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e46a8102-4bf4-4af7-8594-958ddd9c627d"
        },
        "item": {
          "id": "e9c77915-a34e-4f75-8ac3-51ba6bc7dfdc",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "385553f3-6398-4ae8-9a07-45ad3beaf4c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbd93c3-baf9-44cc-a497-ee14a9935a12",
        "cursor": {
          "ref": "c2370ebf-72ed-4d35-b7fa-e7b563caab87",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "e9d28230-d2ff-4364-8456-49712247fcf7"
        },
        "item": {
          "id": "dbbd93c3-baf9-44cc-a497-ee14a9935a12",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "8c55ddd8-535a-4692-9cbd-b0f1f083c053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8da29dcf-b887-45e4-96c9-9e377d2e2319",
        "cursor": {
          "ref": "acf3fe18-7b54-470a-a51e-572bcee95320",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ea5f6bbb-565b-4b32-9f46-c9c747891410"
        },
        "item": {
          "id": "8da29dcf-b887-45e4-96c9-9e377d2e2319",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3fd3cfe4-8a8e-48fc-ba2a-4e07a8ba91d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "718c8edf-0ea3-4ad8-bffd-13233706eac1",
        "cursor": {
          "ref": "ca680dff-46c9-459b-b22f-13cce269d415",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e1cf8444-2abb-47bc-8fcf-803a25d46a41"
        },
        "item": {
          "id": "718c8edf-0ea3-4ad8-bffd-13233706eac1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "b36d616a-b176-4c2e-9860-cdb389f9a532",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3c7fe7-1fcf-4090-ae0b-c659f8ce2f51",
        "cursor": {
          "ref": "3ff6d342-30e6-4829-927f-f1bb69320760",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "af43017a-5111-4380-8830-c49a2276e7a4"
        },
        "item": {
          "id": "0a3c7fe7-1fcf-4090-ae0b-c659f8ce2f51",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "dc444956-09b5-4716-93fe-cd2ba306a131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5648440-b5c9-41f9-b46d-15f1e62373d1",
        "cursor": {
          "ref": "f36874ae-9033-451d-9a6f-a17a3f7be6f4",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "472d4687-fd71-4ffa-bcb5-ba6c984aaac3"
        },
        "item": {
          "id": "c5648440-b5c9-41f9-b46d-15f1e62373d1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "3248d20b-2596-437b-a05f-2d76c8c7cd12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de64f3b9-1ab0-4637-8590-89c0fbd047f8",
        "cursor": {
          "ref": "f4cbb1cc-68e9-4acd-b998-5506bff27d78",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0cd3dd12-3305-45f5-bae2-8a410f6a2dde"
        },
        "item": {
          "id": "de64f3b9-1ab0-4637-8590-89c0fbd047f8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f0fe80fd-4439-4a3a-80bc-56d4605ff0db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb615b4-bf51-4ae6-b0e5-73208fe78f76",
        "cursor": {
          "ref": "ecfa5f63-d707-40e6-a31b-f2a59a833f1d",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b53279d8-0c75-4f0e-98ab-ae8f292435fb"
        },
        "item": {
          "id": "5bb615b4-bf51-4ae6-b0e5-73208fe78f76",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "05d0d3b4-f9e3-46af-bc98-ca8a4c2faf69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2495534d-9e66-4717-980c-e1e803955728",
        "cursor": {
          "ref": "0ec007c7-f1fa-4027-9d14-3592d7c59be3",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "60ead0fa-0ebe-4963-a28f-ab1bed79b04c"
        },
        "item": {
          "id": "2495534d-9e66-4717-980c-e1e803955728",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a6316b0f-9471-4095-8145-8b84d3795608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80641c81-bdc9-4bb6-866f-0bd2712afbd6",
        "cursor": {
          "ref": "83a837a6-6171-45ef-ba97-dc2baac826d3",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "7c5fe943-0f2c-4a42-8441-2f74bc589738"
        },
        "item": {
          "id": "80641c81-bdc9-4bb6-866f-0bd2712afbd6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "95631b87-c869-42e9-9358-6a8e122175de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f05bd3a9-f663-4eba-9085-48914694b5d4",
        "cursor": {
          "ref": "470aee6c-2858-4c0a-a921-c58ef8dbd66c",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "61702899-ed64-46fa-8a48-fbbf5b70bb72"
        },
        "item": {
          "id": "f05bd3a9-f663-4eba-9085-48914694b5d4",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "cc4d6a0a-dbb6-4e56-8ed8-3e9a42511745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ff6d2d5-bc56-4b1b-9a07-73ea7956b006",
        "cursor": {
          "ref": "67869a0d-fe40-487d-862a-d147a1b0551b",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "bc73bedd-438a-4e3e-9f5a-2896347ef855"
        },
        "item": {
          "id": "9ff6d2d5-bc56-4b1b-9a07-73ea7956b006",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "06651f31-9c58-4aa0-a59f-9ebb88999341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec028df-07fd-4963-ae61-70c3832afe43",
        "cursor": {
          "ref": "9246a7d3-db5a-4a31-b863-49572633b75a",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ff050957-8362-41e9-8a2d-14e56a43c5e2"
        },
        "item": {
          "id": "8ec028df-07fd-4963-ae61-70c3832afe43",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "b2706779-8316-4b48-895e-8288eb6ad387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "208d7edf-3d67-4930-b27b-5015722713fd",
        "cursor": {
          "ref": "d7a03669-ee38-4f8b-ac4f-5fb5380dfffa",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "498673d4-416c-46e4-b05f-04f186aef997"
        },
        "item": {
          "id": "208d7edf-3d67-4930-b27b-5015722713fd",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f62ed18a-b4cc-464a-90eb-9886b728e337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed50fc6-6031-4788-978e-8e791f178c5b",
        "cursor": {
          "ref": "b31c0060-6d6d-4bd4-894c-980ed9f7d4dc",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "eaf4f981-2545-42af-8091-489db98154d4"
        },
        "item": {
          "id": "6ed50fc6-6031-4788-978e-8e791f178c5b",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "74c6419e-cbcf-41b9-af71-2c76b4b4af77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "562df86f-105c-45da-b45b-a42313103657",
        "cursor": {
          "ref": "e7acf9af-ffba-4b89-968d-65a4842609fd",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "2e9f6c55-0185-4bfc-b606-d0c6e29b68c7"
        },
        "item": {
          "id": "562df86f-105c-45da-b45b-a42313103657",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "2be8dde3-8230-49fc-884c-013514784b5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd3a521-95c9-43f5-957e-bbde9c06d177",
        "cursor": {
          "ref": "fa5e16b3-d8cd-4159-b2a6-38fb744e830f",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c400dcca-5d49-4dda-bce2-dfe605f8390e"
        },
        "item": {
          "id": "ccd3a521-95c9-43f5-957e-bbde9c06d177",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "832d9f81-3298-4573-a493-eb11065288a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28623d92-c27b-4aa1-baef-4b417f5d57d8",
        "cursor": {
          "ref": "4f33b7c0-8c33-435f-99dc-c9dea174d2fe",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "72194bf6-8007-4e42-be25-fc1194fe82c3"
        },
        "item": {
          "id": "28623d92-c27b-4aa1-baef-4b417f5d57d8",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "9041991d-9ef3-40f1-ac44-1b851a69b07d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "449a7e86-53d6-45d7-a075-bd629aceb8d8",
        "cursor": {
          "ref": "8b90cf8c-8216-4e56-89b7-93833120b775",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5f9d62b2-edd8-43a5-a01f-f174bda50f45"
        },
        "item": {
          "id": "449a7e86-53d6-45d7-a075-bd629aceb8d8",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "67c0a94a-2562-40f6-a2b2-da559ba2fe6a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfaf94c2-8c6f-4b53-8efd-9b0f66235792",
        "cursor": {
          "ref": "7562bd1e-dd62-4a66-81f4-92d3dfa6f305",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d2e1562e-9f28-4709-b2a5-248dafa9789c"
        },
        "item": {
          "id": "cfaf94c2-8c6f-4b53-8efd-9b0f66235792",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "20057747-f012-4a1c-9ce2-21e9d0f7cf84",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8489fd4-51eb-431c-884e-3b785cb339dc",
        "cursor": {
          "ref": "f5d4bf7f-c6ed-4c61-b70a-bf305311052d",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "33ce9c4d-591f-47a6-a447-d9f711b5f615"
        },
        "item": {
          "id": "d8489fd4-51eb-431c-884e-3b785cb339dc",
          "name": "credentials_verify"
        },
        "response": {
          "id": "4ae20aba-a113-4760-9cad-5aad3044b837",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb8ff99-141d-4df6-a982-c7dbcaa6d0c7",
        "cursor": {
          "ref": "a77f615d-d7de-4f1a-8cbd-494b67ba548a",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "451531f8-c50e-47ea-8dfd-2e6482ceb63a"
        },
        "item": {
          "id": "eeb8ff99-141d-4df6-a982-c7dbcaa6d0c7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "cea458e0-7426-46e2-a941-ae766dea30d0",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "871f4dfa-1222-42d3-b6ea-1e9e398b8bd1",
        "cursor": {
          "ref": "489a1e90-6b93-42c5-b77f-87379f17b0ae",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f07999ba-f38c-4455-8cb9-fa6b14ec1068"
        },
        "item": {
          "id": "871f4dfa-1222-42d3-b6ea-1e9e398b8bd1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ff41439f-55c4-4498-875f-b6868ab04423",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871f4dfa-1222-42d3-b6ea-1e9e398b8bd1",
        "cursor": {
          "ref": "489a1e90-6b93-42c5-b77f-87379f17b0ae",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f07999ba-f38c-4455-8cb9-fa6b14ec1068"
        },
        "item": {
          "id": "871f4dfa-1222-42d3-b6ea-1e9e398b8bd1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ff41439f-55c4-4498-875f-b6868ab04423",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "871f4dfa-1222-42d3-b6ea-1e9e398b8bd1",
        "cursor": {
          "ref": "489a1e90-6b93-42c5-b77f-87379f17b0ae",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "f07999ba-f38c-4455-8cb9-fa6b14ec1068"
        },
        "item": {
          "id": "871f4dfa-1222-42d3-b6ea-1e9e398b8bd1",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "ff41439f-55c4-4498-875f-b6868ab04423",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a19cf7-9986-4c00-b2a1-8b2eba7daee3",
        "cursor": {
          "ref": "5d9384dd-e8d5-46f6-8069-e2caec257b6e",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "7986280d-a483-4de8-a149-ce77b70a8c04"
        },
        "item": {
          "id": "97a19cf7-9986-4c00-b2a1-8b2eba7daee3",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "ac2ad98a-9731-42ba-9225-3e60f58c7cce",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029c5f2d-f517-4b48-8b4c-32fdd4091eb8",
        "cursor": {
          "ref": "3a71bfb9-c0ae-490c-91e1-aaa4574ad388",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c60f7b97-a5f5-46ae-8d38-c3aecc76a7ab"
        },
        "item": {
          "id": "029c5f2d-f517-4b48-8b4c-32fdd4091eb8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b681ee3b-fd79-4148-97a6-946e2faac891",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029c5f2d-f517-4b48-8b4c-32fdd4091eb8",
        "cursor": {
          "ref": "3a71bfb9-c0ae-490c-91e1-aaa4574ad388",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "c60f7b97-a5f5-46ae-8d38-c3aecc76a7ab"
        },
        "item": {
          "id": "029c5f2d-f517-4b48-8b4c-32fdd4091eb8",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b681ee3b-fd79-4148-97a6-946e2faac891",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca32caa-ce4a-467d-b5ef-9e224fb8fd80",
        "cursor": {
          "ref": "903db045-3437-4005-99a4-90304e834835",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "6ac37b51-783c-4899-9766-927cb30ffb4d"
        },
        "item": {
          "id": "fca32caa-ce4a-467d-b5ef-9e224fb8fd80",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "85fd28bd-18f4-40ef-a893-28798136d722",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 4,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1002cdd0-02c2-490f-9a6b-87675624d96f",
        "cursor": {
          "ref": "6426a26f-24e4-4f8e-9a1d-e3133d235a02",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0098e180-6961-42e3-89cf-355a32dd272f"
        },
        "item": {
          "id": "1002cdd0-02c2-490f-9a6b-87675624d96f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4a80f9ef-db1c-4a3b-a871-f36d72e75fb8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1002cdd0-02c2-490f-9a6b-87675624d96f",
        "cursor": {
          "ref": "6426a26f-24e4-4f8e-9a1d-e3133d235a02",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "0098e180-6961-42e3-89cf-355a32dd272f"
        },
        "item": {
          "id": "1002cdd0-02c2-490f-9a6b-87675624d96f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "4a80f9ef-db1c-4a3b-a871-f36d72e75fb8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e902ddb-f546-4e73-af39-e9dc77b06a6e",
        "cursor": {
          "ref": "ace0c72d-1184-4271-99a5-94270e249aee",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "6c908ca5-118e-4fce-b059-028b0a5093b9"
        },
        "item": {
          "id": "2e902ddb-f546-4e73-af39-e9dc77b06a6e",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "85d131eb-7275-4745-ab6d-bb2050eb9443",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 5,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}