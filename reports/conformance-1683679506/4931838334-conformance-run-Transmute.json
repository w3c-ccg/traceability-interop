{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "0de44d62-8904-4d35-8d69-123b2e1c6978",
        "name": "Clear Cache",
        "item": [
          {
            "id": "80a101fd-3429-4a62-ac2a-801a3fc5b210",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bf528b82-a421-42b4-8b40-8e3ad485646b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1dc902f6-e366-41c4-b37a-88e01246b92a"
                }
              }
            ]
          },
          {
            "id": "c83f52c8-38dc-472c-917f-bffedd5e64a3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0ac8c679-f3dc-422f-afc9-61d1d67ad6cd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8f6bf98f-93b8-437d-9870-49e24df35403"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "5b22024a-a353-4fe2-b5fa-19b9e7f3879c",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "03ede6a2-0237-4fe8-9deb-a93293226bbf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "34fc9b47-04cc-4877-b6f2-dd0826536210",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65120ea6-688b-47ef-9997-33274932819b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0a565a1d-a3ab-453a-9a79-d060bf8d8fd0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "cc215b9d-ad86-4c27-abc5-5dbcc4a43289",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cf4e69a5-6bf6-47dd-9a53-e838bc44b599"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "aad156ca-ae61-4e2e-ad24-2e4ac4b3eb28",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a10cb993-5324-45c3-9789-7d591fd0c654"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f5bad497-8919-475d-aa86-320436c5251a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "90b27c91-9926-48af-a1e2-b3dab5a173a1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23b8cd47-8c54-4c43-8d8a-fcd360766edc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "82954b87-4fa5-4126-801f-a63155f64e8e"
            }
          }
        ]
      },
      {
        "id": "2ee12923-a220-45ed-897c-fd563df6a296",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4da3fad7-4b5f-4574-bcd5-636c0f2fc69a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "13d794a7-0a52-48ea-a15b-bd8b4a58d11c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "586bd062-74ce-4919-9e0b-8ca48e816d7c",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca97397b-92f4-4a1a-8dfa-b53e21f5d74b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "19d1e999-60b1-4226-86aa-a33c8b13db61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5707af53-a9b7-4b87-b2b5-d36c86e67326",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f14baff-85f1-4dfd-994d-270dc0236be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "137f3ccb-c60b-4cbd-9b56-2d0b483078b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2fde133-1451-45ef-a2dc-abceefb933bd",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd771977-142a-4808-bd71-b7408994cba5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3bc60ac7-7dcc-4b22-ad03-d3311a68d4cc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "760dfae3-c0a4-4002-a5ef-f21bf45d085b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "56910ca4-03ec-46c7-8780-baaecb3e09b4",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f42f68-548a-4554-bf63-179e4742d5ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f08a26c1-755c-495a-afd8-679b672b335f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "137e14ea-b073-4af4-a0f4-1b05cd02762b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fb67107-15fe-48f7-9fe7-73e753ee5873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6543a5ec-ef04-4d0e-b1c9-62ec84b4aecd",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eb59627-0c8a-4735-a332-afb34aa116fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ca4f6d34-4c64-4e4f-8688-2f60599dd354"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40532acd-76c2-4194-b491-66438d0b22b5",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "3fce137a-5839-4357-9222-ae1bc373ee17"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "0d2c87c0-aa70-4438-b162-d608dcad1c04",
            "name": "Positive Testing",
            "item": [
              {
                "id": "747d8001-d9ad-48ec-bb50-d38403edd7f5",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "32890d87-2ebc-46c6-a544-0abaf55954a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ae639051-a26c-4fe0-8bdd-22e08a900c49"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "96d657ee-79c2-4036-b8b2-d2995b3ee81d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "59b340dc-d52f-498e-9ffd-50b84d2aed89"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "02b6adfb-4235-45fd-8457-4b35b2c86241",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "013fdb38-a02b-4284-8c43-bf3a50278cef"
            }
          }
        ]
      },
      {
        "id": "a981cf6d-f944-44ba-a881-ae1b8b82251b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "b3b9e527-4cd9-46ee-b866-255b27cf43ce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0eebf915-bd1e-4310-ae55-7bedbcd28d29",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "96e0bdcc-2c91-4b8c-921a-d701963033a4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0588aa6c-c3ac-497a-b936-173df0579fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae9975b4-7c6c-40ea-867d-683a0c77ea65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c72201-ff63-4dba-90c2-400a7ebc4cd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1304916-f2af-47f1-bf5a-8045b8f54fed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e2ee68-67bf-476e-872c-8c358f552edc",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c322b999-da49-4989-b1d4-cc80f8b0a157",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a02227c-2865-450b-afe7-a9ca7d02b031"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a08b1c-22fc-4e23-8c60-fa14049000b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1ebf0d0-3f99-4741-870a-fe4483a72f9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e2eba2-d26e-45f9-b606-a04cc68250b6",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f78f175c-434b-49f0-bd81-78bfbbdd756f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68081c21-6b19-47cf-8441-2e1a1714af7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d832dd93-948f-48fe-a317-d696c911a998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "476af623-e6b5-479d-811e-c6622321cb84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e471b1-74bb-46a6-9223-79a8f2efaa3c",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb704ee7-c571-466d-9b7b-6856593cbc34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc3ab2f8-70dd-4549-80b4-e33f85bc77f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1524c65-180f-4ad7-b124-ed75234d170d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1f58143-fecc-4ab9-8812-3be06828342a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "052ace33-5c53-480f-babb-8ba3c338eb3f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8db3b05-55c5-4a72-a23b-5dd800455296",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eb25824-623d-48d3-b039-ed56d0f6ea94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbbe2b61-05a2-4987-9185-6c47d4ebf04c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f7e3e16-87ca-40c4-9d2c-58b19bb864e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04e391b-4efd-4eba-b3fc-d5fde6da5a46",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "508d37d8-b959-4c7d-a83c-4dc38a12a8b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17f6c0c0-5100-4fe0-889b-ad459c26de20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a980106-b6e4-42fc-a015-cba3745434ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e26b413-64a1-4387-b85f-0f3b669be48d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a141fe7-a77d-4f9a-b926-91897dc6ce6a",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a7f5a58-d728-4fa2-8011-e7c73eb48ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd7cc10-d85e-4739-834e-c0be26a9ebe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92e01362-4c88-43db-a1de-2602b4c119d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ccf78b2-23d3-4c58-ada0-a6bb5ea41edf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bcef0db-6422-4110-aa71-2b6e4d7bc3d7",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4695f643-edd7-43e2-a723-a6eaaa7de456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d4deb32-9225-4cd1-b021-4e689519759d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c870d9f-14be-469c-afdf-589eb9d0f081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b258d7d8-2f92-4e80-9262-8162bf970d95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f444532-641e-4497-82a4-fe7b82e0dbd8",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2fddec-2c8d-4224-8fe4-81fab693192e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "054b7389-54c4-478a-b796-939b37c8f30d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cf31c17-9f73-4da2-9889-6312e77a16fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "411eaa35-b042-4f4d-8fb0-dd6a412491a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe341b2-0c5a-4c16-9184-47b24b1340b3",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d08a2e8e-c848-464d-82d8-45d2f3312522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e30de778-2f0a-4c4a-8ad3-44a38a8ca296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a041d0d-3efc-4135-8ee3-8d08fbfcd89c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9f24e9e-47a1-4108-831f-d9d1e6f81c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4a4f3e5-38f9-48cb-92b1-be1b5c3bd48d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db91909b-a424-45a7-85cf-86e6abe7df7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e619537-14b7-4d99-8c9c-14b8371e179b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ffa034-21eb-4f76-98e6-6187c0aa6473",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e33195db-5617-4a3a-82a1-ab366669728f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7abab41a-af00-4d99-bc3f-16096082d1e9",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fe14662-5df7-496a-8eca-17febf6a3a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7685f6d3-30de-474b-a849-ffbf07aad15e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dd016dc-460d-4011-9eeb-dee4dbceeb05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "985d231d-b4f7-4dfa-84db-9dbd084b931d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0795639b-9685-4a44-90cb-2702d9813b7f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43902230-8def-49e1-a263-8fad67f8cd33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7b82900-9fc7-47be-8a73-5a6a2eb561a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "564cab25-45cc-4bc4-aa3f-9d00d74a3523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a978b8c8-ba59-474f-8c47-d19ca71e634c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3856ac58-b6d3-45d4-a714-c576094a1803",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e1a02d-0bd0-4585-b6bc-eaf9709c5d63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "337ba805-ea74-47e9-bf19-51f5e6dfe2cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa30a941-47e3-4981-ad34-e35667b5cc6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c2cdf70f-9723-4ffc-bc46-03dd02d2c3ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "485655c0-a752-467c-86e3-7879b88292f4",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f484dd41-f5bd-4c8e-ab04-741d16325dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24eda650-0860-41ae-8a5c-2c7e7b4160be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff45d4a5-b700-4c07-9245-9041d19e9717",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c327dffc-208d-442d-b01e-e6620baa165c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef1ddf3b-cf74-40d9-bdb4-c18484afb379",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8951bd8-ef01-4dfa-bf97-34dfe155c9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3eb9bf46-3da5-40aa-971c-bbd9d780e50e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ec7b6f-8c73-4692-b331-85dcca581454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86458d40-0178-4f0d-996e-dec7abb4638d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c3395f9-d8a2-44c5-815a-4009370aa22d",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f61da16-c86c-4d2e-bfed-6c4f51dc3759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bab4f6ff-1bbb-4ea0-9370-9700cb63cbd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb1c072-36e6-4c10-955a-9d00fb5615e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f5b99d2-264a-4e35-8aa8-64c8c9f4c89e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9b655a-8bad-40f1-bf0c-8aaf0ff2bccd",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a16294b-8160-4b28-8f97-c5b1bba47fe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "379f4ccd-cdfc-4257-ab0a-a73d17d9176b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46d040a-c542-462b-939e-f3b0da42b2a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa84e340-9892-494c-b811-f74d6b64a704"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a88e220e-7c02-4a59-b6bd-ee9e7785944f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aaf29e2-8467-4686-8308-a78e13dc312a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31b4ddf5-bcfa-47d0-b0bf-b8a26a629411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b734019-4954-416d-9876-779109d0b3cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b46ce59-50f8-4c14-8e1f-d25d89e3a750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "276dd4eb-e504-4806-a6a5-f72ed0f0fa07",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec626c6-494a-4d6b-99af-9e544691cef2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d444253f-450e-4540-b8a7-3b1478432a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "620cd052-0405-423e-be67-1a51ca4b9373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7847fa88-b339-4ab2-962c-7ba602066688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ef11fae-f7aa-4c16-8500-35e6b941d279",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beeb9779-af61-4365-8fcc-890363273091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "724f296a-6190-4395-bac2-e356c86dd385"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0e6ea00-59fa-4713-b7c3-eab342d2be9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3306a3a8-617a-435d-a90c-2eb72cb27f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5748e3a-79c4-446c-b6c2-3782a4c08f21",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e875ab7-6ea2-45af-a813-609afdcb61d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80a12297-5d9c-4afc-b9af-94b65663cf3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02fbacd6-3502-4075-8fa8-d1a905652f6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "56b0f79b-5165-4743-90c9-9688862dc92b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "723d4ccc-c75a-4ca0-b4d8-3409516bb7d1",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6f935e3-a24e-4b6b-97c7-1afe6d37bc41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2f8047d-f22c-494c-84b0-2f0900798b25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0212f8d0-d6ff-4574-b38a-adaec3a41001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b18a78bd-5ca4-45b5-9c77-ded6462e8bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c91d2db6-75c6-4441-ad4c-a3dc969f39d0",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9495a91a-7c43-451d-a193-6d476264dc61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "520278a8-a0c4-4c18-9741-964537306913"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6a3d2c-527a-496a-a287-130e11437ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "36dae671-0b0e-426f-97bf-d5ee17f2d232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0659cbf3-2623-4382-b969-386028b82e6a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7236fd33-b481-41dc-a50c-99cfc3cb8301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4da35a9f-ddd9-4ee2-9200-417d2d0a195f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48fe6585-1a4f-4ab8-beaa-f3c25969ae26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dc1044d-8286-4dd4-b499-fef9ca1de76e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "112e86e2-640c-48f1-81dc-7b6ee8b4079c",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de930249-7038-4d35-af83-3743dbb0e9c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "778cac49-6137-4691-bae7-6539983c8947"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51899038-5304-4c36-a1af-0a5946e099fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4311a840-46f1-4c24-8031-3e37f592533f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0455f587-4e44-4f66-ae35-bdbbc9bb0388",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e66239ee-0d80-43a9-96a4-c4f1c1b2a6de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d84abe6-f73e-41d0-9edd-d7df8769eb59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "569fea6f-1139-4c14-8546-6f9dd9a1abe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a1d8905-2482-4cea-bbb9-21fc14fd8cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35c95d3e-cf69-4346-800e-31c11dd06784",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cded6b46-197f-4c54-b390-c02fbe30daa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "286667c5-b06d-40b5-b384-9245fb32e09c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50184c7c-599c-4abd-89f5-918e890bf801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "86e8fe41-904d-45e3-83e7-26728d546146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c31b53-9054-4481-be7b-b0813e8516f4",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20301b11-e195-43e3-97bd-05b4f319f559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c323a3ad-f3f3-4173-a8db-bb3055e62d8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd58216-0da1-4322-94ce-0db494a628fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "05ef4b20-5160-40e3-a711-1598293ab2b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0570573e-18e5-4170-8571-4e1ae3372440",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ecb0789-7bea-4a95-bad3-802f3e87b71d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b91df59-32bf-4877-b1ff-1fcf2849f1da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee09f47-6d5b-4f0b-a196-d92125ad089f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "92005dca-6706-4487-a578-f3ef3aafaae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "779de6c4-23fd-4d70-88e7-0f38d714284b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "072b9eea-06a2-408b-97fa-030421ede423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e20a716-186c-4036-bc6c-9b045853d9de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e27408-c873-4c5d-9e50-83694c834587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2fe730c-a555-4963-bc91-21428a86e275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eca88c5d-c673-44ef-bf20-fca5dece5f99",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ffb2c7f-459f-4745-b054-f5fd72765884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1012ef4-8c7d-4e56-b070-441002316f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e98e21d9-ba99-4ed8-b14f-617048e41e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9adb5117-66ac-452f-b948-c4282cc3856d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8927db5-aea3-4331-b38c-8eb86a6e3bab",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58707132-df38-49b9-87ab-b231893d5a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b250a44a-9bb0-476b-a2c4-ac73072995ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6dadef-bc51-4a35-bec4-6ed402bd1fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "72b25f7b-cfc5-425c-ac85-b4f81582db3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f076c452-8250-414c-aa8e-647338e0aa7a",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59da32b4-4cf8-4eae-9d17-7725b80ca373",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2260bf96-71b4-459e-9582-697d8a6acfbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b864ecd2-7230-41e7-9b87-55e5759cb02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c03072c-2423-4fae-a782-ae7412bdbf9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee7473b-53a6-4bcb-8921-3452a9ca7bee",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba32a50c-5151-4965-800f-5c3c90abb845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10f9f735-c5f8-416e-9ea5-38a631f27742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500551f7-7f3e-4a5e-ab7d-a43945434cc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "f68e9a64-ed02-4987-bb99-c416faf9a785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf75f5d-8d52-4207-8434-26c59e1db10d",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98694e34-0e68-47fb-a93a-1da94781a114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "155d6004-727a-4e9e-8029-883fa908f7da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e05d955c-f3bd-47e6-a35b-a221be89bf76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2384e54a-e268-4fa5-9ea1-4cdb594a8a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afabcf23-e6ab-4707-b8a1-40bb2be2322e",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc0c92d-6356-4f62-bb06-0da85f57c7f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53046c1e-1a22-4f41-a6ef-136f5fb5ae69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd65a4a-6b5b-4833-a91f-681f4703d329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "54b3bf8f-9d88-4681-a5af-37889508e409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ecba30c-901e-4e4e-8236-7db12173bb05",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21672c53-2124-4207-af64-952228544184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "972da407-609b-4d11-bf09-5d353ef72cee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ccec182-981e-4938-b868-9216b3d01faa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f6faf20-ce5f-46f8-a97b-6735d2952d65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f70f5d-ef1f-492d-a2b1-0fe3e4949c7d",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc44c841-a1d4-433a-8b65-564829bfb9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1468f8b-9514-4148-9587-aacd79d6b58d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4191026e-2bf0-4a1c-a617-875603b913f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e8702fae-9df5-46f8-a832-0f816a3d76a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b1d759c-1b31-475c-b6c7-59009a631936",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "322fbe2f-59bf-4e7a-8d80-64117a5215b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0ed62cc-2498-4331-aff2-3d94ba0c7c20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6247df9-9930-4958-a10b-17923d608e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c28e6bb-3613-4dff-bf2e-ace0c140dd14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94672f41-1eb5-4c31-b98e-18b6097d6c58",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36aeb9fb-5d76-4d2c-b162-0b09bd433b2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e53718-cb12-4b5a-abd9-02d6566367ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdb1762d-e5a8-4274-97de-747ccdd8b8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c70867d7-0e25-4704-b498-ada531c29fb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d232ca6e-18c8-4d4d-879d-a5e9a86ddf04",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34bffa9b-932b-4d86-852a-abeb0db10ef0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59df54b-79cf-4d84-8edc-74a64ac65bbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b507fd18-db23-46fc-b37e-1b2067900612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "375db2a1-dc3b-4342-9ebd-5290c63c4318"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1615de0-8aff-4984-a046-ede3aa6aafd0",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1c083a6-8772-4959-82ca-c75c9b488260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1ec9d7-3eb1-4d3f-829d-95c3a8cb213c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02932e6d-11ba-4b25-b3ae-6747f29fb92b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "6ff709b0-b3dc-454f-8559-84d1c0857312"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82ec84be-624c-474e-8263-72d58c139db6",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae294135-012f-442d-8b63-f6bec9457c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bc2864d-531a-4f67-a12e-c344512a634f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33ae97c-96f3-4934-8837-682b023b8842",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "58ae391e-db23-4837-8b54-b5c635d1a8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897a6323-2da0-41c0-8831-20167c2cfe09",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69109aa5-2101-47bc-8dd3-22f286a9d22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d4f4cb4-354d-45ce-9739-4b65f360c00e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c79e10-3bfa-4896-9335-c2604f31e7b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d5b4e70-d46b-4f7f-b7ec-587060c59b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6414f067-a865-44bf-bdb0-f1adcb3402f0",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10117d34-0b17-4442-a938-2a28bad02181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2544fbed-9f95-4b70-8120-9ed4c342ae9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e499971-17a6-4303-9daa-162db3207fe9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7969de7a-f911-4d8e-9dff-4703b8999e1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a93e5dd-fefd-4a13-87e0-92d64cc4829f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dd1b2fc-61e9-4bfe-ba6a-ae26dbe9cdb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acd0b7e6-7843-4da2-8ae5-ec967d33361d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f248f630-4075-44a5-8124-d3aa64e8fa15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebab6e81-4e71-4795-9a31-0edfdf156c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089a6cdb-e4d1-41c6-b0ba-1630ea4b8004",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75391a58-6d59-478e-8be7-e716c141f737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67b22fc4-5961-4fb1-877c-2fec7c6f0b2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c9d1cf2-1f59-4186-890f-5663840434f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e82d9b4-ed54-41a8-baf5-f295e9ae3931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77cc237c-59f0-4cfe-a74f-aa8692cec244",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d85f58-60aa-4718-9d9e-4b4379368a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1295c150-17c3-4d43-b2fe-d9c4bc5de65b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8483de99-1ec2-4298-a806-3b632492d541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "70a80f4e-ec1c-4e0e-9ac3-12ff299abe63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b671b2-bd7c-4884-ac20-bcf43372a5e8",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "898675fc-31bd-4586-a1f6-27353c6e39d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1310d6d-094c-4407-a707-e20d4c5ad77b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8824b021-4e5e-4414-a5be-285faa556ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d984d7ae-6fdb-4736-9838-6f79d7397a85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f01a8b-03b7-4047-92ea-8ca734195269",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99d3f9d5-e9f5-46e3-9519-b0ebf97fea8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7243bb59-557c-4865-a791-fdda77455995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b57ad270-ba64-42b5-9b43-fc63515baa45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "5059d916-494e-4394-b4e1-653837d70253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62ef609e-ca08-4b5f-8480-ea2026e58f55",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50e64964-45fd-4650-8962-80142a357205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdadab65-cfaa-4548-8e33-97a6834a32b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be222487-1849-458d-91c0-57dea225730a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e167de54-fbfb-4540-9200-9e24a79dedd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "263149b4-d98b-4f48-821f-ac941927f7c6",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18e690e-aacd-46a7-b77d-7691f17b22cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "758ad98b-bf23-4959-ad91-3210fbbe98da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9a52e8-f6c3-4f07-9c5e-8519b12ac66e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95c2563d-ec2b-44aa-9c1f-ea9e66320556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c086d142-cec0-4501-8990-066f4fa36931",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6dfa9b-ddc5-4d5c-8b52-fc796a08fea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67598ed0-9c0c-4e1a-a195-1ca38edaf79b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c5c345-e284-4807-86b8-6927700a4c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c3e4660-97b6-405e-a1f2-e9f3f7ebfa9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07803cac-17dc-4511-9488-404de63cdaf7",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0958da9a-034d-4de9-848e-a41303b0dc1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e32a2a52-d05b-499f-9a92-600e42477438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154b187c-3a86-4e98-9a69-c27e9d4161ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5739d140-ee3d-4d36-bbd9-95108c9415c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca8d76b-c93f-4736-b878-37354e43c40c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88e14fd-0faa-439d-8b0b-be27e010c310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e7208b9-889a-4dd9-9879-bee151095d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc864bce-6223-408c-b76d-fa8fc4fff50c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e501d048-9f15-4b14-9a5a-bc802a188f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a776265f-486c-4901-af37-10359387d57d",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d76215d-de6a-4f0f-8480-ffe86115e720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb007e91-ae32-4a83-9b28-73759fa405f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d632651-5a46-4f94-a917-1fc3e8062c4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "5edc216b-6f06-467a-a5a6-df0bfd7b93d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ed9356-1e05-4b57-b0bb-2f7ae01fab5b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d273fc8-99ce-4bcf-8682-9b5f8009debd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e7fb073-f2e0-4393-89b7-895db86c90fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d2018ad-4de2-4720-a122-9f9dcc2892ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1833584-9805-4b57-a8bf-60ca6c87e068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dad6598-c44b-4905-a182-c79cca7c3d48",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccb1d90b-79cf-42e0-ba12-e37954dae94a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ee2212d-7a1a-46eb-b259-5d050821f30c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b845074-ceb1-4822-b5e4-7b926e61c971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "01549084-f0ac-4a5b-a2cc-17e07f0dd5e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87312900-4dc4-4436-b564-e73d8deb61eb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98a00a8-69bb-41dc-bf35-1161ba800f2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60d5a1ac-2126-46a9-b27c-6d5aa4440e0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6150111f-a1c2-4a80-940a-a713de9c738f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "dba1aa27-5fbf-44fa-a22c-f7b5f5ce7477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8884165e-a928-45e1-a75a-49cd153fb744",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa073153-59ea-4149-a08d-74fb227522ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5996e0d8-2cb8-4bca-8df1-4ddc923a4d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c792bac1-6b62-47a6-b49f-12c0acee896e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "6e1ee2a9-bf9a-44df-949f-8ebc2ae74758"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe5ae44-ab88-47af-868b-8bc9766cd053",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9da612a8-afff-4c35-832f-92df1c10067e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79c2c7ee-1063-44c9-9280-88db3db210f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa90fbe-d693-4832-8b6a-dcdb2bd72ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f75ccba-2d38-42dd-aa44-ef6718c4b0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f093dbc0-379f-44cf-b61d-0d7d09f09ee3",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4561e52b-ee94-4fb1-8e9f-51e8ac925965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92326428-1241-4c02-8c60-c4c1129a4eff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228e0433-9336-4a82-a590-659fba97c368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d25b7029-f9a7-4977-a838-e6a2218e9171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b1e524-d39a-4f92-9099-612c9068213d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "515e7d0a-c612-494d-ada4-38162ef87bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbac5569-b832-4976-8132-6a67cd1f538f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca13fd00-8ee6-4172-b66c-3a7d4e0fd1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ee0f068-4326-4b50-9314-7ae2795ca5eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ef708e9-9440-427b-9c3e-e0303f46ce0c",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54528389-f6f4-49f2-9b55-3ace353b17a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add2103f-c0a6-4237-851b-ab2561cb45c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7e0298f-38e0-467f-b9d4-d332cee9daba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "906a8e34-1677-40d9-a3f5-272f00bfa151"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90e981ae-4bec-4bee-a2f3-bc0883253dc1",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fc9a5b1-9e38-48b1-a116-16d498765c29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0222dcd-45df-43d4-a2f0-f566dc33a508"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32ac8d3f-4330-4f41-9c89-ee98e058a0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff69fd14-ddaf-43dd-a1e3-438ead225e0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcd13955-8c8f-4e10-a739-1f8ce046e96d",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a93f8f0-45c8-433a-9bff-fddaf79174c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af6d08d-532d-4090-96a4-cd17e45dc8fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f77237-607a-4587-93fe-6b16216e7bf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8ba8d1df-dbd7-40c0-9cc2-3f580288f7e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6395fa3-342a-4eca-bb6c-a0de432f5e8c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1129a90d-554d-4f82-92d3-6f440e5c4326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f51222f-4dc4-4998-9741-e064be8c80d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1f5f039-9bd8-415d-8e3a-193a4ba92cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce9daec3-8ee2-4821-bf11-ca95135d2c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5555c4-90ac-486d-990d-4d3b898e2a1f",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51b31d34-6bd6-4114-bcc1-66456de78278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b60e190-95b1-4610-b538-59646887b08e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53f2410a-18b8-48b8-b8a4-3af44fe03879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4604dd3-8b0d-4f67-b479-2be15fe9fc77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b85b7d5-7da5-49db-8878-ffd23248f039",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "135c9508-04cb-45b1-b074-f7d32e6cd8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f14992a4-d5dc-419b-86e8-449aa402c9b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f281481a-ac55-4acb-9666-62c3d3fc1f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "35387959-be4d-4001-b4b7-33fce8c64202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4fe78f7-3c0a-436a-9dff-77987e91fb09",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf1847e9-a3f0-49ea-a1cc-615b3aed4567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd69d397-0133-4d64-ae51-2ba82625c6a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36aeca9-ff2f-46d2-aa54-da97b935e527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ac56d43-346a-4659-af85-3cd4cd21dea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66f38df2-fe5c-40c6-8a75-2c14a6829abb",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82cd3b5-063e-4d7d-bc8c-355de444ae2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "948e39dc-e89d-4b79-88d5-4c3168bae9d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32b03b1a-3c74-4c7f-8844-2fb852f6ce47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a76bb58f-f95f-4b73-8588-3c5ca58e7d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a5781f-0f99-45d3-9f07-4922c5aa1423",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38cebb0f-91f5-4bd1-8dc7-26abd67bee40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e3edcad-94b4-42cc-9853-7459bb8b0397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "634c4d38-935c-4917-b14f-d3e06299b3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e12e071-3342-4ed2-a50d-56ab348cb87d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "341e2aa6-f362-41e0-b733-8edd3e1f4c90",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40dbb905-2d1d-49d2-90fe-fa06322c4407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61d32ed8-1477-4e94-92cf-613179eae0e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1664bf8a-2f0b-4150-a30b-65992465eb33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "12155897-a95e-42ee-ba15-7abcafae6cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbebdcd0-319b-4cb7-a28e-d809bf49a047",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "719e3efc-8451-49c4-ae10-c83fbf6c6b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1b19811-4cdb-4992-ba74-8924106d8b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89e4d9c4-8246-43ff-ab26-b53569a9d98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6674d08b-bc5f-4855-a7fb-e1c8fed0af11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1ec6e67-b2bc-45c6-baae-12ff5f1a4377",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35077496-8124-415d-93d9-a3ccabd5d23f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "713f60ea-efc1-4ed0-9d45-fef2be05c79a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4993546-fc3d-4b67-ae55-a1b636e1da68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d34b9659-4683-41b3-b5e9-7815b6584bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c621c26a-61b5-4641-a005-c2269aea9cd0",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28ec4bec-d793-4670-b592-b752dc140221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11f9945a-d692-40ea-aa11-96334209148d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a8f17ee-96ef-48d2-b1a2-0fd0d85332f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ae74c53-3570-4194-9ba4-d1d6092c2952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "701f174b-19bb-453e-b87f-597bd9cf9003",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c7804f3-3aaa-43cd-b6f0-684ca98ee9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a4d897e-1a90-40e2-b21f-2dbfbc51b237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bf105a9-9139-4bcf-9719-63578bad80af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d4bce01-772e-4a61-b940-79ec79250fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5095d639-27a7-4608-9a06-e4a88fc2cf07",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00043aec-7fae-4237-a308-50d55143f426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf25a4be-a586-4e74-b73a-4fac2ec6cd55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a908b7-eb1e-4832-8a9c-ad9cbf198057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "be9f27f7-8143-481a-a332-52e4d45ce02f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc246ce-27ae-4b8a-b88c-aa334eff4c99",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35b9878d-c987-4584-b786-098f6df26eef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb98d16b-9bdf-494f-bea4-3b1efdd9f18f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8bb7a2-5a57-4729-936f-ffb8e0ebd2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "02363a89-f37a-47ba-9134-ca2f794bf09c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b249f4-ecb9-4283-bf92-a945205aeeff",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6213296d-4cbf-4fdf-b1e3-c94ead01222c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f25dc311-4d28-4305-b160-484ee057ad23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c085f91-ad7c-4a64-87fc-4d329fa22b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fab89c09-67f4-463d-af39-3fb9bcca9ee8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f395578-166b-42b9-8053-254a0d37bcee",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5df3f9-f5f4-4924-b50c-3b72896fc342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ddfd25c-ebf5-49b4-9cbf-69da4f9792f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5835377-d182-405d-9fbc-454ff7dea798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2012c879-7aa8-4061-bd45-566ea50cfc4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d78a064e-dfc3-45ab-bebc-d62afe6dbf3b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1380d36e-fcca-4922-ab1d-d2554b202f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abb9a21b-2e73-4ce4-8c58-8a4c94d2a9ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cfcc05d-0a86-4997-a0c1-ede2dfdfca0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3a779c38-122e-454c-bc31-6b673cf11ce2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f89fdcf-1913-4966-86a0-50e2f96b216a",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f46b06e-2bca-4cfb-9e55-400fc35425c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "853fba5c-fd27-49ce-be2e-84dc852762f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca269f4-3051-4d5a-98fc-c57ecf75ce82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5642cdae-6b7e-4b48-a130-be08be36dcc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "568b0214-3dd5-4d5b-8c65-84e70ed103f7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "304a4a15-4924-4e8c-a71b-9b971c3cc14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33be5f50-bebf-4fd9-b044-a95cbdfc8128"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c661f8c-bc48-40ff-9f06-2bbde8fca8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f285208-5d5b-48f3-8183-9b4246f9c61f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b007415-fe46-49a3-b85a-fbc874f5da98",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a4090f-65ba-49cb-a4cd-b2f2cb7bb9c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a52d887-3647-42ed-8c0e-080ff93bb0c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0193a250-0662-49d0-b08a-ab9b67553f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8fcf9954-383f-4254-a3f6-d572c15656c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "376354e9-3500-4ed9-8846-3071ab2c06b4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14eb71a8-78ab-45a6-9130-6af108227e79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cae666e-50a2-457d-9fc0-a20959caa72b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f1a80d8-9ecb-4f75-b32c-018e14d2d9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e57b1848-9463-4b5a-983a-8d8f85142367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "316de16b-ffa9-48b7-b4a2-b75275c763d6",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9928031-61df-4358-b8e3-38b868fca4fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b7b1fc8-3977-46ce-97fc-fc10145f8021"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4fc9be8-07dc-4fcf-87f9-538729b222a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ea763ecf-0aab-4317-8dca-5e0389f27e70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f6074a2-fbfb-4f34-ade7-f75dc85b19e8",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc056b0-1c5c-48c3-bc46-6946de5e2f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c46151d-f4b9-420f-97b3-d7c50347014c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1b10fe-b6f6-4abf-8ddb-5ffcd43346bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0714e236-8c99-4332-bcf9-98ccc5c262f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2940d3f9-39d4-4b24-b621-620e0cc29b18",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a590d1a-1a7a-4d98-8452-36d5abda07a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59fa0d68-22a2-4067-a5bf-6eb4b49430fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674342df-27e2-441a-8cdd-c8f4aa27bd27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "10649ced-1f9e-4890-bb7b-d6aee85accab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d25c5dc-6123-4bd0-b324-deb847a19a8c",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59f48c6-079b-4084-8b2d-14bd47916469",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dacdfca8-78c6-4baf-a902-12270604c543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aa2afac-f013-46c7-87be-4023e845d96f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "65385e49-8026-4311-97e3-cd9c5c62eb45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ff754d-159d-4783-b634-1fd2c614e70e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2cba71e-a678-4ca1-b4d1-f15286a6cb34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9ca58102-348d-4c7a-addc-3ee941cf365e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0e40ea3-b326-42be-914c-d645f64e3876",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "99a032f4-5ef1-477d-b69c-7116637ac069"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8b31fcec-64b4-41bc-844a-f4c83c14e2c7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d82e43df-5d54-4d65-ab6a-5092196f84be",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93de4d2a-756e-4566-aa70-921759cfe48c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "64ec752f-fb65-426c-b072-f5bedd297b65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3649da62-1863-4c90-8377-0a145636796b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3c5b694-925d-4d3e-912f-5ff1af39511c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9366219-8f5b-4d65-b40e-1efecd2a0651",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa8407b-fc7c-4863-90ea-65e8c5c7bd0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8aea4217-547b-461a-9c87-0d372a4ba28f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc9540d-bb6e-4d7e-bb95-f85c22ca08ab",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f8fcb8a3-b641-4e92-bb76-b4d79698c022"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "34ac07da-6d29-406e-93ad-76b62e39d5c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f6eb283-f94d-4c2c-a30a-e95e2d08f6dd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d505239e-1258-4c5e-896d-7b66da5cce13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cb0e906f-cb5f-4e39-8f60-d78917e61543"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b212baaa-d191-4445-9d81-96703ffe3e19",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ca8ffc29-f687-4d04-bc30-901b55149368"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b9cf2d57-dab7-4966-b902-4322aabc7d92",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7c0edb69-7a6c-4bda-ac3b-2cdf0672b7b6"
                }
              }
            ]
          },
          {
            "id": "c12e69f8-6c10-4e41-8056-0096936f1af9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ebb4675f-b5d6-41b3-980a-4b3483110fe1",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b54ede16-ef44-4083-83c9-8fc0020192e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "664453ff-8a5e-4202-85f5-5e52ed23bb80"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e838249-90d9-4153-83ba-679cdc8be537",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "46da74c5-9882-4a8a-a19e-65a4f12daaa6"
                    }
                  }
                ]
              },
              {
                "id": "07e59e66-8726-44f0-a658-4f2a69e2f08c",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cdb6e339-6c4f-4965-bb95-7cc0f677bfb1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0fd791e0-6d23-4040-bba5-5786a07bbf40"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d705adda-bfdb-4b9f-9a27-cbb0ea05c1f7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8755f748-0305-4d95-8c1d-b06dd564b3fb"
                    }
                  }
                ]
              },
              {
                "id": "0437bfc3-fbc1-4254-bdcf-0dfb0f38b03e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "334f0970-02a5-45c2-bd0f-42f077e71939",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "62739813-d7b6-496e-86b7-b64d214ff261"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a26c7ace-30e1-4f52-8242-3fa1ca3a9578",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "21845512-63f6-4245-aec3-034704d69a72"
                    }
                  }
                ]
              },
              {
                "id": "d6942080-b4cf-46ae-af31-aa0982b4a8c4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e4b600a-2380-436f-8f1b-ce3ac3ee101d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "65c55b9a-4d41-4ed0-a2b6-d5af62b17ff0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "40c563db-fa73-4b9a-bf3f-28680064efec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "adf0c89e-dd91-44b0-9a1b-aaec7b00351c"
                    }
                  }
                ]
              },
              {
                "id": "267d9a42-0d59-4af2-acb0-ab19be6b26c0",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c8d8bf34-ed53-4647-8e8c-f881ee44d7b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1f6594c4-06bc-4b32-89d9-f3400e13fbb4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9c7cee49-fdfb-43b1-897d-9008fa58040d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ece93001-4a7d-45af-9e1e-b031a12a7b6f"
                    }
                  }
                ]
              },
              {
                "id": "0d15b4fc-5527-4dd3-927b-bd51e69f095e",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0678ec6e-0a40-418d-8c79-121d101e9e5d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2438598a-3458-4a36-8771-f25bdf4d9d2c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cef008bb-6a73-46af-97a3-dd0928196946",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e1bf47c8-e72b-46f4-9ef8-abdfd1f5e387"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5a4d7067-e7ed-4039-b0bc-6b0e9bc283bd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b7866444-dace-4ab0-86ce-088d852b8f1e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "819631bc-1471-4382-b521-c1cc73a9f7d3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ca8976ac-c5e2-4c81-b463-ffb1d67023e7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4669855f-4337-47cd-8044-7851ece4f690",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "927ccd99-b8b1-4e43-ad3d-baf934aaf7c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "189972fa-4290-4f1f-8d70-0242320c5b7d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "43f0661f-bd9b-4ffa-8e25-8da889ca5142"
            }
          }
        ]
      },
      {
        "id": "3f1d23db-43b7-4b53-86bf-a99b9e54b7ca",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c511db5b-75a4-486c-be96-3c4bdeb50916",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b51fcdfc-3bab-4817-b056-bd3282297069",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ac633a92-bc6f-49a4-8f0e-26f14406e1a4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b58f4f6-d71e-498c-9730-da82339cc8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6cae366-8b40-4b84-991b-6d668a2956df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89664ad5-b8ee-4ce9-b1ed-5a8b1b03a375",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "287bc698-d756-4055-ad12-0e8443c0539f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b1d39e-4974-4fbc-b835-e002f93a5644",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93709103-eaaf-48d8-9385-ed185ca289c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc4a175-7c61-4ac9-a3f4-ba3333859dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1053c205-2321-4da8-9d64-df55374d35d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd631d57-a1a7-460e-a900-80adfd44f0f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8918a7b3-0f51-48e3-af4f-849f5fc82f60",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3695363-b2a5-4ea8-ac8e-cb2bc79f49f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b679cccb-62ac-4aaa-9302-eaa29bbf9153"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d17cb70-64d0-4096-8952-10df9c34aba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecdaf2de-80a3-4bac-8a6d-072d6f22c774"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998b3772-824d-4c97-9841-24a74a8f3e4f",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a96ee1ca-6605-4074-b85d-6290a91b7f76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6142caab-21c2-4043-843a-fe4d6afecfe7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6bdd25a-89f7-4e0a-af1a-acf5b701c7f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e885f7ff-23f1-4457-9e52-540ed4e9b6a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3863dd75-383f-4f16-ae9e-cf6730b2ba50",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16be895-e400-41d7-9e1e-c00fd2a386d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25d5f693-6158-4c63-af46-23d843b2a2d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8983168-9dca-4854-aab0-229c17dbe5c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c27e3755-cdce-4171-b637-9c78f7d335cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75aeb3ae-cfc7-47fe-9f6b-932d18c2a06f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cb70382-3fc4-4316-a9f6-c929368c32b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8678f41-39d8-4fe9-a062-d55cb232e129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3208adb6-7fd1-4732-8299-8442c2d4b0d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a5379d44-e5b5-4cfc-a5dd-b72a5d4fec57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70819181-a620-4647-8204-620c18a2bca1",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "593ce807-81dd-4c56-9645-85d51b4102e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d2d010-47ee-4c25-a613-182dd4620b5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fecf81d-e1e4-46b2-bc15-570c47a5bd41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8241921d-4a94-499b-8c0e-05685fa83cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29708f7a-ffbe-4d45-9ce2-48cd911a7240",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aaf21f6-0ff1-4756-a6ce-c90d1e385e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dba2de3d-99b0-41a2-983b-d0bd8bc0f721"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec2734d-368b-4506-87d8-adc6cd03b16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a632a39-81aa-4464-b6b6-0ae4a001eaa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a79111e-ebfc-42d1-be3f-1ba396f3e634",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "369f49d4-aa61-4b56-8f1c-29f38a79c085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4f1be34-f0ac-42a5-b1bb-976dcf82bd88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b814bd6b-42c3-44ec-877f-bea9e9c295b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "77b48411-612e-43e5-a6a4-5ae5c973d2ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07688c2b-859d-441f-8627-e0c03d7381d5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de437485-0a18-4f6f-9966-b1c543dde3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d28bc5c-ce7a-485f-ae73-82120b134857"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e20f5cb-e704-4d85-8243-ad6f2189f6ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "63cc0386-a962-42d5-91fe-478a3bfd3bcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cbff88b-5561-4b05-9643-12c44f8ed095",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e812f388-82f0-450d-838d-20691473b253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aea876b5-2aa0-4ac7-8865-4ce5b36a7dc1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eafbfaa5-798d-4e3f-8745-f04abfea2da4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8714a97b-6107-4c6b-8103-74746c2408a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "598e3c1c-75de-4ebe-88c9-795f9b90c110",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17fcabe-327b-43d3-8d23-b4550b6da5bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b467f92-5f04-451a-94e3-a83200c5b4fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09bc3181-e955-4b1c-8776-fa308ad493e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b232758f-0d0b-47ee-8fea-b507a4ab63ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf63aaa-5634-44f5-a72b-5bc87ba4e3b4",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cae1a449-3246-4daf-a0e0-6cd466a12c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a631f3c-1b8e-4e46-ab62-43adf7ec936d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9b7d8d7-8e03-4297-97f0-e1d2a7dac92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3e9bfad-225e-476f-a40b-fcc0a5f91b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12bef2c0-2e85-4090-98a1-18d5c8210d68",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d7a3b20-8197-43df-b705-66ba811b348b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97cb587c-e31d-4bc7-9749-a425bb51104c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a2cd46-5d22-4ecb-a780-b4578f14c9aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cd1473d-ee2c-4020-9564-2c586e7b2cee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e4aa81-0e22-46cd-8ffe-bf7270500c3c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "283bb026-162e-46e7-9155-8ff46b0eb5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b693ae9-32c3-4232-ba0b-e3cc8801f9cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511d6486-c4cf-407b-b430-99d9f2e5e484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "05e853bc-3ba6-46bc-9289-502085b7510f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d42120c-abe2-4ee4-a7ed-40f4b91447b8",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01b45a48-5b2c-4476-9be3-52d88854987a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e5a9417-4715-4440-9cc2-c9355d581083"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc5fa080-e5da-4b88-99aa-78456bea2523",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a8dc9ea-ea1c-45d9-baea-29a5d45c5159"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b993d55-35b0-4ad1-bf81-f34cb331ee28",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce452c8-8461-4bc4-841f-27d28fb1008e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e513d32-8887-41c3-ac50-2baf9157d5d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf099f0-0f4d-4da8-a2ad-08a8b75db452",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9eff9cf3-d02b-46ee-8271-2a76d93c5882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd1690b-34ba-452e-92bc-d236800a3972",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57ada08-352e-419d-8b35-8eb750df796d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14be88a6-149c-411c-a6c8-8a2cbb2b41fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a96c10-19e8-42df-b9d1-abc86cbfe1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e4583c05-c8cc-4eb3-b303-cbb34c19024a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3734bfa-e207-4894-9bf8-632ae3888c7a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec24c60-b806-42df-a2a9-ef6dec9f5e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f50e5f5c-c0a4-4521-bb23-92ca83131cea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169e80d9-dcbc-4f74-84e2-e5777bc18593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "693d9c0c-6a3e-4423-baae-db31d52854ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67868615-5faf-4c08-92c6-8a0e01200575",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0b9edac-3772-4cb5-8d7f-78b1d0a17588",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e564076b-1ea1-432b-8a10-eb2c39b9d804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab6f77e-fb78-426d-a090-8d7059a85beb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0493487a-2771-4a60-a348-5cead1b63da5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b1b0951-38c5-4091-9dc2-b149b7373266",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9092b732-075a-44ef-949e-7ee760fec641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "119282a0-e3f0-43eb-838c-08d77171c648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3aa38670-2945-4fc2-8a0c-0ebc264833a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fde5b2e2-9b3f-4d3a-a2a3-eb738cb8007a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc852131-5ef9-45d2-99aa-b2d80d3bb360",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bb26b13-fde3-4af9-af22-1232fdfd5fa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf3e32a-c050-4dc4-a378-572d228e0415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c11ee8f-0fcc-420f-b041-4ad3e4a8c571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11c3c45f-8983-4e31-803f-9e219b48981b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e39d8ad2-f4cf-4857-8caa-8444c32074aa",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbcc0f54-81dc-41a0-a11a-9a6ff2471e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c633ebb1-4e2e-40f2-a21c-18361627fdd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde1abdd-40c1-4166-8bda-0fd3dea9ee32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "236bc0f0-4268-4452-9bb3-325762d35c34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "872afe8a-e40a-4d14-b855-7247b748e592",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9700b79e-fa6f-4b5b-9319-a52ff90de197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1358e580-306c-4ef6-bb5a-e72874efc657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67907df9-1408-4c63-a684-f885422841b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f97cf43-bf93-40be-a0eb-2b5c437f8168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8023a553-9c5b-4718-9d79-f2a8137a27cf",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e79eb8-da36-4357-9efe-817f5d0bc209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd955e61-8e59-46cb-b286-1607da14ad7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "055007a1-7a75-41df-85af-f116c5858839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a77f47e-7350-417b-8d38-0f99077acf01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aed267a0-1b6c-4fe2-8d97-ff71e37dbd55",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad390a22-e524-4438-ac56-81282b9df176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b3f067-9b17-4e1e-956b-e43b6ef38af7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7f3c51f-1062-4e58-bc6c-0ea070ecb17d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc20c4ab-9a76-4335-9f06-e0c67182b34f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7268ad3-4f20-4db6-ae48-907350f86df9",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7753622e-0823-4cea-bca6-f89063ca1886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01deecd1-0b03-4f3b-9c1e-6a62d70fcdc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8106c62c-f686-423c-b4f4-849027afc6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c223ca69-1062-480f-9300-75710ffdc67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f4358b5-ea92-4a18-98e9-7a549714d3d7",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7045d0bd-e75d-430f-9d3c-db0793f966da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40f93204-f4b5-4605-acf6-7d7105bcfbd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "810bc960-6b77-401f-870d-d7ad89b90ac1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2bbcce8b-274e-451a-b180-6fea4908be81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cdbfeb9-e0bf-45b9-993d-63cb5fd35c6d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61616603-f025-44f6-8aa2-1f021d805c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6084c6a-f483-40ef-ae7a-d5ea45fa6a47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980d01b5-aa6d-4f68-a97f-0d2deefc5a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40ad6b8e-5185-445a-9f58-1fe30b75a3c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b463bf0b-2783-4dd8-973e-bf2cc3ab3bd3",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f04523d5-44db-4544-b7c9-3ef01efbc593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dcfcb7e9-dfa5-4bdb-975d-12341686ada5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd30c24-ccba-4830-9c3c-85b9dcb4c967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad6bcca3-8ff6-48f6-a0d2-b84bd070febd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d2bb0a9-56ff-4483-958f-eaa370340532",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fa3281e-7565-4055-99c1-cf856b7505ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9050a709-3cf8-4931-9ce5-bb33bb95c7c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16bd4ec2-942b-4318-af51-29a832a97457",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26f03234-3c06-46cb-8713-84fb336741a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "870e5092-a2a4-4d08-8741-001f5c68bdd3",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff837052-9092-4824-99e3-57fe6f27e81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62626c97-7540-40ab-9bbf-54f0d8649215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0565621d-553e-4ac6-b764-c1a9edef8d22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "985b7092-7fb3-4f72-9009-573ff403bf7d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "1e103c9c-2794-47d8-b3aa-c35181af929c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4f34ddc0-6aaf-4423-959c-bc10e3041e18",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd6828ec-2991-4fb4-b7ed-da9c07eb9eb7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "3183e703-83b6-410c-9ca2-99ef6a0ed549"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e77a3345-b816-4a87-a799-23dc59c9806c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "02c18677-8b83-4dd0-9d26-7909d0fec4ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0521644-8c42-4d5f-a042-70c4da8feebc",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc47d4e-bde5-4e05-9e53-a36b76b4d256",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b7f4871f-4fca-4227-8629-d3e193c78e81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "510b7956-d562-4ea7-b4a9-754711634117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d8e5920-b91b-4664-9898-72293e9ff6b4"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f8a4346c-0fd8-4e9b-a5c0-eb4aa1c090df",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "183552e2-316a-411d-b826-5c2eef494e66"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bb071089-68f6-40d6-a875-eb24f2d2384c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f644d5a2-4e28-45b4-9891-a8c49cd69b96"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "019e55e1-c767-4519-b59f-64615e55bd8e",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0773087b-3637-416e-b24a-6b43623ab783"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "46a462c4-57e5-43cf-b499-434aca8e8f93",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "bc3a1add-dc91-4448-b9e0-ded24a63bfca"
            }
          }
        ]
      },
      {
        "id": "37444d90-850b-4745-9f21-65f1ed56887e",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "6c3be84f-5e18-48f4-a8cc-ad65bd7acc76",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4752e003-dbe6-4a34-acee-d3a8774badd1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5c5fdf29-6606-4f0f-9c2e-e67cd394aebd",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e01d055e-3602-4d3d-97be-cb9b2e30c90c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad3f5f9e-961d-4a4b-9289-24bf62d37691"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b0338f-6a31-4a6a-995b-a6a1b9d270b6",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1004131-ad96-4e4e-a2ef-8ba9b3c00c3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8328e7df-4079-420c-9269-011d930e0075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47709362-0120-4800-adb9-34c3e739483e",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afb185cc-32ce-4ddf-8c72-d49e4a139ff7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91cff81c-8864-4d0f-be11-e333af487d81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d73356-9c6a-4e71-854d-2c1f11027b21",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19493e1a-90d2-4392-bc3c-f3596982e006",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58c8ece3-0db7-45cd-964b-b9b2a71f0799"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3dfa56-e073-4ab6-88bf-f1dbe7156c5f",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af577780-b918-431e-ba0e-ee04ef63f8d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29cf6ab0-6495-47dc-9165-d4d571ed3f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f0191e-037b-4b2c-b427-a49bcd708967",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc2ee1a-c5c6-4fba-9ff3-cb77109dbf32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d759e86-4fdb-4267-9911-2ceee502dde1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7fc6a69-17b7-49c1-8624-f75d640b863f",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe1e4ea6-a66b-44e1-be93-e8381dfcac58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc52bc50-9a7a-4fae-ae57-553832d1f05b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecbd91c6-a78e-4025-9577-a21f8f91316f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66c5455f-4aea-49b9-b20b-369e3600f845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "257b536f-8e27-4c03-b49b-39abc18cf05a",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2b8dfb0-8b6a-41ab-b0f2-29e51da87c80",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df247529-d0bb-48e0-b6f5-49057d6fc173"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d68682-a2f9-4deb-bf18-51e0332fdf52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3b04a8b-ec05-46cd-adba-ba99d1b597b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac5dcb3d-0155-4b06-bb5e-91174a98f69b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8dd7d61-418a-4eaf-a564-f95fe2fcd0da",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b5ac809-e9f1-4771-89fb-b2c00b633596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c179ac-93c2-4a2b-bab6-9439f83486bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eecee1b8-2ffb-4f34-ba25-44920ece0865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0916dfe-1936-4200-a24d-ead2646e4281",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4eeb2df-933e-4737-a35a-80b1626cd474",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ba1d789-bdd7-4347-ae7f-483d16e8efca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b680066-27cc-49f4-877d-2061f26b7a23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73540a93-81a3-435f-89f8-40a540a213ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "127c0060-c66f-4eae-ab03-843d3fb659fd",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b30c65c-8a91-4dba-bb99-c6b2ef125dbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7aaf57a3-4df2-4ba3-acef-e047cdbfdad9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2c5695-84d5-4cbf-9949-40d5cee3367c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12d8327a-6209-44b3-99c2-9558a582729d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3219612-0a0b-4021-a32c-e07c560bb25f",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "727fb6c6-5b69-429c-8872-0d05d9a5dfa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ebec618-0647-4f9d-becd-348a1984b43f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9b9a293-3073-44cc-8a3a-8c83fd0b0ad0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52c672e1-5715-498f-aabd-41df85a8e890"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b9ccfae-f8a9-48b9-94c8-3d4485dc97d6",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1cbb126-d25f-411f-9bd0-052b74d4860f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c66dedcd-82f9-4a01-8b3f-634fe87f5207"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7717ac21-3315-4403-9531-01065db29439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed1af0a9-aec8-46ea-8686-0be15f5a0f2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2efad88-31b2-4a88-83de-e9a12d2e8d17",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e890f8-7058-4630-bd47-3350aa0f3082",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37fad795-48a0-42b0-9790-7d2f71dbd53e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47ad411-e3d3-44f4-8a1a-af5a2103f83d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8e492c6-cd28-4626-9d9d-6e8f72c07145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48956b5-5b00-4df4-a873-fc03c50fd3b4",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38eb4ce2-b344-4dcc-a2a6-7b8708442ba9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4f56cc6-ff56-417a-b356-ebe99551ae28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5582999b-ab70-45a5-8171-9aa4d0b63acb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0c7e567-fff7-4bfb-9813-69f3e9e270f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507ea762-4068-4dd6-8f54-7601ba56f193",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35cb28d4-3d9b-4ccd-89c7-70c52e2ef74a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3d14c54b-a348-43db-aa9d-ae70db29557a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c8f44a-91f5-4594-a2c1-56cc4f35f28a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17852158-12fc-47c7-899a-95d4b7a7b7b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47bbaa38-76f1-4c24-a465-6ea75b814ae6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7ace646-ad9c-487b-8119-f1892999bbc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12f19cf3-5c34-41a9-a7c2-76befd7b9c9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2815b207-f1ec-44b3-97dc-640011e97be5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b89a66c3-37b4-4273-ad7e-4a2bd033971e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15ae0b3c-3454-4fc7-935f-285c49372166",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b5c940-4074-447a-b728-878205959ede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6538de68-78c1-4398-8917-21478466a5e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba9d9325-5e51-455e-bb92-6ba5d4adaea3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7930bda1-1798-4069-b0d2-39f16c46bd79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7865c4-3b1d-4463-a146-3de84b33e399",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d577298-e515-4db0-966f-acd89104c706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6056b5d-bdbe-45ff-a7af-d42032ebda64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11bbd183-dd72-4db4-b988-086abe8f7cf2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbb289bd-4070-4c6a-97b5-5a44b89bdbbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7af534e-6326-4736-966a-b9a10ee1814f",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24acab32-e2ce-45f4-bce1-843b63c80c38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5724723f-21b7-4bba-b04b-ea0f272700e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ec1d7d-ba9c-4832-86cd-682355d1cb8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d7427ab-0634-43c5-bb6b-3824cc653f35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "035fcb35-9612-49dc-b78d-76f6e29218b6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9847ad0-6dc9-4f5f-9dfd-ac8e80b40870",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "103437ef-68c2-4abe-aaf3-b08eb8c927c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "893cd566-c172-4893-963f-e4e4434a4e81",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68fff56e-f73f-4c6c-9300-00606338d87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3bd8d8-e748-4715-aa3b-1653c808c83c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0b730c9-4693-430c-a96c-1bf2619a91e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04d8c61f-ad2c-4ce3-82d8-8991bfc24fc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8755bd0-089a-45e9-8fd8-b04e62e5d3bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8140b8e2-5c03-429f-8098-4d6699b3ae53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880fe955-4248-4978-a5d7-5b2818e74248",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80c70c60-be1e-47b1-b508-863d4c95095a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a39e558-703f-4b80-8193-702efd450129"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d5447bc-a444-45b5-9ba4-00a826998b59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa9e8f49-c252-43eb-b1c7-a06c3ee8d163"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5322d8-0d72-4efb-89e0-694a6f34b6b5",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bb1e51c-6597-4b34-9237-b39a1c61c65a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c77af914-72a8-412b-ad13-fd868a289280"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "816609a2-75b8-4f1e-b69f-2214271660f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84497d39-3780-4cf8-8d07-d7d868b82fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f7764e6-aaea-44d2-a3b2-aa1f72889708",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6b5566b-3c91-4f6b-9188-a5d1fa8811e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72d12a81-0951-4679-adf3-c31aa9e7a07d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05da2de-fcfb-4945-afa5-05f58fb0aea7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8325577d-b6b3-4baf-a2c9-60a7125a6ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3801a3-bed9-4b15-98b3-d69c099cc7e0",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68835604-e1c2-4d1f-b7fb-9bf32b9af44d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cf04ecd-9ca7-42ac-9297-b26a95bbdff6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2897c365-4945-4509-a407-38adf1eb1045",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb3cfbaf-dcaa-476c-9cc0-c0b4ba805446"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38a3845d-deda-42fd-a209-628b3861476d",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c279ab-04d5-4aa3-b491-fff0112ddd60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0e9d6cb-d2da-4f85-a64b-35143dd884e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4e0c3ef-56bb-4853-9eb2-56fba885883d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64add4e2-dc1c-4f7a-b3f4-823da099bae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4c9573-4d01-4336-82dc-26fb5c176a45",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24fde04f-75bb-4a2e-9ef9-cf0ae3fd4fad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee056a1f-0c7f-4676-a92e-d84a7b947321"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3805e347-76fc-466d-b17c-77bec9980d28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24164e45-9b3c-4fe5-acba-c5c3607b6082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4950f33-5e50-406a-ba85-09a8779e25e7",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e684c4ee-6821-4194-990f-df86383c245d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb211579-81eb-41ba-b849-3d6eb4f830eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa702b28-ecc1-4197-83f2-de406f533f2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d9accb3-1210-4d1f-8b95-2c6848d3a8c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c04818-a3fc-4f67-aa55-362a74401634",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcad0ef5-679c-4dbe-ae4d-a97893df4b95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfc36dfd-1677-45d0-8076-c297c7b78415"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16f92288-f630-485e-9e52-3969a32901e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbe26144-24ac-4608-bc68-f2e519844b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c345c40e-3748-40e5-ac44-619f5a56b9dc",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "836dfec5-eab8-44d2-ad47-70656f9955d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b211e08-86e5-4623-b5fd-73b451225e97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21713d38-1971-4144-844d-aedc3d75c4b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "914aff6c-6594-4dd5-8b99-32032c3e3172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "650190a3-8aa6-4ef0-88e4-7f4d60e0ead6",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f844c18-adf0-4524-b2e0-06a8495cb10e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "354cc847-e4b7-42b1-9ace-7f5729bf441d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a4dc39c-3de0-4a6f-8fbc-1b3c6f863b4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c1001b3-80cf-406b-ae29-b815ae7495ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7c503c-e6d2-42ea-b572-24e661ae5e7b",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf77e0a-855e-4419-8061-a30b62243907",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54538498-7568-42be-b5d2-215c33003a37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2045a0b2-3855-406a-af0d-ac9881cf2dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fbfad25-0779-4ae2-8f93-da19a63bd026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70057396-1a83-4be9-864f-fcd6248f6151",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c2c165e-fa11-4442-91f4-3f4cf69a51f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28848fa1-3d15-4f0b-a97e-7c6ce6897658"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1fd33b4-9756-4a19-8613-8987efc97624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "550c2b4d-6224-456f-b244-c54c499851a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12f5bbd1-f25a-42b7-ad55-fbfb60e53d5c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbda139b-22c1-4bd2-926d-b443a57a725a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "685b8253-9dc0-41c1-b7ba-63129d008b86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68bdaff8-8d75-409a-846c-1cb8955dadca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "633e257c-2962-4c5e-9448-0c04430c43eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f8138a4-6c21-4075-9dbf-5917dbbb2578",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acdd4761-2af4-42e3-9455-f70f6617ea25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d752c79b-4f4a-4c92-b3ee-4733c4f3e7f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d04ab66-ceba-4dc5-bd83-3269fe6bc2e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7594469b-ef43-458b-a794-56ef485f7351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aff9c298-0817-40f9-b545-62971898b4fb",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d5c807-edd5-48f3-8765-aa10be4e4362",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41a30736-b3cd-4a97-b10e-efe6f89dfe12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8c8ed81-3e27-43f4-8575-ff38399c4718",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf8a1715-5655-4cd8-9197-5401b115cfed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02a7144e-096d-4143-9ca6-29e2f972eb5c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a73b8acd-21d6-4b30-b0db-946b2b549f0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae86058f-e125-444d-a33c-0fcdae61df9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e597172-7834-4850-93e3-71fd65664dbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76ccbf66-6363-434d-8df0-34da97a79005"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6ba1da-bf37-4f2a-80ca-46b218d6153f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99796620-cd93-4869-88d2-9b0f5e5bb726",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "627e5a6f-8794-406e-9db9-600d41c11c41"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34ea824d-5c9d-47e6-b9f0-143f592c8d84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2781cedd-7126-4db9-be36-408819e4ccee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64f5606d-5f46-493e-a547-dac367cfea39",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1575cb8-7165-41ce-9b3a-057f63b52b9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea0826dc-6fda-4549-b5b5-2aafeb32a1d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1070bce8-1a9b-4b87-84e6-beeb95477212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8778c6e-b1a4-4e2f-a081-cb3968ed0dfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d22c3a04-93bb-47d1-b9b5-527923fde076",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af178d5-e771-485c-8feb-4ef8918b0831",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ed33a09-ea45-4829-a07e-f97156916526"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a52d8fa-947e-4c94-b3e8-d6f2ea807e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350c3888-c973-4e8f-abee-d4384db13ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99520c43-a0e2-4e63-b12e-845927ac5b7f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95678f1b-fc6c-4d05-93ef-4372ff0b1e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbd016bf-3812-4634-8673-d0b77ede96d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78a1ce58-cf6d-44cd-a1f7-ee127967c5f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb4c3e8-c9d6-4e32-b98b-50e4854dec7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba2ae415-f01f-40ee-9b77-f8722b9d2ef5",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4462e98-3c0b-4637-8c2a-78404f649a1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76157064-45be-49a1-8876-249e838226c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b58acaf-7d96-4447-9492-599c9e8da113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bc44f6a-0c85-4e46-ba6b-2c24f8aae0bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9939bfde-38a7-41bb-ad4e-80ae268dea49",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "848afe83-aef5-456c-b3e3-97a92a053e86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10f49b62-e1b2-49bb-b941-8910a962826a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c32bc73-4b9e-409c-9eed-dbe095b47440",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2607a723-30ff-44b8-9bd9-cff8757b07b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55339258-4cb1-49d0-9250-8cfc0889cfeb",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de600d72-ca56-43eb-9353-7100c7613115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b56cc4fb-f37e-47d7-add7-30f027305142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac532c9-6b5d-4311-a001-533544a861da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88aab5ea-0250-4b93-bb98-6e7e8b9405fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "473c6b65-fa56-41ab-9483-4b32ed208293",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "206cdcc5-8d55-4a44-81f1-a5965658237d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f23c0f5c-8a26-4d25-82f9-07327e4b7c71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "751490ce-dbfd-4a84-ad27-8488ee42ef94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff4244fc-88a0-4061-9927-ef71a56a3c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f33ab6b2-71b2-437c-bdc4-a6ceff650adb",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754a8dc1-e73e-4588-be95-21ef1234a8ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f30d4b-9410-4d7d-bad8-f2aa80332705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aee043d-9b92-4cb4-9ce1-2f7d34ee0c44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "757611b0-a977-4e6c-9ccd-07eb2e98b097"
                        }
                      }
                    ]
                  },
                  {
                    "id": "524b4558-b40c-4498-b8ee-557791607113",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a2dc74b-8d4d-4410-a297-046032872967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf4005e7-ab71-4322-8a63-3b0ea92a1f38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bdceab0-07fa-4ff7-8c3f-4ba68e4ebd97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "152607d8-fc9b-49c7-9410-ffd7da720a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ce407b-348f-4d69-bd08-dea9ad399032",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "685f1407-fd50-4198-9e59-ac42bab99a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2058f09-6ae8-460a-8cb0-fdefbde5b8de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a75151-fbbb-4483-b824-111c15a374e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b9d9261-4ec5-40c1-a994-7e90b2285965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f23956-0de4-4cdc-ad6c-705c7a3771cc",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4624f78-a932-45d3-b0bc-dc5bb16b6c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e50a2087-0cb5-4f5b-99ef-0fbac25a22ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de1e733d-7b4f-483b-8bba-c693d7100dbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da7eea5a-80c2-41ec-8f25-4c32fcdc245d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "602c6416-7e75-439f-93e8-175b8cb138da",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2604662-59f4-4bf3-b49d-aeaed560a9f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ba8ed99-4c46-4264-878c-90571368b5b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c78b8a5-524e-4af6-b0d9-fe2ce45846d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b382ebc-3c0c-4aef-a69f-2493c63f8e72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce4a184-5b9b-420d-ab66-f4b5ade3022d",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b77279a-1ebc-44e7-8d35-2d99c836c2b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d26aa1-4cbc-46d4-993d-2fe6f3789aa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f096d5a1-d5a5-4768-8051-8142f1a835dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99538181-7b7e-4379-8496-e5bc12875132"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23604eda-76bc-4d1d-a69e-79888c98007f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c532d5f5-93d0-4fbf-9884-b972bb872693",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b764637a-b80d-4687-a6ee-09706e25b98f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "166b6de3-ac15-49ca-b6aa-22eee8b674af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe6106f2-b4bd-4b9a-aa19-f855ddb0f5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab586c71-7486-4205-8269-4821c5704694",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a0f5fdd-4e88-46ff-9fd0-8caa4276df6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c0d8e1c-16fe-4063-aae9-be5d95d78102"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "719821d6-d976-4373-b111-dd2293b7ae62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a901c348-2a0e-4d90-b5ff-e0b6ea392810"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfdfebc4-6256-49b7-8d6c-456d65cfffd4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "190a0cde-35b1-4997-a9a4-095b1df7841f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73df5a5d-4520-4c5b-80d1-c5ca9e4beb46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe408466-1849-493b-b2dc-494dfd830fc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78045e65-373e-4554-af1f-133e4b8482e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc35c95-3daf-42ff-b2e8-c57af8e34862",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd4acd3-e016-4d7d-821e-8bb1dc0b146d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90ea0047-1da6-49fe-8dc0-dd6e45b5060b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70d82a41-b8e1-46ed-ab6f-12cbaad1aafd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec5152aa-dba0-461e-82e1-21fdcdd17c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c05f9003-7102-4baf-98a0-710864253cff",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "476349a4-31be-481f-a3b1-f145d2a508f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95f25cfd-2509-42cb-a696-7dc960d2c93d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79bcd91e-6ffd-4a21-a62e-228e39eab996",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc1a6a7b-18e5-423a-929c-ed7a8e9f23cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc5f60ed-e4b8-49db-af2a-f3403eb7f872",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ad43f1-6f29-4d6d-977f-aa33d72be840",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3e8890c-969e-48da-a3b6-3adc7951fc69"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "252e8399-d0df-4e59-9d9d-e1793ef5ac8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6635d43-d882-49d3-8aa3-f35822ead5fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a18f242-2213-488d-b313-151d7877fb73",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbcd15b9-691e-4401-acff-e8c592c3cf34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dd7c85d-c15b-4f42-9877-533f9834a3eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d77c6bb-4b87-4966-a7d5-eed3bb7e061b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad96500b-27e6-4392-afdd-cc03b9f0cda4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5dfc8d3-46d0-4d0f-a94d-dce5ca9558bd",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534568a2-428e-463e-bc3b-9ead2c878b63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6619de6a-beca-4d7e-b0fc-ca4ac5273ebb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "245fb640-d488-4831-8c69-7ac6b2c49afc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f38217c-e8a2-4124-9d9e-64a78ecc8cc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6879f86-1154-4200-8527-92a09a04fa47",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30607f1f-c3b8-43be-be0c-f72e393d2039",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b686b7b2-7bc6-4868-a427-73a3406e4bde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fed8a2e2-878e-4015-9cb7-8dec67cf53bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15906607-bed1-40e6-b9c6-9653992bb4ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5164b917-de2d-4d3a-9319-372707b9d439",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58b8200-9cb9-4149-abc7-2b93fe17aaef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f283d5d3-4f22-4317-a3ca-57f0e45b4fd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c3eca21-eec0-47f2-86ff-ef38dfc248a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "051d1575-5e40-499c-b7c0-accc5a430f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "348b7470-efde-4631-9c87-130202e2c01b",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4429a97f-4dbf-44e6-87db-6b2418b491c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25abe500-ae30-40bb-bff1-1f330b9dc339"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "488ab529-8ee0-4701-a8e7-8543e9860bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "416cb9c4-3d1c-494d-aeca-65fc63943016"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9837424e-5b3b-42db-9fe7-6ccadc67ed51",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f01fe8c-d20d-44b0-83e6-c4a2b6ed5956",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23baab7e-d56a-4909-a31e-b244660d16b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2632f4bb-5621-43c5-b3e6-59dac55cbe0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79982e6e-5377-4491-82cf-3002ada2ae66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a06834-993c-4307-a837-250238118de0",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04fe8c0c-708a-4bb9-97bf-5c7f128c0cb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30c6765f-30ba-4f06-8124-91c5d9958aca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9512ea7-cca4-494d-903b-d00b2062ca32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55beade8-01a6-4434-b197-24c444195c65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccdf0e3d-3421-4a89-8c39-caef34f75d24",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a38f2b8d-ffe2-4789-8db1-285187550d1d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e2d56884-7724-493d-94fb-363113e41cb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79553ce-0583-4e34-969a-cb92923c3608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ee937d-fc07-4192-8243-38a0a5777e62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2df5932-cd61-423c-a92b-96ce2c40166a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d95a428-98c7-44c4-9090-363fcdf863de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fc0a08b-9994-4ca6-9894-8ea24a556e7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de5570b9-ddbd-4ac4-8c26-78881eec9e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c08aa1-8db2-4d8a-a333-a5e3d12715a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8816ce-3ca0-4d55-b4d7-6449a132b2bf",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "283476d4-62b9-41bc-b550-7d77ab681532",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b906d2bd-2b89-48b6-9548-678522a21fad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87d3534c-f2d7-44da-8997-c4fb69972539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39cf8424-fd27-4b49-8374-f43d5778e8e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b6c03e0-ea33-434b-8442-225c0392a3e1",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f279af04-9bd4-4a85-908f-ef320e15d898",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ce53c541-d584-4a8b-99e8-c8dab4e9d16a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c2a198b-d48a-411f-9e40-8f173f1d4bc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c512afb9-9577-4681-9ab9-7ed15004ca5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa3a1445-5c8e-4202-84db-d29395eda253",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af27738c-7ca7-448a-96e5-2e6efe54c064",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d484b6b-fefa-4db6-9195-63fab17c10ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a61ee65-43d3-48dd-83a2-24f816679e15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19658f90-b28b-45c2-bf96-e1a0756a7a5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d111669-d1b7-41cb-979b-bdd1d4d86d53",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e53996ff-ab5f-4598-8243-3b9de524fd7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e30a9c76-383c-4d33-9082-cb2020f905da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6012b0df-13d6-4ea4-a9ee-37648462125a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b6733b-e6e3-48f3-912a-20cff628cde2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10e10101-3faa-45f4-bf2e-2ffbcc6894bc",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "840fe849-713b-4936-be3e-f230af643d2f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d9939f5-b7ae-4a63-8b41-7040b3ba0e01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26b3eec-c991-4073-aa2e-a14183b04e12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41916a22-a3bd-4ebc-906e-da51bdaf620f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7682bba-5cb0-4426-b16e-907251ee1e3e",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbd6923a-fe0c-4cdf-992b-6cf8d19ec97a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07d13500-3f58-4ccd-8f5b-1af08934c5a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c087fc3-a981-4585-9030-e29414bff00e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "090c8d27-e0ae-4c68-afea-5640e7cadeed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f951299-25c4-44ca-a973-4d0fc380216e",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a78a9b2-3eb4-4e6a-9e2e-798be0b4d32f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f90be46f-859f-4f7d-b819-dd5289fdf37c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d37d2456-5acb-4190-83c6-79daf7f073c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d23ddeab-1b29-42d7-baf9-b81f23b3494c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "153c8599-6c9b-4f4c-8c69-cfa3883e9f4b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b5cb482-96a3-4b4c-b708-89b1ef091484",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98d2ec41-fb92-425f-a7dd-0e996397c08d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b166c1-f820-41e6-ab4e-2e66a7b2122b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d641f14-3538-4574-9d56-bbc22a3e6e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a4ead5d-f244-4003-b5d3-0451fed70e65",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ce79ff-85ce-4569-b1d9-96159a42ac8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d85472e-7c96-44aa-a7d5-b0eb3627e783"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "271c491d-8901-42aa-a142-2024aed05f1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0945aa4-2056-4f20-85d6-e2e544113844"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31b8d27a-203b-4e6c-b11c-5dd88efb7dd5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60c6f96-13f6-458b-b758-9854a97d4e6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26d48192-ba0a-4f3f-9c02-b5ea0a5386bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04266f6-4463-40bb-85e2-13f1c8b39104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaead9de-9773-437a-af10-1d7ab83dcb1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4513c5e8-cf42-497b-b0cf-66adf0d42186",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcff36db-8f38-4c3d-8880-2ed51291adb3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff62e63e-582b-47ee-a134-172146188a8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ac2c383-3d77-4a8a-8a05-1fab98b1ac2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c69132d-e57a-4a44-8f8f-38daf29c7b36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "406fffd7-b0a6-4e90-ba99-d713485a9758",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6b82829-aa28-4ecb-bbdc-7190eccc4cd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "57bea3c7-26b1-4672-8200-afe7b0c6a9b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1889e642-e9a7-404c-b99e-e701bcb198cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbb05e76-1ce4-4efc-97e4-c7b682f28ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f914df8b-7b4f-412f-bc08-d73b55298b5a",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56381306-8715-4303-b86f-74497c2a2b88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be6c3915-d841-4a7c-9e04-a7beedb9959c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21128527-9810-4c8e-9682-755b646c7337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "057af8aa-584e-4ae9-bc46-ef61f41694d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66e620f-50ad-4d98-a48d-b40318481410",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54d3cdcb-f122-45ca-b8c5-4ec8837ef7ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "925d4f66-478e-4d82-90e4-2c7ff2b04baa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9395984-ffe1-444d-b898-5b2c564df930",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27d3ad76-1d15-40d5-9b06-6e70ac3730ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "232c4ce0-157d-4d11-ae29-8a1bddf106bd",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932146f8-a3c7-40b5-ab6d-14491c59f47b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1dc47049-80e7-4f1f-9809-6d3c20873ffb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c34b5a-b7ba-4637-be9d-e160de411cc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72802355-d6b4-4a37-bcc9-c8c4bb342ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213d0cda-644e-4b4c-854c-4f8a725820bd",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0928f211-cc00-49dd-a1a4-ee2e1bd3f5f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4aa69317-d3b6-4c1b-8736-97a7da968dc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8a49d2-86ac-4fbe-8dc5-14d434befa94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17265ad7-c27c-4f11-aa13-eb04fc7c9681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfedd7dd-6a3b-48d6-bc31-949236656670",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24c3a402-59a4-4224-a929-883bb1c93549",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21411226-3a5d-4e57-a91e-b050b8649547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96bcfb05-bc41-49e1-872b-39897e5a8cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86874175-e09a-4a96-80b0-3831793d2a1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5014197c-cb41-41ea-9735-b5d6d30e9e01",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "581614c9-a53c-4cf8-8160-00044c36634c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "855cd38a-2780-4230-b52e-ab8cfe818195"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8faac1c3-485b-42dd-b720-9e53ce96b57e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8978830c-b7f1-4bbe-b0cd-9ea4f5ee0fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b646d576-43a1-43a3-80c4-8a74f23f48b5",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df94da1-abdb-4203-b03e-9f6d375db20f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba432eb5-3855-4a1c-b4ee-bdb0a887e239"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85641075-fa9d-41fe-acc0-28f84067d129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bfa23b5-243b-4917-9269-ddf326192a47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a26aac5-97d7-4fd5-a0ca-4d2c99d9bffe",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51c99f29-28b4-4c9c-89dc-bad70c5f1ab0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae77fc62-c736-4fcd-8857-0efe15b382df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9efba7-e6c0-4037-afd4-0e92bb590695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c21ea7d7-3763-470c-b1de-aa91e8fc3bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e699f301-9da4-4e91-bae9-5c81f956f914",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d8bd35a-72a2-4f71-89fe-d860281618bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a0c19c06-42ce-44aa-a37f-1aa42bc1e107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "279a5e6b-9a35-4cea-9ba2-bde784b84bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ece2970-7fcc-4ece-a96b-50f94f8e9e20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86a2939b-e0aa-4fe5-ba57-bb731346a230",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9038820-8027-49a0-87d0-825ef6f02370",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62ae5553-103e-492f-a9eb-4c8150d5a760"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "266bdb4e-a1f0-431b-9dff-b78dea969d3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a562c9aa-dcf0-40d2-9208-2798cf90be57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a614c53-a19d-40ea-9d82-e8c89a81a791",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13be75ba-8ef6-421b-b0f8-3f8060d65ddc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b28c2f4-2a93-4ae4-a133-5cb72f49f643"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a9727b-8e53-43d4-95e0-fda849d43498",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fcd1029-a89c-47b0-9181-c12d3efc8fe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f7f715-69c3-4e97-bf9b-ca651c2879fe",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4142edb0-d5d6-4233-86d8-fcccf32d2e76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abe9fb6c-2917-4685-8f8a-1f7b39a93bd5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8166ca-fac5-44a2-b088-7d59d3f7c164",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f152fd2-d12f-4b9a-a6a6-adb7807fa8cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a7fb2f-df3b-4747-aff0-abe8da599289",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c866050-23a3-4e90-8496-1290a80a6aaf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbec3b1f-866b-4392-a1e6-a52b102d9716"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee6833d-9953-4bad-857c-96bea845509d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7574ba8e-72d2-4ad1-966d-dcdc714eaba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "840c2a2f-abc7-4a4f-80de-4d26956c3ee5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "447ab43c-3e4b-437e-b851-6ad0fce29df8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "631677c2-dd5b-4924-b643-67ee65b4399e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "310e1708-5da0-49de-a0f2-71d406237c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f49fa043-4bac-4b3b-9be3-7a985d283281"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4687150-6c0f-4274-8666-192759f9ca57",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe17d7af-daa5-4482-8e5f-aa2161b2444a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aa460d0e-916f-4f0a-b99e-b512be8ca82f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b638ff20-94ed-4d1a-bf15-7f02875a8752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d43b87b-9de3-4230-b3c9-6ca27ed7836d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfe19fa-30db-4bf3-9a84-6464de92b3b1",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e575e044-280e-4af8-9ebe-e49cdf750937",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "701714ca-a565-4838-98e9-550a2a6063f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d8027f-8fe5-4408-a613-bd7e52c97c77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "197d22a1-e6bc-47eb-a011-4f93daa95f08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7def3c99-d4c8-4911-aebf-414652c15606",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e1495d-d15a-4e42-b364-ee2ecb4e5984",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04642393-2b98-4d9d-b717-91290041d87d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf3c9a9e-0ef2-4fdc-b150-e858805273af",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f86480cf-f3f2-4790-8bbc-6f424acb610c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5a3fbd5-bbb7-4037-a09c-9d481e3f5323",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a6821f-9490-41db-aff1-33be51125f9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5f10ec1-63dc-4d24-a85a-dc71988e4b04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c385f27c-4df6-458f-bbc8-ef520590d656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20d9e3dd-3022-4d87-9aa8-d6069f175141"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "706e43ee-84f7-4cce-80a7-c858888cc00b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad94a70b-c6d8-42fe-bb12-5a9a24b24fd0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d80413ea-82a0-41a7-ba84-ba7ad1da15ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bf9b7aa7-2295-4eca-a096-569c038b565a"
                    }
                  }
                ]
              },
              {
                "id": "024aa42f-bcb5-4cd0-8324-be5996804f8b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a2600a14-4d64-4f15-b9bb-c4c382bbfe5a",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04332393-66ed-4296-a597-e4df95de4cb0",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "dde00b88-21f2-4f1d-a94e-64e809e93e66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "510f0c4b-2900-4afd-8650-72921b34e12e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "edd42f59-4a33-447a-810b-72dbc7245a25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e6adfb-78ec-4000-b17f-b51cc5dc6b27",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f38d83ec-ff17-47be-b1ec-8d6f174aa81c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "d9ec26c5-f5fd-4908-98e5-6a60ea227ceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acbc13d9-14a8-425b-9852-71e1d19ed38b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c3600e5-c969-4b89-82be-dabfa415c805"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2e343560-92c2-4726-9c98-122d8099998a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02c4c3ed-211f-4f39-8b6e-7ecd0a36c32b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8c405ea0-e107-44d5-b7ef-17d268c79c81",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "20c74030-d685-48b1-b3d8-5ed55eeccc9b"
                    }
                  }
                ]
              },
              {
                "id": "f592a1ee-fe5d-44ae-9f20-1653eb078d4d",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "66887c8d-e072-4132-9454-295d5ef3c490",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd739163-f745-42f9-84ee-1f2eadabfcfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "20af9775-bdfa-4319-b330-f1eb782343e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec1c62a2-ebea-4a61-bdca-9cb391c5e273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "983e198c-7a97-4c7b-8047-9937bc33b5e7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "dcb06b8a-3fce-4f8f-8c0f-df2b810d3120",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0272a7d1-3672-4a06-93d3-1a98b8e5ef36",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bc15a8f-6d27-4d21-9071-89a7620cf207",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d13c75d2-a4c7-4fe9-b35b-3d96c711c49f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a8bd6c57-fd6f-486b-9fa4-470f9a9dc713",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8c52cf61-00e3-48e5-838b-1d4f130be10f"
                    }
                  }
                ]
              },
              {
                "id": "73b21637-1e31-49cf-bf76-8ab355dfa16e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8bd72a48-330d-4261-9b18-14cd34e23758",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "560f7961-4b41-428a-8e42-c6d4783510df"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9ca5aaf-6e19-45af-a832-6ff28404083b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "936b5074-cc7d-4fe2-a0f5-3fb2b1e4d7fc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "55951182-f809-48a9-8717-636a43938278",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "448686e1-295d-42df-9ee8-911c37aa84b0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e0230b2e-2b3a-4a8e-ac8f-7f5474186e67",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "95eedcf3-7efb-4b4f-ba71-8bad9ad9c7b2"
            }
          }
        ]
      },
      {
        "id": "905dcdc1-0aae-4a46-9db5-65f8178ae296",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "a53bdc80-c1fc-4dd9-ab66-ec7bc9b455b8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "34962aee-65db-4ff8-8bef-36e91107c024",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a5a578c-805b-4e36-bc17-c7063e6f0b21",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bb7fecd-7c16-4976-9212-a5b465014b31",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "efddf18f-690f-49e8-b862-f798cbd613b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48378058-ac94-484f-87da-b89c303a1044",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "41505c21-cfd5-43db-868a-527402a85274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371eb0ce-8151-43ca-a5be-95d101bbb105",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f83ad3c2-fe9c-4545-bfd3-b42fb1fe0d2d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "ddd96956-1f35-458c-8fbd-1dbe91ebfe97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a0bcc1b-fcb3-4b7f-9ff0-1f6485b92996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b507b0c1-a80c-430a-a188-9006554310aa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c46a989a-905f-478a-97f3-9efff5029c8d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7dbca926-e383-400e-abe6-a53887ec1594"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "118f37da-b213-4f64-bafc-4eb3c3a22a5b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "02d1df58-94e1-4f36-9853-754b23984e6a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1c4e6c81-7004-4228-81af-53c9a25ef7d9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "62a03186-6f68-44ef-b93d-5dade77589a4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "00ebeeef-87af-4292-90c3-784c73eab819",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c6d93562-7c71-4529-b205-aa9e5ad105b7"
            }
          }
        ]
      },
      {
        "id": "92513e58-fc2c-47d4-bacb-d9f0dc35b295",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "c162086e-fdaf-4a2c-a7f9-535a09043316",
            "name": "Negative Testing",
            "item": [
              {
                "id": "43a20d09-23f5-4bca-be7a-2a4a7c12a80f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6aed5fa1-a3ab-4025-a365-efc4de105d22",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c83e060c-b687-4f90-b9d7-53b937b43c86",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e719bdb2-5099-4593-a1c3-75992e65118a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2074656-71cd-473f-9055-87e13e0c7380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c61d11c-4eb3-4584-8b94-6a36b4ce622a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f47e9f0-1be1-4754-b5d5-259249307b8e",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636ee57d-bcd9-4ad0-8815-86eda3c13b7f",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e378e807-800e-4af8-86ea-4528605a0547"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc028bc1-6cb4-4610-8fb4-95977b9deec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4a02f4e0-2ec9-4dbc-a6c9-756b7aa7fc22"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3fcba894-8be3-46b5-9ae0-203fe76f6d90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f4dee7b-b874-4762-a2b5-0655baf01cdf"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "14eda5ae-e28b-4ab3-b9ea-120d044b5608",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9c644f14-c67c-48e7-9a23-c8e3ef7d17c0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a23fcd4-3d77-4c2c-b0f3-b7dc5c747f66",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "89be4a57-ab08-4862-9d75-fa0f6ba4f87e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "075f0647-6ec6-4d12-b649-14b42a74d646",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e9298da6-ad16-47ce-ada1-4af485d4aa5d"
            }
          }
        ]
      },
      {
        "id": "b89c52af-3dc1-471e-95a9-9754d74887ff",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "c097ceca-b58a-42a3-800b-e8e784b501ed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3c1078f5-5cc7-4230-83e9-6ff5f6f04e10",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "de0e5523-b66e-449c-bef9-dab203a0c436",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ac2472-fa98-4eaa-b9b0-a1683bb30b9c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "98aa6432-fba5-4cf3-a8c3-8c7e84f89e64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83368ec4-c225-4d33-8e8f-c8dc732c231f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "46808dc4-142e-4d03-a8b1-6f803bec0d7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339452f4-7f8b-421d-9118-7521018d330c",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85290c2e-0bd5-47c4-9480-d00ce36308cd",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9a992ba6-13d0-4b23-b5e1-23cbafebbedd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aebb1da8-bad7-4b5b-a4ec-77ac4fb955ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1b8f7fb0-d97c-4d6e-87f7-c45a1aa4a166"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2dff6346-0a31-4840-a11b-baaca3a3b73e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e223aba-28de-4a04-84ce-d0ec0feb73b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1331ea44-df43-4977-ac27-400e9f1fac2c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21159693-4827-433d-84d7-b7a344ceab1b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a4303f5-7586-4a05-b998-87318ecb381c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "29357a91-2ebd-48eb-85b8-2862cdef5bd6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "563d9552-7144-49d3-b287-895f8bdb20a4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5786a201-ca58-4469-8f4e-a9cb67701c48"
            }
          }
        ]
      },
      {
        "id": "fcd4a2e5-f2e2-4f28-9d60-f969a81ca2d8",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3dddfa53-b926-495f-aafc-3cd520f96129",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7bb27ca3-a113-46c0-b709-5c7ff26ebd15",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3e2f73dd-7aab-4095-99c8-b1e027d6e45e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "82afcffb-d2bb-4688-843d-f9ba28c7dcde",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f4f0a259-c353-4367-9e78-030259c28c04",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 1008.4461538461536,
      "responseMin": 7,
      "responseMax": 10451,
      "responseSd": 1179.7953346729148,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1683679006695,
      "completed": 1683679281493
    },
    "executions": [
      {
        "id": "80a101fd-3429-4a62-ac2a-801a3fc5b210",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "f9a177cf-798d-410e-b089-705188311220",
          "httpRequestId": "04542967-2f7f-4666-b09f-210b217fd6f9"
        },
        "item": {
          "id": "80a101fd-3429-4a62-ac2a-801a3fc5b210",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "8c299297-596e-4552-b81a-9dfcb559e817",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "c83f52c8-38dc-472c-917f-bffedd5e64a3",
        "cursor": {
          "ref": "4c8c4c2d-4256-4fcd-b39e-3752d1fed7ba",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "d6e301e5-6070-42b9-9c0d-bd3de65d660a"
        },
        "item": {
          "id": "c83f52c8-38dc-472c-917f-bffedd5e64a3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e638cf1a-ffdc-46a5-990f-6eea96b61c44",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "34fc9b47-04cc-4877-b6f2-dd0826536210",
        "cursor": {
          "ref": "ed59442f-c576-4616-b8be-e3311337e87d",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c2ce6c6b-a479-4291-b0ec-d9239063a65b"
        },
        "item": {
          "id": "34fc9b47-04cc-4877-b6f2-dd0826536210",
          "name": "did_json"
        },
        "response": {
          "id": "bb57c668-b5ab-4136-b63d-7dd4ae49266c",
          "status": "OK",
          "code": 200,
          "responseTime": 1433,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586bd062-74ce-4919-9e0b-8ca48e816d7c",
        "cursor": {
          "ref": "9c2ef9bf-afec-4efb-91ac-b26db8a7296c",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e9800e1c-2f7c-461a-8449-0f2e74f580bd"
        },
        "item": {
          "id": "586bd062-74ce-4919-9e0b-8ca48e816d7c",
          "name": "did:invalid"
        },
        "response": {
          "id": "b64518b2-6010-4d44-9681-a9105ae94bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 852,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "586bd062-74ce-4919-9e0b-8ca48e816d7c",
        "cursor": {
          "ref": "9c2ef9bf-afec-4efb-91ac-b26db8a7296c",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "e9800e1c-2f7c-461a-8449-0f2e74f580bd"
        },
        "item": {
          "id": "586bd062-74ce-4919-9e0b-8ca48e816d7c",
          "name": "did:invalid"
        },
        "response": {
          "id": "b64518b2-6010-4d44-9681-a9105ae94bc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 852,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5707af53-a9b7-4b87-b2b5-d36c86e67326",
        "cursor": {
          "ref": "1e4261eb-e156-4f60-923c-a6a5e3db9b26",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "10f6a142-c5bc-4238-8ee2-1c124be52750"
        },
        "item": {
          "id": "5707af53-a9b7-4b87-b2b5-d36c86e67326",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9f81207f-32bc-488f-b470-4f43b23ee057",
          "status": "Not Found",
          "code": 404,
          "responseTime": 840,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2fde133-1451-45ef-a2dc-abceefb933bd",
        "cursor": {
          "ref": "5126cf3a-39e6-4d38-ac70-6296fd62918e",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e1dc7f72-73ba-49b3-a6f5-004216af9de1"
        },
        "item": {
          "id": "d2fde133-1451-45ef-a2dc-abceefb933bd",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "38046c36-65a5-4441-8d92-29937c096f98",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1089,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56910ca4-03ec-46c7-8780-baaecb3e09b4",
        "cursor": {
          "ref": "14f5253f-b4af-4a71-8f46-d83a288e9a4d",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "2683a4e1-873d-4f85-a535-ca6e5bd31eb7"
        },
        "item": {
          "id": "56910ca4-03ec-46c7-8780-baaecb3e09b4",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "859a8754-97ba-4bf2-866c-d232e4da4a6b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6543a5ec-ef04-4d0e-b1c9-62ec84b4aecd",
        "cursor": {
          "ref": "a89f9b0a-b977-4b2f-9769-02c93badb004",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d226f12c-5b22-4bf1-b824-f586a69d1783"
        },
        "item": {
          "id": "6543a5ec-ef04-4d0e-b1c9-62ec84b4aecd",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "a05b3820-cbdb-431b-bda8-a62d7bb5c924",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 801,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6543a5ec-ef04-4d0e-b1c9-62ec84b4aecd",
        "cursor": {
          "ref": "a89f9b0a-b977-4b2f-9769-02c93badb004",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d226f12c-5b22-4bf1-b824-f586a69d1783"
        },
        "item": {
          "id": "6543a5ec-ef04-4d0e-b1c9-62ec84b4aecd",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "a05b3820-cbdb-431b-bda8-a62d7bb5c924",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 801,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747d8001-d9ad-48ec-bb50-d38403edd7f5",
        "cursor": {
          "ref": "b6dd1cf2-5b67-4393-9f98-8ab37a31da47",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "1a571724-caf6-41f1-ab6d-2e85de5387ac"
        },
        "item": {
          "id": "747d8001-d9ad-48ec-bb50-d38403edd7f5",
          "name": "identifiers"
        },
        "response": {
          "id": "c218f968-463e-4fea-b4c1-5f987e6dac5b",
          "status": "OK",
          "code": 200,
          "responseTime": 1416,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e0bdcc-2c91-4b8c-921a-d701963033a4",
        "cursor": {
          "ref": "b0d04868-1774-4a7d-9979-87c16af29e26",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d5a91322-581d-4ff8-b212-4c0f6d9f3e8b"
        },
        "item": {
          "id": "96e0bdcc-2c91-4b8c-921a-d701963033a4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "985896d4-0bf8-4532-a869-1165c4afe735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e0bdcc-2c91-4b8c-921a-d701963033a4",
        "cursor": {
          "ref": "b0d04868-1774-4a7d-9979-87c16af29e26",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "d5a91322-581d-4ff8-b212-4c0f6d9f3e8b"
        },
        "item": {
          "id": "96e0bdcc-2c91-4b8c-921a-d701963033a4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "985896d4-0bf8-4532-a869-1165c4afe735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 743,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e2ee68-67bf-476e-872c-8c358f552edc",
        "cursor": {
          "ref": "04c633ff-2108-46d4-bbb2-76639b9282aa",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ac842cda-e65c-4b67-b2dc-7c2e6a8158b3"
        },
        "item": {
          "id": "66e2ee68-67bf-476e-872c-8c358f552edc",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "bb22d82e-6282-4c39-b7c9-89ed7b4c028f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 749,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e2eba2-d26e-45f9-b606-a04cc68250b6",
        "cursor": {
          "ref": "fcd33cb4-8f0a-40ff-a53d-dfe77dced6cb",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "80389e46-b6ef-4f2a-8499-da1af3276714"
        },
        "item": {
          "id": "76e2eba2-d26e-45f9-b606-a04cc68250b6",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8c237c23-3a4e-41cd-8aa0-7e1b938e63ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 798,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e471b1-74bb-46a6-9223-79a8f2efaa3c",
        "cursor": {
          "ref": "6faf746c-5f7f-4569-b561-e3109e088f1f",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7990d129-287c-44cc-96de-c2f1ce666ce9"
        },
        "item": {
          "id": "26e471b1-74bb-46a6-9223-79a8f2efaa3c",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9a4c0c4a-cd0b-4770-a0b6-6cc3bbb0b049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "052ace33-5c53-480f-babb-8ba3c338eb3f",
        "cursor": {
          "ref": "75f7fde1-207d-4d6b-a8cf-6085405822a1",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "25374948-631b-4e31-b8ff-828cfba0e300"
        },
        "item": {
          "id": "052ace33-5c53-480f-babb-8ba3c338eb3f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "89ac2f32-49ca-437a-bcea-20ce58ba8286",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 757,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04e391b-4efd-4eba-b3fc-d5fde6da5a46",
        "cursor": {
          "ref": "4f1fb88d-c9e3-4d4c-9ad8-fe6969094a97",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "abe07dde-b12c-4162-907d-5eb856521182"
        },
        "item": {
          "id": "e04e391b-4efd-4eba-b3fc-d5fde6da5a46",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f458239c-d040-4c1a-9161-b0224eb58f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 799,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a141fe7-a77d-4f9a-b926-91897dc6ce6a",
        "cursor": {
          "ref": "23b938d9-f3ac-4d08-a872-1137146858fc",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "acd3253f-0e4c-46c5-b1d9-00a41583bd8e"
        },
        "item": {
          "id": "1a141fe7-a77d-4f9a-b926-91897dc6ce6a",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3b27bf25-ef9f-466b-99e0-ee063162c16b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 844,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bcef0db-6422-4110-aa71-2b6e4d7bc3d7",
        "cursor": {
          "ref": "81d5dca3-ac50-4b54-abf1-d629d384caeb",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3cf81b7c-63ed-4c20-8740-d5d3314f3d13"
        },
        "item": {
          "id": "4bcef0db-6422-4110-aa71-2b6e4d7bc3d7",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "cfc09253-033f-4e96-bb0f-4e4dc3d1407b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 805,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f444532-641e-4497-82a4-fe7b82e0dbd8",
        "cursor": {
          "ref": "d5b52fe2-cf5c-48c1-b19d-36d23a08e987",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2a7232e9-42b7-45e4-ae62-dc4cffbce598"
        },
        "item": {
          "id": "0f444532-641e-4497-82a4-fe7b82e0dbd8",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d2aa4d8f-6570-4cb8-8b3d-05a333c32b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 792,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe341b2-0c5a-4c16-9184-47b24b1340b3",
        "cursor": {
          "ref": "e84f60df-2f35-445c-8ae8-babdc9e66667",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "08e94353-08cd-49aa-8f62-790b124cf330"
        },
        "item": {
          "id": "0fe341b2-0c5a-4c16-9184-47b24b1340b3",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "b16c27cc-86bb-49ba-8acb-8ea7ab7b13f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4a4f3e5-38f9-48cb-92b1-be1b5c3bd48d",
        "cursor": {
          "ref": "c22d466e-9a98-47fd-91e8-39ebe2ae2fd0",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8ac338d9-7c99-4a5a-b029-31f785f88282"
        },
        "item": {
          "id": "e4a4f3e5-38f9-48cb-92b1-be1b5c3bd48d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1f3f8f12-d1c8-41fb-b07f-3261e0eb7b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7abab41a-af00-4d99-bc3f-16096082d1e9",
        "cursor": {
          "ref": "96c5ae6a-f726-4c9b-bf0c-95da44681fe9",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ad13d009-9e02-414c-b895-1477e2b1c50d"
        },
        "item": {
          "id": "7abab41a-af00-4d99-bc3f-16096082d1e9",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "87892e70-dc4b-415a-9899-34533731d52c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 879,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0795639b-9685-4a44-90cb-2702d9813b7f",
        "cursor": {
          "ref": "55a2eae7-d784-497e-81c0-3c80ec744b9c",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "80d5d27c-3b84-46af-93a6-c7d3da9166c2"
        },
        "item": {
          "id": "0795639b-9685-4a44-90cb-2702d9813b7f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "4c6f18e6-75a4-433b-b223-31fa1f280d6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 873,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3856ac58-b6d3-45d4-a714-c576094a1803",
        "cursor": {
          "ref": "797d9898-c0fa-4c95-948c-c3735a6764bd",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "883a8673-3211-4b20-bb79-b0fc317da65f"
        },
        "item": {
          "id": "3856ac58-b6d3-45d4-a714-c576094a1803",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7bbc3a2c-1ad2-42b2-96ae-7053d4d13780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1351,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "485655c0-a752-467c-86e3-7879b88292f4",
        "cursor": {
          "ref": "21c9be6b-881d-424a-93f8-c9fdb9ec4a31",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "54c1eed9-afeb-4664-b9e1-76cf7598a598"
        },
        "item": {
          "id": "485655c0-a752-467c-86e3-7879b88292f4",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "702c381d-be09-4efa-8ecb-f45ba81084b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1414,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef1ddf3b-cf74-40d9-bdb4-c18484afb379",
        "cursor": {
          "ref": "f14598d0-eec3-4f09-915a-8168788ab21f",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "22aa633c-bfcf-4ccc-9cdf-7782da8513b8"
        },
        "item": {
          "id": "ef1ddf3b-cf74-40d9-bdb4-c18484afb379",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "0f53e388-11b8-48d8-a909-0e377bc3ec27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1090,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c3395f9-d8a2-44c5-815a-4009370aa22d",
        "cursor": {
          "ref": "946699ca-e663-44fc-a60e-881e31828084",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "e0a75905-8df9-4f60-9109-3f454a27367a"
        },
        "item": {
          "id": "6c3395f9-d8a2-44c5-815a-4009370aa22d",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "68445bff-44e7-4151-8c3c-c72f7756156b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 770,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9b655a-8bad-40f1-bf0c-8aaf0ff2bccd",
        "cursor": {
          "ref": "f8f66a64-7f1d-4ec5-b970-1d955dde09bc",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "80f59eba-a05c-4ddc-b52e-63dca32139e0"
        },
        "item": {
          "id": "ad9b655a-8bad-40f1-bf0c-8aaf0ff2bccd",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0b73afc8-ed9d-454b-b04b-a4bbe9b8defa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a88e220e-7c02-4a59-b6bd-ee9e7785944f",
        "cursor": {
          "ref": "da563ff4-d505-47c5-a5b7-8a0069c2ba6d",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2f383bce-8d9a-4554-98c3-23a8a3aa9ddc"
        },
        "item": {
          "id": "a88e220e-7c02-4a59-b6bd-ee9e7785944f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "13781b28-5321-4c0e-9d5e-0059ed9bf732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 778,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "276dd4eb-e504-4806-a6a5-f72ed0f0fa07",
        "cursor": {
          "ref": "c0631069-d578-4fc1-8640-dcfbd8875162",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5f18a1e4-99bd-4a1f-9439-e29234bd8e03"
        },
        "item": {
          "id": "276dd4eb-e504-4806-a6a5-f72ed0f0fa07",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "81a3a319-16c3-47eb-a05e-bbd4d2825049",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 806,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ef11fae-f7aa-4c16-8500-35e6b941d279",
        "cursor": {
          "ref": "217d196c-63c5-426c-9f56-385c7412393f",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "aae69fc8-6d5e-49ef-a3a7-10adde2b9f7e"
        },
        "item": {
          "id": "0ef11fae-f7aa-4c16-8500-35e6b941d279",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "438b850d-d24e-4d74-b527-1ba9612b699f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 781,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5748e3a-79c4-446c-b6c2-3782a4c08f21",
        "cursor": {
          "ref": "28e00c97-5911-4802-abd7-aa25ecb16582",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "d23c9600-20db-4dc5-9c2e-7bab257bad9c"
        },
        "item": {
          "id": "b5748e3a-79c4-446c-b6c2-3782a4c08f21",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "ae15cb48-7bf0-49a2-a22c-4cda86ba7b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "723d4ccc-c75a-4ca0-b4d8-3409516bb7d1",
        "cursor": {
          "ref": "1745da06-bd1e-48fb-9ff6-fdd71bad5160",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3bbc7243-0693-421b-ab3f-57dca279a687"
        },
        "item": {
          "id": "723d4ccc-c75a-4ca0-b4d8-3409516bb7d1",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "eb5c3ff5-0f8d-4442-8d1f-6a46e5f96963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c91d2db6-75c6-4441-ad4c-a3dc969f39d0",
        "cursor": {
          "ref": "6f841792-8c81-47e9-ab9b-ed14f54175b3",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d3727f9b-5991-413d-8d1d-d434a792c6a3"
        },
        "item": {
          "id": "c91d2db6-75c6-4441-ad4c-a3dc969f39d0",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5b3ec71a-f4d4-489a-99d7-1bcddc7a9019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0659cbf3-2623-4382-b969-386028b82e6a",
        "cursor": {
          "ref": "745d6538-11a5-42be-a71f-4924a22951b5",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "a697746b-be8a-44ae-a4b1-34bd7dfbafb8"
        },
        "item": {
          "id": "0659cbf3-2623-4382-b969-386028b82e6a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "17065ce1-dc3a-4596-94e6-60743f3b17f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "112e86e2-640c-48f1-81dc-7b6ee8b4079c",
        "cursor": {
          "ref": "673d1199-a32b-4257-9aab-23d8424f5d9e",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1cf8137c-aa2e-45a8-9cee-b8cd06c36c83"
        },
        "item": {
          "id": "112e86e2-640c-48f1-81dc-7b6ee8b4079c",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "cd2912aa-82aa-42f7-8c39-6a3186526160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0455f587-4e44-4f66-ae35-bdbbc9bb0388",
        "cursor": {
          "ref": "0ef0b855-7958-4699-8c8f-9060e24a55ce",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "7f90da56-a57e-4778-8004-4be2aa8e5290"
        },
        "item": {
          "id": "0455f587-4e44-4f66-ae35-bdbbc9bb0388",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "91290af9-e2b4-4a0c-96cc-7968ae325ade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 787,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c95d3e-cf69-4346-800e-31c11dd06784",
        "cursor": {
          "ref": "07b7592d-f705-4aa1-92c5-1019a16416d8",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "b8af4d53-698e-4f6e-ab5d-263a6ef72b92"
        },
        "item": {
          "id": "35c95d3e-cf69-4346-800e-31c11dd06784",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c1acc1f3-0b04-4679-ba91-f95d70891b34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 809,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c31b53-9054-4481-be7b-b0813e8516f4",
        "cursor": {
          "ref": "718e31ec-99ef-4cb0-8b84-a5f994a3034b",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "64c4ff4b-1937-4146-8ca6-3f8bf8638ab7"
        },
        "item": {
          "id": "34c31b53-9054-4481-be7b-b0813e8516f4",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4358a0a6-b56b-483c-847d-e7c15f18e186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0570573e-18e5-4170-8571-4e1ae3372440",
        "cursor": {
          "ref": "539b862f-c652-4d76-950b-1d8b14a062c1",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "7d2d570d-823e-43f2-8684-01f8b2db0129"
        },
        "item": {
          "id": "0570573e-18e5-4170-8571-4e1ae3372440",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "3116221e-b8a8-49fe-a164-5afec61c0cfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 802,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "779de6c4-23fd-4d70-88e7-0f38d714284b",
        "cursor": {
          "ref": "65a7aa5c-a809-4ee7-8df5-f2212de15668",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8ad2cfab-66ea-46db-9660-086b3321b377"
        },
        "item": {
          "id": "779de6c4-23fd-4d70-88e7-0f38d714284b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "40677191-cb68-4c14-94e4-bf6721960861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 806,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca88c5d-c673-44ef-bf20-fca5dece5f99",
        "cursor": {
          "ref": "2a1067b8-4a6f-4090-872b-883ff7f6662c",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "72f5b251-378b-4486-a614-7ea3a110b3ed"
        },
        "item": {
          "id": "eca88c5d-c673-44ef-bf20-fca5dece5f99",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "bc1539fa-7c4d-4a93-b94c-2f4200c4acb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8927db5-aea3-4331-b38c-8eb86a6e3bab",
        "cursor": {
          "ref": "91bc6e2a-2f40-474f-9973-0d3fe199fee4",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "24aa646e-b6d0-4321-9a38-5b3c56070ee2"
        },
        "item": {
          "id": "e8927db5-aea3-4331-b38c-8eb86a6e3bab",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fe2a57ca-511d-40ff-9d0f-92b1068e1df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f076c452-8250-414c-aa8e-647338e0aa7a",
        "cursor": {
          "ref": "98030c0f-290c-4076-903e-708a97fa1ae4",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1eb57167-4a98-4d60-9e42-89a37299006b"
        },
        "item": {
          "id": "f076c452-8250-414c-aa8e-647338e0aa7a",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c6a67830-1810-4b5d-b605-e5bbaa61f845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 817,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee7473b-53a6-4bcb-8921-3452a9ca7bee",
        "cursor": {
          "ref": "f208de7b-a0b1-441b-af70-fea8c24b06ad",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "7ce1e4c5-195c-479c-8424-bc9b5c00df89"
        },
        "item": {
          "id": "4ee7473b-53a6-4bcb-8921-3452a9ca7bee",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f5ad19ab-0758-43b9-9391-0ae0cb486b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf75f5d-8d52-4207-8434-26c59e1db10d",
        "cursor": {
          "ref": "a8a89848-01a7-4ace-8f3b-699a1674caa2",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a9c1fed6-b6a1-4d7a-92fb-707f1b4755cf"
        },
        "item": {
          "id": "ddf75f5d-8d52-4207-8434-26c59e1db10d",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "97f39bd1-a001-42fa-bd8c-168931e701db",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1387,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afabcf23-e6ab-4707-b8a1-40bb2be2322e",
        "cursor": {
          "ref": "30ae85b1-f4cc-4368-b409-61ab78946f2e",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ec9ae74c-9bec-4ac8-b817-ece4b6bd018e"
        },
        "item": {
          "id": "afabcf23-e6ab-4707-b8a1-40bb2be2322e",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "802b7fc9-46e5-4ca4-a5c7-c1046c7c8e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1305,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ecba30c-901e-4e4e-8236-7db12173bb05",
        "cursor": {
          "ref": "ed6c8ac1-9de1-4e30-a201-f04abf86fda5",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "e8aacb7d-93eb-45df-886a-4d596ec697a9"
        },
        "item": {
          "id": "5ecba30c-901e-4e4e-8236-7db12173bb05",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "dad8022a-61fb-4d94-8069-91d37ae33408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1370,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f70f5d-ef1f-492d-a2b1-0fe3e4949c7d",
        "cursor": {
          "ref": "8c9ad6e6-a16a-45d6-b609-d3f427fb5a30",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5e7bb173-f030-4995-81a5-7288425f0b88"
        },
        "item": {
          "id": "98f70f5d-ef1f-492d-a2b1-0fe3e4949c7d",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "cb6f972f-b1b9-4669-acae-41cf44209fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1343,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b1d759c-1b31-475c-b6c7-59009a631936",
        "cursor": {
          "ref": "c9ec0152-0fcd-4bd8-9e5e-b9b57fb708ab",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "c22e2db5-d421-49fb-b116-8e8eda777414"
        },
        "item": {
          "id": "2b1d759c-1b31-475c-b6c7-59009a631936",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "1d14bade-277b-4d86-af28-ce50d5b8fde5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1571,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94672f41-1eb5-4c31-b98e-18b6097d6c58",
        "cursor": {
          "ref": "2940fee8-042a-43ad-8c38-9a5461302ba2",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "e11eee08-b4c9-4d80-a6bb-7654e494bcad"
        },
        "item": {
          "id": "94672f41-1eb5-4c31-b98e-18b6097d6c58",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e0ac7676-4e62-4bb5-aa7f-a91fc883f785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1362,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d232ca6e-18c8-4d4d-879d-a5e9a86ddf04",
        "cursor": {
          "ref": "3c114b58-14a0-4093-9037-f1e6a48f4d61",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "915d6af1-9cfd-410c-bdcd-d6500b004698"
        },
        "item": {
          "id": "d232ca6e-18c8-4d4d-879d-a5e9a86ddf04",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "76a826d9-8756-40d6-9902-3b28ebcd8799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1281,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1615de0-8aff-4984-a046-ede3aa6aafd0",
        "cursor": {
          "ref": "22bb53fb-5f14-461c-92c4-8e929733fd1f",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "15afbfd9-699b-4279-b474-e19ad133d356"
        },
        "item": {
          "id": "c1615de0-8aff-4984-a046-ede3aa6aafd0",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "070c368a-e873-4ae6-8561-ce02e8afd2b5",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1043,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82ec84be-624c-474e-8263-72d58c139db6",
        "cursor": {
          "ref": "7076681a-8456-419a-9834-5227bc5cc557",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "421efd85-2c7c-4c61-9f1a-051c9afac012"
        },
        "item": {
          "id": "82ec84be-624c-474e-8263-72d58c139db6",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e2c8c050-0e1c-4d07-8f45-c5440565ca58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 806,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "897a6323-2da0-41c0-8831-20167c2cfe09",
        "cursor": {
          "ref": "45a128ce-f6ab-472d-8192-d2e2dab419a8",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "de464fbd-056f-45c9-bfad-c4a172b3fac3"
        },
        "item": {
          "id": "897a6323-2da0-41c0-8831-20167c2cfe09",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b9d53e4b-2ee4-49eb-bec1-66f2916707fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6414f067-a865-44bf-bdb0-f1adcb3402f0",
        "cursor": {
          "ref": "5b4efa45-026a-40ef-bd9f-f8e2093c0e75",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "91902958-50ed-4ebd-a588-7a41f0f54902"
        },
        "item": {
          "id": "6414f067-a865-44bf-bdb0-f1adcb3402f0",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b2772507-5c7f-4340-b8ca-10fcc97caae8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 935,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a93e5dd-fefd-4a13-87e0-92d64cc4829f",
        "cursor": {
          "ref": "d3e299fb-c739-4913-9fa4-b5b931e5f85c",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8d1cd177-064f-401d-9f20-f74f4913ad26"
        },
        "item": {
          "id": "5a93e5dd-fefd-4a13-87e0-92d64cc4829f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4ddd54f6-1bf5-4f03-b630-a44d7411c396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 784,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089a6cdb-e4d1-41c6-b0ba-1630ea4b8004",
        "cursor": {
          "ref": "38814be7-bdb9-4310-825a-5b9397705b22",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "d68e72cb-886f-4ada-8648-1fa5d0910a50"
        },
        "item": {
          "id": "089a6cdb-e4d1-41c6-b0ba-1630ea4b8004",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "364d7b5b-550a-4695-99e0-704339574436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 765,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77cc237c-59f0-4cfe-a74f-aa8692cec244",
        "cursor": {
          "ref": "12dd0a7d-81c9-4946-ad14-08d62029dbbc",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "23374bec-c60f-4eeb-b33d-2cb6eefd1fd3"
        },
        "item": {
          "id": "77cc237c-59f0-4cfe-a74f-aa8692cec244",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "72313f8d-d61d-40c3-8f49-27e00a71e7e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 786,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b671b2-bd7c-4884-ac20-bcf43372a5e8",
        "cursor": {
          "ref": "aa320dcc-1a66-473d-ad0a-edc752456a90",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "8f31c135-7943-4753-9c64-354bc616cb15"
        },
        "item": {
          "id": "c5b671b2-bd7c-4884-ac20-bcf43372a5e8",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9861bb38-642b-4126-bee1-13cc9950370b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 786,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f01a8b-03b7-4047-92ea-8ca734195269",
        "cursor": {
          "ref": "3bfdab9b-6ab6-4584-a9c0-8026bd3625be",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a432935f-22d4-41e0-a10e-00dbc78ccdab"
        },
        "item": {
          "id": "c9f01a8b-03b7-4047-92ea-8ca734195269",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "81c0a939-e43e-441b-acbd-849110028080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 800,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ef609e-ca08-4b5f-8480-ea2026e58f55",
        "cursor": {
          "ref": "d3bc4eaa-25f9-42cc-a058-a14f621e28a2",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "7eb7341e-d943-4252-994a-d0c1bbf49eaa"
        },
        "item": {
          "id": "62ef609e-ca08-4b5f-8480-ea2026e58f55",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "89392d08-e14b-434f-9000-d112c419c324",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "263149b4-d98b-4f48-821f-ac941927f7c6",
        "cursor": {
          "ref": "5f886022-2f55-4d03-9df6-f6e855dda5b5",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "4f2a0dc9-c20b-401b-b786-b398517ec877"
        },
        "item": {
          "id": "263149b4-d98b-4f48-821f-ac941927f7c6",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "7cdfed4c-1941-4b63-8cc0-bee18b04c135",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c086d142-cec0-4501-8990-066f4fa36931",
        "cursor": {
          "ref": "bfb91615-b028-47a2-a2e8-20793fe98c43",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "177bdf70-edc7-430e-83b9-bf083cf9eda6"
        },
        "item": {
          "id": "c086d142-cec0-4501-8990-066f4fa36931",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "cd9cebcf-e02f-4e93-96fc-6b20abc55bef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 754,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07803cac-17dc-4511-9488-404de63cdaf7",
        "cursor": {
          "ref": "06a798dd-025e-4958-a2b8-170993a41fcb",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "fac019ed-8389-4774-8621-e50f28c08a13"
        },
        "item": {
          "id": "07803cac-17dc-4511-9488-404de63cdaf7",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "df36bd4b-f6fe-4d7e-ac62-fb2753358921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 795,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca8d76b-c93f-4736-b878-37354e43c40c",
        "cursor": {
          "ref": "67d850a5-5317-4109-9a28-443681cdb192",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "94bcb664-1330-436b-a434-b7e34be09f26"
        },
        "item": {
          "id": "fca8d76b-c93f-4736-b878-37354e43c40c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "67114dbd-dc58-4c2c-8370-6d0cb6a69e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a776265f-486c-4901-af37-10359387d57d",
        "cursor": {
          "ref": "d80c438f-9b09-47fa-8b1c-d4fac325dd1f",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "e1751038-429e-486a-bdb5-c78f75b5b465"
        },
        "item": {
          "id": "a776265f-486c-4901-af37-10359387d57d",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "d9c3cdfc-9892-4c2f-9395-bf5e01b993d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 777,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ed9356-1e05-4b57-b0bb-2f7ae01fab5b",
        "cursor": {
          "ref": "d5f50b65-ef45-4512-afce-cb796ddcee36",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "660d3161-e262-4141-92e5-fed207f3327c"
        },
        "item": {
          "id": "15ed9356-1e05-4b57-b0bb-2f7ae01fab5b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "db17ea9b-3034-4399-a7bb-95bb26654d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dad6598-c44b-4905-a182-c79cca7c3d48",
        "cursor": {
          "ref": "e5a8350f-ab4c-4098-a452-150b04974b41",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f2100c64-10bb-4cb2-ba64-022bd75ffac1"
        },
        "item": {
          "id": "1dad6598-c44b-4905-a182-c79cca7c3d48",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "372153b6-1fc8-472f-87af-d2cb83b2a84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 819,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87312900-4dc4-4436-b564-e73d8deb61eb",
        "cursor": {
          "ref": "e0cd93a1-8725-465f-9f5e-26ae548f3658",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "99c22d41-9924-4b49-b3fa-01971b5c22d6"
        },
        "item": {
          "id": "87312900-4dc4-4436-b564-e73d8deb61eb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "50804951-a9a4-4988-afab-a821cdec4338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 797,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8884165e-a928-45e1-a75a-49cd153fb744",
        "cursor": {
          "ref": "dcb54657-3aa6-4049-90d4-b78aabc0dab7",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "d7164aca-78f7-42d5-a9ba-52646e03daa1"
        },
        "item": {
          "id": "8884165e-a928-45e1-a75a-49cd153fb744",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "257f9663-c005-45cd-b9f6-a3697122448c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 819,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe5ae44-ab88-47af-868b-8bc9766cd053",
        "cursor": {
          "ref": "2503b42e-6a52-4201-ac61-7def9d7476f0",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "5f039c13-4c86-4f3b-b234-b66ffe5f5712"
        },
        "item": {
          "id": "cfe5ae44-ab88-47af-868b-8bc9766cd053",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "c4b129cd-8f57-420d-9361-40bb0810fc7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 783,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f093dbc0-379f-44cf-b61d-0d7d09f09ee3",
        "cursor": {
          "ref": "af3e885b-923c-4842-b3d1-604f7703181e",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "73ce2fa3-6866-433a-b8af-64957268fac0"
        },
        "item": {
          "id": "f093dbc0-379f-44cf-b61d-0d7d09f09ee3",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d7f1d1fe-a226-443a-ba4b-714442bdbc80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 827,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b1e524-d39a-4f92-9099-612c9068213d",
        "cursor": {
          "ref": "b46a456e-501b-4853-b8ad-5e5da87007d3",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8498dde8-b5f2-4272-9593-94eea6814c67"
        },
        "item": {
          "id": "b0b1e524-d39a-4f92-9099-612c9068213d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "53e9fe61-94bc-4d68-99de-041bec6037a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 790,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ef708e9-9440-427b-9c3e-e0303f46ce0c",
        "cursor": {
          "ref": "1983bcdd-81ef-4fa6-9668-805624f8bff0",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a7b5e1a8-c3fe-4fff-a00c-49aad0f468f4"
        },
        "item": {
          "id": "1ef708e9-9440-427b-9c3e-e0303f46ce0c",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "3ff60251-47dc-4adf-8786-b1b8117222cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 775,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90e981ae-4bec-4bee-a2f3-bc0883253dc1",
        "cursor": {
          "ref": "74a8bcfa-ba19-44ea-9d4e-1389e0cf07fb",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "126bdc89-abf1-4db2-831d-34eed8bb4e3c"
        },
        "item": {
          "id": "90e981ae-4bec-4bee-a2f3-bc0883253dc1",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "64a30d08-0440-4a16-84b0-77b5a08df4f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 787,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcd13955-8c8f-4e10-a739-1f8ce046e96d",
        "cursor": {
          "ref": "30f8c4e5-c35b-435a-aace-a0bd8acae7ca",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ae875395-baf1-42a7-bbfd-a43bb2d80433"
        },
        "item": {
          "id": "fcd13955-8c8f-4e10-a739-1f8ce046e96d",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "30d4101e-f15f-4b43-a238-60c4b2534559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6395fa3-342a-4eca-bb6c-a0de432f5e8c",
        "cursor": {
          "ref": "45d65ecd-b2e2-49d9-9c5f-86e8a7a25fc5",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1779d747-6bca-4d6f-8d3d-8353d6b1a37c"
        },
        "item": {
          "id": "e6395fa3-342a-4eca-bb6c-a0de432f5e8c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "ffbd7faa-b0a3-467e-9311-f8b0bbe64d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 786,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5555c4-90ac-486d-990d-4d3b898e2a1f",
        "cursor": {
          "ref": "0b3bee4b-fde9-4020-96f0-8cd023f45f74",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "859c5973-3ddf-454c-aca8-5ff47f7282ec"
        },
        "item": {
          "id": "4e5555c4-90ac-486d-990d-4d3b898e2a1f",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2528d66c-041c-4dca-a1a0-a23acd568322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 787,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b85b7d5-7da5-49db-8878-ffd23248f039",
        "cursor": {
          "ref": "e4bc3d75-e58c-44cb-8287-fb3981172023",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b5e42325-66ab-44ca-9d5b-cda8e30ed5e9"
        },
        "item": {
          "id": "3b85b7d5-7da5-49db-8878-ffd23248f039",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "c077b509-1564-4af5-b477-bcb6a2103045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 843,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fe78f7-3c0a-436a-9dff-77987e91fb09",
        "cursor": {
          "ref": "58929312-06f7-4973-b962-f7806d2fb187",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7471f11b-2772-4a1a-88a1-1655b221ee10"
        },
        "item": {
          "id": "c4fe78f7-3c0a-436a-9dff-77987e91fb09",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d5e7bcc9-1bf2-4466-8f3d-561710b1134b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1192,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66f38df2-fe5c-40c6-8a75-2c14a6829abb",
        "cursor": {
          "ref": "072b2f56-43de-4a63-a49b-ad1c592c206f",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ad917a00-6d85-4d9e-b969-d2e06eb248a0"
        },
        "item": {
          "id": "66f38df2-fe5c-40c6-8a75-2c14a6829abb",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "b533f81b-1910-46ce-b1ae-7a1866457088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1279,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a5781f-0f99-45d3-9f07-4922c5aa1423",
        "cursor": {
          "ref": "e5a4bf36-f9c0-4589-88f1-5f9d97e1285c",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "bec23367-d17a-47e2-89ea-ab7827e3b933"
        },
        "item": {
          "id": "d6a5781f-0f99-45d3-9f07-4922c5aa1423",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "57dcfc1a-53d7-4261-ab91-bf3345a329ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1455,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "341e2aa6-f362-41e0-b733-8edd3e1f4c90",
        "cursor": {
          "ref": "de0a49e2-a2b0-4f1f-bd0c-4923eb4fae45",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d99a252d-53b6-4bb6-abec-78abeafb6f64"
        },
        "item": {
          "id": "341e2aa6-f362-41e0-b733-8edd3e1f4c90",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "38f0de9d-3bad-40b3-95f0-e5de1fbbfa24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1870,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbebdcd0-319b-4cb7-a28e-d809bf49a047",
        "cursor": {
          "ref": "7cb31ec1-c1ee-4c24-9d30-9d729e5f32e9",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6eb9cf6a-da5f-472e-a33b-276c4762f9ad"
        },
        "item": {
          "id": "fbebdcd0-319b-4cb7-a28e-d809bf49a047",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "b5fe450e-e41b-4134-834a-2af1a18d2af6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1582,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1ec6e67-b2bc-45c6-baae-12ff5f1a4377",
        "cursor": {
          "ref": "4c1bfa22-d095-4432-bc7b-b507425348ac",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4e11e995-9629-4824-821f-40a08bfba118"
        },
        "item": {
          "id": "d1ec6e67-b2bc-45c6-baae-12ff5f1a4377",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "d287876c-087e-4002-af77-10d8cb1445d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1352,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c621c26a-61b5-4641-a005-c2269aea9cd0",
        "cursor": {
          "ref": "608dfbb9-b3a1-469d-a276-9f54b36d403b",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "8bf1609e-5825-4822-8eba-b094866a24cb"
        },
        "item": {
          "id": "c621c26a-61b5-4641-a005-c2269aea9cd0",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "091fb69c-b7f2-4df8-bdee-aab98278dcf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 816,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "701f174b-19bb-453e-b87f-597bd9cf9003",
        "cursor": {
          "ref": "21fb9503-740a-496b-892f-277b3c5451f1",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ef8166e8-04e2-465d-80c0-2926291f21d0"
        },
        "item": {
          "id": "701f174b-19bb-453e-b87f-597bd9cf9003",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "5453fa96-619e-4b0c-b79e-803fe8235184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 882,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5095d639-27a7-4608-9a06-e4a88fc2cf07",
        "cursor": {
          "ref": "d0b5d4a7-eda1-4c06-8e3a-c3eba91a393f",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "0289a5b1-b46f-4dd7-9fa6-0f16149cd01f"
        },
        "item": {
          "id": "5095d639-27a7-4608-9a06-e4a88fc2cf07",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4873d141-87f4-42ab-abff-f69020afba2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 785,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc246ce-27ae-4b8a-b88c-aa334eff4c99",
        "cursor": {
          "ref": "f819f4a0-2d47-4f36-abbb-113434230699",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "df87da9e-a735-4092-a3ca-ff8829575ce6"
        },
        "item": {
          "id": "2fc246ce-27ae-4b8a-b88c-aa334eff4c99",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "3077bf83-3e19-4194-9438-bdbba27ef80f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 782,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b249f4-ecb9-4283-bf92-a945205aeeff",
        "cursor": {
          "ref": "d9fa5fb9-3e63-47cc-b714-c2923b90d076",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "92d74a1d-57c8-44d0-b293-2bb65d9e6c87"
        },
        "item": {
          "id": "14b249f4-ecb9-4283-bf92-a945205aeeff",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "abd091a3-e0c7-4f19-8643-ade0e7a8bc96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 843,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f395578-166b-42b9-8053-254a0d37bcee",
        "cursor": {
          "ref": "a1e3d98b-62a3-461a-9b0a-c60dfd658f6e",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a0dfe956-64c6-4d02-82cb-6277dd8be3f5"
        },
        "item": {
          "id": "5f395578-166b-42b9-8053-254a0d37bcee",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "0dcf3aa3-06b4-4dfa-a3b7-1c22ddb804ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1651,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d78a064e-dfc3-45ab-bebc-d62afe6dbf3b",
        "cursor": {
          "ref": "6a3a2750-aec4-419a-8a83-3f107db6b98b",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "94c508b6-3db0-40f9-8ef8-7c5551ac6f2a"
        },
        "item": {
          "id": "d78a064e-dfc3-45ab-bebc-d62afe6dbf3b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3a9786e9-93bd-4f37-94d8-92fd252e880f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1357,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f89fdcf-1913-4966-86a0-50e2f96b216a",
        "cursor": {
          "ref": "799199dc-f185-4db9-abd6-473ec3ddfeeb",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "a171a20b-f53c-4910-ac55-2b9382e5ca09"
        },
        "item": {
          "id": "9f89fdcf-1913-4966-86a0-50e2f96b216a",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "f7a7be09-f0f1-4ea2-8cea-e84fe8175ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1218,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "568b0214-3dd5-4d5b-8c65-84e70ed103f7",
        "cursor": {
          "ref": "cd8f6ae5-cd45-4eab-be31-702bf33f334d",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "d17744e5-eec5-4362-add9-119f9db5a438"
        },
        "item": {
          "id": "568b0214-3dd5-4d5b-8c65-84e70ed103f7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0cf2207d-f9d8-4d0b-b829-d3c3538513c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b007415-fe46-49a3-b85a-fbc874f5da98",
        "cursor": {
          "ref": "bb2cd7c6-8900-4c54-bfb8-23e9da63f3de",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "990f5e17-18e8-47f9-8a16-92a6535a59cb"
        },
        "item": {
          "id": "8b007415-fe46-49a3-b85a-fbc874f5da98",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "4518a30c-36c3-4356-b86d-aa92f69629b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 808,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "376354e9-3500-4ed9-8846-3071ab2c06b4",
        "cursor": {
          "ref": "d8519fde-f902-49fb-8ad3-708d486a01ed",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "266b235e-919a-4213-8189-180b560284c5"
        },
        "item": {
          "id": "376354e9-3500-4ed9-8846-3071ab2c06b4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5dc0135a-b340-4914-bee3-7e5220fbd6b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 833,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "316de16b-ffa9-48b7-b4a2-b75275c763d6",
        "cursor": {
          "ref": "613de125-88c5-4056-b903-472ba0f85f98",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4e9c6a7e-a156-403b-bd6b-18797f20932b"
        },
        "item": {
          "id": "316de16b-ffa9-48b7-b4a2-b75275c763d6",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "184bc08f-d0c3-492a-8eea-07ec80c5132f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 826,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f6074a2-fbfb-4f34-ade7-f75dc85b19e8",
        "cursor": {
          "ref": "3b57bac5-0a9e-44cf-a754-735c9b038d30",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "b1daff56-f40b-49ac-89c4-a97d84ebd96e"
        },
        "item": {
          "id": "2f6074a2-fbfb-4f34-ade7-f75dc85b19e8",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "318d3507-d3b1-49ae-8931-4e8424153628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2940d3f9-39d4-4b24-b621-620e0cc29b18",
        "cursor": {
          "ref": "db541033-94b0-4660-8c70-6eaa37cdae6f",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "df9594aa-a963-413c-9704-099a293bd6a7"
        },
        "item": {
          "id": "2940d3f9-39d4-4b24-b621-620e0cc29b18",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "673415aa-4ce8-4e4a-acbf-b7c1be1a46df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 830,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d25c5dc-6123-4bd0-b324-deb847a19a8c",
        "cursor": {
          "ref": "e05ac268-1d55-42c5-9fe0-bc581e704739",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "62daf3f5-c11e-4027-9d01-46f7bcaff940"
        },
        "item": {
          "id": "8d25c5dc-6123-4bd0-b324-deb847a19a8c",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c16e4937-cc9b-4380-bec0-71f18a50740b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 820,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ff754d-159d-4783-b634-1fd2c614e70e",
        "cursor": {
          "ref": "47fc8449-bfb9-4555-b478-c289db2eacbc",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "244ccf91-f4d3-4c48-90af-5c60c37e4535"
        },
        "item": {
          "id": "97ff754d-159d-4783-b634-1fd2c614e70e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8c784dde-e9b6-42cf-be33-77c1c3fe93b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 831,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d82e43df-5d54-4d65-ab6a-5092196f84be",
        "cursor": {
          "ref": "3b98e330-8a1c-4aaa-8a77-ad4a4bf873ee",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "d706c5b1-9b9d-4b09-8199-25afd0c30cfe"
        },
        "item": {
          "id": "d82e43df-5d54-4d65-ab6a-5092196f84be",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "8bf841a0-c2a8-4848-b4f4-b25d9c650720",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9366219-8f5b-4d65-b40e-1efecd2a0651",
        "cursor": {
          "ref": "002a0b55-9dad-4a9a-b306-ec7245483812",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "83e6efc4-b14d-44fb-ba9b-ee20b4170b8e"
        },
        "item": {
          "id": "e9366219-8f5b-4d65-b40e-1efecd2a0651",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "995f409c-9b88-4542-8de6-f684e6fca5a9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 798,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb4675f-b5d6-41b3-980a-4b3483110fe1",
        "cursor": {
          "ref": "ddbd2338-4958-4722-aa21-9c5eadafb591",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "28d555df-711a-4ca8-8d97-f0ff6ba42930"
        },
        "item": {
          "id": "ebb4675f-b5d6-41b3-980a-4b3483110fe1",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d27c3eac-3038-4881-b476-a7a1579bf374",
          "status": "Created",
          "code": 201,
          "responseTime": 7735,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e59e66-8726-44f0-a658-4f2a69e2f08c",
        "cursor": {
          "ref": "478e57ea-46e7-4edc-831e-9246f8ed3221",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ff0b4909-e05b-4e52-8619-0ad43b3eed50"
        },
        "item": {
          "id": "07e59e66-8726-44f0-a658-4f2a69e2f08c",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "c32d15a7-316f-4728-ab0d-88dd5ef45018",
          "status": "Created",
          "code": 201,
          "responseTime": 7256,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0437bfc3-fbc1-4254-bdcf-0dfb0f38b03e",
        "cursor": {
          "ref": "7fdb5d31-fc49-4042-b4da-217a66d24a67",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "155307bd-e24b-49fb-9baf-2f41fd83ec9c"
        },
        "item": {
          "id": "0437bfc3-fbc1-4254-bdcf-0dfb0f38b03e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4998bda5-115a-4194-ae28-0c5e7ab1de24",
          "status": "Created",
          "code": 201,
          "responseTime": 10451,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6942080-b4cf-46ae-af31-aa0982b4a8c4",
        "cursor": {
          "ref": "335a7210-88ef-4e8b-81b9-5395b36e669e",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "99b0578c-cab8-4eec-8da2-128090322bb0"
        },
        "item": {
          "id": "d6942080-b4cf-46ae-af31-aa0982b4a8c4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "4c03b8fe-e768-4075-b7af-02934d82a262",
          "status": "Created",
          "code": 201,
          "responseTime": 5740,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "267d9a42-0d59-4af2-acb0-ab19be6b26c0",
        "cursor": {
          "ref": "7da2e6be-854a-40d6-9114-f3ac10669c08",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "5134c798-b469-4b09-a082-5cdbb153cd6f"
        },
        "item": {
          "id": "267d9a42-0d59-4af2-acb0-ab19be6b26c0",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "32e65a86-e06d-43b3-89c6-ae50e91783bb",
          "status": "Created",
          "code": 201,
          "responseTime": 5981,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d15b4fc-5527-4dd3-927b-bd51e69f095e",
        "cursor": {
          "ref": "fe7e6d33-0d12-48b5-8683-b829cdfa6bd1",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c5db7d23-0e22-479c-8694-05e5398a4a7f"
        },
        "item": {
          "id": "0d15b4fc-5527-4dd3-927b-bd51e69f095e",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "bb447ea7-951a-4457-8cac-41a5a705c240",
          "status": "Created",
          "code": 201,
          "responseTime": 9927,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac633a92-bc6f-49a4-8f0e-26f14406e1a4",
        "cursor": {
          "ref": "b9a7ee82-a6ac-4420-bb5f-66ecd918f15c",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2d553e4f-d746-4c59-9ca0-f0e28586bf9a"
        },
        "item": {
          "id": "ac633a92-bc6f-49a4-8f0e-26f14406e1a4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "92c74c1d-a924-4d0a-a4e2-7180022f4674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac633a92-bc6f-49a4-8f0e-26f14406e1a4",
        "cursor": {
          "ref": "b9a7ee82-a6ac-4420-bb5f-66ecd918f15c",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2d553e4f-d746-4c59-9ca0-f0e28586bf9a"
        },
        "item": {
          "id": "ac633a92-bc6f-49a4-8f0e-26f14406e1a4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "92c74c1d-a924-4d0a-a4e2-7180022f4674",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 780,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b1d39e-4974-4fbc-b835-e002f93a5644",
        "cursor": {
          "ref": "6c058bdc-1ec9-48f7-8bb1-b3ed61bace76",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4b6567ce-72ee-42ac-9805-ef9948240732"
        },
        "item": {
          "id": "b4b1d39e-4974-4fbc-b835-e002f93a5644",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5ce6c025-6eb0-41e9-9f51-39306ec3a0c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 811,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8918a7b3-0f51-48e3-af4f-849f5fc82f60",
        "cursor": {
          "ref": "59ba96b6-d302-4b3e-b725-bd8647d9927c",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "2e198156-66b8-4eaa-a9f0-f95251492bcf"
        },
        "item": {
          "id": "8918a7b3-0f51-48e3-af4f-849f5fc82f60",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e4921948-b7bd-4136-9530-6c1ccc4f870d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 773,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998b3772-824d-4c97-9841-24a74a8f3e4f",
        "cursor": {
          "ref": "f8e89e15-4003-40e0-9128-f8081cd06f06",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3cb909ff-205e-4e33-b97c-dca17653dbec"
        },
        "item": {
          "id": "998b3772-824d-4c97-9841-24a74a8f3e4f",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4dbf2d79-cd9e-4fe1-919f-d57ea79fb047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 753,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3863dd75-383f-4f16-ae9e-cf6730b2ba50",
        "cursor": {
          "ref": "3505a39b-fb7d-4aef-94de-98ed0739e04f",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "3232db67-1f85-4760-9bae-ed83cb3ddb32"
        },
        "item": {
          "id": "3863dd75-383f-4f16-ae9e-cf6730b2ba50",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a26ef868-84b0-49a8-96fe-e7219e483369",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75aeb3ae-cfc7-47fe-9f6b-932d18c2a06f",
        "cursor": {
          "ref": "c0877089-62b6-4a5d-8d18-2c851eefa4f9",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "67402c20-4db3-425f-8718-7985cbd7e07a"
        },
        "item": {
          "id": "75aeb3ae-cfc7-47fe-9f6b-932d18c2a06f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "72005922-64d8-4896-bbac-7b03899ea623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 796,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70819181-a620-4647-8204-620c18a2bca1",
        "cursor": {
          "ref": "7828caa3-7897-49a7-ac4e-f6c8b03c74b7",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "a4d5366e-493b-4571-bbcb-b94870369281"
        },
        "item": {
          "id": "70819181-a620-4647-8204-620c18a2bca1",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1abd9ba2-a95b-4ba1-9eb6-eb5e7f5be396",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 768,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29708f7a-ffbe-4d45-9ce2-48cd911a7240",
        "cursor": {
          "ref": "03c76544-38bd-4bf8-b93b-3173eea0ba5e",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b716ef8c-764e-4a1f-bdec-a89f3c8d8fae"
        },
        "item": {
          "id": "29708f7a-ffbe-4d45-9ce2-48cd911a7240",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "1cc5a0f5-5e7e-4c1e-a9f7-63e70665e53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 791,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a79111e-ebfc-42d1-be3f-1ba396f3e634",
        "cursor": {
          "ref": "700d9a27-ada9-40d6-8823-6258559efe93",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "045eb601-69fb-4ad7-b0e0-bd43cfacbe0f"
        },
        "item": {
          "id": "4a79111e-ebfc-42d1-be3f-1ba396f3e634",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4bfdf291-ff82-4402-a051-4bc5b262eb1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 797,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07688c2b-859d-441f-8627-e0c03d7381d5",
        "cursor": {
          "ref": "cdcc4dcc-55ea-40a2-9664-49b649617d5e",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0e35dfc6-970d-4402-9d63-ee6b7dfc02fc"
        },
        "item": {
          "id": "07688c2b-859d-441f-8627-e0c03d7381d5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c555fea6-e25d-49f2-91af-592fb675ef95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cbff88b-5561-4b05-9643-12c44f8ed095",
        "cursor": {
          "ref": "c7a2bcce-ac04-49ee-b4b4-54669ad52e93",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c00bdf03-8237-4ac5-aaa2-831ee453d926"
        },
        "item": {
          "id": "2cbff88b-5561-4b05-9643-12c44f8ed095",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0f3ce4eb-02b8-4203-9fe8-37a91d979d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 839,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "598e3c1c-75de-4ebe-88c9-795f9b90c110",
        "cursor": {
          "ref": "0ac149cf-c8e6-4d94-8af2-fa889ebdb897",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "520123ff-fb2e-4552-8452-efc467e8837d"
        },
        "item": {
          "id": "598e3c1c-75de-4ebe-88c9-795f9b90c110",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "5e4a538a-b177-43d4-98ba-1025ba01aabe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 847,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf63aaa-5634-44f5-a72b-5bc87ba4e3b4",
        "cursor": {
          "ref": "70fddf6f-cb45-4f3b-a583-282c01be4e72",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8be5414f-8168-41af-9d0f-151ff13bc34d"
        },
        "item": {
          "id": "4bf63aaa-5634-44f5-a72b-5bc87ba4e3b4",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "14d63b25-dfab-44ac-8646-5553da27db5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 803,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12bef2c0-2e85-4090-98a1-18d5c8210d68",
        "cursor": {
          "ref": "6995b469-7dcf-4c08-8edb-23dd86718740",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "9f03b19e-9db5-4fcd-9fc3-ece97efcc241"
        },
        "item": {
          "id": "12bef2c0-2e85-4090-98a1-18d5c8210d68",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "5b00595b-07b2-4c21-8daa-f5412fd99b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 879,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e4aa81-0e22-46cd-8ffe-bf7270500c3c",
        "cursor": {
          "ref": "b55c9652-f506-4e16-8e3a-94b057b738ff",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "8616ea6b-9589-400b-bb96-fd8a7fb5df00"
        },
        "item": {
          "id": "04e4aa81-0e22-46cd-8ffe-bf7270500c3c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d330bb77-24cd-49fa-98e2-b26c37c9dddf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 807,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d42120c-abe2-4ee4-a7ed-40f4b91447b8",
        "cursor": {
          "ref": "58346847-0440-409a-8d90-20292b3aee7d",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "ad59bd5d-6c85-4484-a29e-7f2ff2daa291"
        },
        "item": {
          "id": "3d42120c-abe2-4ee4-a7ed-40f4b91447b8",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5f8a428d-686e-4c52-b1a3-1922051fff37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1120,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b993d55-35b0-4ad1-bf81-f34cb331ee28",
        "cursor": {
          "ref": "055908de-5b3a-4ec2-9713-3054e71d043a",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "a909b69b-a81a-4c51-892e-3b6ab8558f61"
        },
        "item": {
          "id": "7b993d55-35b0-4ad1-bf81-f34cb331ee28",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "6e81b160-8db0-4a00-acc3-eba546491e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1070,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd1690b-34ba-452e-92bc-d236800a3972",
        "cursor": {
          "ref": "4d0d81c7-3ca4-4411-b69c-95507d997283",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "0f9eb089-a87f-4531-adb1-be3c92a93d2d"
        },
        "item": {
          "id": "6fd1690b-34ba-452e-92bc-d236800a3972",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "25958253-74a4-46dc-a51c-6a620af117b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1181,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3734bfa-e207-4894-9bf8-632ae3888c7a",
        "cursor": {
          "ref": "9daba268-bc17-44b0-9194-7a9920c2f925",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "53ecb753-9ac4-4e75-8537-8f48b473399a"
        },
        "item": {
          "id": "b3734bfa-e207-4894-9bf8-632ae3888c7a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "dc841290-44a4-4cf4-89ce-82b4a6e9bafb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 902,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67868615-5faf-4c08-92c6-8a0e01200575",
        "cursor": {
          "ref": "125f03d3-9c09-4465-b5e5-d980b88fec70",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7e0234cc-f9f8-4817-a151-eace00df0e53"
        },
        "item": {
          "id": "67868615-5faf-4c08-92c6-8a0e01200575",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "27ab9b95-3ff7-42bd-87d0-0ce408256df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1233,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b1b0951-38c5-4091-9dc2-b149b7373266",
        "cursor": {
          "ref": "68e2bd8f-d06b-4fa8-864d-c45868b5818a",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "e8dbb3ee-762c-4068-ac9d-a4ea18152778"
        },
        "item": {
          "id": "1b1b0951-38c5-4091-9dc2-b149b7373266",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "b6acf260-415b-43f3-91d4-fa929f3c8a27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1044,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc852131-5ef9-45d2-99aa-b2d80d3bb360",
        "cursor": {
          "ref": "bcd20899-8e09-4ec5-8011-eb11bad07f99",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "f0fea4af-886d-4c8c-b7c6-1d4d4e2d62de"
        },
        "item": {
          "id": "cc852131-5ef9-45d2-99aa-b2d80d3bb360",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e85f1da9-ab9b-4b52-b142-c27c1fcc136f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1075,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e39d8ad2-f4cf-4857-8caa-8444c32074aa",
        "cursor": {
          "ref": "089d2d3d-3890-4b00-a010-3ca97a636db7",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a40286b1-b542-4eff-b96b-eece7a72d025"
        },
        "item": {
          "id": "e39d8ad2-f4cf-4857-8caa-8444c32074aa",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "466c2399-07aa-4d41-a20f-582e3c260e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1060,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "872afe8a-e40a-4d14-b855-7247b748e592",
        "cursor": {
          "ref": "66cf30df-66e9-4631-8174-ae724331849b",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "80ec84b0-2f1b-4740-b4eb-0d164bfea06b"
        },
        "item": {
          "id": "872afe8a-e40a-4d14-b855-7247b748e592",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7a2087ee-8619-4192-9d05-8cef612f0864",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 974,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8023a553-9c5b-4718-9d79-f2a8137a27cf",
        "cursor": {
          "ref": "b77bfc8e-4049-4cbb-82b9-f91907ddb3ff",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5ea4f2f0-029e-4dee-8826-06d1e43a0a1a"
        },
        "item": {
          "id": "8023a553-9c5b-4718-9d79-f2a8137a27cf",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4924e3af-9df5-4b48-9ffa-e9d80c02ddc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 992,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aed267a0-1b6c-4fe2-8d97-ff71e37dbd55",
        "cursor": {
          "ref": "6f30ee3d-2d46-448b-a2d7-a269e90750a9",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "420ff178-3474-428e-8f18-69c2d06f131e"
        },
        "item": {
          "id": "aed267a0-1b6c-4fe2-8d97-ff71e37dbd55",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "e045e752-921c-4f7e-a31e-db0c3ce1fcb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1103,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7268ad3-4f20-4db6-ae48-907350f86df9",
        "cursor": {
          "ref": "2e1ba512-c168-411f-a517-a41a283a8d1c",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6087b6ba-9e81-4d42-9339-f27405a631b9"
        },
        "item": {
          "id": "f7268ad3-4f20-4db6-ae48-907350f86df9",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f9bced34-fd69-4c9e-8d85-87cc5101e2a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1284,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f4358b5-ea92-4a18-98e9-7a549714d3d7",
        "cursor": {
          "ref": "80b287d1-1a88-400d-90fe-d07d3e2c4629",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "04ccff23-c737-451e-95ad-9aa69785ad21"
        },
        "item": {
          "id": "6f4358b5-ea92-4a18-98e9-7a549714d3d7",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e0c716c5-226a-4501-99e9-2d7d6b75b51b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1146,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cdbfeb9-e0bf-45b9-993d-63cb5fd35c6d",
        "cursor": {
          "ref": "b67a7f37-a581-4e76-968e-de15ce64d2ec",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7e50d882-263f-4f7a-b4a1-64ff8cd7e1c4"
        },
        "item": {
          "id": "1cdbfeb9-e0bf-45b9-993d-63cb5fd35c6d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "40f2ad21-f104-43cd-a4bf-4211d47adade",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2078,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b463bf0b-2783-4dd8-973e-bf2cc3ab3bd3",
        "cursor": {
          "ref": "0d13e461-4ac2-44af-bde3-e009257770c2",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "897680be-dad4-4c4e-8b51-9752c11bbeb5"
        },
        "item": {
          "id": "b463bf0b-2783-4dd8-973e-bf2cc3ab3bd3",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "97c84097-92c7-4e70-9da7-edf1a569acb3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1780,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d2bb0a9-56ff-4483-958f-eaa370340532",
        "cursor": {
          "ref": "87c20dc8-cfea-4012-bfcc-4818fb137a37",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "ba5d9ff8-74fd-47b9-bee7-511af972b578"
        },
        "item": {
          "id": "5d2bb0a9-56ff-4483-958f-eaa370340532",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7146b929-2b6b-45b2-8d91-a78747766750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1392,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "870e5092-a2a4-4d08-8741-001f5c68bdd3",
        "cursor": {
          "ref": "ba99ede9-5f7c-4ddf-bcc0-82de112e7eeb",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "3f8f0f98-a9ce-4f73-b338-8f2829386b09"
        },
        "item": {
          "id": "870e5092-a2a4-4d08-8741-001f5c68bdd3",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "322bb583-d6e1-42fd-9bb3-8fdf64e09e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 975,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f34ddc0-6aaf-4423-959c-bc10e3041e18",
        "cursor": {
          "ref": "1e5a3981-f24e-4c02-b99a-df4abc0e85cb",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4b1bbdfe-5094-449e-9764-0da1619ef87c"
        },
        "item": {
          "id": "4f34ddc0-6aaf-4423-959c-bc10e3041e18",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e685f48f-ebc1-4e4b-8a03-a5a993d9eb9d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0521644-8c42-4d5f-a042-70c4da8feebc",
        "cursor": {
          "ref": "efd009d5-54e1-49c7-8a6b-dd8cc6af3a16",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "a06607fe-9401-458b-b041-e47d36063161"
        },
        "item": {
          "id": "d0521644-8c42-4d5f-a042-70c4da8feebc",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "8aca5e16-2a9e-4807-8560-177aaf43c774",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1057,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5fdf29-6606-4f0f-9c2e-e67cd394aebd",
        "cursor": {
          "ref": "aeb784a0-e947-475a-82ae-b83290eea577",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8a14679a-ab4d-4f92-956c-50c5e7477d9f"
        },
        "item": {
          "id": "5c5fdf29-6606-4f0f-9c2e-e67cd394aebd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "19d3ee88-8889-4e36-b196-f1a72be9965c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 851,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c5fdf29-6606-4f0f-9c2e-e67cd394aebd",
        "cursor": {
          "ref": "aeb784a0-e947-475a-82ae-b83290eea577",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8a14679a-ab4d-4f92-956c-50c5e7477d9f"
        },
        "item": {
          "id": "5c5fdf29-6606-4f0f-9c2e-e67cd394aebd",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "19d3ee88-8889-4e36-b196-f1a72be9965c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 851,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b0338f-6a31-4a6a-995b-a6a1b9d270b6",
        "cursor": {
          "ref": "e86d7d64-2629-4463-a689-d4673003f808",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b1c1b4aa-bc24-4612-8def-6595f5604f04"
        },
        "item": {
          "id": "c5b0338f-6a31-4a6a-995b-a6a1b9d270b6",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "b13a9c5b-bf2f-4631-90bc-b6b0ddccff3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 834,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47709362-0120-4800-adb9-34c3e739483e",
        "cursor": {
          "ref": "f5f7af57-82c1-404a-b46b-0070a6f794ae",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7cffbf72-54ac-4498-bb06-3381d00b5a5b"
        },
        "item": {
          "id": "47709362-0120-4800-adb9-34c3e739483e",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "615f064a-4b94-466e-9390-03c705d5ab38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1020,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d73356-9c6a-4e71-854d-2c1f11027b21",
        "cursor": {
          "ref": "3bceb243-f9fe-442e-a37f-193a651fdfbe",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "f51df3ac-9f16-45ac-bcb8-0ed4e1f54c2e"
        },
        "item": {
          "id": "15d73356-9c6a-4e71-854d-2c1f11027b21",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e38b61f9-ed89-49d4-90a0-e4135a238b67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1853,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3dfa56-e073-4ab6-88bf-f1dbe7156c5f",
        "cursor": {
          "ref": "08a883b1-02e8-458f-a856-246776d254bd",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f0214917-e799-41c3-9384-fcb7abb9f4ae"
        },
        "item": {
          "id": "4c3dfa56-e073-4ab6-88bf-f1dbe7156c5f",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "59db6b1f-5c35-4d9a-a5b3-4e3a043f82a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2827,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f0191e-037b-4b2c-b427-a49bcd708967",
        "cursor": {
          "ref": "ee438e26-4a5d-4457-8aa3-c4d87ded5091",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "81488516-e96f-46a7-af9b-746abeaa4073"
        },
        "item": {
          "id": "f9f0191e-037b-4b2c-b427-a49bcd708967",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "032d3c68-ef75-432f-9a71-a930ddccf509",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3140,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7fc6a69-17b7-49c1-8624-f75d640b863f",
        "cursor": {
          "ref": "0679d411-611a-4cad-bef2-71aeecfd64e8",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "92eaf3bf-9102-4e13-81b2-bd8723cea0d7"
        },
        "item": {
          "id": "c7fc6a69-17b7-49c1-8624-f75d640b863f",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "bc9b8452-6284-413b-aec7-aec7ace2fff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1120,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "257b536f-8e27-4c03-b49b-39abc18cf05a",
        "cursor": {
          "ref": "977dcb8f-7d65-4c56-aaed-bb4214156723",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "dd45dc57-2a01-47a5-94b8-799d427e3fb3"
        },
        "item": {
          "id": "257b536f-8e27-4c03-b49b-39abc18cf05a",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "28731d14-d1e8-468b-a05b-c0bb62a32eb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 819,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac5dcb3d-0155-4b06-bb5e-91174a98f69b",
        "cursor": {
          "ref": "2bd0199f-b812-4f0d-81f4-f24c1aff41bb",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8edd0d34-486c-4d0f-81b2-18a32bdc66ec"
        },
        "item": {
          "id": "ac5dcb3d-0155-4b06-bb5e-91174a98f69b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ddf528c6-d164-4d44-8880-3fda6c602a25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0916dfe-1936-4200-a24d-ead2646e4281",
        "cursor": {
          "ref": "6a4c0848-3972-4848-81c3-c574412d38a1",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "20ad6071-0c33-4cd1-b9a6-76ebd008e979"
        },
        "item": {
          "id": "e0916dfe-1936-4200-a24d-ead2646e4281",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "08fef6d9-7a6f-48c1-b148-6a22cc217128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "127c0060-c66f-4eae-ab03-843d3fb659fd",
        "cursor": {
          "ref": "852fcb7e-e732-4c18-a504-5d76625a7f78",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "cea7d932-5dc9-4e09-b5ab-ff9754577c2d"
        },
        "item": {
          "id": "127c0060-c66f-4eae-ab03-843d3fb659fd",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "e6f61ece-1d79-49e3-864e-999c62c92083",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 723,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3219612-0a0b-4021-a32c-e07c560bb25f",
        "cursor": {
          "ref": "ef3fc944-ce11-4b7c-940d-a5dbe254c443",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "ffc070e4-bcef-4353-bf2c-db0e285c9277"
        },
        "item": {
          "id": "a3219612-0a0b-4021-a32c-e07c560bb25f",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "547939d8-189b-4279-bfe0-490ce45d27c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b9ccfae-f8a9-48b9-94c8-3d4485dc97d6",
        "cursor": {
          "ref": "878d29b6-5542-40cd-a417-a7da601f862e",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "0a5c78b5-17e2-4dbb-8cfa-a335c1e57a35"
        },
        "item": {
          "id": "9b9ccfae-f8a9-48b9-94c8-3d4485dc97d6",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "b1d10038-2cd4-4135-9871-cc34ac60ad8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 693,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2efad88-31b2-4a88-83de-e9a12d2e8d17",
        "cursor": {
          "ref": "73918896-59ff-4fbc-906a-45b151eeb2d5",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "5f79d21f-b3fb-4ef1-8103-b90e67a5ed24"
        },
        "item": {
          "id": "d2efad88-31b2-4a88-83de-e9a12d2e8d17",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "72a144fe-2fba-43e1-9263-fa0a4511d779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1120,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48956b5-5b00-4df4-a873-fc03c50fd3b4",
        "cursor": {
          "ref": "521cc29b-b42c-412c-bec5-700bf8ccc306",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "4b34f665-8932-4764-834f-624b9f26032b"
        },
        "item": {
          "id": "c48956b5-5b00-4df4-a873-fc03c50fd3b4",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5f448dfc-363a-42bb-ae85-6ff59fe2c8ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 903,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507ea762-4068-4dd6-8f54-7601ba56f193",
        "cursor": {
          "ref": "ff556173-941f-4f09-9206-c202219fd641",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "41f1edaa-0e2a-473b-9b5c-9bdc02ba31bc"
        },
        "item": {
          "id": "507ea762-4068-4dd6-8f54-7601ba56f193",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "7ab8560a-d1f9-49dd-96ba-12ff9b7dba2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1058,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47bbaa38-76f1-4c24-a465-6ea75b814ae6",
        "cursor": {
          "ref": "acc12e24-1db8-4688-8f55-de05dae6ea1a",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "37279065-7859-49db-939a-4496cb646798"
        },
        "item": {
          "id": "47bbaa38-76f1-4c24-a465-6ea75b814ae6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f93591e9-a71c-45b5-9926-c512f5c816ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 937,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15ae0b3c-3454-4fc7-935f-285c49372166",
        "cursor": {
          "ref": "ff81ec4c-182d-4e0f-8561-4ae9cd1166b4",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f74b8049-38f0-4f51-af98-ddf0c0b6fcfc"
        },
        "item": {
          "id": "15ae0b3c-3454-4fc7-935f-285c49372166",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "c3541cdb-497a-4040-a588-8651327e21dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7865c4-3b1d-4463-a146-3de84b33e399",
        "cursor": {
          "ref": "6a6e4b1b-a72c-43f3-95dd-33418c81928b",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5481cad1-c3e2-4c98-a10b-aff4b59d05ab"
        },
        "item": {
          "id": "ef7865c4-3b1d-4463-a146-3de84b33e399",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "2d83de00-d79c-4eef-9e8a-bec27f851151",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7af534e-6326-4736-966a-b9a10ee1814f",
        "cursor": {
          "ref": "7bd00d3a-93a7-46fe-a5b1-f164c12521aa",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e80bfa2f-3bd7-4be0-af72-93501039dbcd"
        },
        "item": {
          "id": "b7af534e-6326-4736-966a-b9a10ee1814f",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9b40ce13-75f6-4bff-92e0-9955b735f01e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "035fcb35-9612-49dc-b78d-76f6e29218b6",
        "cursor": {
          "ref": "43aae3ee-7657-4951-bf06-04dc6e213606",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1bf71648-3991-40ca-a90c-ed779032415c"
        },
        "item": {
          "id": "035fcb35-9612-49dc-b78d-76f6e29218b6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "67af2805-9a70-4ce4-962e-70b2eaeb6f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3bd8d8-e748-4715-aa3b-1653c808c83c",
        "cursor": {
          "ref": "f05ddd07-912a-4b99-bd0c-12404f9f4590",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ffe9b290-0daa-4ff4-81ae-79a2f514386e"
        },
        "item": {
          "id": "da3bd8d8-e748-4715-aa3b-1653c808c83c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "e6e7af22-5678-43d1-8cd9-a3375e32e788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880fe955-4248-4978-a5d7-5b2818e74248",
        "cursor": {
          "ref": "3ded6477-c854-450b-acbb-984cb5191399",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d239abb5-6596-499e-a300-25ba10595324"
        },
        "item": {
          "id": "880fe955-4248-4978-a5d7-5b2818e74248",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "12a18e82-47e7-4f80-9e08-1f7033612316",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 599,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5322d8-0d72-4efb-89e0-694a6f34b6b5",
        "cursor": {
          "ref": "3dca136d-ce02-41dd-998a-629b0c4993fc",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "4e25daa3-c0c9-4f1b-a10e-1fc5ecad7a39"
        },
        "item": {
          "id": "ec5322d8-0d72-4efb-89e0-694a6f34b6b5",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "218061d3-f2d2-4f6b-97ac-a4df5e45d8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 612,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f7764e6-aaea-44d2-a3b2-aa1f72889708",
        "cursor": {
          "ref": "18cd3c62-7be4-4af8-a3f7-5f39231f446b",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "59817998-0722-4ec4-a4fa-a472ee3ae24f"
        },
        "item": {
          "id": "7f7764e6-aaea-44d2-a3b2-aa1f72889708",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a6509d04-084f-42bc-b23a-99f60ee9b74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3801a3-bed9-4b15-98b3-d69c099cc7e0",
        "cursor": {
          "ref": "e2b6171e-5ae6-4a90-80d5-416c5752dd5a",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ddf81e11-5882-4491-b33c-3e0e6fcaac12"
        },
        "item": {
          "id": "dc3801a3-bed9-4b15-98b3-d69c099cc7e0",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "49a3f045-94b0-48df-9c2c-2772f33154ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38a3845d-deda-42fd-a209-628b3861476d",
        "cursor": {
          "ref": "335b66fe-1af4-45e9-b44b-ab7d32799f74",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "31893884-d028-496f-9aec-c95e7c75ff0b"
        },
        "item": {
          "id": "38a3845d-deda-42fd-a209-628b3861476d",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1014df5a-f196-4bb0-8e8b-dc3fae590487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4c9573-4d01-4336-82dc-26fb5c176a45",
        "cursor": {
          "ref": "ec9cee47-ab10-4955-a387-45b0d3214cba",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3b3cd69a-13a4-4ed3-91fe-a9ef9fdd92b1"
        },
        "item": {
          "id": "bb4c9573-4d01-4336-82dc-26fb5c176a45",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "21c0ba61-2507-40ba-8a0e-cf301abb83d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4950f33-5e50-406a-ba85-09a8779e25e7",
        "cursor": {
          "ref": "e2565755-65ed-4d60-9a3f-3d0065915b5f",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fec44e30-db35-4b6e-a248-e54a8dfded4f"
        },
        "item": {
          "id": "c4950f33-5e50-406a-ba85-09a8779e25e7",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "e671323b-d281-4ea4-b340-8ca5c3e03a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c04818-a3fc-4f67-aa55-362a74401634",
        "cursor": {
          "ref": "95b9f837-0829-42de-ace9-e6072f4745c9",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "d8999376-79cd-4b9b-a67c-792de496c6a3"
        },
        "item": {
          "id": "06c04818-a3fc-4f67-aa55-362a74401634",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "db5b83f4-27df-49b2-b085-b69c4013bec3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c345c40e-3748-40e5-ac44-619f5a56b9dc",
        "cursor": {
          "ref": "46b6a749-ac4b-476f-9541-ec9e7fcfe2e2",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a6065601-2054-4636-9667-a23b9cce4fef"
        },
        "item": {
          "id": "c345c40e-3748-40e5-ac44-619f5a56b9dc",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b3fe1716-d983-4f5e-9703-49ad0261be45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "650190a3-8aa6-4ef0-88e4-7f4d60e0ead6",
        "cursor": {
          "ref": "a8b867b3-ca18-4915-8c1d-f11aa2c8d8c8",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "123ec6aa-e70b-4636-bcaf-92b77c80cfe6"
        },
        "item": {
          "id": "650190a3-8aa6-4ef0-88e4-7f4d60e0ead6",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "47700178-e61d-4cf1-a193-db1bf913953a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7c503c-e6d2-42ea-b572-24e661ae5e7b",
        "cursor": {
          "ref": "f338ab98-092b-44b4-b400-deb2358ba6b1",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a9d44506-f13c-419a-ae71-719314947dff"
        },
        "item": {
          "id": "0e7c503c-e6d2-42ea-b572-24e661ae5e7b",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5d9902aa-447d-4b66-a702-5202495b6372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70057396-1a83-4be9-864f-fcd6248f6151",
        "cursor": {
          "ref": "70c36aa2-8ffc-48cb-9eb4-077358ea6069",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d1675420-c476-4764-ac66-d596ff11b5fe"
        },
        "item": {
          "id": "70057396-1a83-4be9-864f-fcd6248f6151",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "74da473a-a637-479d-bd96-9334d2b5d0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12f5bbd1-f25a-42b7-ad55-fbfb60e53d5c",
        "cursor": {
          "ref": "0c80d471-2991-4a6b-91f6-8698853291b0",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "2b0fb051-e39e-45b1-b9b7-7a16d1a1bc04"
        },
        "item": {
          "id": "12f5bbd1-f25a-42b7-ad55-fbfb60e53d5c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "98c2664f-49ec-449e-bba9-0a3f14380382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f8138a4-6c21-4075-9dbf-5917dbbb2578",
        "cursor": {
          "ref": "61f4bed4-619c-4d9d-86bc-5b414415fe2b",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "16f41b11-23c0-400c-bdc6-a0782c7bcdd2"
        },
        "item": {
          "id": "9f8138a4-6c21-4075-9dbf-5917dbbb2578",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "dfbc2176-a2f1-427e-8605-1f97e709cb84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aff9c298-0817-40f9-b545-62971898b4fb",
        "cursor": {
          "ref": "811c2d2f-41ee-4f8b-8daf-5d85775de648",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "c2283b21-432c-4352-a16d-4bb78963701d"
        },
        "item": {
          "id": "aff9c298-0817-40f9-b545-62971898b4fb",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2be5f2ea-88e5-4a22-8b42-b5e17d010248",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02a7144e-096d-4143-9ca6-29e2f972eb5c",
        "cursor": {
          "ref": "b2593a81-261b-422b-95f6-3569d7eab240",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ff2a3d94-85c0-4c6d-974a-8ace4dbcfc63"
        },
        "item": {
          "id": "02a7144e-096d-4143-9ca6-29e2f972eb5c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1a2d4b88-5fe9-4d11-8d28-740c70b30382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6ba1da-bf37-4f2a-80ca-46b218d6153f",
        "cursor": {
          "ref": "33ecd853-4a58-4ca9-9bd0-7f978207b6dd",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2ae90795-ed8a-4e30-9e9e-5abacc655aa6"
        },
        "item": {
          "id": "be6ba1da-bf37-4f2a-80ca-46b218d6153f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "66914a0a-c7e7-4208-9dd0-223086ff129c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64f5606d-5f46-493e-a547-dac367cfea39",
        "cursor": {
          "ref": "c27e2319-80aa-4b58-9aee-6410f33bbdf8",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3f40792a-abca-4fa2-9c38-5cee2138b2cc"
        },
        "item": {
          "id": "64f5606d-5f46-493e-a547-dac367cfea39",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "0af693fb-ca83-4bf7-9b17-847a3565cf44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d22c3a04-93bb-47d1-b9b5-527923fde076",
        "cursor": {
          "ref": "c5701426-eaaa-4b52-8489-3a541cb82ad9",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c2ad7311-9e40-47a2-bfaa-73aec94a3d46"
        },
        "item": {
          "id": "d22c3a04-93bb-47d1-b9b5-527923fde076",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "42977f50-83dd-4a59-b222-600960d0ee76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 582,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99520c43-a0e2-4e63-b12e-845927ac5b7f",
        "cursor": {
          "ref": "c7a27740-1813-4292-9fbb-1e30eb36f879",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "582afb19-8f31-4149-850b-08dcc8bba254"
        },
        "item": {
          "id": "99520c43-a0e2-4e63-b12e-845927ac5b7f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "29903f64-21de-4abf-83ec-b16e30b46a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba2ae415-f01f-40ee-9b77-f8722b9d2ef5",
        "cursor": {
          "ref": "d94e7907-e096-4471-a57b-73da4609460b",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "bcc72041-7d30-44d9-9f8d-9a69727da638"
        },
        "item": {
          "id": "ba2ae415-f01f-40ee-9b77-f8722b9d2ef5",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "a67e6a51-262b-4ef9-b2b0-f8726f65151a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9939bfde-38a7-41bb-ad4e-80ae268dea49",
        "cursor": {
          "ref": "124a209e-4e48-46a7-8a99-33c2cbc157c4",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "30f1ed67-9aed-4eeb-9979-b8c5b2da78d2"
        },
        "item": {
          "id": "9939bfde-38a7-41bb-ad4e-80ae268dea49",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ecdc78c9-9594-472b-8621-a76a7c3e2a13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55339258-4cb1-49d0-9250-8cfc0889cfeb",
        "cursor": {
          "ref": "cea7b63d-9c01-4e2f-a959-28fdd384e19c",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8c77742b-894a-448a-9803-6382e389cbf8"
        },
        "item": {
          "id": "55339258-4cb1-49d0-9250-8cfc0889cfeb",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8bdb21f8-a75d-430f-8308-93aa81f59961",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 610,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "473c6b65-fa56-41ab-9483-4b32ed208293",
        "cursor": {
          "ref": "f5ff94de-be10-48c0-bf8d-215cf78275af",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c8c037db-1c4f-4f09-8755-01f8d191cb4a"
        },
        "item": {
          "id": "473c6b65-fa56-41ab-9483-4b32ed208293",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "219d7be0-89a9-40cd-b6d4-62b6310c4985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f33ab6b2-71b2-437c-bdc4-a6ceff650adb",
        "cursor": {
          "ref": "87d3f70c-c0fc-41d7-9691-ccf6fd5362f5",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8a89543a-a34a-469e-9c22-0ee5ca9d384b"
        },
        "item": {
          "id": "f33ab6b2-71b2-437c-bdc4-a6ceff650adb",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5930d06f-33ad-4731-9974-99104846a74b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "524b4558-b40c-4498-b8ee-557791607113",
        "cursor": {
          "ref": "25871212-37a2-48fd-a315-4ed233cb2b8f",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "eed082d3-1f21-4f79-8133-4721813fba64"
        },
        "item": {
          "id": "524b4558-b40c-4498-b8ee-557791607113",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4d56f683-2521-4d3e-be9b-76829ab73391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ce407b-348f-4d69-bd08-dea9ad399032",
        "cursor": {
          "ref": "cdf3254c-02a3-418a-bcf3-a5ef5880f67f",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ec138000-6b46-4b94-aeaa-fad1f85e3c1e"
        },
        "item": {
          "id": "d0ce407b-348f-4d69-bd08-dea9ad399032",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2ab21ef0-91ed-4f4f-a7b5-e76692de3f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f23956-0de4-4cdc-ad6c-705c7a3771cc",
        "cursor": {
          "ref": "2c24789b-d97d-4351-a3df-e06d80fb1b53",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "241f4787-13b2-455e-a18c-c6b9720a8a88"
        },
        "item": {
          "id": "96f23956-0de4-4cdc-ad6c-705c7a3771cc",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "32336b79-cd96-4ac3-8364-a8ccbe7eadde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602c6416-7e75-439f-93e8-175b8cb138da",
        "cursor": {
          "ref": "966808f6-adfb-4b4b-bfd9-546ffa26bc47",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "bc1fe0fb-e632-41bd-8b90-02b8da590043"
        },
        "item": {
          "id": "602c6416-7e75-439f-93e8-175b8cb138da",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "388279d9-2f2e-4b8b-8678-cf7e7f3f67fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce4a184-5b9b-420d-ab66-f4b5ade3022d",
        "cursor": {
          "ref": "735f9f15-c96a-40c8-8fc6-1a29af8d3bdf",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "1c5193af-5b9d-4984-8edf-cd7005a68235"
        },
        "item": {
          "id": "6ce4a184-5b9b-420d-ab66-f4b5ade3022d",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "058258a5-cf65-4696-870d-d5480b595c98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23604eda-76bc-4d1d-a69e-79888c98007f",
        "cursor": {
          "ref": "576ad670-165a-4f27-8a10-956df66b2f83",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "04ebdf90-9fa6-43e9-98f8-695a5ceaadfa"
        },
        "item": {
          "id": "23604eda-76bc-4d1d-a69e-79888c98007f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d91fd70f-f5f4-417e-a861-46c242ecaa57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab586c71-7486-4205-8269-4821c5704694",
        "cursor": {
          "ref": "56c462c3-47f8-4121-83d8-c2b1ab230c58",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "baded6f6-2031-4224-ae72-83633f6f0c5b"
        },
        "item": {
          "id": "ab586c71-7486-4205-8269-4821c5704694",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "22c3123f-955f-4f37-9c30-6edb60a07661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfdfebc4-6256-49b7-8d6c-456d65cfffd4",
        "cursor": {
          "ref": "e9fda41c-8ae2-4f5c-a036-eb87fd88f31f",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "9912b2ff-6a20-4415-a1ef-479f604f338e"
        },
        "item": {
          "id": "cfdfebc4-6256-49b7-8d6c-456d65cfffd4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0e1a76c3-5975-41bf-afa8-84726e6f1bed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc35c95-3daf-42ff-b2e8-c57af8e34862",
        "cursor": {
          "ref": "045da597-dfd0-4ce7-8905-5f6c9ca8e94b",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "c8768c16-3c40-487f-9636-b5afddfed467"
        },
        "item": {
          "id": "6dc35c95-3daf-42ff-b2e8-c57af8e34862",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6cd6b68e-92fa-4941-95f3-d936b436576a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c05f9003-7102-4baf-98a0-710864253cff",
        "cursor": {
          "ref": "d5a44b56-41aa-4fa9-bae9-7bfe0577881c",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ea2e9cc5-8e11-4f34-adda-2bc6a81fd3cb"
        },
        "item": {
          "id": "c05f9003-7102-4baf-98a0-710864253cff",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "ac975c4d-a168-4ab4-93fe-d111f826f6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc5f60ed-e4b8-49db-af2a-f3403eb7f872",
        "cursor": {
          "ref": "3677fc3a-aa83-4bcc-8e7e-52836e693818",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d137fcc4-2618-4526-ab09-9a70e734ad16"
        },
        "item": {
          "id": "fc5f60ed-e4b8-49db-af2a-f3403eb7f872",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4a08d964-6ead-4776-ad25-d4f97a1a0032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 533,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a18f242-2213-488d-b313-151d7877fb73",
        "cursor": {
          "ref": "81795839-9789-4cdb-88e3-1679fd0225f3",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "24c89b83-42bf-48b3-8c02-a5ce6228ad32"
        },
        "item": {
          "id": "2a18f242-2213-488d-b313-151d7877fb73",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "29ddb23f-e36b-4dfa-94e7-64e5ebc6a41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5dfc8d3-46d0-4d0f-a94d-dce5ca9558bd",
        "cursor": {
          "ref": "b57af1a9-a73f-48a3-9b9c-ff2235c8ecde",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "833a90e5-ae86-4783-b41b-fb1fe207188f"
        },
        "item": {
          "id": "a5dfc8d3-46d0-4d0f-a94d-dce5ca9558bd",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "6a87f97b-f562-45b5-ba30-de4e85dce2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6879f86-1154-4200-8527-92a09a04fa47",
        "cursor": {
          "ref": "45fa5a47-1e89-46b1-a9a5-3061e0d45669",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "18bd510e-3308-4483-83cc-efe55c5029d9"
        },
        "item": {
          "id": "d6879f86-1154-4200-8527-92a09a04fa47",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f290381a-0671-4f5f-97e0-6755267ba0c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5164b917-de2d-4d3a-9319-372707b9d439",
        "cursor": {
          "ref": "dfc2b02f-9b1d-421b-9173-7ad3609c2984",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6782c858-df8f-45d4-ae06-43efb967b5ac"
        },
        "item": {
          "id": "5164b917-de2d-4d3a-9319-372707b9d439",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "de10e9e7-225e-4dee-b157-f6a1a65bfef5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "348b7470-efde-4631-9c87-130202e2c01b",
        "cursor": {
          "ref": "07f560d9-81ba-4630-86d7-5bdef0eb895b",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "3dd38136-41f5-4592-ac52-12173650934a"
        },
        "item": {
          "id": "348b7470-efde-4631-9c87-130202e2c01b",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c5da405d-600c-4e92-b455-f55892da71b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9837424e-5b3b-42db-9fe7-6ccadc67ed51",
        "cursor": {
          "ref": "a91ec9ad-8ce7-4ac9-9673-e2dd7c6a7b50",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "a5c65b0a-3f23-4357-8bfd-b47ddfde640c"
        },
        "item": {
          "id": "9837424e-5b3b-42db-9fe7-6ccadc67ed51",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9630bd49-eb72-4833-ad70-066e4b5e5c5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a06834-993c-4307-a837-250238118de0",
        "cursor": {
          "ref": "017324ef-f9bd-4fa7-bbfc-62ec344d3c86",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "eff41c1d-6d04-455d-b41f-12f5c263d589"
        },
        "item": {
          "id": "29a06834-993c-4307-a837-250238118de0",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a5349710-309b-4699-bfa7-d40431418486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccdf0e3d-3421-4a89-8c39-caef34f75d24",
        "cursor": {
          "ref": "c9ca47a1-0c36-426b-a125-105d2f394df7",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a87b7f31-e004-47ac-b9cd-36ef431916ce"
        },
        "item": {
          "id": "ccdf0e3d-3421-4a89-8c39-caef34f75d24",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "b1968c7c-ef6f-43e5-9c7a-70dd1298e20c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2df5932-cd61-423c-a92b-96ce2c40166a",
        "cursor": {
          "ref": "722d18f5-79a0-4e2c-a702-d9b402b23e32",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4ca3b069-47ef-4752-ab5c-7a84dfef6507"
        },
        "item": {
          "id": "d2df5932-cd61-423c-a92b-96ce2c40166a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "8e8f04b4-5a57-49c7-9652-7ad09f6204df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8816ce-3ca0-4d55-b4d7-6449a132b2bf",
        "cursor": {
          "ref": "0f2c783f-a5c7-40a3-9170-07e783cf6a36",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "507ceb14-1367-46cd-83fb-d8798b1adb5d"
        },
        "item": {
          "id": "9b8816ce-3ca0-4d55-b4d7-6449a132b2bf",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ca4d034a-fd8e-4d8c-a07b-81f5eb14a4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b6c03e0-ea33-434b-8442-225c0392a3e1",
        "cursor": {
          "ref": "e5499f20-df1e-4ea2-9498-763be042efd7",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5a89219d-0243-49a0-8687-4da7736f2b42"
        },
        "item": {
          "id": "6b6c03e0-ea33-434b-8442-225c0392a3e1",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "70ede054-be94-425d-98d2-63f7d9aedfe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa3a1445-5c8e-4202-84db-d29395eda253",
        "cursor": {
          "ref": "28ef9349-3781-47d1-811a-3111bebb2f50",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "2ab72cb1-e742-418d-acd2-baa518383175"
        },
        "item": {
          "id": "aa3a1445-5c8e-4202-84db-d29395eda253",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "38df53f4-1b25-4d63-a625-5327980cbbcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d111669-d1b7-41cb-979b-bdd1d4d86d53",
        "cursor": {
          "ref": "60c576b0-5b16-4d28-8b60-b77254b10f36",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "06fa46f5-737e-4103-a9e3-cfaf0ba29ea4"
        },
        "item": {
          "id": "4d111669-d1b7-41cb-979b-bdd1d4d86d53",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "facbee4d-c223-47fe-a94d-9248640ab9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10e10101-3faa-45f4-bf2e-2ffbcc6894bc",
        "cursor": {
          "ref": "f82ca63d-6c9a-458a-8991-824e71a64fe6",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d9fa5357-9e48-4d6d-a65b-ac5029c525be"
        },
        "item": {
          "id": "10e10101-3faa-45f4-bf2e-2ffbcc6894bc",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "208e12f1-4162-4f29-bd96-6373e7e3528e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7682bba-5cb0-4426-b16e-907251ee1e3e",
        "cursor": {
          "ref": "1a5a052e-d05c-40a9-859b-4a1420002a32",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6a561014-56e9-4abc-8e03-7d8973b95cd5"
        },
        "item": {
          "id": "d7682bba-5cb0-4426-b16e-907251ee1e3e",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "67c1aa3a-5091-41b7-bf0c-e2956be5a19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f951299-25c4-44ca-a973-4d0fc380216e",
        "cursor": {
          "ref": "a3b05e82-3026-460d-bd39-644389d7d5a4",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "09b64d3f-724e-4485-bb98-99dcd1fe8990"
        },
        "item": {
          "id": "0f951299-25c4-44ca-a973-4d0fc380216e",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "0fcf2e2f-d782-4141-8130-2e7e57023f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "153c8599-6c9b-4f4c-8c69-cfa3883e9f4b",
        "cursor": {
          "ref": "37a6e990-c83b-4285-b6a1-14331e9c21b9",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "aba4e2fc-77c2-4f41-9e4f-e2c5e5eb45b4"
        },
        "item": {
          "id": "153c8599-6c9b-4f4c-8c69-cfa3883e9f4b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "2190d760-be59-4bc4-8413-9d6239145592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a4ead5d-f244-4003-b5d3-0451fed70e65",
        "cursor": {
          "ref": "c5fd5b27-4391-4237-9ceb-f79a5cfce09e",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "07c8f756-7f30-4846-a521-47b4e1a3ce5c"
        },
        "item": {
          "id": "4a4ead5d-f244-4003-b5d3-0451fed70e65",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "84d94d52-7642-4b4a-a177-c6c1211f1e7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31b8d27a-203b-4e6c-b11c-5dd88efb7dd5",
        "cursor": {
          "ref": "edaf8ecd-3573-40de-97cf-f626650356f6",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b107848c-754d-4556-b721-22159a001e7f"
        },
        "item": {
          "id": "31b8d27a-203b-4e6c-b11c-5dd88efb7dd5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "0689ee07-2424-4e00-a90c-df24ab4190c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4513c5e8-cf42-497b-b0cf-66adf0d42186",
        "cursor": {
          "ref": "57172599-17fa-4b71-8f39-4babecb3b1ea",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "126abc8c-e290-48a9-9758-3187eff7cfac"
        },
        "item": {
          "id": "4513c5e8-cf42-497b-b0cf-66adf0d42186",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c43ecb84-d694-4160-af23-b227b7c225ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "406fffd7-b0a6-4e90-ba99-d713485a9758",
        "cursor": {
          "ref": "2f7d9a20-f2bc-4a18-b3d3-a2d66b274066",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "4ddb7a00-4c3a-426a-bb93-3aab44af8208"
        },
        "item": {
          "id": "406fffd7-b0a6-4e90-ba99-d713485a9758",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "e7ac1488-960e-487b-92a4-f9e555d6c005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f914df8b-7b4f-412f-bc08-d73b55298b5a",
        "cursor": {
          "ref": "85a38c1d-8361-48f7-847c-829e72687f54",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "beea64a9-5aa0-4b6a-bd1a-b315d8b72afb"
        },
        "item": {
          "id": "f914df8b-7b4f-412f-bc08-d73b55298b5a",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "089ac421-ab09-44a6-84e1-95d7fcf64451",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66e620f-50ad-4d98-a48d-b40318481410",
        "cursor": {
          "ref": "50063373-7d83-4276-bcb4-5ec512fdd193",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "6ab09c71-fa4a-48a6-a1fa-184bfad65fa6"
        },
        "item": {
          "id": "d66e620f-50ad-4d98-a48d-b40318481410",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "82940b71-404a-48e4-8277-93f755645f9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "232c4ce0-157d-4d11-ae29-8a1bddf106bd",
        "cursor": {
          "ref": "af59a639-ea86-4e5c-84d7-49853ca6a4f3",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "465d51f9-6ddc-4066-a6bc-1b8136234875"
        },
        "item": {
          "id": "232c4ce0-157d-4d11-ae29-8a1bddf106bd",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "df166b35-5557-431b-a65d-446e75efbff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213d0cda-644e-4b4c-854c-4f8a725820bd",
        "cursor": {
          "ref": "22f27045-bc78-483a-8000-5af9a60286d2",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "ccfad129-b5e2-45d7-a9a0-3e923a36f17a"
        },
        "item": {
          "id": "213d0cda-644e-4b4c-854c-4f8a725820bd",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "cf348111-ab45-4fc0-a584-c060a5af9bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfedd7dd-6a3b-48d6-bc31-949236656670",
        "cursor": {
          "ref": "ebb1ddb4-1e52-43de-ac79-084038ac4634",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "c637385b-6198-4b5c-bcc1-39a5b1bd6b37"
        },
        "item": {
          "id": "cfedd7dd-6a3b-48d6-bc31-949236656670",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "7a02d10c-edbe-4ff2-b0ed-c33ee4b0d5c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5014197c-cb41-41ea-9735-b5d6d30e9e01",
        "cursor": {
          "ref": "1c0164d1-a8c9-41b2-ba17-f74097a87166",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9d8b38be-ff87-438a-8900-8a24d52e0694"
        },
        "item": {
          "id": "5014197c-cb41-41ea-9735-b5d6d30e9e01",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "087d8b12-512a-4098-aa2a-b0100e026893",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b646d576-43a1-43a3-80c4-8a74f23f48b5",
        "cursor": {
          "ref": "86e5504a-2b26-4e05-9aaa-23b7c59a59c8",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "0de02270-776e-477c-94fa-46d708c88007"
        },
        "item": {
          "id": "b646d576-43a1-43a3-80c4-8a74f23f48b5",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "ca1e1c30-a196-403d-be39-98c055c796eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a26aac5-97d7-4fd5-a0ca-4d2c99d9bffe",
        "cursor": {
          "ref": "6f9f0a30-dc4d-4401-91b5-e12f79d4a9a6",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "b587a7ba-8e70-477b-94bb-6d47eea11f46"
        },
        "item": {
          "id": "9a26aac5-97d7-4fd5-a0ca-4d2c99d9bffe",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "079b4d40-13a9-498b-ab47-54ce24ecc31d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e699f301-9da4-4e91-bae9-5c81f956f914",
        "cursor": {
          "ref": "ccc7213b-3f66-4b0b-aedd-e2257f3c7d57",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "913c0541-1bb9-4e42-88dd-15a9535ded8b"
        },
        "item": {
          "id": "e699f301-9da4-4e91-bae9-5c81f956f914",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "6f44e24d-4dfc-4183-8a86-d86963f71cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86a2939b-e0aa-4fe5-ba57-bb731346a230",
        "cursor": {
          "ref": "811d4188-4086-4271-9657-ac5144b43914",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2ef7084e-acf8-4350-aeac-29eefaf51fb5"
        },
        "item": {
          "id": "86a2939b-e0aa-4fe5-ba57-bb731346a230",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "55a14250-ebdb-4a9f-ae42-d06d95e31919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a614c53-a19d-40ea-9d82-e8c89a81a791",
        "cursor": {
          "ref": "0ab04a8c-4f78-489b-b2a8-fd71a0c8caf3",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9263edc1-88df-4647-bce8-f860a6318165"
        },
        "item": {
          "id": "4a614c53-a19d-40ea-9d82-e8c89a81a791",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "4a4042df-0674-43de-be7c-f35091dd389e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f7f715-69c3-4e97-bf9b-ca651c2879fe",
        "cursor": {
          "ref": "902f8d2a-78f4-4906-99e2-14fd1418b6d6",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "286e3530-7de3-4075-9f91-8530eea5ed8b"
        },
        "item": {
          "id": "94f7f715-69c3-4e97-bf9b-ca651c2879fe",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "efbae9f6-c9cc-456e-b769-43fe801ae883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a7fb2f-df3b-4747-aff0-abe8da599289",
        "cursor": {
          "ref": "4e1023ad-adbb-47a6-ba28-8cdb5e592959",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "bf28e85a-f1de-4448-b1b4-b65524a76643"
        },
        "item": {
          "id": "08a7fb2f-df3b-4747-aff0-abe8da599289",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "bb8d7f59-f0b6-49c1-8663-13fda4c350c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "840c2a2f-abc7-4a4f-80de-4d26956c3ee5",
        "cursor": {
          "ref": "edbc37db-2c12-40e3-bc67-5f330fb922c8",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6f3a6d58-126c-4624-9956-8ce4298d06d4"
        },
        "item": {
          "id": "840c2a2f-abc7-4a4f-80de-4d26956c3ee5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "2c1a2674-0f7c-46d9-ba0b-76d7cc2d9327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4687150-6c0f-4274-8666-192759f9ca57",
        "cursor": {
          "ref": "29aaf732-f798-4aee-82ab-3852fdff1af3",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "eded8806-6b22-4922-9c04-08c92cd517b4"
        },
        "item": {
          "id": "e4687150-6c0f-4274-8666-192759f9ca57",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "a7f7d976-0463-4f00-b88c-73ab00a226ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfe19fa-30db-4bf3-9a84-6464de92b3b1",
        "cursor": {
          "ref": "f435e92c-b13b-4d5c-862f-1375cbdd975f",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "414e6ed3-7e14-43fe-baee-7ca4ebf57480"
        },
        "item": {
          "id": "fdfe19fa-30db-4bf3-9a84-6464de92b3b1",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "3fb6e0d6-f5d8-409f-acf8-d968fa29251d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7def3c99-d4c8-4911-aebf-414652c15606",
        "cursor": {
          "ref": "67b1c492-20d0-483f-a124-d26ab6c97114",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "14d399ad-1003-49ba-b1ff-1ab6a3cc999d"
        },
        "item": {
          "id": "7def3c99-d4c8-4911-aebf-414652c15606",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8c171e87-7e45-4bf5-91df-78e98f5c165b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 628,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5a3fbd5-bbb7-4037-a09c-9d481e3f5323",
        "cursor": {
          "ref": "9aa7b1ac-d6d8-44e9-8c90-fd13c868855f",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "c27dad93-d537-437d-a725-ef8edb2069de"
        },
        "item": {
          "id": "d5a3fbd5-bbb7-4037-a09c-9d481e3f5323",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "40503f44-a467-4c40-b68e-a178efed649d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 750,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2600a14-4d64-4f15-b9bb-c4c382bbfe5a",
        "cursor": {
          "ref": "a82a75d9-b7c3-46fa-a1bf-990c304da451",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "234a3b71-57df-48b2-aace-160b91d3297e"
        },
        "item": {
          "id": "a2600a14-4d64-4f15-b9bb-c4c382bbfe5a",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "30308627-45b6-404f-9c9c-9542f4ab50bc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e6adfb-78ec-4000-b17f-b51cc5dc6b27",
        "cursor": {
          "ref": "6e53edee-7ccf-4251-a9f3-0ddae630b119",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "f9da18f5-ea6e-4da1-84d4-d0c5839cc39d"
        },
        "item": {
          "id": "e4e6adfb-78ec-4000-b17f-b51cc5dc6b27",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "09ef02ee-9b47-49b9-b9a7-69885a72493c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 959,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66887c8d-e072-4132-9454-295d5ef3c490",
        "cursor": {
          "ref": "5535ef5e-b414-4d86-a519-7a77ce797136",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "772f96b7-2f10-4621-95e1-11f3b9174f02"
        },
        "item": {
          "id": "66887c8d-e072-4132-9454-295d5ef3c490",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "1bfda341-020e-4e57-aa83-3db1e1531b28",
          "status": "OK",
          "code": 200,
          "responseTime": 1245,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0272a7d1-3672-4a06-93d3-1a98b8e5ef36",
        "cursor": {
          "ref": "2caeea90-bb57-47cb-889a-f2265a7f6f84",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3e1aac7c-9f97-4ba0-84a4-fc21d645abce"
        },
        "item": {
          "id": "0272a7d1-3672-4a06-93d3-1a98b8e5ef36",
          "name": "credentials_verify"
        },
        "response": {
          "id": "be6a7057-c0f2-43fa-89f6-989cbdadc80a",
          "status": "OK",
          "code": 200,
          "responseTime": 2842,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "73b21637-1e31-49cf-bf76-8ab355dfa16e",
        "cursor": {
          "ref": "ef5fe290-f1c4-4875-b721-b98ae127b614",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ed24b85a-c2cd-4e9a-ad4a-446fd13ca150"
        },
        "item": {
          "id": "73b21637-1e31-49cf-bf76-8ab355dfa16e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "e8aad964-8037-4c1f-ae6c-d9d52c7f624b",
          "status": "OK",
          "code": 200,
          "responseTime": 3148,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5a578c-805b-4e36-bc17-c7063e6f0b21",
        "cursor": {
          "ref": "6c2f2e76-d723-49dc-b785-6226b90cf9e2",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "834177ed-6f40-43f4-bf8f-a9368cc8363b"
        },
        "item": {
          "id": "4a5a578c-805b-4e36-bc17-c7063e6f0b21",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a31a39f3-5eac-49e9-99d6-af0d501a0662",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5a578c-805b-4e36-bc17-c7063e6f0b21",
        "cursor": {
          "ref": "6c2f2e76-d723-49dc-b785-6226b90cf9e2",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "834177ed-6f40-43f4-bf8f-a9368cc8363b"
        },
        "item": {
          "id": "4a5a578c-805b-4e36-bc17-c7063e6f0b21",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a31a39f3-5eac-49e9-99d6-af0d501a0662",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5a578c-805b-4e36-bc17-c7063e6f0b21",
        "cursor": {
          "ref": "6c2f2e76-d723-49dc-b785-6226b90cf9e2",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "834177ed-6f40-43f4-bf8f-a9368cc8363b"
        },
        "item": {
          "id": "4a5a578c-805b-4e36-bc17-c7063e6f0b21",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a31a39f3-5eac-49e9-99d6-af0d501a0662",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 71,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371eb0ce-8151-43ca-a5be-95d101bbb105",
        "cursor": {
          "ref": "677f274a-4504-4a8e-bc31-cf366a9a7b9b",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "40a23039-c60f-494a-92b7-f028187dac78"
        },
        "item": {
          "id": "371eb0ce-8151-43ca-a5be-95d101bbb105",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "a3fd2618-d1eb-42a3-b2e1-eac62698d586",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 2464,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aed5fa1-a3ab-4025-a365-efc4de105d22",
        "cursor": {
          "ref": "e6150e7d-0932-43c0-804a-d62ff69d5142",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8e6ffab2-d4d6-4c2a-83a4-5fc50d005789"
        },
        "item": {
          "id": "6aed5fa1-a3ab-4025-a365-efc4de105d22",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4e4a53d2-ad7f-4e6b-a996-fb52d9c9d195",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aed5fa1-a3ab-4025-a365-efc4de105d22",
        "cursor": {
          "ref": "e6150e7d-0932-43c0-804a-d62ff69d5142",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8e6ffab2-d4d6-4c2a-83a4-5fc50d005789"
        },
        "item": {
          "id": "6aed5fa1-a3ab-4025-a365-efc4de105d22",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "4e4a53d2-ad7f-4e6b-a996-fb52d9c9d195",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 78,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f47e9f0-1be1-4754-b5d5-259249307b8e",
        "cursor": {
          "ref": "a3f432ac-f543-42d0-a582-491939a09277",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "28ab95c9-cbe9-41ca-b3eb-772e6652313e"
        },
        "item": {
          "id": "6f47e9f0-1be1-4754-b5d5-259249307b8e",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "46bb8170-21d6-4e06-9800-fda06d9dbbac",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 2796,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0e5523-b66e-449c-bef9-dab203a0c436",
        "cursor": {
          "ref": "42f11cba-9c97-4ccb-8e5d-76a4446979ad",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f32a056a-5ddd-4793-8d25-ff426c88b085"
        },
        "item": {
          "id": "de0e5523-b66e-449c-bef9-dab203a0c436",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "cdc9405c-9326-46e3-a2ca-37fdddd102a6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de0e5523-b66e-449c-bef9-dab203a0c436",
        "cursor": {
          "ref": "42f11cba-9c97-4ccb-8e5d-76a4446979ad",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f32a056a-5ddd-4793-8d25-ff426c88b085"
        },
        "item": {
          "id": "de0e5523-b66e-449c-bef9-dab203a0c436",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "cdc9405c-9326-46e3-a2ca-37fdddd102a6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 72,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339452f4-7f8b-421d-9118-7521018d330c",
        "cursor": {
          "ref": "ae3851b7-b717-40b4-8b06-632c7cf28640",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "4e213bfb-9f3c-445b-a2f0-2a07df003cd0"
        },
        "item": {
          "id": "339452f4-7f8b-421d-9118-7521018d330c",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "736e5527-9443-473c-a8ac-240404e408a9",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1695,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}