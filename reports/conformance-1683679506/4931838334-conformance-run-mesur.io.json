{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "4e3c0684-d2e0-44a5-abd6-cba023031916",
        "name": "Clear Cache",
        "item": [
          {
            "id": "469197df-e92f-4e68-b6f7-de940999d795",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "957e4394-a3ba-4949-8166-aed380d59d83",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "26d33f6d-8d68-4344-9dde-0de4f34363ae"
                }
              }
            ]
          },
          {
            "id": "58109439-5d33-4821-90e7-14654772ec36",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "476e547d-bbb0-4de4-91de-778aa312814c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cd4beff5-8dc4-4299-be68-aa2dfca616b9"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "1edd6d6a-dacf-46db-ac5c-cc96cd2497b9",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "551b4987-0b17-48d9-a374-ebc6891446ad",
            "name": "Positive Testing",
            "item": [
              {
                "id": "12b3d49f-a88e-4ffb-b5c4-b6bdf90c376c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bf878ddd-182b-4c89-a427-89d9133962f3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "92875a50-3829-466c-9de9-c23ff33c2802"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5983d24c-a184-4488-9fef-835277da4f2d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "41de71a6-2c9c-46f6-bb53-c47475b5467d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "fcde4280-9844-4560-a6c2-6320ce1a5bc0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "66026e0c-77b6-42e2-9b0d-981c629f80b9"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fafb26b7-9d9b-4f5b-9d15-3cc73d4ba0c8",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "2878f610-6b8c-4eea-b026-cc64645e71bb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "188de222-0e7e-44ef-b925-9b81966d4c37",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cb8b1b4f-36cb-42f6-973a-2e0ea9855239"
            }
          }
        ]
      },
      {
        "id": "0edf2fa2-977b-4e24-aaa7-6890a18c4713",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "90e1c8be-51ef-41f2-bc06-926542ca2bfb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f61a972d-c738-4f98-91e2-96c98474fb4f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "3a55e85c-133d-4fa0-b10e-d88d7a7da9f5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e716e63-e26e-4453-bc1c-7c36470a2064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "36a34907-4a19-499e-9d40-2b9850fc81b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79a65d04-e32e-4f05-95d0-b09275c21007",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97c6fefc-fbf7-49d4-8fea-9c251d245311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0f69c90b-1834-456c-acdf-b114c0eb6c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6a6f69c-fad8-49ef-bd2a-28d8b0239a03",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f84f4f1c-f3e3-46fd-a823-e2ff2199dfde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "91a0ac75-9a56-49c5-a6e5-04743bfb2b94"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6878c99a-fbf4-4a86-9374-ca1684c02dcf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "94edf5e2-cfe6-4855-bbf2-975a918d972c",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a762cb54-98af-41c4-8eeb-f435a6473ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2d38c38a-d672-4b43-963e-b508fb982599"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27186c77-6eeb-4404-948b-acbae836e8f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09c363d0-d6c5-4f54-83c8-11aa21203510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80f5d074-5fa4-4fd6-8be4-031fcb36414b",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c0dc19a-24c4-4bca-a26a-a8a19070b0dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2eb7e3a6-7f67-4555-b389-6d5d95c0d23e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba91f8bf-d7f2-4a77-899b-0b79450d9760",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "fc3e8c1e-ca20-474f-8deb-f6918e48dcf2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "5f661044-7396-476b-9daf-11232eba0bf0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0f38143f-eda2-439e-81d1-b24a57098996",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8b1c061b-d1f9-49f9-a388-0516a158d467",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "dcd78156-f72f-4149-9b4b-a3cb9fa4cfdb"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fb3a349f-b18d-4192-8bdb-d996ed6f0e49",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "1e83dc97-a2fd-4985-b800-a42b3dcef6b0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6ed4e38a-fd45-42fd-abf5-4283956f3fff",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d8e16cb0-1132-4eb9-a250-f4ea371f8808"
            }
          }
        ]
      },
      {
        "id": "964afb75-2477-48fc-8ee2-230dc3208742",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "787bbb6f-7eb5-4d00-b834-f887a2a4d34d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c33d4bff-c7c4-4d44-b917-bb91a85dae2c",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5817cdd9-4280-48d1-be81-807b417f59ed",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cd9a085-842f-4dd1-ad9f-67517090b3da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36f7cace-e53d-463e-b4d2-f4c8fcac9de7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57163c27-7ff9-434d-8d3b-63a19a4e83a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6fe45b52-49ab-45bf-890d-3bdc3509d706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4850a0a7-3ec4-4ad5-95ff-b095a07df2d7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4aa97476-beba-498a-a396-e31142932350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e33ee97-4059-435d-ad89-6ce3442f34a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d3b353-b862-442a-8ba6-b347f27b900f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c9e462f-dc5d-463f-9948-9ab3cfa7c2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff08af69-0d18-4fb5-81a5-ae4d8b866823",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e711b47-4c4c-4a75-ab44-b22245ac837d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "529e7503-bd1b-4f11-81dc-6268d8768f43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f11f92b1-d74a-4778-b177-9102831190ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9bf82dfa-1f31-4fec-be8c-ab4239f26594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19129ff4-4c54-4a7d-9cf6-42e1cd5df01d",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c492a32-e0ee-4f06-bd79-870c4767ed5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea5cd9cc-5604-44e4-a1b0-163744ff86c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd4140b-8c00-4483-9487-430228c07cdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "947dbddc-9008-4ece-b028-e215ce884324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ddd3db-e492-4562-986b-a10e68b777bd",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896e75a2-3429-4c16-8203-068d302958dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0484efe1-ede4-413a-a482-7a58c208eb0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0d34a24-2836-4497-bc25-98d4ca5386a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36562cf3-d9a0-4c13-acef-0f8d95b0f110"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cf38ba2-d9d8-4f97-975a-de4092a6ea77",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c8b1436-80e1-454d-8e1e-06037d395209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fede82b1-c308-409d-aae4-b4cd06673972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "455e78a3-b5bf-417b-ab4c-550681202864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c255923f-4889-48a5-bcac-c671b6b2b70f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837618ff-5e22-4854-9b2c-728562eff59e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "794dc6c1-672c-43e1-97ae-046d600c6f14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21f67f8d-2737-4f88-befa-ee33041b137c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13799029-5695-42dd-8add-abb364b148ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9030e9aa-b2f6-4e2e-b3e0-b966fe088aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc3d085-8fde-4500-8646-363193c19af1",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40d7f81f-1a91-4f0b-94cd-10af69a58053",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3ca3a81-99b2-4d8f-abdd-1fd3a5bda3a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92cdf7ca-5915-47a2-9fbb-65b9a3cdfafd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c83d0cb-be82-4307-82f4-e5b67f16e914"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db09510c-217d-4867-8a73-4dadbdcb72b9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef68cd1e-61bc-4bae-94be-75f8b447a92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59f836f0-dc54-4f96-822d-9ac449ba515b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6079654d-3226-44eb-94b6-bbf8b43ff459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "685263b0-995f-4724-9c3a-aaf564a9c0b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "582615b4-9ff9-4445-aca6-ba09de017c50",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d809faa-bfc7-407e-8cd9-e49fe162d6b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee799711-8389-4b16-90d9-830f588b993f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c1ffa2-4d82-4c6c-9fd8-7aaae8cfc882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "889f59b8-0e31-40d9-b571-3143a3e96eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07bc6b82-73ee-4e96-834c-1304ab75f196",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad9efae-5285-40c1-a899-f2b4bd6dae17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef653a20-77be-4f5e-9436-67bc7ebd058a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2144f1f-539e-4c98-94d3-8f36f4591a7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3eae42b-0e00-4117-866d-e6848a7bf872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64bfb693-92e3-409c-ab82-bf1e00eaec9d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d07dec1-2931-402f-98bd-7dd74e879c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "073b99b1-cdac-443a-b6ae-f80b7857d3cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8917e710-fd43-41a4-a796-e40e4ea86dd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f2e17ad9-a821-4f1c-9eec-460e34b00658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84bef295-f226-4774-a692-655c30748bde",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80cfa788-1c0d-4f12-a078-f311531a791e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7ef6388-c2de-4d95-b246-942c387bc4cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725d0767-bc0f-4b6b-a949-3ea2c6ce25cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5510376d-43f5-493f-9cb8-3cdb635fd165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9d09c38-7a17-4480-86ee-a7ba0e559211",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e838b00b-7d02-432a-9ba7-d7cdb56c63ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb65f09-9c24-4fd3-b212-507a7244b732"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c17040-9fc6-4415-afb4-b0b7bc2587e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75864031-c3a9-47fc-bdd9-621a31a9e0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e1f407-00e6-43be-a9da-85cb0b8ac698",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ac416e-7a18-477a-bb72-04eec72ce55c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c2c53e-58b6-406f-b4b0-251e3dae672f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8888d537-23c7-47bb-aacd-fa2e3d0f4286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e31a0736-e4c3-4251-aaad-61d2c5ba7f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eeb0190f-0ccf-4fbc-9492-ccd9b9e938da",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89052f20-de89-496d-94d2-48ce99144ea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20654512-03cf-4237-8c5d-eff3ab0c16b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f6d553-96a3-4470-b720-51924c572f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24b5188f-93e7-4bc5-a7e0-1171a0543477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b3951b4-42ff-4eec-95bf-6a6529a241ed",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ece519-f31d-446a-ad03-680a334e249b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74ced5bd-9889-463e-bdd8-5da492ae62fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16783e3-08d7-4d29-ae7a-0657a30a8e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bc0439ba-ac76-4408-a8bc-aee52158f710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1410a49a-27c1-4910-b076-46fa06a8d4cd",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70dfe05-0ab9-4512-acd3-518c4e619878",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb2a645-4292-4b4b-85ea-e3810737fe73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "042b6d1f-ed54-485d-afe7-4ba74e5bd47e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "31b08b3d-fa9a-46fc-9ca7-b27c26ed96a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5303ea73-3a8a-4052-94b0-bf5aab53dc9f",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d286f976-a36e-473e-96f0-3054f9829dfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e2e373f-ad25-433b-8856-8a346b3343dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8580c7d-a9b0-47f8-bd1f-5de7f2ddee67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "173e9fa2-015d-4fe6-b601-6ca3a4776abd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ab6b166-a32f-4763-97e5-f5666d442c66",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e464855-8a22-4993-b8ee-de1747d89935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7387ad24-a593-4861-9168-d87ab60d67eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd8a7246-82a5-455e-b61a-5b6f1d5ecc03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "564c6d83-f820-474d-8a5f-4a5ab7c7f24e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec91c440-4637-40bb-8df3-c4a36d87bd0b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b891337e-820e-41c5-bf8a-7140622a7be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc39a71d-a381-4531-ab6a-b3abb6c7f81f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62456cb-2384-43c6-a4a7-61728ff85edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bee2c49c-ab30-43d3-86ad-fa87c3f4dfe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ff9dc36-fa48-4b2a-b35b-2e8a2d89e1c2",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d0037cd-a9cb-4a5c-8b57-c82b6e409e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ca933fb-aa00-46d6-b29d-dcf013b6fbb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e030bab6-b582-421d-986d-acfbb4b48f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "35044307-e69b-45df-a5e9-afa313a70179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99fae4ad-7ece-4846-94f2-2c3ccba00156",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06deec3a-eff3-4f1f-b872-46141cd6b68e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca318f5b-d3e1-4ca2-a865-89ff9e44c8aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7392e6-b468-4445-b4c0-e6a88be9bece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b3c757d4-84a2-4cbf-a11b-c60593750afd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d2435a-e61e-4b96-85e4-07c72dc8f24a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee57cb50-a658-46d0-9156-81f924dee5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "718c16f7-1307-4433-995f-fa9532c4b42a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48dbc197-67c3-4eba-a29e-cfe26d688f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd535ccd-5dd1-4860-b402-bad1828bbb6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d034a20-0c0e-46a8-9b2a-4d24840d6428",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a44fc4-a637-455f-a9cf-e628a4b7e6fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45c21b99-243c-4ef3-9f91-4ee297e33bba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2385f7ef-fb12-471b-9399-53a8b4e92e4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e73b2167-2a1a-4a4e-8028-799d26bd241c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9676ef7-0c5c-4d93-a47e-3af5066de4c5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85fd8bc1-7f83-44f8-880e-fd91f8d93519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eed1836f-ed52-4140-a1e5-51309c7ac737"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c943610b-d08b-4b7c-86cf-e77df5a31553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca220638-e121-49fa-8279-8c5ddf98ec20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d092218c-e79e-4ac7-8338-2c068f01e0ef",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10eab393-195e-4432-a2ce-ccd6f9a11062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936e63fb-4163-4323-b946-cc04d658f160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f3d68a-bed5-4223-958f-e8c8cf2f9e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "984737c3-4a93-4ac9-926c-879702dc2e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd43e3f6-6b63-4138-b9bb-38c557b71b6a",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "149df092-a0de-4735-9ee1-26cdd1220733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1ec9f06-6f7f-42fc-968d-00983575a440"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c66585-49e8-464e-b4df-03012eb37848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "74818f66-85d3-4bf0-99ec-64cce27534ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8f17a9b-c70b-4d2e-bb93-e41594d633e4",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c6167fa-c5e4-4e13-8d45-c33074bfe7e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3af5c80f-359e-44a7-adcc-5da3cf3d451d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1676552-95cf-4185-bae0-8f5b6eaba63f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c85c75c-c3b1-4adc-9e3b-4e6f4762d3fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece7a9c9-f3ce-4a95-88de-c32fb7574b2d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "085cb126-2736-45f1-8f3e-dbcd47b61407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e735bc3-d74f-41c6-b4a1-b9fa43d0f177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3882af5-8840-4c7c-90d0-bb6a585ef43c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a06150ae-bdc3-455d-b6bb-21430a6d81ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7927996c-78c5-49ca-ac46-959aa1a83f2c",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db56fcf6-a43f-47e7-bd45-9733cb8a1236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36d70bd7-cb62-4bfc-ae2c-fa4fbbd7ce6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cf39f5b-f0e1-434d-ac82-3da265eb4e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "37b25306-911c-4e9b-9594-927eee83c5e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69abc122-d19c-481a-9caa-544c756771eb",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a91f571-5c0d-42c5-98ed-163af3dce6a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f02cdeb6-76ed-4076-b3e2-5b10955dc010"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2714b7c7-4986-4f3b-93e8-e220482fbedf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d86bbd4-9444-436f-97b5-dd23cc20cc2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "965d287c-f71c-4de0-9665-50a2f15e0c3b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d42ffab-5caa-44fd-a452-1a765a01f195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60a4ea37-4d19-4ffe-8c46-2c5bdabec371"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0877075-ea33-42e4-9918-eef9b37aa869",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dbaadea-8871-4062-8f18-2d909e7d17ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc578bbe-ed8e-44cb-aba1-45201b8da46b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a386203-a373-4681-a9ca-840f133eb2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae1b0f1-16b0-4e33-9985-e14d47d513ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b2d1c6-7be2-4faf-a688-c7c47039adaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b9ab8a2-5506-41a1-a640-b1f3a8a561e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b35c1b1a-815b-42d6-8d9c-ab2910510747",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae0caee0-7841-46b1-b5d2-b199615d27fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7842a211-44be-4cf8-9c61-fd6ec83ec8c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d98f0882-c102-4ee6-9487-8c8733af0e3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8e1fdeeb-5a84-4975-981d-71e0e010c2b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c815758c-1757-4fd0-890d-65f2bdd042f9",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01e3e823-0adb-4347-a68f-ceb85fe43724",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "69927704-d604-4028-989c-0c264567c29b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c470b91-b279-46bd-a293-46bf2e35d594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "069d34be-6580-455c-9093-84ecc903cd3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191f3b00-89f5-4708-acec-5f8f4f94a88b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c37d5e3-6f82-473a-974a-2e3890423058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd57b519-ea42-4b31-b7fc-19cc19bbd54d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b22cdb3b-bfd1-4151-bc52-d7f8aa8d1a5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e2fdd4b-326c-4498-975c-070e0944ba28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1d551a-4a5f-4f0a-81f7-ac115014300f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4cd8d87-4c3f-4dc2-98fe-c558c01218d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6e7f93a-72d6-4840-9138-956d338d4f41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac37ea31-6243-4347-94a5-4d95cc96f439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4d89142-cf06-4d50-8dc8-df404f89aa59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06a2813-c4d6-445d-a20e-0850a0a355f1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5541be4d-a48f-45d5-ad1e-d1006357150b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "165da871-0c78-4f47-b2f3-d08fd2449fd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c1a4f0-f6a7-411e-8207-3014a5a1c2dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9cccb5ea-345f-49f4-a3ab-7faf820f40c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceacc8f3-5335-4809-b17a-4fb5dca2b056",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "417d3576-775d-4f86-be61-3566f7d3d894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dca2e949-b8c4-4fb6-b56c-c186ab73c7e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7815e82c-e88b-4397-8bb4-d1ff6facb93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3660ce89-182c-47dd-9186-4ef6945348ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025ec706-fe83-4ea8-bc42-a1d9ef6c1f64",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc5025f4-5561-4d89-a6fc-5c48fdd7df9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5a5ece8-01e2-41db-9344-30147f974863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1e16c1-b23d-4a4a-ae57-55397054c019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "69f3a06f-6eb5-4128-bdda-e86835da6606"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdb8fa82-4489-44e2-b2f8-383a1c25491d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa20bb37-80da-44c5-a4ed-3035009ab599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16cc5239-5441-46f8-b4d8-881abe673ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e423cc-d7e1-4ce2-9470-4f54d7f729d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "d69e7cbc-c0c5-47ce-b389-b132cfe0c158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dda0952-759c-43d3-8128-b29c987d2e2c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f765d044-0911-4837-b95d-0590f6b3f272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "863eb6ce-2f41-4c0a-8932-c7a3cb55de1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba177742-e288-47da-84e7-cac73fb1640c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2b7bd2d-b19a-40f5-91e2-459105f43f37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd593efb-1628-4dd0-97d8-e0f30bdc9f1a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ce967db-c6fd-4f74-ab1e-b7ef57069ddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e81f06c6-7d13-466a-9133-ee051bc3e8fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "614a2940-3ff7-4e40-b929-2ceb9edf4c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d093d4e-43b4-4ea1-9823-6ee531da0215"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bcf53bc-9517-4fbb-995d-059a180b4b1c",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "215b916b-c76c-4146-a3d3-0d5ac99c5270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65466855-360d-455f-af78-fe2e67b58a3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d39abc3-2b35-486f-b584-5e08745ef08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fee9acc-e335-4f83-90ef-68cb98ffc477"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630606d5-be52-4e12-b84e-0bea68559b93",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11b43e5-35ad-487c-bcfb-82ed4dfeee7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de6d2624-4a1b-429b-bdd1-e75857d041de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c1d8851-45a4-4d3e-be93-2ebb32ab4245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "401b4e6c-58a7-4f37-b1bc-a7230d12a462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac976a9c-6f92-413e-83e4-5364ea6ce33f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d93c036-b633-4f4f-8c78-c900d36b3957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55b1a549-0779-4c13-b687-6a01c273ae2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "269f3957-c636-4ee4-a3e8-38932dec895d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "551dbc75-a244-4f3e-8904-0c85f40ef61c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e489fdb4-9d49-4b32-885a-8632790e4e52",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e1ef17b-9872-4245-8426-1792aaa82a96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9ece7eb-af6e-4901-8a7d-71bc5c3e3222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55b83bd1-34a3-412b-97da-c0b578838c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a289670c-106c-4b4f-8020-5a1036a4bae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8256d0ee-5375-429c-bd21-7f2467f53dfc",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe41e44-0626-420b-b34f-3e5b16c8cffc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b05be537-591a-410a-af9a-be08fb12c300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5b9efd-f620-403a-a397-fbb4c813ef51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "da59080d-1919-45a2-acc7-35f688f27851"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d73a61-662b-4401-8653-e0e3a1f01918",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db9ce8b6-d652-4527-a534-fb4d1fdd286b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0af1b258-5b59-4d82-ae9b-3d1da970304f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c0e8123-de46-40db-83df-fe2b2d3bfaf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef3a5a0-52eb-4153-9f5c-0b8f6bcbaf17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3496940-74e9-4ad7-9020-9d73ddaf8aee",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc3c3a11-f255-476f-91e4-4b93ed1a78c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "612dcb6c-e81d-4897-8a0f-1cbf7280968b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43b2f7d-a762-4967-92cd-e66565a47731",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "82603d24-d265-4f18-a43a-6d48007a95f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28df9e6d-7ed2-4b35-8a1f-0acef64bd3ef",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9facd04-1b9f-4062-baa7-7bf315b9060b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7aeb758b-ac08-4fdc-bb50-253e397375b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f429d1a3-a9e6-4203-a99d-885b66f479df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "845ef91a-7288-408e-b3f2-9ba75124f0d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49790a77-3347-4080-a6bf-5dc7b61e6e1b",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44243334-27df-4edf-8b59-d505565e4733",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87700e75-e9d3-4542-9711-6c180a49ccb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5156633b-6d31-478d-9125-e71979fb0b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b8ec515-2af1-4998-9fdc-7a74a7849f6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ca99be-f60e-4f33-8ef2-8ecdf9a51a42",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d106b1d0-a37e-480b-b7dd-59c6ce83e659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea188f29-a77d-4b9a-8b7e-c770f0e13185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7db843f-c912-432b-8fae-c85095665ea2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3dd47eff-bf0d-4e72-90be-451f278458ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "950d1589-b735-4757-bcc0-45d2e3cb5f45",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f56b1b07-9db2-432c-b32d-b80ba19b0248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79b7c388-65bd-45b8-879b-984d9f11c317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e91c4f6b-50a1-4dae-80fe-d3e2b42bb010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "745ea58e-d72d-46c7-818c-bd90f7fedc5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dad3767e-576d-42fa-9f11-70e2b610844d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1f17180-51f8-4cd0-917d-cb749dc9ae44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15f41a4f-8892-4834-8b34-e79d539fae89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed9f402-3060-4095-a98c-32350b91cf5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5fe74ebd-33cd-49d4-aa83-43410db550ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f18cb7d-1051-4bcb-bb9a-829452d05255",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b56990d-cb25-4f88-af1a-7f42ff2c5a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ea76499-39d2-47cc-90cd-cc974ed8364c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb279b1-074d-4c9e-8d27-13dd83790f17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b1d55feb-0dfb-4308-8686-dfd1d268e33d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1280e405-654d-4f33-b8aa-f474d6cdcb3c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3572f5ce-deca-4c06-a82b-1c4f14579339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17254393-cb53-4d86-86c5-2f5db64cd419"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b4fbb8-5766-4dab-8d16-cef7b6d84992",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "aed5acfc-61c8-450b-b544-f475f9498635"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7f7121b-d0df-42a3-b82c-3d30a23a6258",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e0f8f00-e93d-47d6-bf21-6de276271805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956eaecb-c34f-4822-a602-3156b2d832e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1855e4-bf1d-4e28-b84e-01cd24e6be9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9e184367-84d3-4133-97e4-4d65ec0accd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77fde9a4-6a3a-4122-823b-4d11c7eb45bb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6fe398-cd94-4e5e-8b66-3f4a06219591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e33ae9ea-2386-41e4-a300-a5f3b182ec69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36a97fc3-d813-471e-a44e-0d828abb4762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "15711420-fc97-4568-abab-91e74d2215dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc18046c-daf0-441c-9d94-5d303d83a227",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bcf6228-2d33-4fea-9aca-1a885656a179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd594499-3989-4ac1-88ca-96747cbb0878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aae43a54-5f0b-4b55-b998-62e323c22e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8bdc8bd-446d-4f6c-a7e7-6eea526b9521"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976f5d27-7af7-4b4e-a8bf-1c24cf4eac2d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af357b8b-1ca6-4f92-8a39-2a01409d6170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad6ba09f-d84e-40f6-9fc0-c2e9b365ecd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03132691-75bd-44c6-9821-099d9b45f711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b18e016d-b2f9-4b53-87a1-0915713bffe2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b6713a5-67f3-4050-a331-904c80096167",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d62a4c2-604f-4e75-9bdb-8ba3125fccdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0f5ac24-a61b-4fec-906c-e5f67f213b38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebf300e5-0679-44d5-9e4f-5a19cac58998",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f710bd01-2230-4cba-8b1b-9d81b707ea7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "274604bf-90c0-4f58-824c-37b2e2009239",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "420e1ee3-b0e7-40e6-87eb-2e8c7446c9ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a08159a1-b7fd-43f3-b40a-80c503e133bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34300941-8c16-4701-850e-b0a70e6fdd98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "12c7e9ed-2471-4e70-a454-f7e4deb3735f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1745aea-0ba1-46f1-b745-dda7165d506e",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e6c84a-5aff-4e9b-b59a-6911fa4115f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9314b418-5ab0-4f4f-b418-ea90d74ee954"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de02acf-59c3-40c7-b648-41b69912aab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b1b35e5-1d14-4cf3-a724-7a150b46dc6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09c6a6d0-b0b9-4d51-beb9-aa567b9ae3ec",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc830be3-99a1-408d-90fe-00a9a08217bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6e7d1ea-25db-4d0c-a4c8-8b6de24f4db9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e8524d0-6c6a-45be-bc63-ae37bd742940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9e3c58f-46a1-4e8a-88c4-aaa6af13e2a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f733075c-9131-49d6-921c-3ed4405cdea3",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ad583c4-30ef-4215-82b3-e75d77ba4016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4797106b-dfa6-498c-8513-bf8c710a5864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4483834-3af7-480f-9a7f-519478ce7828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4be94415-1b56-4547-8a5c-a61ede2cd3ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e61d46-04cf-40e2-9f5e-a6600cb00d48",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c296449-b602-48b4-83d5-ea3a4d171e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "136f8fc1-20e5-43d1-ae3e-6346a681bb14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398fdb5a-988b-42d7-91d1-43a81299e14d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "74f1a073-ad0f-48ef-9083-7d52298862a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a03d27-6a6b-4b11-8457-31f55331bae3",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "704d5abc-83f1-467d-8e20-dfd3bacc202c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75a4b40d-eeca-4266-8928-e09797e4cca6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede3d656-2ef8-42dc-9a64-14b7c5fc2459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "89c88ed6-9c60-4002-8d45-3bb1c6dfb0eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4093066f-68fd-48d9-9b72-9bb838a81413",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "885ba3dc-46b5-4f03-a276-ae617d040736",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65b415f9-5da4-497d-9beb-c939745645a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e58c259-b25e-4293-bf57-190ef78f9deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "948e8438-8c86-4a87-9388-c90259d5f738"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d32f9d8d-6497-4864-8e5a-b6a9d1926340",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f6ebd6-5358-4308-b5ee-4d7ab9b15ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8a52684-db15-4c8a-a375-4a3435b63447"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482b6373-c7a1-4654-a7cd-87d105ac37fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecc80fbb-965f-4d72-bca4-c0f601e6f863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0decb68-4261-4802-9b7e-8d4bd76c5da0",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b67a63-1533-4e69-a269-1eb50734bf4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c802a22c-50af-4386-b5ca-9b07f786482c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b7dbeb3-32c1-4292-9e0d-8d17b97aa094",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a12d4699-d437-4bab-8db9-8c6af2659419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0ffc8e1-9706-4d25-976d-ad40d0bef52a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "815a354d-b57a-4650-aace-f7ca7aba767d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02a25f90-3c30-42ba-b625-25ee2698ff19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75d1cc2d-3ca5-4a98-b896-60d898fcc5b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "02cc0094-5ecf-487d-a9ee-10784e8ce453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29bb2ff7-c21c-4683-8296-c5b6129c1eba",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7014165-1dca-4f8d-8c81-234c5f07969a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b7add8-c7d3-413d-85eb-f16b01e88b95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bc0df49-ff21-4660-8f06-7902a808cd21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c5e41f83-50a5-492d-96b2-443ef9bd9147"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6da19304-e35c-4f0e-8539-2e9ab63fc43e",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59801ef-c000-49ec-958e-76ad4faffb46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97edb82e-08d3-42b4-9547-47658fa46317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "768301a2-0637-4793-9376-6ac57bf4d76c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "036f6f3d-8900-4b63-89e3-b09642b77737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ef68905-636b-46e9-978d-cf4b59deaf89",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3830f06-8e40-417e-8787-f5b955425f7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3482d0e7-3af1-4691-aa09-af4bcef92592"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1ea5b14-8215-4fa8-9341-7c76a5078913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "28700644-9038-4499-a62d-1447a997f4dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f74083-690c-4912-b4bc-63cbb76efaae",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1f1641-baae-40dd-8a3c-e6d487e83464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a53bdce6-ba97-46fd-ab9d-9de4c5182dd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b8f82b-35c6-4ffa-a842-afa81615bc15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "023be87c-915d-48d7-87de-0e467f23f454"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a68677a-fca7-4761-8f62-737e9bbf0118",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e68ae9-f2de-4314-a9a7-1f69c057db46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2336ecd-f439-4fa4-827f-558956ff8b50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8b9f099-99d0-4e73-958e-20f2b7a6df84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "297fd8bb-4dae-4b54-903c-c45e3fbc68aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5101df-6ac5-4adf-b520-5f38b7b30b9c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acb2214d-f299-41bd-a2f3-892611cf0d99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9486a506-2c7c-456b-8384-a6bc7a76acae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "519a5ab0-a27a-4587-b565-62cf64123aa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cb548f43-ad1d-4632-ba7d-686ba7c481c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c214458-691e-4f40-9484-f77ca63798f0",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d72e3fe-08c0-479a-abf5-47e89e66197c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9008e64e-e9b6-4d67-93c0-12d808d86330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1474703-a4ea-4824-9994-3b0ca1879b76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "41941fd0-e0a1-4fc8-9232-d6e0ae17e8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "283c1422-3b65-461d-b086-6c1557906248",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2303fb4c-df82-4336-8a4b-3fd4646a6ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8aa85842-54c1-49de-8ecc-231e5f71e17f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "244bfb84-75b2-49e7-bb18-03da512cf8a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "21e41da3-a677-4d65-ad83-590c5f947294"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b3eb70-9b4c-4301-a7af-9a0393e6c920",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40847825-bc85-4b86-aad1-8974fa746369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "343cba78-680e-4a9b-9649-8f084e6a5bdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba4e838d-c8ba-4b61-99d2-9e38899f1873",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cddda45-edf6-4526-9013-4da52715a014"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d661070c-73cd-4f55-b37c-8f54c94ab6da",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2438c67d-dce6-4737-922e-cd1eee4d73c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a2200b-fec2-4d03-993a-059f09547df1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eb309f6-2074-4a55-8e2d-de479f8b7301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "214217e4-c774-44f1-a505-8df944aaea8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "364e843c-bfb9-48da-831e-aaa515762d03",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39b68896-5985-4a35-a246-3d84400e4395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04d5fe3f-b9c0-4805-99a7-3259126084c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c40dbf5e-55c8-44b7-9819-01ae56e24cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bdf92308-99d5-4713-852e-5a5bfdc9a222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e6aa755-cc68-449c-aae1-b5fee90831b5",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c89b7297-1eaa-4d6a-900d-ee2dbb22e7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e7a456c-22f7-4a41-8461-23575b76a20c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c8b7cfa-f73c-445d-926f-198c6922998b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "abb6f62c-23fc-4bd5-9d18-a27e956088c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef59fe99-b418-449b-91d2-4a1e1cf6e120",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0bf94fb-85d9-40d5-a12f-b8e81617822e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9413864b-ec3a-46b7-a6dc-83a9c59d7bb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310caee6-1b20-4d44-8962-31094ad90401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0736bbe7-5f17-4f93-bc73-c1e024010781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a64218e6-77d0-4707-9f98-9467b64c66da",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8700c6-a2a3-43b1-a2ea-a5724fdec870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b3bf29a-ecc3-4332-b52b-e7ef20dcca48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757a9bd1-912c-43bf-b6eb-68902ad16135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a49fd3c9-822c-4a39-8926-af9e24a1cd11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e943f6b7-ae76-4e18-a034-f702a8d20de1",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "828d003c-c7fb-4cab-aff2-c60f7b7dea1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37dda463-0ef8-4d2f-9f1d-43efc2971288"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e43856-0707-4d5e-8cab-95f7beea518b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bf226c9-0e1f-4bc0-b5d4-1aca074a4500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52bac3b9-773f-46f9-bc5f-2ce2feb0395d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed035413-b28a-4f39-96e0-334ec0f182ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14486074-9a30-459c-98b3-d447b77d0775"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "109ae5d0-dacf-4b8c-b4d0-391764cdf00d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d9f7632-a9c1-4509-a501-539fa3d8c41c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6337f58-6231-4327-8cea-c8ddf6b0cc72",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8291fc2a-cdc6-4646-beb2-419a6fa82480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5ffcd6d-7ae2-4658-bc10-ab858dea9d9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f464bbf-696d-4906-a418-a0ae842a87fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5977b455-8b10-4548-9311-85aace2348a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2357a657-b644-4df9-ba0c-44e1757dae64",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced3a01b-2407-49e4-acbe-996e3620d2c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5521a8df-b530-4922-bee4-f864ca82ba09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e87b54-2dfc-4b4b-8dff-59eee19eb6c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "46880302-c259-4475-9784-e10378ed58e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87de40f1-3b4e-4686-b939-b1adbd1f2732",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "685b7448-6224-4404-84c8-c6017118ec08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "259d0e34-dd63-4d85-a794-80f094f94084"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73300ca0-1652-4e95-b280-5cf14f6fafd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "bae54e25-8c58-499c-a166-180486359441"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "188df3dc-28a6-4c78-83ef-f6f5152275e5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0894c2ba-3d2c-495c-93d3-9b60a144f2c7",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f4a55a-da10-473c-8617-fa70be04d40b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "94ad9b60-712f-4fdd-80f8-913ab64ff2d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f0e5e45-2501-4d47-a3a7-bcc4e56a7404",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8bc989f-5917-4e7d-971d-1fac8502c975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61056cc1-1095-42f3-982a-5405e4d8ebeb",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc525ed2-8dd3-42b0-820d-8134043e5f93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d96499cf-def5-4a16-812f-c75d1bbf5e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150f7655-6c75-4e86-a4c0-6cb3a68e2782",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0a9f0fb2-c15d-489c-9332-05f50521fff7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e7bb793-3271-4f8d-882c-f067e0f541ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "87cdaadb-1283-4e1b-ae5b-7da1df90757d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "06ecb484-6aec-487b-b96d-b180df98e0c4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae45b5ed-520a-4cda-8d86-27dd6379f0f2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fcaf975b-c20c-44e1-a272-a8e59be6a9e4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2cc9dee9-a5f3-414e-8c02-e5e4e3674433"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "9763d45e-e405-4724-9951-b1da3ecca70b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2ff15a0b-77d7-4e3d-b13d-b3d9dd29ab6c"
                }
              }
            ]
          },
          {
            "id": "01191a15-a350-4dba-a488-4bbcb0f7ea48",
            "name": "Positive Testing",
            "item": [
              {
                "id": "36aaf6af-f55f-453e-a8a9-8121ca589c5b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cbab52ca-b304-442b-ab1a-1fcc51b4ccc3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e20de5d0-ada0-4b9b-94ce-f611fa5f135e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a44bd100-efbc-41f8-abf3-c310bf50f238",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d327b3fb-4c9d-48f6-ab2b-2c556c5e9eb0"
                    }
                  }
                ]
              },
              {
                "id": "155831a4-e0b4-47ba-8691-77938281f339",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "37a762e8-2fd6-4091-beff-3c07d70dd594",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5c80f7fa-d086-4037-acde-282877e8a46d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a9750d00-6599-4b8f-96fc-6f0c6f18eb34",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c691cdef-38b2-4508-8f67-6a3607f51206"
                    }
                  }
                ]
              },
              {
                "id": "6fa2231b-d6e3-4107-8024-d5dc927cd664",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ace19e23-b4fc-4381-a194-4ec7d8829a81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5ba1b9c3-c99c-4233-9e39-0d9ef45f1936"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b52d6fef-286e-4bbb-92a7-453e3317a709",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "55cf32bc-cb07-48d3-8f5b-a91816e06f8d"
                    }
                  }
                ]
              },
              {
                "id": "a0f3d75e-982b-4331-b6d8-653c35956ef4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a837ae8-78f1-4d7b-a972-ce32b2bc23bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c82d1f7e-578c-4c9a-ad0b-86e9c579ac66"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "113d1bf9-b525-4e19-8066-b2ae125811ff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "c80f66eb-e314-4fba-80c8-7592fafdae1a"
                    }
                  }
                ]
              },
              {
                "id": "3f2ae3b3-5b6b-46e5-9139-79de1be7e788",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca28ad3f-72c0-4a18-9e47-b9457b598c9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "77629df9-47ad-44f0-9e40-9c5442498edd"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b0697e01-1662-4c78-b7cc-8b58e444cb82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "b5ce6277-0788-4485-a777-9b70d568cd81"
                    }
                  }
                ]
              },
              {
                "id": "69384367-c517-4660-9e66-f6b631aaddd5",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "df42d735-bb64-4fce-8cf0-72d1544b8b3e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "81b000a6-d0de-48ca-90d4-faa3b37af59a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3d4ba15d-877b-4c9e-9353-11d962a88e00",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "9848ed90-929b-44b4-a658-a55290904ddc"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "131ad8ba-29b1-429a-96a7-102494c630b3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0c4a04ef-2210-4e57-8041-4947e3c1eb70"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "042cf18b-a750-46f4-ac2f-d3606a7ad436",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0dc38c02-f30e-4fa7-97c5-48569ef04adc"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d782239d-162b-49b2-89c3-904f846d5b2d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2d475b83-7dd5-4527-acd7-77e91ee83cf4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e3e73b06-8c5f-4717-9838-7b9455c7b0ba",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f86576d-16eb-4410-8882-8afe7acffdf3"
            }
          }
        ]
      },
      {
        "id": "ec915c26-2aac-46fa-ae30-f6a8d2ef2e57",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "25bcc438-216d-416c-8ae0-4c03acd76b62",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0dbe432c-2ac3-4d3e-8853-38ecef57cfb2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "96a2989f-8e5d-465e-901b-f1684759a3a7",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63b44e4-23f2-4210-989e-d519fd0d8ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "650faeef-cc14-493d-b509-c4177512b340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc6ee1b-3ae3-4bc0-ae6b-d7cab6e146b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8782963f-4b4a-43c7-ab4e-c7a5a7fcdc81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ce7c19d-6ed1-4f99-a5fe-969db30ec8b2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa690491-4b7d-4ed6-82b4-25f37837843a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f4386e3-6b42-4fa2-94a4-4c4f4761f711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a2c863-1d6f-4b3c-a113-3930d5a5fe4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c942116-9400-4ebf-9d15-3ff89d45114c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75ec4885-fe01-4719-ae94-b0c0e72ae161",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f688b3e1-e083-42d3-8bdb-f9408581a485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b2ac52e-9dc6-45dd-a150-89e9997f2876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad88372-63a4-4584-b539-5a263ad78406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9fd4ba97-14df-4243-af6e-19fbe1e10b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4370051d-8e84-4fa4-b036-588d6c5de540",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e5d39c3-6241-4610-9daf-dfbbcf478cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8632d10-2a16-43e3-835f-b78813eb5dcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a75ae6f-224a-42ad-8ae5-243fdb258671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c944d000-2285-48db-ac40-a4a95d0bf430"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff983b54-0dea-4cb5-96cc-7f24d22effd9",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c9117e1-b864-4bb1-8d72-1e34738d163e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0be7a37-5402-495f-8f56-b2f108dee63b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73aaa708-e52a-46d4-8122-c3571df16ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "31120b7c-3c8d-41a9-941a-0462abe30e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dd8ce63-ba5c-4e77-8040-66acec964e2a",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e67cf829-d684-4132-ab45-965dfba6dbf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0054285-b0b9-48c2-b1e0-411bae7dbeb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9938646-6b9b-4c29-b09a-d7f49f863311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "37516e8a-9e27-4f0d-b35d-433e6fed9261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd3021e-6c04-42cc-8a7c-3bac8c9279f8",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f841aff-1d1a-480a-bb23-4eb7669ed775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae2e915-73d9-4d59-9dfc-67e10be99d00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd447edd-e7e0-46b0-9929-5a3ba31b0ca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "abaeffc2-b84c-4b64-97c7-8a08d573e90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08de12a-cf4b-498d-a6a0-44d0c414ba89",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15047d52-96e8-4d45-b4be-fb3060f6e258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef7659fb-0a15-42a0-aa86-378f69f97c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7477c939-91f4-49f0-be92-5bf9c67d62d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "50a57b09-00c8-4f82-965e-1c8fdde4a229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e225768-dedd-44c1-afe2-950ca411a010",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c212822b-7665-46bf-8441-4a748cab13d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6741995a-90ff-405e-972f-d5e1d48bc68e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f973535-745a-4699-8569-4d0443a88647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2cf5814-0deb-4299-8561-36ec27542c24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be471a0-90a7-48ef-9649-ac9bfdfb1ae7",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "615cfcf4-7e41-4e5d-93a9-72a5d1d26f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca0a37b3-959f-492d-acd3-eef5744a1853"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48903688-3354-4957-ab6f-3312f8d29767",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "511cf4d8-2500-470d-a056-499ead7dfa00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d970fdbc-0c47-475e-a233-9cd7be293695",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25bb27a9-7871-4810-8e2a-58c80d268ded",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec3d07f9-1613-40ec-86e7-052478797d62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43416970-041a-4d3f-b9b0-d983413ac50b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c2624fb8-9365-4d85-b8b8-d72af21ba2af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7da43846-15e5-4ac0-adde-a61006e34171",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07e32706-3989-44fe-abf1-6c906b101b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65b9de77-1fe0-4793-99fa-f2edd1af5c55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ca7c580-fa2f-47d3-b48e-b809daa2affa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fd967fb4-7045-41e9-8d97-b13f17717eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d6f4e2e-1894-4123-be76-ffa20d81e9be",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55644c8d-502c-4d85-b3e0-88d66c23995c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8ab3c4b-d68f-4648-9674-65a4d434c47d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301df3b9-7faf-48cc-88ea-288b53435a6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "56161339-4ea2-48f6-82b9-4e7f5ae465fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b20256b-8a1c-4e53-926b-fbb2ad5c6314",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e19048-ab56-453a-b514-c3f899ab630b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf09c12-5b08-4b38-896c-41f15443e130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5742e8f1-a243-4e55-9c67-b57723dfa54a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c24c3e18-355c-462e-aa33-2d2f30fde497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d34641e-2f3a-4207-8ae2-8cebfe5cb7e2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "056df739-a185-44aa-a565-22339d583889",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7bf411b-11a7-42ee-b2aa-f601fe1f29c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4d9596-cdaf-48db-83a8-a62be95121d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "08cd97cf-0dbd-4f90-8c23-fa465965fd53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d994772-f4a3-4e57-a49d-513ce3036e77",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bea48e4-a9b0-43e6-a255-99eae21040ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d886ecc1-ff9a-4de8-88fe-2c68d3b50a3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60127641-4143-4a25-b2a7-e5fe721c1f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a0d74a0-da9a-4c2d-afba-d8362134fce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d14e59d-0a22-4200-80b0-324dedaa55c1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ed9843-d3ab-4959-adc1-85be26ed9e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e92096c-409e-4a3c-a457-01eda0070441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a156556c-a13d-48f0-a448-77f126560a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "25147250-f243-45b8-8abd-a62506099392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69de288b-3d38-42e2-ad35-bdcd5e573cdf",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2175b6f8-1bd5-437a-a38f-72316342d315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f2c1cb4-6bad-4e89-bd8b-cdbb53d54899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba375dbf-a1b0-4e9c-9cfa-e7890a12d00b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "073d3f3f-df55-4b6e-b3e5-a3679b600c7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23f9648-29d6-4d6e-af1d-4fd200f0b783",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61886a0-a6dd-4b56-8be2-83b6f1433425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b17d186d-9481-48e7-b47c-3602a507ea26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ec62ac4-6851-4785-9b50-c25d87c95f9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a435372e-9c44-44cc-80c5-8c3b71e62d38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd59e98-a96f-4af0-a372-85087da8a173",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "028f5585-e002-4c0a-838d-e6636ce79ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "348cbc49-4c65-4edc-888c-47a16594ee38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed1e927-7e11-4665-a5d9-3eec1db1758e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ecb21078-8a5b-42e7-88e9-b8a2bad6745b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "701a864f-74b5-4aec-a29b-716842dcaa5f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91053f4e-6318-43ee-b5b1-419e1922e381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80d04859-2f8a-4a71-8ad2-38a931f5db00"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31bd57d8-a94a-4ef7-a3fe-5af8af48ab68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "560da22e-0eac-433a-946a-cf34ad1afc31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10b8e546-d8a9-4116-b3a3-53c8c09ea9b4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c972c2-7970-4f1f-8bb7-66db9b5dc46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa00ce97-a1b0-41ab-a972-fb1d84aed994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f20e2fb-9b9d-4175-b65d-976a39d69a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0807af16-c726-485b-95b4-b66bc9cfb015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc73f29c-d5b4-44c1-b270-330dba0576e7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f6ef36-8ad6-4a31-91db-f60847b8be1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8a763d9-875f-42d0-8a0a-55e7a925178d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce8c7c3-67b3-40fb-93b0-42bad3d49bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "685ba763-64a0-4010-b59e-66dfe7ff082f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb83cb18-0dc6-4767-9853-c3ae7125f6f7",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cc692d-6939-4300-bd4f-a984392d7cc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efb5c8fa-1d80-407f-b726-be1230b801a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cd05529-54aa-4d48-9d26-96b0adcb3706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "544d700c-3447-4b46-aabb-ba3fff1a2406"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d8008a-4367-4394-a003-e871c23e8a68",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c66d455c-3bb3-4e32-b9f6-c0bff03eeb52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "294a2543-c220-473a-bd43-1cb9862d7cf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a39087-be05-45bf-bedc-838d744a6bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a0339a7-7041-48e1-9e8c-b6fff23be76a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54ec2e7-ef60-47ce-a13b-3c808047ab4e",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6953f687-d50c-4df9-9d44-0676c1ecee91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dbfaf1a-1fba-4603-b922-e87960e9bbf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1485c2d7-080b-4fa8-859d-b5116d8ff781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6868d730-ac73-45b4-b22e-355f23307a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56064929-12aa-4942-aa61-f668205ff5b7",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23fe5d30-82ea-4731-a2f0-f5d8615aad2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b9e16f9-ba9b-44cb-bb92-1775d462cd90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "632c6f2d-096a-4319-97c0-2c8bbaee32b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a6d2a49-de73-4763-9f79-839cfbd4362c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ee0db25-43d3-4f17-a4f9-cb711c5611cf",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b799fc7a-42bf-4417-9ec0-b053d247bacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "798e0cdd-0c67-433e-9d78-bbad427ebf1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c30ad5d-e38e-4f3c-944c-9cce87619f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55c0d3c5-6331-426e-b54a-2a66ea7104ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfa51eff-13e8-4ffa-b8e9-350b6beb536b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffbe7f23-6610-4736-be66-cfc79820e46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a4477bb-8fc7-46ab-92e9-9c6a9b8c4b64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937631dd-1a63-4957-acc2-ae678b856293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "123d87e3-fa17-4d5b-acd1-34a15bebb025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65c14b18-46cc-497e-9652-6af67c82e24f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44198ccc-ae37-487c-a12a-d9c03a6d0755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a750b032-7664-4b40-97b5-caa7488290ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c347190-858e-4e43-9b65-fd6455c8609a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72474857-a7ef-4368-8c67-2555e5d44fc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a80ad73-5b0c-48b5-a00b-d57cc0c83f8d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "243b2900-cb56-4aea-81ca-9ea967b830dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec58b247-b224-4e76-ac35-60c39f6b6f8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c30758c4-b416-4cf9-8046-495907571f4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "64236248-3711-41d8-9fca-694872bf0e22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31053b16-572d-4624-b10d-09802c721ccc",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5a342dd-5fc4-4ae2-9fad-2e3cc1c4da9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3048cc3-e012-4251-97ea-0a8f147000d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10abe591-7d3c-46bf-870f-edbf750f1b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8764d9e8-a20b-4c4b-bed3-26d155c60649"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "21eec705-e260-420a-beca-7bbcfbe574f7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9a40e789-ab61-4cb7-ae99-9c6836aec919",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0932b41-ae5d-4372-84a6-9b88249163e7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4eb8c69f-fa0d-427a-b13d-8b54a9009a33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1dda7aa8-d915-4206-85f5-9f71de7585a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e4a1a09-ee5b-4e1d-93fb-eba04625080f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5729c6b-2411-43fa-9cbd-68287e6debab",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b603a17c-f7ca-4b5f-a6cb-691f69b355cc",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "eac8fba4-fa86-4b75-a203-9969e82aef51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb070f2d-6250-4277-b36d-a375a4e0c3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc1b5a6c-6c18-4621-b7bd-fc6aa63a9b6e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "505521eb-cdd5-473f-b1b6-3756f684ebda",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2a71064c-2bab-4281-b748-4a728c9259cc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b374d0d-abf9-488f-b602-ee4dd655c207",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4381850-6128-445f-83e3-e87f775ea817"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d26317b7-e6f0-4c07-9c6b-3f2c12fbbe38",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1ed3b487-934b-4434-926b-e8396f1a4967"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7bdd4130-8c24-45d1-83f7-cb34f225f800",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f6d60acf-bd1d-48f1-9f1a-e522807c7b34"
            }
          }
        ]
      },
      {
        "id": "5aaf9e29-499f-414e-8d84-3f237ca46f95",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "5d97aeb3-ce96-4b2f-8b5f-7be982e05782",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0a16cb9c-a07d-4f83-8ed1-bdcdc71f392d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "73864e95-23fe-4848-8537-f7ef13f67e40",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21466f8d-2595-461c-88d7-ab82e7cfcd13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a21295f-45f5-455b-ad79-54196fc8d535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa35f1a4-9f0b-4c7f-8e73-5570e91321c1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "334a817f-ed47-44a4-8493-c85f069b9cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76df2d2b-33a6-40dd-98fb-eb3ad83498eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444c165d-ede5-4a04-b0eb-d78c887b87f5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d1bc36-81ec-46ee-99c8-20c88306e1ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0405146f-3ffb-481c-aef9-3627df5b0380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4347990-d3a4-4de3-a0ad-9725516238df",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74d9681a-a878-4a59-a525-3d858663a426",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdce132d-bf3d-41bd-aa9c-223245d77a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2ec912e-1121-4bd2-9a7d-5812e381b4b2",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a827e118-7889-4e9a-963e-a91c69060f91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b423f162-5096-464c-b356-9786f5962e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "283cf519-c1ca-4bb0-8d57-aa6dc6cfe857",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6c6b2a7-12e8-40de-b48f-11fd6c780ed9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee45a4d7-d727-45e6-a367-28f519fd1864"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6294acf4-a51a-474b-89a3-8e5ec982c012",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "806de8c2-949d-4999-aa39-7a3a53bdd191",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c397b66-ec1d-4e40-a00a-27482c49ff1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1df873a5-b67e-4071-b3aa-9f509b3f501b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe1d5823-0a5f-4506-a1fc-6f033b06d224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd7cd2e0-ac52-44ba-a032-e3047f69903b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c224b219-78f2-422c-8abb-c4fcd41f3b88",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "344c8371-4740-4fb7-94f5-94b64de05f1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d284f82a-280c-4142-ba40-f59f07fcb5e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd712aa9-0b1b-4fb1-b675-6ea964e53a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ca44917-a430-4e96-b3a9-0c43f1d17b58",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dece3a3-61a1-444c-b9cd-3ded79600bd0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e467f6a2-55a4-457a-8eea-db4e6401e817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cde1ce2-d106-4dbf-9352-8ae6ff2c1a5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff18d6e9-c617-47ac-9d7a-0f0219c8fbdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec42bfda-fca9-478a-9e77-496eb548de3c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "559b3d95-5bde-4736-a934-d05dfc5859d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d7ce229d-8e1d-4e76-9fc8-8f05eb4edc2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "534e1231-126a-4c0f-9e03-9b31e33daa22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "189a524e-1c35-4d0e-96ae-adcb3e64023b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84e246b7-8a20-4d7b-bc34-af666e41e1d7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "456957f1-762a-4fd9-ab88-7be905ee9e20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d26dda71-2f93-486f-9187-b056253fcecb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1991a701-4ace-4d9e-a59f-d2f298b6778a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db403d28-b2ab-430c-a11a-41c187fc250c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de455237-eec2-4561-a5f6-b825a23959e2",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0c1effa-44fb-4af7-a7a2-552eabb39903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93812ca3-60d2-49f3-aec9-942ab0610662"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "248cee4d-16a8-4957-8d3e-9dccb5c61e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22276176-3aa1-4dd8-a299-56207c5857c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25c30f4d-682a-4039-a4f9-453b6297efc4",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdf0037d-9283-422a-ae3f-6deb99b2856e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca05163e-1119-485d-b862-68718db52616"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cad5062-e489-408e-b548-ef43234d945b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a6f3ed-e7ab-4539-8dc6-e3c75bbe0fbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da45ef90-28f9-4fcc-96b8-5affbdab6ece",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c9a38b-f1ac-4f87-ba61-02b50f59b337",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b535c72b-6906-4c33-af4d-c3e7848b8f58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e0e9075-32f6-4385-9d31-50b34bff5c88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0054f0be-f7c4-4219-a1bf-07910626b142"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5c24761-053a-4cd4-8f18-330f6be4ab4a",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e907dc8-5cb3-45a6-bc16-237b470e814d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f10b4c2-8af8-46b4-a02c-6d5eeef26243"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15e6646-a37d-435e-95d0-80109a0de6f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e97ce2a9-996c-4e9a-80ef-17ca5b122aea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb7141c-5d8a-48b2-8b4a-1e43db859b7a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0686aa10-c3ce-490b-814a-58685c49c982",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05d58d1a-7835-4221-a988-da6b71d4d922"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d30975d1-628b-4bef-b991-eef70a11620c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dedc134f-e46a-4527-bb96-fd79eac28d76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d621b660-b934-4ff4-b580-8b6ed9c155ab",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a304ad6-5932-450a-aae7-065122bd1b3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97781ff4-dd44-49b4-8075-2b1f56365f0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6512c336-84d1-492c-9d1e-02e1206609ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17647454-2252-4f53-9b1c-8a711e90a90f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e789b0d9-e31c-46dc-ae2a-839b8779907a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44df056a-5a21-4db0-a047-ef0b9d29384d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fef5535-269f-49b7-b976-fcbbb8081ab2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30b2f843-e817-4beb-8eef-503aa2352b24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce3afafd-d871-40e3-9bca-5aff2f2d57c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429e66f0-d04a-4622-ab8c-91160c0f969a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5536fb3d-00e3-4feb-8a95-e5cb5861cfa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4aa3f120-1174-4f91-a135-f4db15011ad4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29eca39a-035e-49ac-82ef-2ab141703a21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7511a440-21b1-4bd1-acd0-68be98241275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbf7ba3-4eb8-48d1-85c5-fb1547650844",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af425878-a1ae-4db3-b92f-0a54515cc2ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aa2ac8a-cb96-4a01-b43f-800465ab4ac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "210fccd2-452b-42e5-ac2d-4b5e1b8e8bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9daeea70-5e67-474a-9ad4-a9d17c6ce021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6381a7e1-865e-40d1-8195-a6c852575fae",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83bc3c9-9586-4a8a-bdbf-0e2dd4f8095f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2dab4fe-b6c9-428e-b6a9-f657ae175065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acbd0f9c-0a8e-4cb9-bc08-6eb373755cac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09a499d6-956d-4947-bd36-f3ba3bd237c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "776762d6-f356-4743-896c-13764d5999ac",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a1834e1-420c-47bd-a65a-d40c98b3f0a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df6085ef-a862-49f1-8199-80c0e294feac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28491fc2-ca45-4d33-9216-a58a787ce36c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c40eb130-dac8-4422-ab61-66d12437dc87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e83887e7-194d-4e25-bda7-39aeb54c2840",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0647e88-06ad-492c-a43a-10741cb602b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f62ab14f-aaff-4de7-99ea-9d6f2d88e4d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27e687d3-611f-4164-b805-afa5e5c52087",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39689c65-962d-454e-8b98-4ae2240f4824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbc16fbc-611d-4065-ad2b-33fba96673c3",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a161a3-f169-4f73-8407-b2bd7b59db6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "696058df-937d-4851-83a2-bf0f9ea5bb52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b6c6445-4c09-4cfe-bd6b-8d080f8eed9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "642d352c-18a1-4edf-9cee-e459b2b30dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d93fde-9484-4178-8b48-1ac4552e516b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fef59e5-f140-4fb6-b0ff-90d6c428f1bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "39e54646-aa02-4a28-880e-8fbf0843c611"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe05abb7-9353-4d16-955a-761cec692ba7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c087ff0f-fa81-45da-b971-2e1474d7a66e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7e83ca7-dde1-400f-b130-e709dd71bb1f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4007e8f-cf0a-49af-82ee-333b7a8a58cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88995bb8-0c7a-438b-a453-1ae207f82f16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "067df5bb-4fdc-4e45-bf89-f6d80768a524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "941e1516-17b7-47f0-940f-7dd60f50eb9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb6a73de-ce8d-4b96-9773-ed4fe7ae2eba",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eabc24d3-5189-43ca-a24f-f5b501c29607",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e8e97dc7-5081-4437-820d-9cbeeea4ba23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "359510ce-9ae8-48d1-96e2-0c6724a68bf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f45ced58-d2d6-4c58-b5ab-c6f286d0aa02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcfc4619-93c2-4e03-aa3f-5b15669b5fdb",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d1971a4-e6ef-4b27-82ba-d150c93ebf68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f96a1ee-fd84-4387-86be-f7fc0cb97f3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef8a8e06-e927-4caa-bdd2-468efb385812",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc819748-44a7-4452-9f4d-079dc127caef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2db72e6-e990-4cf0-bb4c-90937052fa7f",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "230d3f2b-d86c-486e-b0f9-62695b4b3a56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "314b676a-8cc5-42ed-9577-1222c23b1406"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec2835d-f0f4-4514-95dd-445d98db0213",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d8e4c52-b4f6-4159-8c13-32b4e45cedfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a633ac5e-1f32-47f9-9ca4-0700748ccfb3",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad418549-8c1e-493c-9b05-dd4f100bdb15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "020133ab-6f3d-4f16-ae4e-c9c4ef9e1d76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b1113e-84ca-45ae-af40-4d270570401d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68ad84e5-2ba4-453b-8dc4-7d524ed942fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d182b6-880e-47fd-bb83-65e5b692adc2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c293eba7-db75-4213-ba74-908a517612b5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17ed3e36-2981-4a79-b6d2-56dc35693677"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e44a3c-e679-49f3-8004-a64a1d15be41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cc4da94-a09c-4464-a6b5-ea331a937816"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eec03209-3f33-42b9-be9d-8e5e3af2cab6",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9ae91cc-d5b1-431c-ba49-075d12098abb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "615e758f-c692-45fa-ae71-d8e63795b5b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2fb971-c86f-4693-acf6-a737cab73c55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb4ebc60-4e1b-40e2-8bce-65339dfd639f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "223712ba-eb4b-4b4c-8e29-f6c904f6047c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5bcc86e-21be-4755-98a2-fd67b409cc11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8657546-75ba-4499-b43d-46c267cfac57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33c3045-e39a-4914-84ac-dcfc4843e1ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23447ee2-1f19-4be3-9ea0-1acd3bc4cfd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed4016b8-1ec2-4b6b-89a6-0bcdc4b51110",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee1b5b24-59f4-4883-ae10-cf1a9efdae7c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7860f4f2-2a22-4d82-a9fe-e054c93886fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66208ce3-72d4-464f-b704-a3ec1d78ba6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40a931f7-c755-4d12-aaf8-9141237b625b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c80931eb-b4d7-478c-a583-bc042c473bbc",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4378a3a-c69a-47aa-a989-e97b0611a3e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cb6df54-a306-4ef5-8d3d-4d09e3ee2630"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "871a3b16-6013-414e-b512-f74acfaa00f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaace4b6-0a68-4d39-80a1-891294b2136c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc59f06a-dd7f-42c9-93d9-c00664be250e",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e26bbb51-a668-4fe7-8597-142fdebdce20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f60e4a34-130a-4ebb-b449-4c6913bdc68a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a65c463-ea0d-41a2-a749-8f9899daf43e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18d00110-12a9-453f-a3b9-dfbb06fdabc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6196696e-fccc-4eea-939b-7e883c384393",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b3c8b5-c5fb-4d02-b255-42cf6d298529",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5a3976f-04e5-4dec-a75c-482256e4a443"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8453e7d-5145-4774-914c-d3b0d5c31e3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd9a7803-4232-4f8f-a16f-9fbb5f3995f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe7af65-3032-4e88-bf41-02f0f4111ab4",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b66b566-f6ee-42dc-a184-ce7b6640b0b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feb4f83b-17dd-43dd-b73c-ed3de5aba0a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f148e34-c416-475a-8a15-178106402bfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73d93c06-43f3-4177-8b4e-933da260d6dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302468a3-cdff-4876-89a4-e968710cb8a7",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4be8d9-9e2b-4419-8355-8f34ec0ea1c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83832a8c-58c0-4a6f-8565-27b23b5e5040"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be808a60-63d2-4f88-b5ee-f4adbbafc241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d52766fc-f3e9-4cfa-b590-3a116e1e20b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d68c729-3207-47d7-b862-eb7d92abb1c3",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1096d4f8-dbb7-4174-9514-aaaaf1e17ec1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7058d6fa-8c10-49f7-a7f6-34eb555e8287"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7399163d-4123-4c15-b2ee-3902d939eb1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "975ef4ef-c873-4370-9afe-8522b4f22250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d090e50-6016-414c-b4c4-8ad0a82f60c4",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f50a22bb-83e8-4e41-a6d7-97cf9193c711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c837d4b-ac63-45d4-b795-688342806d6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52f24371-4ad9-4d0b-a294-8912079b3773",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f614fa09-9cb8-42ca-9795-0c404ee43535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "842ce5d9-2240-443f-8885-07a9ab010ff5",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8517d58f-e21d-4568-a2a7-3047d945efd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64a2b164-1c21-4eca-8934-fd066b0017ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a360a8ea-7ec3-4d41-8959-53196e0eaec5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94fa9f70-a8fc-4b63-8db2-0e389c7cf8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd2c31e6-284c-4ef7-a004-27428d0b77e9",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9dde90c-1e00-4967-8a35-44ddce52008b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd1f82cb-3af9-4b2f-a752-1790c45abbb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "894d7033-9a4f-4c97-bf14-3f8d975d4adb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46592666-f4b2-4004-826a-e15a60dd5fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a676c1e-ad0c-4957-ad61-68846ee52fe4",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a21a6e36-437b-43ee-acc2-31f9616cab47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "874b1370-3fe6-424f-a13d-66b0674b41cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62d869a3-ccba-4671-9ba5-9538d993ff4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "348e0aba-4a75-4a0e-8613-11e1706dca88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f88958-7739-4ae5-815d-9761c3e771fe",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff599ba-ca01-4614-b513-c00860ad81e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f58e6b50-2ecb-4a89-bb7d-34ee2a6fcbb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0da5706-89f2-4704-943e-8d7874d44797",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e61c51c7-d461-4587-856d-adf116d799bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b73a9c74-b55b-4bdb-89ae-b769d7216a4a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e53263a-3e14-4554-9b72-57962140a95a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5459d847-174d-4160-9188-be02204a60f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9637fc51-76ac-4823-bb13-712491b8e7ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c47d99d-986e-4339-a147-d44c38d3a79d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e21dd67-27b1-4e59-86c3-09fca0005963",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad816ce8-35a2-456f-9d87-585430be5a69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86730bf9-7421-41ff-8f18-f49c499f2988"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef6997fc-4568-462f-a503-567fd20d3f23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf947140-05fe-4026-80de-7c95ec0ed320"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9f0daa-101f-4b2b-991c-61a51823be0b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d18ffb0-d474-4d9c-9955-aee588c7c82e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a987ff9-3139-4124-950e-a7d83a3633cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da694d4-884e-4c48-83bb-0193be410b8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e15e3e8-1899-4b20-8536-c28975edeb39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd94b977-821d-4401-acd6-16f67707651b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e2c99ac-339e-463a-be67-df122a85d412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eacbe96c-ae68-406d-b58f-dde96c98c7a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2728f7d2-b6a6-4a3d-a9fb-5d252d7f1951",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5dce6e39-538a-47a1-af60-508ae69a0025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc32b9ba-5366-46bc-a3da-c865f1a80e4e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49597c4-de9e-46fc-a6e7-2ee7139119cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e08c92de-cb5a-4b4c-84ee-230d3a32abc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7200501-5ae6-4ec8-a833-50080278d68a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f440e46-1d76-41c0-9437-8a24af71e156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1161ecf-a2b4-4104-992a-dfa82e4d672e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5e3b74-6437-49ea-96d2-da8b1a65fac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9d0191b-abd0-47ba-90de-1ecdeb294374"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23ad527e-0135-4b57-aa6a-e72f500ba272",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "238cd355-25a4-4a94-ae74-58c594971c48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c34f3d-9f06-4404-84bb-a92c15af7648",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "033de8e8-57d0-4129-8bdb-55758d9192c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db9214b0-7358-468c-9d66-5db24571116e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "483b93fc-7d2e-4092-82f8-404613b0d9f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb780ad0-f3db-4c3e-9aa4-e6242fcba868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30c99042-c80e-42f1-b638-a1d19099df75",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c1f307-3104-4a66-b8c8-1317f34ef019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb89d97e-7758-40b9-8075-80bbe9e20cb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a1f3925-d7ed-4045-a90f-5ef5f6c7fe73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e754d54-c309-4334-8719-3dea5faeadd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03653046-0855-4ae3-b37f-1cb4040964c6",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a593875-eea3-44be-aa7b-0cef6289d11f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ce567de-bcb5-4491-9e42-037503faecbf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d141ccc8-04ec-4ec4-aaeb-9052c62b61db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64b7c594-6f4f-4f24-b0f3-2e820e5e8512"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dffa1f56-f33e-4775-a3dd-29e26c8b9f6f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d839a5bb-63ca-42ce-83b1-f904a3109972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c07633af-18fe-4e77-b465-9f74e8c77d7a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8f6c7d-77d1-49b2-acdb-1b7e06891503",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "92fba6bb-24ca-4384-8c16-c309ea80da50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9b866d-cbf3-4c8d-ad6d-72a526b9cdd7",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76cd3f0f-0fde-4eb0-aac5-c3ffed681c28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de72fde6-b5fb-406b-8f22-30b2f19851d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a7f2f4f-0e0f-4bbe-9a46-120d1e2ecd11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eab347e7-ba15-4076-980f-94cb80285676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17288e14-8e4d-4ea9-97ae-069b6d62c600",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f4c508-3104-4e8f-ac20-721cd8b5ba6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c782f89-f4f9-4540-8b63-96e4d637e58b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ee4dfd-477d-4cd1-9f1b-1fabac6d0bac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f50a1f45-e225-4374-9842-22297d258a20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3248abd-dce9-41be-b5ef-d738fe56c742",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5090deed-6dfd-480f-b61a-8949946deada",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94381059-6dda-44ac-a981-e938c65886bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa672808-7062-489e-820e-f2687a07430b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25ccb9a2-a561-4b77-9ee8-ecf8c766e884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874d2f1a-550b-4f0e-a26d-5456948a0461",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "817c5901-63df-42d0-b15b-4c504ac50beb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a57b500c-e602-4a96-8cb7-b5631151aadd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7659942b-c79e-406e-9ce8-688c50151553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "713e8bb0-d3d4-49aa-b407-26fe85db3093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c55f94d-2f2e-4944-84aa-c7d1738b9594",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2753c936-71b5-4801-bbbf-b00836f2df36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60777134-e17f-4bda-8cab-94235552062d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2388d941-dff3-494c-a01f-11a6b9b42428",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8361f526-434f-4ac6-84d1-06c1dd9077c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1986d6-0a6a-42c8-b199-fb1a4ece3665",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72595009-8979-4bd7-bb67-90c0025d1daa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e72482c-40bb-41cf-940a-10697e903ae9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82d9c814-8345-49fb-bfe4-7686042127c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2febf47b-d7a2-4139-8fe8-68a02ab8e870"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640a7f1b-5c28-45cd-bc55-57b2fa88a528",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce306029-7610-44c6-be84-12197646a077",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa8bd013-efbe-4dca-9324-3cde42818f51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f33040d-ebcd-4afb-8b2b-131e7478656c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96d2d8fb-9acc-4e64-b651-db19f2be318b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6c2af83-0053-4ccf-9d31-4360d175527d",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62f59b59-973c-4618-aad0-3a2aa209aeda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6547920b-874a-4e31-b323-53ece1af6844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7095b81c-d33c-4ff3-90e6-e970e482fb86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9439c211-cc71-42b4-bd4a-4e0691602487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f92bbfe0-283d-44aa-94a8-8909dda41d9b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623c2931-6b03-413a-94d4-b018fc718911",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8887b0b9-6576-4212-a5f2-78001bf76775"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "859ec44b-8592-49e5-91ca-0c6d6b703d57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf8f6f18-e559-4456-af93-f4e2b995e27c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc7cba1-8fad-41b5-a77d-92f8e3d81355",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "defa2184-25b6-4f00-874c-2e5264dc7936",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07fe243f-7d16-4665-9b13-bb2506de64fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "facd83c7-6409-47e0-973a-d95f7e2d47b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f3b6543-939e-4e86-a4f4-bfc6fb2d6d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b8d1629-8a6f-4065-9298-e95c2d5a2184",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b6adb96-2a73-4912-9253-7a04d00a9709",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12e19637-5a7a-4e10-ae01-9841f8ce1501"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86fa8c92-860f-467f-88ed-603768849411",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e7a85ac-0c11-44aa-883d-0cb398ec06da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478bea4c-d60d-40b0-b920-f1679a29be58",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6cc9789-2d42-4ce6-bc5a-67b98b2182f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de46fcc7-b3cc-463d-8764-849b76b5b4a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a7c5c6b-b9f1-40bd-8cbb-bac941df1ec3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d017d53-2bcb-4ff6-b327-aeb9dee197fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98237fa3-2f71-47a1-b33d-9dc80b268f91",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9770a49c-7211-4a56-b253-bcf86df1b7de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f2822cb-1639-4f1c-bd06-a983bd3b826b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab398cbe-c6c6-4bf0-9d13-25eb96a9ad35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29a35910-03af-4f13-886c-00452ccc7c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a14c2afe-3194-4d64-a0d7-a39f97d756c9",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b2c2ce6-de4f-4ff7-af53-eb3d8e23da85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5fd27e89-1b61-4ddb-8d2f-68e6371276d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ceb4467-2af3-457f-8dd0-e242d8267e8b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3141ded7-e6af-4667-9c90-79283b9b3b51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f26449e-eeaa-41cf-8b9e-ce5e744bf6fb",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d6ae62b-bd3b-4e60-85d4-a0eaa23f70d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6c76ae0-9fdc-4b21-b045-e96d2bfe0935"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c2db40f-c50b-445b-bb06-82daa4816016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "541a26d9-e29e-4a8b-833b-f374488676a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d84709-e942-4844-854a-b918ff45094f",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49fbf77d-5a4a-4859-b905-d9190a01342c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d1df32d-d701-4c46-ada4-d59942ab8578"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9d5413b-d4fd-4c70-8073-af4476ce7b0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b151fec1-7841-4bc3-90c5-3289cd7a794c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc67ccd4-48e1-4bd8-b2f6-5e0c1654996e",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1564340d-c41d-4580-a830-d3587976a1e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac617a4b-2010-4f70-b163-9294af515137"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "822fde33-7356-44b0-add2-515cafcdc6c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5122237-a04e-4bcd-b2e3-3ecb938317e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdebb053-0c2c-4b4c-9722-0dd1adb6d95b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdbfb966-e616-440a-84b5-c67bd1dfd322",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea0070d7-c97f-4ad7-ac7a-421363c60f7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f83b83bd-d1fb-4aaa-811f-3c30462adc59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60b00b10-a36f-40b9-a081-c42dcb45c590"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54fd505-a837-43cd-87c2-ae738b375bd8",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e99f92f-a380-4f7a-8a49-d8eec451637d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "730e4219-e728-44fb-a066-bf27de43c824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75dbe3cd-a5f6-44dd-8d7a-6b2359428ede",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4567755d-6b73-4563-b7e8-c0639e72b599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e798e307-2b53-4702-8d37-16a4a73f301b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e63bf27-3b54-4403-a0fc-14549bc23a44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3f42a041-6b6a-4cd5-bdd0-bff489a0b3e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e948e06-cdec-4218-ac2e-07f4ba917566",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ec0bb2b-27f9-409d-8609-f14a02e747d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "046fc019-3746-4886-ba86-3688e96a690a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63faefa3-8abd-4a18-af82-042b3d134f7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bac46f7-5c25-4344-bb84-83e4b6572011"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7894be-b71f-425f-9375-4056197db1c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df3646e6-b197-48f2-90d8-bcf58d2533ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee42717-81c9-493b-a098-95ddcc79fa2c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b934ccab-8fc0-4622-85fd-e591b368c453",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38559147-2e31-43c6-a4f0-966b18865d7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95062875-f8e4-464a-b844-7b66f1a8c5fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7d8ac02-fba0-42d0-9e3b-ec692665a95c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "985d06c4-6020-4e9a-be02-881aaa55566c",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6160f65-20e4-4e94-a1b0-6ac684634974",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74fac0be-19f4-4cb0-aaa2-7521dd3fceae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c536d639-849b-4855-8702-00fa526af66f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09207e49-bfca-4b24-bcc3-31580d7a2a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dbcafe4-7355-4789-866f-397c4e929062",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f098dee-2a38-4b58-9d2e-77bc8c5cbd50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1cbcb97-bbe4-413e-bee0-a1bc9e620bf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d92691-29cb-4a5b-a598-1beb44448e14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c2cbee8-e060-4fb3-a6e7-29fb3822d155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc15b988-ab14-4dac-ba5c-56bad3fbb601",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3598748c-e63e-45c0-bdc2-d8722f2a5dcc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fadccc2f-ef44-4652-b9f3-600ca22369e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd16fad0-0d29-4c02-b420-3621ae1459c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b07cbd83-9442-449e-a0b1-9c39a3b4379c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aacdf450-4d5c-4f47-b254-87d252e16e97",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56516dd1-79da-49a7-ac7a-0769e46a9e6e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6db1a1e5-06ec-4c3b-ad7e-a93450220de5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "661f46b3-6081-4f36-88b5-e1ef7e02d6dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63c479db-4806-45d1-979d-29b5100bb16d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba699011-785c-490e-bb04-b709081bc680",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163c320d-fbce-4013-9006-619df0d726f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "709cc5f4-3196-459c-a00e-8dad274a1f10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cb0fd5e-a65c-4c73-ac7f-efa3283b85ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8e47db2-6e4f-42e0-ac7f-a809e4238087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b11d25-b661-4a97-8b06-d6267f977466",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e6389b3-f0d8-4b77-8e4f-d0f2eea9cae2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c0e19b0-1226-4854-a39a-bc78f2036dcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80f92863-ada8-45dc-b3a8-2c5dbb1cd66b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "665d3685-cd30-4262-ac00-f8d8e91cce0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b2d3f35-1225-41be-9c16-2f821affe08e",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c60ea8-4fe4-418c-8040-3ce2895cdb76",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e84e0583-3137-4411-bd0e-02b36d39538d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e18d5612-3213-435d-9cda-eb181c8eac25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79dc1452-78c3-4835-afff-b0b5696a511f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dfd5e11-63eb-4613-9980-68382abaef73",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc788676-0014-4df4-a8fe-b616dc76ced3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5e0ac606-dc0f-4213-978b-1e1bbc251c27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d6111e9-943d-4884-9c3e-344e1b656f14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38b96a77-0dde-4d34-8b0a-850d1441db23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "921a15b7-3056-49ec-beb7-68868212cedc",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2430227c-1337-4a93-ba90-def7992e8797",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d3258f9-faa9-4835-ab6d-390faf7d4bf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d1c58c-fc7f-475a-9937-253d6a20bb3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa163c21-5d2e-42f1-a940-ce17cf385fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5ebcef-dcf3-4bfb-a176-75afc68c4153",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "809a6bd0-c401-4205-b348-00fe5c21a59f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c09a4af-db8b-4c0d-8e46-55556cd11a32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f06de49-96d3-43d2-bf24-b8d977e895fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea5fbd49-87b2-4137-b9e1-b18dacd0dad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ae3dc8-a482-4a23-a6a6-f93dfad20e82",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e36c52-9b13-4c34-ba75-4c6adcff8755",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "717f6778-13ab-4da8-9bc7-910f6b2c2226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88997244-05b5-435d-a76e-fef243595c34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7123ec42-08c9-481d-81ed-85b04b5242dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "109d4bec-0856-419f-8343-4ae28437343f",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4be1591-0f93-489f-82f6-8c327ca05ddf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4953416f-b45f-40cc-863c-77c95f2ce22e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57af3d6-b139-4ba6-bb0c-5b5cd14da8ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "026a33d9-ba3d-4f19-b701-118494d218b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6edc35-ed4e-47b9-942c-dd8c41a6418f",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6349228b-3af2-4bb6-bcb2-8a26e32732fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28119fdd-5a8e-4bdd-99a4-b0cee7a248a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93aca42b-efb2-4229-a832-bd729b02d753",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed9a537c-654c-488d-8add-133f966b3681"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2bd8eae-5391-4101-a505-004e9b308cf6",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3c51720-3714-4431-82f1-cee5b102d4a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76d15579-d225-4720-ac00-6e856a2d61cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "647f9088-f4fe-4744-ade9-fda1b4884477",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f04c816-9c24-4914-bede-a30ab1811174"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0517cd9-f0e8-496a-a9f9-7cc17ce2a8ea",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bb7e2d7-873e-4d4f-8262-2b1ea8ee47d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04a0f888-a879-4f0c-9ba4-e4b94707b198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06e8a945-aeff-43d3-a692-c340f8ac8f4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e439da14-fda9-4371-a5b0-e9a66c567290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1551042c-fed4-4635-8fcb-3b4f1ce141d5",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "198a99b7-4bb1-419b-873b-79c405c97f81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3c2d49bb-9f99-415b-bef7-3bea0171245c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba8d013-b71b-41fa-9952-c4055045f074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd3dd125-5b2b-441d-b60b-25671c422323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f37454-041d-458c-8688-87d435f42232",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80ed561c-94f4-4f6b-9849-f5b7564b26ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7352e0c7-3a39-416f-bb8a-4a6bb72d65a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e95481ac-f74a-48c3-99a9-6964f091f687",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d50f50ac-f4fb-437c-a95c-61f499a1a8ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad5a655b-e6f2-46f7-aca5-20186d20e885",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7341209-757e-4812-9119-75473bf173f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "899987f0-3f70-4a74-a076-f451fb72ff80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65fbc619-5510-4e83-9f75-31732b4d22bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d234387-0346-4164-8b09-5ae5e1297b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7256fd2b-cb20-444b-ae60-ec844cbbd26d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cddb7afb-1a53-4d69-8c3e-12f07107f196",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ec4cb1e-75df-4218-a3bd-14ede53a2c29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5fd8bd0-6114-4323-902d-4ced1a4734d7",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cad9ee8-77e4-41ee-8c50-33d27283365c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ae5e11-20bb-4d2d-a1c1-5eec77370380",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a53c843-b3cb-4a56-8882-54b1a87714de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f15b5b08-9ccf-4ba5-ae3e-b7542e87a967"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5ef86cd-e157-440a-985d-52da153ac329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ade07042-4716-4920-b630-4c64d32fec20"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ebebbb49-d410-4b07-a347-27f1da8d54d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a1671f3a-7256-47a1-8494-986fa23710d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "11290d7d-760b-4c17-be63-56a9be157549",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4f250afc-0af3-4661-8c43-06df45cab473"
                    }
                  }
                ]
              },
              {
                "id": "92655d1d-875d-4368-8d0d-9c766d40d9a5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8956c35a-e444-4d6b-90f5-3a8f79d28465",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a8a6e3-2172-4e15-af6f-b3be6a1b65f9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6cc51793-81c6-41fa-aa7d-cecce2054240"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b1cc6a-0e24-452b-91fc-407d60cbdd39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e04fcf3a-0bec-4f0b-9bc6-256151e7df49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fd6a816-b33b-4d16-b447-7be213ba98ee",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d85b6dbd-2b98-454e-a691-0b5346d722f8",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "0873deb5-ca04-4320-94c1-1c43c7c44b8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f3652c-f88e-4a2b-9113-2b14f2c6825c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7122f464-0628-498d-9ed6-6b5b9a8fda2f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9b1be709-6a79-4d55-b2b6-94ec23a531bc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "823fe6de-d17d-4a62-ba0f-983340e74b47"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5e35e87d-f844-4ede-80e2-ede993b5abf7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f16a868c-12bf-4a05-8b98-67634fff9c44"
                    }
                  }
                ]
              },
              {
                "id": "93ef9a4a-c38a-435a-9465-72e506cdf6f9",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "fdc4f527-a923-4b53-820a-36e264a5e482",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f027f78-bd83-4723-a588-b9479403c831",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "0077f05b-d620-4017-8998-0b6006274e5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483eb28e-a144-413c-a40c-7abcb619257a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de3f1536-eee5-4616-a38a-8f11d0b18b62"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e82b7ad4-c5ca-4450-afdb-08ff1ae610a0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "96a3dcc1-3b9d-414b-8874-c90856981d9a",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "24a4aa24-f466-4edf-8b32-3f2e18562dff",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a71e80bc-0f57-46ed-9546-f69a29e24488"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f495eb1-0bf5-47de-b523-070aa10cffd4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c8463f41-3bc5-47d5-8cea-aefebdca336f"
                    }
                  }
                ]
              },
              {
                "id": "393cf44e-e0e0-4c38-aa93-512dbf71247a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d25731d7-4774-42e3-98b8-8e3d79ba6c24",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "24447879-acf7-4ec5-af74-caf41d39c5e4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0e79a075-6630-4926-9214-f57cb36837d0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca5f8472-3ffc-44b2-b16c-8f720bf265d1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "20499e59-4ee9-44f6-8234-a2c86ffc0fb4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "0018fd8f-daf6-48d4-b416-257fd6716ab8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "28f0ecee-5380-44b3-91ce-17c42891033f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a8ec015a-503f-466b-b729-4020dbecc701"
            }
          }
        ]
      },
      {
        "id": "8b178034-65b7-4fc3-8bff-3a660524546e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "5db8e88d-eb7f-4d8f-95d0-9d3a8018f77d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4fd96689-49bc-433e-a41b-779c7fb936cb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6693fefc-da68-43d0-8664-ed4a0af9f278",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d417ac8-9e5f-44bf-8845-dc9d4b0ffced",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "28b387cf-ecce-476d-972d-1d46edf1a80c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12aec36d-8657-49d0-b69c-d7578bc296b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a9827df-6cbb-43be-8b7a-293df83706ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ae812b-84a5-44eb-8b9f-0b66a3e1cccf",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "537a3ffc-3d57-4cb2-8d7f-ac4f9758cb10",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "2dde28e8-8f17-429a-861c-02af9ba8a26c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1a862fc-305e-4023-bfcf-91624a30bc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ff855e56-655e-4cbc-8e54-701011b6430f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cccae322-da66-4816-b424-99b6d18c46eb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5864938c-aaf6-40d0-9db6-2b94b3fbd1af"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "45212bb0-4b74-4fa5-b829-eb5f6edc15cc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3b8ea48-f8d4-49f1-a52a-58967432225a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d0307f52-6ef5-47ae-a336-699736424000",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e9d2e0ae-89b0-477b-b3ea-9d8e14c340ad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ac9e934d-2a5f-4e1d-b015-e4c5b985eb45",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "90eb0936-63b2-4775-aac7-12650ea50c8e"
            }
          }
        ]
      },
      {
        "id": "8506a13b-ac99-46c1-988d-6606860e1446",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "9bea755c-7fff-449f-951a-d5a5a9e484ea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2a376fb9-1eb5-4fae-b3eb-6aedae450256",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "530b47af-1700-49ab-90a9-0cb35a375f9d",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbc0f755-693b-41a1-b0c2-1cbc1a49c102",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02c7db89-6411-46ad-acea-d92d8f303627"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f03408b-9be5-4c51-9dc3-d2f9aea1daf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4b0f4a2a-fe74-47f9-94a2-9ef959776f12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6591b1cd-7383-48bf-a417-1784e8e03392",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a52f2c1d-013b-4502-9da1-77ef8cdd7ea7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "c4f5531d-f093-4c88-811a-5b9dbe70751f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7977eee1-63e0-4bdd-a825-b60a42a29377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d17edbb2-47dd-4d70-8897-70551a74566e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e04bd05d-21c9-4714-a271-481ca579ceb9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e57a12b2-585b-4e2d-b3a5-b301b7f60754"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "df23b2f2-c308-4aa8-8d43-6f92c16dceae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0ed617c-225d-4d14-af6d-a168dbf58a86"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f16f6658-55d5-46cf-9fb5-30c5d0309b2e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8063b4eb-2eaa-447d-8cf4-0f4475e572e5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8cf51963-19ab-4be6-86bc-ea92648bfd8e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d131afca-32ed-4eae-a869-d2c39431f9b6"
            }
          }
        ]
      },
      {
        "id": "94844b3c-2b4b-443c-8af1-de3422d1fe03",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "2bf9b993-45bb-4873-bf2b-8e2e7452e1ee",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f7d43efe-db52-4c50-a1fc-4f540c210a38",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "01730cd9-bce4-4497-a29e-359c852aed8c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16c7da9-1ead-4205-a756-54696bbb8055",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d8bbc950-9cce-4f75-9b09-8e6970ec129d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e3400a-7b57-4f5c-a402-c89cae115aaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d098e5c8-af00-488f-be3f-a052ceab3894"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb64dfb-2695-4e9b-ac0e-c2b5fe7e199c",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e753934c-7f6b-4714-986f-1ce3c2c73514",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "e41204a9-4b60-45e9-912f-6b31690d9dfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da47344c-a07c-481b-9f2f-6ffbe14992bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "82557294-e57c-464d-8834-c23a2f09237f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e843d80e-5a25-4bee-9ed5-9db4d00c14ef",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3f1c7a15-5c46-400b-b515-b0993dbc048d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0b2a06b1-4bde-4584-9308-e228abf4dc36",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "28b5e9f4-3739-4bae-90aa-20e48c93a814"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "361526a7-ebd4-471e-9e11-233f0566e0fe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3d62b038-1d1d-447e-aa08-2b54b9849838"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bb4a59df-845c-467d-9768-ea09f0b6ca3d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71ad34d4-732e-4972-b0e8-98e4b13c1fa9"
            }
          }
        ]
      },
      {
        "id": "fba1364d-ad72-445b-a8f5-c5f8d8d38c16",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca54d9b6-0ae3-424e-aec2-b893336c7ef7",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b72dadd9-6a9a-4c5c-94a4-465fcc30be22",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "503690e2-cbe7-4823-9191-3d118a00e5f1",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2a84f7d2-cca8-4ca9-b02b-0351e1f96390",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "60721701-3fda-4e22-9af7-9ce4992f3291",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 70.21923076923079,
      "responseMin": 6,
      "responseMax": 341,
      "responseSd": 29.748077109554103,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1683679004432,
      "completed": 1683679035228
    },
    "executions": [
      {
        "id": "469197df-e92f-4e68-b6f7-de940999d795",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "65b7ff42-9f77-4e84-af8f-0024eeef73cb",
          "httpRequestId": "c6228d84-a153-4391-bf58-83c0d48117b2"
        },
        "item": {
          "id": "469197df-e92f-4e68-b6f7-de940999d795",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "567cf078-155a-4125-97b4-acc4af5a6315",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 0
        }
      },
      {
        "id": "58109439-5d33-4821-90e7-14654772ec36",
        "cursor": {
          "ref": "5588f2ca-e498-4847-a701-b81535fe3be8",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3ab501cd-516d-4cbe-af38-f0a04945dabc"
        },
        "item": {
          "id": "58109439-5d33-4821-90e7-14654772ec36",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b241b2a2-bf21-410d-8c2b-9fce4281bf2f",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "12b3d49f-a88e-4ffb-b5c4-b6bdf90c376c",
        "cursor": {
          "ref": "9b75f441-9ed4-41ba-a490-768ba2638bf1",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "38a6487e-ca50-483c-adb5-ea4ffe2cd0ee"
        },
        "item": {
          "id": "12b3d49f-a88e-4ffb-b5c4-b6bdf90c376c",
          "name": "did_json"
        },
        "response": {
          "id": "3ac503c2-a45f-47c7-9475-fe52e6469758",
          "status": "OK",
          "code": 200,
          "responseTime": 216,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a55e85c-133d-4fa0-b10e-d88d7a7da9f5",
        "cursor": {
          "ref": "a30943a6-405f-4f77-b11e-b55df97959c6",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "db2fe870-6b0a-42ec-9023-44f364daea22"
        },
        "item": {
          "id": "3a55e85c-133d-4fa0-b10e-d88d7a7da9f5",
          "name": "did:invalid"
        },
        "response": {
          "id": "fbb892a1-52bf-4c4c-9b4b-41872cdb1ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a55e85c-133d-4fa0-b10e-d88d7a7da9f5",
        "cursor": {
          "ref": "a30943a6-405f-4f77-b11e-b55df97959c6",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "db2fe870-6b0a-42ec-9023-44f364daea22"
        },
        "item": {
          "id": "3a55e85c-133d-4fa0-b10e-d88d7a7da9f5",
          "name": "did:invalid"
        },
        "response": {
          "id": "fbb892a1-52bf-4c4c-9b4b-41872cdb1ff3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79a65d04-e32e-4f05-95d0-b09275c21007",
        "cursor": {
          "ref": "fb196e45-4aa4-4861-a38d-55b0e9731131",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e8ca5dd5-7acd-49e4-b557-da638a552ca9"
        },
        "item": {
          "id": "79a65d04-e32e-4f05-95d0-b09275c21007",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0c5cfe37-fc91-4fd9-b7ce-067324b344be",
          "status": "Not Found",
          "code": 404,
          "responseTime": 115,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6a6f69c-fad8-49ef-bd2a-28d8b0239a03",
        "cursor": {
          "ref": "f8211b26-c8c9-4f4f-b98f-9e73854e4635",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f8020e05-e1fc-49ab-ab78-ac0cef1c7936"
        },
        "item": {
          "id": "c6a6f69c-fad8-49ef-bd2a-28d8b0239a03",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "132646a5-b143-4f75-8d98-f66d99f86be9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94edf5e2-cfe6-4855-bbf2-975a918d972c",
        "cursor": {
          "ref": "46c1bb42-4020-41a9-b38f-5ff89d21e5e3",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "364212de-bed2-4765-aba6-0172d6ed4ebd"
        },
        "item": {
          "id": "94edf5e2-cfe6-4855-bbf2-975a918d972c",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "5f1f982e-645c-48df-be54-b121558fcf24",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f5d074-5fa4-4fd6-8be4-031fcb36414b",
        "cursor": {
          "ref": "d84ae893-a104-4a50-a8c0-b260d9eb5d2e",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0acb3a3f-6693-4559-960f-2080adac0429"
        },
        "item": {
          "id": "80f5d074-5fa4-4fd6-8be4-031fcb36414b",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "ae5d036b-a0d5-4bc6-a02b-1e51db8269de",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 66,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f5d074-5fa4-4fd6-8be4-031fcb36414b",
        "cursor": {
          "ref": "d84ae893-a104-4a50-a8c0-b260d9eb5d2e",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0acb3a3f-6693-4559-960f-2080adac0429"
        },
        "item": {
          "id": "80f5d074-5fa4-4fd6-8be4-031fcb36414b",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "ae5d036b-a0d5-4bc6-a02b-1e51db8269de",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 66,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f38143f-eda2-439e-81d1-b24a57098996",
        "cursor": {
          "ref": "2643a3b6-8236-40a7-9521-1b79322b1afc",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5bbce441-0305-41f2-8afb-e9f18c9933da"
        },
        "item": {
          "id": "0f38143f-eda2-439e-81d1-b24a57098996",
          "name": "identifiers"
        },
        "response": {
          "id": "3055d8bc-b0d1-44ee-939c-38ab80f280a6",
          "status": "OK",
          "code": 200,
          "responseTime": 99,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5817cdd9-4280-48d1-be81-807b417f59ed",
        "cursor": {
          "ref": "d02476aa-10b0-4678-baa4-c8d3a03fc653",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "439e4f79-138f-4405-9e46-324646a68aad"
        },
        "item": {
          "id": "5817cdd9-4280-48d1-be81-807b417f59ed",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "91e0951e-1972-498c-acf4-6771b86742c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5817cdd9-4280-48d1-be81-807b417f59ed",
        "cursor": {
          "ref": "d02476aa-10b0-4678-baa4-c8d3a03fc653",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "439e4f79-138f-4405-9e46-324646a68aad"
        },
        "item": {
          "id": "5817cdd9-4280-48d1-be81-807b417f59ed",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "91e0951e-1972-498c-acf4-6771b86742c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4850a0a7-3ec4-4ad5-95ff-b095a07df2d7",
        "cursor": {
          "ref": "6df93c31-2a1c-4279-8e54-d93b02ffff5d",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "01c2c6ed-40e3-47d2-8678-c24d8e313167"
        },
        "item": {
          "id": "4850a0a7-3ec4-4ad5-95ff-b095a07df2d7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "69aeaa43-7f81-4644-9581-eb239e806389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff08af69-0d18-4fb5-81a5-ae4d8b866823",
        "cursor": {
          "ref": "5f950e01-c1f4-47ec-93ef-f8bb8d13f4b2",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "14b50e4d-d150-493f-8bbc-3f66807b708e"
        },
        "item": {
          "id": "ff08af69-0d18-4fb5-81a5-ae4d8b866823",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "72fe22bb-6f00-4214-8d89-7ee717c3ff2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19129ff4-4c54-4a7d-9cf6-42e1cd5df01d",
        "cursor": {
          "ref": "7efe52d3-438f-4306-ab35-e72d8e5c11c0",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f95ffb9c-e468-4d4e-ad7d-da10bee24a5a"
        },
        "item": {
          "id": "19129ff4-4c54-4a7d-9cf6-42e1cd5df01d",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "e287ff4d-e349-4588-9553-e7e6ac77056a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ddd3db-e492-4562-986b-a10e68b777bd",
        "cursor": {
          "ref": "74caed78-c316-415b-bfa3-a42c8e44c4a8",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8f87370e-bf9c-4411-9a9e-8470a2ed17b6"
        },
        "item": {
          "id": "07ddd3db-e492-4562-986b-a10e68b777bd",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5a4a59ea-d85d-4c81-a699-9ab6160b6b7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cf38ba2-d9d8-4f97-975a-de4092a6ea77",
        "cursor": {
          "ref": "dbfb9706-1285-4fb2-be45-a17b21e89c3a",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b268f4b5-641c-4828-9d4e-3ef06aa3eeb9"
        },
        "item": {
          "id": "0cf38ba2-d9d8-4f97-975a-de4092a6ea77",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "bf38696c-2cad-4cbd-a182-9b8a212f1ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837618ff-5e22-4854-9b2c-728562eff59e",
        "cursor": {
          "ref": "b19955c6-c992-4ce9-839b-77bf7981988a",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7592d356-c1c6-4e60-a5d9-893e45539f1a"
        },
        "item": {
          "id": "837618ff-5e22-4854-9b2c-728562eff59e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "1ad6f3ab-87cb-4fc4-9156-aad46844a6d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc3d085-8fde-4500-8646-363193c19af1",
        "cursor": {
          "ref": "fc0e0321-5a59-4e29-a3d5-49f3655a8224",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "9b8f5315-6b58-4f10-83cd-5889d4bb60a9"
        },
        "item": {
          "id": "6dc3d085-8fde-4500-8646-363193c19af1",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "b39d78cc-58c8-4041-9b0b-5d91424190f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db09510c-217d-4867-8a73-4dadbdcb72b9",
        "cursor": {
          "ref": "6ce05d8f-9861-42dd-a166-349012b689f7",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e15d78b3-2f8f-4a9b-8b89-90c8000002b6"
        },
        "item": {
          "id": "db09510c-217d-4867-8a73-4dadbdcb72b9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "4086bd48-cbac-45da-8630-7de460233ac6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "582615b4-9ff9-4445-aca6-ba09de017c50",
        "cursor": {
          "ref": "1b2e9819-f569-425f-9382-c914e5960cc7",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4cbee896-2019-4c37-902b-6ceb284695d6"
        },
        "item": {
          "id": "582615b4-9ff9-4445-aca6-ba09de017c50",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "158fa96d-d808-4d97-bf26-8cb0b09c3278",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07bc6b82-73ee-4e96-834c-1304ab75f196",
        "cursor": {
          "ref": "673392b8-881b-4067-9a8a-c2de2d1b2562",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "4e4bb8b1-004c-4e7a-aa9d-db295ea65916"
        },
        "item": {
          "id": "07bc6b82-73ee-4e96-834c-1304ab75f196",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "db12bfa3-704e-4077-8298-e1ee79546462",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64bfb693-92e3-409c-ab82-bf1e00eaec9d",
        "cursor": {
          "ref": "f7532bfd-2e50-4fb6-b8c2-f5ffbc5f1e6e",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f8946188-ef37-47c5-af66-f42c69b92ebb"
        },
        "item": {
          "id": "64bfb693-92e3-409c-ab82-bf1e00eaec9d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f689cc67-05c1-4d9a-9c25-6497eabb51aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84bef295-f226-4774-a692-655c30748bde",
        "cursor": {
          "ref": "e8d91989-3566-4539-aa0e-6984d05b4139",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "17669cc1-ef55-493a-af31-962cea686e61"
        },
        "item": {
          "id": "84bef295-f226-4774-a692-655c30748bde",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7d1ebc41-4f43-4f0b-a6dc-8b23d503e703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9d09c38-7a17-4480-86ee-a7ba0e559211",
        "cursor": {
          "ref": "e0d44571-932f-4368-91ad-1c287df1d422",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "a60c748a-3a13-4e22-bdd5-1f3b30f65e4d"
        },
        "item": {
          "id": "a9d09c38-7a17-4480-86ee-a7ba0e559211",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "bce94acc-25f8-4ed9-af52-ee53e4b6d4a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e1f407-00e6-43be-a9da-85cb0b8ac698",
        "cursor": {
          "ref": "19a6ee5e-18e0-4297-8abf-89b9edea9343",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "ce86f3f5-f230-4992-9bf4-45a26a0b77c0"
        },
        "item": {
          "id": "86e1f407-00e6-43be-a9da-85cb0b8ac698",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c88ec15b-38c0-4bc0-a4bd-5d3a0e9d2225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eeb0190f-0ccf-4fbc-9492-ccd9b9e938da",
        "cursor": {
          "ref": "ac44dda3-044c-4d8c-9260-d4270d504658",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "266868d6-8f09-47e8-a47c-e1014002533b"
        },
        "item": {
          "id": "eeb0190f-0ccf-4fbc-9492-ccd9b9e938da",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "709b573c-6597-406d-a048-3dddf920b678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b3951b4-42ff-4eec-95bf-6a6529a241ed",
        "cursor": {
          "ref": "92769dec-4dbc-4752-a7ad-ca366fb35e42",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "b601062b-fbc9-437a-a504-e4b780601331"
        },
        "item": {
          "id": "1b3951b4-42ff-4eec-95bf-6a6529a241ed",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "c756fa2b-5cd2-4859-8ef0-8e774346b3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1410a49a-27c1-4910-b076-46fa06a8d4cd",
        "cursor": {
          "ref": "f063bcd7-ed38-4b5d-a9b1-87bbbf8e7b92",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "71788a42-0515-47d8-9f99-7427b00ea325"
        },
        "item": {
          "id": "1410a49a-27c1-4910-b076-46fa06a8d4cd",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "5c8d0523-724d-4c95-8b52-c4396d2629cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5303ea73-3a8a-4052-94b0-bf5aab53dc9f",
        "cursor": {
          "ref": "ca44da1e-6205-426c-b9d3-6f2414e001a4",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "452eda97-1738-4374-ad36-29d29eb9da78"
        },
        "item": {
          "id": "5303ea73-3a8a-4052-94b0-bf5aab53dc9f",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "37055605-9486-48da-9e08-29be0597a969",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ab6b166-a32f-4763-97e5-f5666d442c66",
        "cursor": {
          "ref": "b5bfc19e-d250-4f43-ac54-465d4686e289",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "1c675039-fbd9-4a79-9758-81d0d13b22bb"
        },
        "item": {
          "id": "7ab6b166-a32f-4763-97e5-f5666d442c66",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5bb4817c-95fd-4463-b93c-d910aa7808fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec91c440-4637-40bb-8df3-c4a36d87bd0b",
        "cursor": {
          "ref": "502f566f-a833-43bf-9b87-d5a2ab0adafb",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "f4ce1ebd-5cff-43a2-a074-65fe68499e4f"
        },
        "item": {
          "id": "ec91c440-4637-40bb-8df3-c4a36d87bd0b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "2e9a78a8-2861-4e5b-9399-213b5f90804d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ff9dc36-fa48-4b2a-b35b-2e8a2d89e1c2",
        "cursor": {
          "ref": "9d95babc-6af2-4503-891b-52ce7f4d404f",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "3d1c69b5-d3f1-4e33-8bf3-7e6c87534efd"
        },
        "item": {
          "id": "0ff9dc36-fa48-4b2a-b35b-2e8a2d89e1c2",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b7559c8c-f843-4edd-b77b-1092ab3a1bc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99fae4ad-7ece-4846-94f2-2c3ccba00156",
        "cursor": {
          "ref": "741b5844-4314-4c87-b9e4-d6c3b19b5ee3",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "36fce38d-38be-4257-b8e0-dc23c0fe4a78"
        },
        "item": {
          "id": "99fae4ad-7ece-4846-94f2-2c3ccba00156",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "029700cd-ca8f-4932-84da-4a77aa117b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d2435a-e61e-4b96-85e4-07c72dc8f24a",
        "cursor": {
          "ref": "ed15fe60-5760-4eae-b6b5-de4cc0c9e9dc",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "70a84b38-f22f-45fe-ad29-293862b7f0c5"
        },
        "item": {
          "id": "46d2435a-e61e-4b96-85e4-07c72dc8f24a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "4626e21e-965e-4d65-a159-e90a3d040f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d034a20-0c0e-46a8-9b2a-4d24840d6428",
        "cursor": {
          "ref": "7ea26e9b-0e4e-4c33-9f94-f725084e5971",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "03f05c02-489a-4a5d-b357-7a8c86028846"
        },
        "item": {
          "id": "7d034a20-0c0e-46a8-9b2a-4d24840d6428",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "b8f06005-053d-4fdd-80a6-c2a14406c3c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9676ef7-0c5c-4d93-a47e-3af5066de4c5",
        "cursor": {
          "ref": "327803f9-9da9-4d80-ac93-0f16fe35c9d2",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4497f582-f16b-4831-9eec-0d31c40f8695"
        },
        "item": {
          "id": "d9676ef7-0c5c-4d93-a47e-3af5066de4c5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "bc6d4f6a-8c84-4b49-98b7-69d74ef1fa89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d092218c-e79e-4ac7-8338-2c068f01e0ef",
        "cursor": {
          "ref": "74f9a6b3-7c8a-495e-9a18-988f5ed1a347",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "8c30fdea-b947-4a0d-955a-611cefe7dd06"
        },
        "item": {
          "id": "d092218c-e79e-4ac7-8338-2c068f01e0ef",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "22fac7ad-644d-45db-aed0-d36d571b5270",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd43e3f6-6b63-4138-b9bb-38c557b71b6a",
        "cursor": {
          "ref": "d6ba8732-4dd9-46d1-8c6a-b99828edbb0f",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "83cbd8f5-fd2c-467b-a87f-41f095305f0d"
        },
        "item": {
          "id": "bd43e3f6-6b63-4138-b9bb-38c557b71b6a",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e32632c4-2d30-41ac-b43c-e9f09bb77fa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8f17a9b-c70b-4d2e-bb93-e41594d633e4",
        "cursor": {
          "ref": "0c0a36a8-3694-40fa-b8af-50daf9d5575f",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "c064b367-cec4-48d9-8c87-ad5a1195e144"
        },
        "item": {
          "id": "c8f17a9b-c70b-4d2e-bb93-e41594d633e4",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "dd66505f-7bf0-4160-89a8-8b66ddf08940",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece7a9c9-f3ce-4a95-88de-c32fb7574b2d",
        "cursor": {
          "ref": "4a2efbd3-dda7-466a-b87a-6fa70e552054",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "df2d8a75-bdd6-46d1-8017-be7c4bca0c18"
        },
        "item": {
          "id": "ece7a9c9-f3ce-4a95-88de-c32fb7574b2d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "7bb262e4-3a97-4a04-921f-2f7032704eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7927996c-78c5-49ca-ac46-959aa1a83f2c",
        "cursor": {
          "ref": "96f7a4c0-f7a9-4f06-b5d3-4e9c2ea0e9ff",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8e3000a4-772b-4295-8be7-7b603485976b"
        },
        "item": {
          "id": "7927996c-78c5-49ca-ac46-959aa1a83f2c",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9e3eb93e-8550-45dc-b59c-8393fdcd300f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69abc122-d19c-481a-9caa-544c756771eb",
        "cursor": {
          "ref": "a191c8f7-b4b8-4fb8-a63c-9fe2c134403b",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "897b7ef7-1fc0-45aa-b7ab-5c23c5c7ee97"
        },
        "item": {
          "id": "69abc122-d19c-481a-9caa-544c756771eb",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "ecc4252a-765f-4d87-8edf-f3eb14065403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "965d287c-f71c-4de0-9665-50a2f15e0c3b",
        "cursor": {
          "ref": "ef8cab38-cc5d-4d77-b018-d3ebc21f2c63",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "aa631949-d136-44ce-aa22-710560c70ec5"
        },
        "item": {
          "id": "965d287c-f71c-4de0-9665-50a2f15e0c3b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "8dc2863d-a555-426f-9c57-b557b5371716",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc578bbe-ed8e-44cb-aba1-45201b8da46b",
        "cursor": {
          "ref": "9278d3b8-8b33-453b-bad0-798b68116ca1",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "99f77424-1693-4d28-9b43-0f4ffe7ff4f4"
        },
        "item": {
          "id": "fc578bbe-ed8e-44cb-aba1-45201b8da46b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "d7030466-1bfc-40de-b9f3-76429ae5bd29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b35c1b1a-815b-42d6-8d9c-ab2910510747",
        "cursor": {
          "ref": "68c35afa-e769-4586-9fa2-889765cd9d5a",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "a7dfa801-5ba3-404a-b0f6-bfa49c1474ed"
        },
        "item": {
          "id": "b35c1b1a-815b-42d6-8d9c-ab2910510747",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "37d5dde3-8189-4d72-9ac8-2253893319be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c815758c-1757-4fd0-890d-65f2bdd042f9",
        "cursor": {
          "ref": "a1eef7c8-3240-4f25-bad1-28cd66c2e7ac",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "2c3eaa5c-7ded-4ee8-a777-696157dfdcf9"
        },
        "item": {
          "id": "c815758c-1757-4fd0-890d-65f2bdd042f9",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "5f334413-8ff9-44ea-9225-fa97662e9019",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 74,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191f3b00-89f5-4708-acec-5f8f4f94a88b",
        "cursor": {
          "ref": "b302273a-cce4-4398-93ec-afc449fc0ebb",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "1e371fb6-ea62-4978-98da-39c5c946bfac"
        },
        "item": {
          "id": "191f3b00-89f5-4708-acec-5f8f4f94a88b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "fc599180-9aee-4513-b5c9-0e9423b8465f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1d551a-4a5f-4f0a-81f7-ac115014300f",
        "cursor": {
          "ref": "e2a8e3e9-a715-4ee4-a61a-0e7d3ec38a82",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "a17117f9-3227-40e7-b587-60c8f2dedfb2"
        },
        "item": {
          "id": "ac1d551a-4a5f-4f0a-81f7-ac115014300f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c93e1f6c-54d7-4276-a580-b72125b336a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06a2813-c4d6-445d-a20e-0850a0a355f1",
        "cursor": {
          "ref": "14107cf3-16da-4297-8e8a-6d976ed12eb5",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "3fda6248-8597-4742-870c-24429444f7b2"
        },
        "item": {
          "id": "f06a2813-c4d6-445d-a20e-0850a0a355f1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "d40696fe-fbcd-478a-9fe3-9fa145036387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceacc8f3-5335-4809-b17a-4fb5dca2b056",
        "cursor": {
          "ref": "7e80d842-7948-4470-a8f7-000d775fc099",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "dc4b9c6e-8804-463b-9cc7-079c1f5d0b6c"
        },
        "item": {
          "id": "ceacc8f3-5335-4809-b17a-4fb5dca2b056",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "01f85b1f-a9b1-4b47-948f-771f51878dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025ec706-fe83-4ea8-bc42-a1d9ef6c1f64",
        "cursor": {
          "ref": "b060fef2-fe98-40a8-aa51-29be234236e3",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "5cfbad76-1b47-49ed-935a-a44396770063"
        },
        "item": {
          "id": "025ec706-fe83-4ea8-bc42-a1d9ef6c1f64",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5bf7943d-3a41-4bf7-bca5-9b51a18addc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdb8fa82-4489-44e2-b2f8-383a1c25491d",
        "cursor": {
          "ref": "0ef95df2-ae25-42ed-82ea-5fb056e53974",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "18e420a4-2831-4ae5-b6ca-74a1e5485445"
        },
        "item": {
          "id": "bdb8fa82-4489-44e2-b2f8-383a1c25491d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "40dd7ea3-e5fb-4a38-bd0c-50baf3230bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dda0952-759c-43d3-8128-b29c987d2e2c",
        "cursor": {
          "ref": "8abf2683-5b54-401d-ae19-fe543ff50a6a",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "882e4037-cd0b-4ce5-ac83-b35fc42d8164"
        },
        "item": {
          "id": "2dda0952-759c-43d3-8128-b29c987d2e2c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "ca0886be-dfc8-4ac7-af17-19e5a773be80",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 72,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd593efb-1628-4dd0-97d8-e0f30bdc9f1a",
        "cursor": {
          "ref": "3fd8decd-a398-4937-977b-4261689566a9",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "a757a96b-4409-4c16-8099-6cd6e255ef91"
        },
        "item": {
          "id": "cd593efb-1628-4dd0-97d8-e0f30bdc9f1a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "96414c84-2506-4812-943c-27d7c2e89efc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bcf53bc-9517-4fbb-995d-059a180b4b1c",
        "cursor": {
          "ref": "e54aceff-6b87-4f1c-a3cf-5cd80f505374",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "6d818819-a326-487a-b167-70570f13291a"
        },
        "item": {
          "id": "5bcf53bc-9517-4fbb-995d-059a180b4b1c",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1e7dca89-d2e6-4317-8b91-1ecca2fcc0ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630606d5-be52-4e12-b84e-0bea68559b93",
        "cursor": {
          "ref": "a4b2ed1e-2eac-4e3c-b2b7-f730d65a95f7",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "552552f4-f2c8-4998-8100-49f0b24fae0f"
        },
        "item": {
          "id": "630606d5-be52-4e12-b84e-0bea68559b93",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "284f50c7-cfa4-437c-bb97-516578f03194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac976a9c-6f92-413e-83e4-5364ea6ce33f",
        "cursor": {
          "ref": "6b15ea42-a681-4d4c-8ecd-8bd1d2718cee",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a57bc599-3f72-42d8-b720-73183547ef98"
        },
        "item": {
          "id": "ac976a9c-6f92-413e-83e4-5364ea6ce33f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "b72a3733-9463-4d3b-afe0-5b4a3d5553c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e489fdb4-9d49-4b32-885a-8632790e4e52",
        "cursor": {
          "ref": "9a2f84a0-718b-493a-8aac-0a5130c8329e",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "bb977bea-61e4-48f0-ba06-2ebc73976567"
        },
        "item": {
          "id": "e489fdb4-9d49-4b32-885a-8632790e4e52",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8ee8f1c8-77dc-4f59-a3a5-777cc1c61ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8256d0ee-5375-429c-bd21-7f2467f53dfc",
        "cursor": {
          "ref": "4df86122-21d4-40ce-a1a1-73d056185e87",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "f298a40d-5bcd-4369-a2ae-b16dd070ec91"
        },
        "item": {
          "id": "8256d0ee-5375-429c-bd21-7f2467f53dfc",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "b6dc24ac-875b-4071-88a1-3cb3eb98d6ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d73a61-662b-4401-8653-e0e3a1f01918",
        "cursor": {
          "ref": "cef2c62b-9fe5-48bc-b409-b8da23b721c3",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "e3115ea8-88d0-4eb9-ad03-106752bba855"
        },
        "item": {
          "id": "16d73a61-662b-4401-8653-e0e3a1f01918",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "74970134-eac2-4c0b-a581-5238d7967cd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3496940-74e9-4ad7-9020-9d73ddaf8aee",
        "cursor": {
          "ref": "be2b7fa4-bed4-43d3-b25d-8d581eff05ce",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "132b77cc-9771-410f-803b-5972cff4b902"
        },
        "item": {
          "id": "e3496940-74e9-4ad7-9020-9d73ddaf8aee",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c28bb7eb-8e42-4890-ae67-93a2bb679280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28df9e6d-7ed2-4b35-8a1f-0acef64bd3ef",
        "cursor": {
          "ref": "299e2ca0-5cf6-4a35-b784-c1d011b45f96",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "ff6f6c12-ed0f-4670-8f85-2f802acc893c"
        },
        "item": {
          "id": "28df9e6d-7ed2-4b35-8a1f-0acef64bd3ef",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "1e693813-d42f-447e-9ed4-243e29eca995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49790a77-3347-4080-a6bf-5dc7b61e6e1b",
        "cursor": {
          "ref": "09ae0343-fef4-4f77-b58a-d6c37a34bd94",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "50ee3c94-dd92-4fc5-86c0-9c002d217165"
        },
        "item": {
          "id": "49790a77-3347-4080-a6bf-5dc7b61e6e1b",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c8f7daaa-c4ae-499c-804b-2f2662f3d466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ca99be-f60e-4f33-8ef2-8ecdf9a51a42",
        "cursor": {
          "ref": "34449fdd-b64a-4dcc-8d70-2d828dc9c416",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "29217326-9894-4433-ae5f-c9a0dce52b4a"
        },
        "item": {
          "id": "52ca99be-f60e-4f33-8ef2-8ecdf9a51a42",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "7b93df11-45ed-4525-bff5-917a99cf3da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "950d1589-b735-4757-bcc0-45d2e3cb5f45",
        "cursor": {
          "ref": "c5a0d0a3-707e-4a02-89ba-42a84a5f7621",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6e64700b-1916-40cd-bdca-c4d3b466f3ce"
        },
        "item": {
          "id": "950d1589-b735-4757-bcc0-45d2e3cb5f45",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0c1a6a02-cbf3-40cd-9cca-4397dd00c39e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dad3767e-576d-42fa-9f11-70e2b610844d",
        "cursor": {
          "ref": "3613f980-c725-4262-af2a-e0704f521097",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7d6c0b74-9231-4e07-b4dc-a7cb0b52b0e2"
        },
        "item": {
          "id": "dad3767e-576d-42fa-9f11-70e2b610844d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b6f9a9a8-4eea-4e6a-81cf-5018aea9329a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f18cb7d-1051-4bcb-bb9a-829452d05255",
        "cursor": {
          "ref": "cb357a1f-2051-4676-9426-b47111cae3fa",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9edc69da-f93e-4cc5-b1d3-2a8e4a2722a3"
        },
        "item": {
          "id": "2f18cb7d-1051-4bcb-bb9a-829452d05255",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6049baaf-f400-4517-84ec-450f94411463",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1280e405-654d-4f33-b8aa-f474d6cdcb3c",
        "cursor": {
          "ref": "e804e86f-49df-483b-8bae-b446c248c774",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ddcb6fbd-1dbc-4693-8071-626a7c8168ee"
        },
        "item": {
          "id": "1280e405-654d-4f33-b8aa-f474d6cdcb3c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c2dcadb5-7772-4c76-b689-ae22ee1e5023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7f7121b-d0df-42a3-b82c-3d30a23a6258",
        "cursor": {
          "ref": "7efd5c6b-06b2-4baa-914b-c001432ff5fd",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "3bc50985-823f-4020-b299-bc3cb0aa8dc7"
        },
        "item": {
          "id": "a7f7121b-d0df-42a3-b82c-3d30a23a6258",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "43b8f2d4-74cd-49af-aa17-9a048ba6fb9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77fde9a4-6a3a-4122-823b-4d11c7eb45bb",
        "cursor": {
          "ref": "44f44030-dd93-4833-88ad-304046147789",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "dfe9bd4a-3f39-47f7-8c21-6b9d47237719"
        },
        "item": {
          "id": "77fde9a4-6a3a-4122-823b-4d11c7eb45bb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "0fd11cac-043c-4cfd-80d6-ff9a3c71c498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc18046c-daf0-441c-9d94-5d303d83a227",
        "cursor": {
          "ref": "ca3cd73f-79a8-4a0e-8d9f-c8d37b7bbe04",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "9b59f585-ea90-40ff-bd62-313a01437d1d"
        },
        "item": {
          "id": "fc18046c-daf0-441c-9d94-5d303d83a227",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c3e9764c-54ee-45b0-b87f-8f44eebbed51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976f5d27-7af7-4b4e-a8bf-1c24cf4eac2d",
        "cursor": {
          "ref": "7f22b33f-53ce-403a-8dad-cc4e75a012df",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "92fa9ee0-fe7f-4729-bfc6-dd41e3f93273"
        },
        "item": {
          "id": "976f5d27-7af7-4b4e-a8bf-1c24cf4eac2d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "2974901a-3ea3-4f06-a586-ee7fe0637642",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b6713a5-67f3-4050-a331-904c80096167",
        "cursor": {
          "ref": "8477cbab-7107-4651-ba8e-aa2b3ccb8f02",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "13283e72-2646-4ccc-99d7-7955952b824b"
        },
        "item": {
          "id": "9b6713a5-67f3-4050-a331-904c80096167",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c4a8595f-4c16-41b8-aca6-a351e5afcde3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "274604bf-90c0-4f58-824c-37b2e2009239",
        "cursor": {
          "ref": "7cdbb271-6cff-467b-9714-2ae3cd182c5f",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b22f0231-86bc-4bb7-a4f3-983f05842130"
        },
        "item": {
          "id": "274604bf-90c0-4f58-824c-37b2e2009239",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "59997c53-755e-48d2-b63a-e8b5298b94f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1745aea-0ba1-46f1-b745-dda7165d506e",
        "cursor": {
          "ref": "971b1a69-4ce2-4dc4-8be4-ec555cddf607",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "85bd970e-8043-40f7-82a3-c76dcb311dbb"
        },
        "item": {
          "id": "f1745aea-0ba1-46f1-b745-dda7165d506e",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "57481e32-b9e0-42ee-bafc-1bacf29d170e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09c6a6d0-b0b9-4d51-beb9-aa567b9ae3ec",
        "cursor": {
          "ref": "ddfb7540-d818-44f5-889f-a4bba9f58651",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "882f1fa1-15af-4ba8-9c71-4a4c061beb3c"
        },
        "item": {
          "id": "09c6a6d0-b0b9-4d51-beb9-aa567b9ae3ec",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "d6189cf1-e477-439e-97af-f8bdea14d06f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f733075c-9131-49d6-921c-3ed4405cdea3",
        "cursor": {
          "ref": "b1b830b4-9440-4f95-9c06-6e47683faba1",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "9f8545a3-8e8e-4bd9-8942-5452db202400"
        },
        "item": {
          "id": "f733075c-9131-49d6-921c-3ed4405cdea3",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1f7dca48-bb2b-4f80-a5ed-2152c0f3f593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e61d46-04cf-40e2-9f5e-a6600cb00d48",
        "cursor": {
          "ref": "14067082-9a7e-4a22-99e1-3a27f1f932ba",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "56696f73-87fe-454a-b801-45be58efbd03"
        },
        "item": {
          "id": "f7e61d46-04cf-40e2-9f5e-a6600cb00d48",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "e01809cd-3930-4e93-a877-cb6ae6433bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a03d27-6a6b-4b11-8457-31f55331bae3",
        "cursor": {
          "ref": "6853894e-18d2-4cb6-8e5f-ec55f23a471b",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "72f8fc44-0f38-470a-a4c5-f4126402dd80"
        },
        "item": {
          "id": "55a03d27-6a6b-4b11-8457-31f55331bae3",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "635441a3-bf5c-4780-bda7-4f356580822d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4093066f-68fd-48d9-9b72-9bb838a81413",
        "cursor": {
          "ref": "06a01baf-b81d-4048-b496-57e97636bb15",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "2e957686-7a19-4da3-b080-093e50b75366"
        },
        "item": {
          "id": "4093066f-68fd-48d9-9b72-9bb838a81413",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "1236eda6-aa5b-4225-953d-a3290b617e11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d32f9d8d-6497-4864-8e5a-b6a9d1926340",
        "cursor": {
          "ref": "40a69689-d85d-4850-b3f7-e589b1f29956",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bdd1c6a1-459f-4c05-846c-3bec55f589ff"
        },
        "item": {
          "id": "d32f9d8d-6497-4864-8e5a-b6a9d1926340",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "9e5d3cc3-1927-4d2a-8979-7f818dab5848",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0decb68-4261-4802-9b7e-8d4bd76c5da0",
        "cursor": {
          "ref": "cb383ff7-d34f-440d-828f-ba01b4478084",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "ca69a3c9-9bb3-4ff0-8c43-457e4a231c2b"
        },
        "item": {
          "id": "e0decb68-4261-4802-9b7e-8d4bd76c5da0",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "bd9ba342-a400-42ad-b8b0-20f215537436",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0ffc8e1-9706-4d25-976d-ad40d0bef52a",
        "cursor": {
          "ref": "a895c6a9-3827-4882-89aa-f72a8a30913a",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "0795b5cd-6b99-4672-9746-d3cbac7c349b"
        },
        "item": {
          "id": "e0ffc8e1-9706-4d25-976d-ad40d0bef52a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "dc655097-8741-45be-bb9f-816a4b5f8e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29bb2ff7-c21c-4683-8296-c5b6129c1eba",
        "cursor": {
          "ref": "81a6a024-aa5b-4e0a-8573-e3f5bbc1ba6a",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "cd4fa414-d986-4c23-8827-ba8bb4f48453"
        },
        "item": {
          "id": "29bb2ff7-c21c-4683-8296-c5b6129c1eba",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "96a3ac59-c205-439d-83f5-b88a97e458df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6da19304-e35c-4f0e-8539-2e9ab63fc43e",
        "cursor": {
          "ref": "38922416-bc6c-47ec-9b2d-99f970f2e1da",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0f84b10e-fad3-4471-9c7c-1774b2ad53c4"
        },
        "item": {
          "id": "6da19304-e35c-4f0e-8539-2e9ab63fc43e",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "0a525993-ec5a-45d9-8c2e-6d71f617bee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ef68905-636b-46e9-978d-cf4b59deaf89",
        "cursor": {
          "ref": "2748d698-e3ad-4c58-8dd0-f95f7b71c1b6",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "aa522dd9-248e-43dc-84a0-a952bb43578c"
        },
        "item": {
          "id": "2ef68905-636b-46e9-978d-cf4b59deaf89",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "229c8a6c-36e1-4154-bd21-67cbedfb9294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f74083-690c-4912-b4bc-63cbb76efaae",
        "cursor": {
          "ref": "572a019f-0dfc-4d98-a283-a06aa5e6f55f",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a4525159-14e7-4234-8597-e6222905ea90"
        },
        "item": {
          "id": "c5f74083-690c-4912-b4bc-63cbb76efaae",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "b6bf3d99-af28-4259-8565-b1f4fa13c121",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a68677a-fca7-4761-8f62-737e9bbf0118",
        "cursor": {
          "ref": "597c26b9-ce46-48d6-89b2-2534a9a085af",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "09253d59-0ba9-4837-a1d6-ccf1298ed27e"
        },
        "item": {
          "id": "3a68677a-fca7-4761-8f62-737e9bbf0118",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "ca2ae483-c8b4-4ddb-b3a2-dece3eac8372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5101df-6ac5-4adf-b520-5f38b7b30b9c",
        "cursor": {
          "ref": "de16f811-1828-43e8-9106-af4fc699a2b5",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "ad10b7a7-68a8-4c17-b796-415942df0460"
        },
        "item": {
          "id": "da5101df-6ac5-4adf-b520-5f38b7b30b9c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d38ccf8d-2536-4a0a-a017-7b2212ed24f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c214458-691e-4f40-9484-f77ca63798f0",
        "cursor": {
          "ref": "4b93caaf-b380-4c43-ae9f-741be1aca7aa",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "e907c7f1-0d19-487b-8cbf-092ca8dcadba"
        },
        "item": {
          "id": "7c214458-691e-4f40-9484-f77ca63798f0",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "0ad8b91e-7c89-469b-9bcd-f1bea07e1a73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283c1422-3b65-461d-b086-6c1557906248",
        "cursor": {
          "ref": "4a7689fc-4791-4b1a-b6a3-1c489736a7d9",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "577d0acd-8698-4fee-bb1a-954db91fbe40"
        },
        "item": {
          "id": "283c1422-3b65-461d-b086-6c1557906248",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "ca902d06-4dea-4c2a-b8cf-67b7d4b6e2ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b3eb70-9b4c-4301-a7af-9a0393e6c920",
        "cursor": {
          "ref": "0980d889-b135-4fd9-b4d6-e4f9faee2992",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a73ca22d-e39b-4566-aa40-e9e30c18dd77"
        },
        "item": {
          "id": "f0b3eb70-9b4c-4301-a7af-9a0393e6c920",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "8e91644f-a8de-4a8b-a8d5-74f9ef30540a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d661070c-73cd-4f55-b37c-8f54c94ab6da",
        "cursor": {
          "ref": "496543b2-7289-45b2-80b8-7aa9f682c3d3",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "ca0cd8eb-882c-49d9-9db7-ebb56a2a2d9d"
        },
        "item": {
          "id": "d661070c-73cd-4f55-b37c-8f54c94ab6da",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1798706b-6fdc-4d64-97e9-1b1e1b07ac4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "364e843c-bfb9-48da-831e-aaa515762d03",
        "cursor": {
          "ref": "ce03b5e4-a055-4dc9-9f8f-bc0eb931ca7b",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "55715ebf-6d56-4170-8868-c7304f7d97e9"
        },
        "item": {
          "id": "364e843c-bfb9-48da-831e-aaa515762d03",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4e2d283b-d61b-4e6e-8974-80d88238c9b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e6aa755-cc68-449c-aae1-b5fee90831b5",
        "cursor": {
          "ref": "8de93e5e-030f-4222-88fc-d5d087cbfa07",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "1d348cd2-34c5-496f-b794-e425d7ea7af3"
        },
        "item": {
          "id": "1e6aa755-cc68-449c-aae1-b5fee90831b5",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "d3f5d6ae-57a2-42b6-bef9-956e46cf5fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef59fe99-b418-449b-91d2-4a1e1cf6e120",
        "cursor": {
          "ref": "e19ba359-8949-4517-ae47-21b13343cbb8",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "ab13e578-6474-4159-ac7a-83da6abc4acb"
        },
        "item": {
          "id": "ef59fe99-b418-449b-91d2-4a1e1cf6e120",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "664bc4c2-e4b6-48db-a3c5-1ca13389f498",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a64218e6-77d0-4707-9f98-9467b64c66da",
        "cursor": {
          "ref": "8a8f53f5-f7f8-423c-b8dc-7b73e9b140c5",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "7b519be0-cee5-43f4-bccc-c348d0ebbf1a"
        },
        "item": {
          "id": "a64218e6-77d0-4707-9f98-9467b64c66da",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0d27df9f-49be-47a6-8dfd-ebabaa021710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e943f6b7-ae76-4e18-a034-f702a8d20de1",
        "cursor": {
          "ref": "38e73fd6-88c6-446e-8396-b923b3a4c54d",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "75d36112-d5dc-4bf4-b12c-0a74dffbcca5"
        },
        "item": {
          "id": "e943f6b7-ae76-4e18-a034-f702a8d20de1",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "30a4c699-a5aa-41a3-b2f0-24ac68439bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52bac3b9-773f-46f9-bc5f-2ce2feb0395d",
        "cursor": {
          "ref": "0462a99b-0ec2-4b94-a39b-63c89b1bb770",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "1b09d57c-dada-4360-8889-1e45a000868e"
        },
        "item": {
          "id": "52bac3b9-773f-46f9-bc5f-2ce2feb0395d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f1888c4e-7b23-4be5-afb6-3bdefb29e288",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6337f58-6231-4327-8cea-c8ddf6b0cc72",
        "cursor": {
          "ref": "9b5f3880-7fe6-4151-b71b-3e3ae63a0bd2",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "9cd413a6-f73f-418c-b43c-42a1f37ff14d"
        },
        "item": {
          "id": "e6337f58-6231-4327-8cea-c8ddf6b0cc72",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "fb3d78c1-793d-418f-b813-0ae97804300b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2357a657-b644-4df9-ba0c-44e1757dae64",
        "cursor": {
          "ref": "c04b01b2-09d0-4ece-adbc-0002a02132c1",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "ed80e0c1-d3b6-4166-9e81-53f70349c8e7"
        },
        "item": {
          "id": "2357a657-b644-4df9-ba0c-44e1757dae64",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "3e112cf2-1b02-4c94-8655-8215122a29ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87de40f1-3b4e-4686-b939-b1adbd1f2732",
        "cursor": {
          "ref": "4c9076d4-c6af-42d9-bed4-32218485a570",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "b2d2c48b-7fdf-4a23-ae30-4534ace75e08"
        },
        "item": {
          "id": "87de40f1-3b4e-4686-b939-b1adbd1f2732",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7838457c-1efd-402d-b551-8eb2e9246070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0894c2ba-3d2c-495c-93d3-9b60a144f2c7",
        "cursor": {
          "ref": "a0c4fd13-6424-46ae-a732-680140c7ef2b",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "074e81d6-dc9e-43d5-9d87-34511996018d"
        },
        "item": {
          "id": "0894c2ba-3d2c-495c-93d3-9b60a144f2c7",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6a4b99ac-b794-40fc-bfe0-df3d8c85f8f7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61056cc1-1095-42f3-982a-5405e4d8ebeb",
        "cursor": {
          "ref": "18b4af44-8a4b-4526-b857-0ad689792fd1",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ea134480-22af-4292-8cae-c971502c0dbc"
        },
        "item": {
          "id": "61056cc1-1095-42f3-982a-5405e4d8ebeb",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "82bf53fa-2b1c-466d-a51d-3d9696d2ae40",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 341,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36aaf6af-f55f-453e-a8a9-8121ca589c5b",
        "cursor": {
          "ref": "bd80f0ad-7190-4b3c-8773-62f72069bb6d",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "d85bbf1f-6931-48d1-8325-9b0ae001824a"
        },
        "item": {
          "id": "36aaf6af-f55f-453e-a8a9-8121ca589c5b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "08c6a709-a9d3-4600-9e51-1093dd6bf688",
          "status": "Created",
          "code": 201,
          "responseTime": 115,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "155831a4-e0b4-47ba-8691-77938281f339",
        "cursor": {
          "ref": "0fce8c3b-a8f7-4088-9bca-d6da3cca25ca",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "03327b1a-3267-40bc-8d2f-6d549f5504eb"
        },
        "item": {
          "id": "155831a4-e0b4-47ba-8691-77938281f339",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ee62b860-a4b3-480b-9276-cf7b4192fc5a",
          "status": "Created",
          "code": 201,
          "responseTime": 86,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fa2231b-d6e3-4107-8024-d5dc927cd664",
        "cursor": {
          "ref": "b66dc9c0-e05c-40e1-971d-2bb28cfbb6c8",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "ab503384-f633-4dd2-b341-db22f425e2f8"
        },
        "item": {
          "id": "6fa2231b-d6e3-4107-8024-d5dc927cd664",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "e88d9f54-220a-4b85-a2bf-16f2eaae1ba2",
          "status": "Created",
          "code": 201,
          "responseTime": 84,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0f3d75e-982b-4331-b6d8-653c35956ef4",
        "cursor": {
          "ref": "d47dcddf-6ad4-4d3a-bbb8-ebdcd34540ce",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "6d6f363b-6af9-4ab6-ae65-cb8f1c2a06ee"
        },
        "item": {
          "id": "a0f3d75e-982b-4331-b6d8-653c35956ef4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "49f1367b-dc53-41b6-bbec-06c544fc34ce",
          "status": "Created",
          "code": 201,
          "responseTime": 81,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f2ae3b3-5b6b-46e5-9139-79de1be7e788",
        "cursor": {
          "ref": "8b1b5711-59a0-410f-8f62-23aaa796c8ff",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "2b6a3591-d721-450b-9b89-db6008721604"
        },
        "item": {
          "id": "3f2ae3b3-5b6b-46e5-9139-79de1be7e788",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "11123b7d-81ba-4ac3-a09e-22127eaf3916",
          "status": "Created",
          "code": 201,
          "responseTime": 80,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "69384367-c517-4660-9e66-f6b631aaddd5",
        "cursor": {
          "ref": "2180d2a0-b434-4c26-ab4a-9d21b2e30fd9",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "d86b4315-5c86-4c38-a243-9c9cf34e7de5"
        },
        "item": {
          "id": "69384367-c517-4660-9e66-f6b631aaddd5",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "31aab78a-768f-48e9-9dc5-ba707ef1fad5",
          "status": "Created",
          "code": 201,
          "responseTime": 80,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a2989f-8e5d-465e-901b-f1684759a3a7",
        "cursor": {
          "ref": "8bc67d5c-aec1-4fbf-b3a9-19c39a392b64",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3eb81f15-0e5a-442a-8f1b-c68cf10bfa5b"
        },
        "item": {
          "id": "96a2989f-8e5d-465e-901b-f1684759a3a7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "238cf1b5-7fd8-4990-b85b-b507d56dda4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a2989f-8e5d-465e-901b-f1684759a3a7",
        "cursor": {
          "ref": "8bc67d5c-aec1-4fbf-b3a9-19c39a392b64",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3eb81f15-0e5a-442a-8f1b-c68cf10bfa5b"
        },
        "item": {
          "id": "96a2989f-8e5d-465e-901b-f1684759a3a7",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "238cf1b5-7fd8-4990-b85b-b507d56dda4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ce7c19d-6ed1-4f99-a5fe-969db30ec8b2",
        "cursor": {
          "ref": "0dc81f6f-d5c2-466f-a9e0-43adbf848fac",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5ae2670e-97ca-4552-906b-814b5a121145"
        },
        "item": {
          "id": "6ce7c19d-6ed1-4f99-a5fe-969db30ec8b2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1f2a4488-54a0-464b-9064-7e2f28b2c220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75ec4885-fe01-4719-ae94-b0c0e72ae161",
        "cursor": {
          "ref": "c9da548c-0172-4673-82c2-081585de03a4",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "cc08922c-1691-4660-bb3b-a81de1f55f78"
        },
        "item": {
          "id": "75ec4885-fe01-4719-ae94-b0c0e72ae161",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a7b598ed-4bf4-47ce-9866-28e684da9544",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4370051d-8e84-4fa4-b036-588d6c5de540",
        "cursor": {
          "ref": "9163ea48-4449-455e-a56f-ee9de28899de",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "83f0d3b1-ab35-407e-ae62-29d84d7240ec"
        },
        "item": {
          "id": "4370051d-8e84-4fa4-b036-588d6c5de540",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "1c2094c8-e5cb-47f6-8363-d49b60c83485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff983b54-0dea-4cb5-96cc-7f24d22effd9",
        "cursor": {
          "ref": "4dc04e72-e310-471d-beef-4af914f4f3f8",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "98adac15-9846-4800-acd9-92eb49d439dc"
        },
        "item": {
          "id": "ff983b54-0dea-4cb5-96cc-7f24d22effd9",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "03e1f153-3e02-4b19-b67b-4a246e2f170b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dd8ce63-ba5c-4e77-8040-66acec964e2a",
        "cursor": {
          "ref": "f8762d6b-15e6-4354-8a70-bba1239c32a8",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6ab80204-9bc0-4c26-96ae-2aff24081e17"
        },
        "item": {
          "id": "1dd8ce63-ba5c-4e77-8040-66acec964e2a",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "ba212da2-f4d1-4d3b-8aa4-fc379ac9d93c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd3021e-6c04-42cc-8a7c-3bac8c9279f8",
        "cursor": {
          "ref": "af18d5e4-175d-496a-987d-87ba76d6e06e",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ae71c432-2f28-4b45-b73c-40dfbf599f41"
        },
        "item": {
          "id": "2fd3021e-6c04-42cc-8a7c-3bac8c9279f8",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e7b0a540-585f-4439-88eb-ec623833b082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08de12a-cf4b-498d-a6a0-44d0c414ba89",
        "cursor": {
          "ref": "70bb7bfa-8216-4cd6-8d84-c5329ff689cf",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "72281a22-2bd3-466f-9105-d1dcc415f134"
        },
        "item": {
          "id": "b08de12a-cf4b-498d-a6a0-44d0c414ba89",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "380b74e1-11fc-45f7-bf7c-e939507ea597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e225768-dedd-44c1-afe2-950ca411a010",
        "cursor": {
          "ref": "f107243c-b78c-4f06-9bf5-cfc7a2e06aae",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1bb0b948-4e78-4512-93d9-143e136b1caa"
        },
        "item": {
          "id": "7e225768-dedd-44c1-afe2-950ca411a010",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "4a83e687-936f-47b8-8529-e91b55a9458e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be471a0-90a7-48ef-9649-ac9bfdfb1ae7",
        "cursor": {
          "ref": "991df287-1061-40ac-8f46-ab108d0f2e56",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0cd20442-e57c-4ef2-97dc-51a498ec53df"
        },
        "item": {
          "id": "8be471a0-90a7-48ef-9649-ac9bfdfb1ae7",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "c8dccd5b-b323-44fe-9380-1f029f8cd332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d970fdbc-0c47-475e-a233-9cd7be293695",
        "cursor": {
          "ref": "259dacf1-b0bc-4356-a7b5-002f8e6f7012",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3156b636-2847-4d29-8052-aeac9470db73"
        },
        "item": {
          "id": "d970fdbc-0c47-475e-a233-9cd7be293695",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "358a60b8-ff52-47c0-aa49-4f8e3e641237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7da43846-15e5-4ac0-adde-a61006e34171",
        "cursor": {
          "ref": "eafd7679-57a9-4531-ba25-de5eca4da047",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "b3929895-2f5b-4836-b995-4de39654ffab"
        },
        "item": {
          "id": "7da43846-15e5-4ac0-adde-a61006e34171",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "7627f43c-ca2d-4dd0-bbd1-7f9ee2393f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d6f4e2e-1894-4123-be76-ffa20d81e9be",
        "cursor": {
          "ref": "8e6ceef8-3dc6-4ab6-b617-4602093c9409",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "77c235d6-af03-410b-8d10-6e39acb9e5c6"
        },
        "item": {
          "id": "8d6f4e2e-1894-4123-be76-ffa20d81e9be",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "64eaa5a1-5ce5-420d-9af1-d969a9a03a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b20256b-8a1c-4e53-926b-fbb2ad5c6314",
        "cursor": {
          "ref": "06049b0c-51b6-4663-8179-22fb999f9b8c",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "003a923b-ef59-48f2-9230-f3bc45f20ac1"
        },
        "item": {
          "id": "5b20256b-8a1c-4e53-926b-fbb2ad5c6314",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "53e16e5a-a5d7-4e76-b463-4319e43c737f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d34641e-2f3a-4207-8ae2-8cebfe5cb7e2",
        "cursor": {
          "ref": "56968788-4434-4cc5-a482-6c5509bee528",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "2793c28c-fedd-4b23-8acc-3667ee7752be"
        },
        "item": {
          "id": "5d34641e-2f3a-4207-8ae2-8cebfe5cb7e2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1b85e1ef-09fe-44c9-92e4-a74c67e9f037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d994772-f4a3-4e57-a49d-513ce3036e77",
        "cursor": {
          "ref": "8deb4644-5775-47ad-8e0d-ea0cf500562a",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "486a95f1-8ab3-4e2b-b179-e3c6514dc336"
        },
        "item": {
          "id": "4d994772-f4a3-4e57-a49d-513ce3036e77",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "96115491-2246-4b17-8fd4-e8aba4be692a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d14e59d-0a22-4200-80b0-324dedaa55c1",
        "cursor": {
          "ref": "588a2434-d033-45a4-b82d-94c8c094447e",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f96b9dd7-25e0-4c01-8b33-9821fbf9fc43"
        },
        "item": {
          "id": "4d14e59d-0a22-4200-80b0-324dedaa55c1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f2160c52-06ff-4f5b-9cfc-bef339b160b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69de288b-3d38-42e2-ad35-bdcd5e573cdf",
        "cursor": {
          "ref": "d774bbcf-4204-481a-90f5-82a9c9d30ea2",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ca2eb7db-d91c-4b66-8b6a-1d97502aacc2"
        },
        "item": {
          "id": "69de288b-3d38-42e2-ad35-bdcd5e573cdf",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f2e25757-a79a-4e94-8542-983115250f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23f9648-29d6-4d6e-af1d-4fd200f0b783",
        "cursor": {
          "ref": "a3166984-271c-4858-b90c-205adcdff745",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "86a9368a-0383-4e2f-8623-c082622986bb"
        },
        "item": {
          "id": "e23f9648-29d6-4d6e-af1d-4fd200f0b783",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7806db3d-cb24-46a3-8063-6ade521acd83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd59e98-a96f-4af0-a372-85087da8a173",
        "cursor": {
          "ref": "4bd06d4d-e555-4ee1-9f5c-d4dd60aaa063",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "311f1fb2-104b-4b77-831f-a3dc31e582e8"
        },
        "item": {
          "id": "8cd59e98-a96f-4af0-a372-85087da8a173",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "43c18bf2-27ab-456d-8540-2f3f2e5ea5bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "701a864f-74b5-4aec-a29b-716842dcaa5f",
        "cursor": {
          "ref": "b0442129-d409-4d8b-8b62-75b0b5fdf15e",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2f957598-c666-448d-919f-dcc87c969846"
        },
        "item": {
          "id": "701a864f-74b5-4aec-a29b-716842dcaa5f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "f9dd0502-172f-49cb-8811-47120fa60d0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10b8e546-d8a9-4116-b3a3-53c8c09ea9b4",
        "cursor": {
          "ref": "735173e7-8c1e-458c-b808-dd5e3b8154d4",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8a33f130-fea2-4bc4-933a-0d75bb715337"
        },
        "item": {
          "id": "10b8e546-d8a9-4116-b3a3-53c8c09ea9b4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "3622a291-5b23-41de-8f95-d3374abca6e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc73f29c-d5b4-44c1-b270-330dba0576e7",
        "cursor": {
          "ref": "170bd0ec-b6cf-42b1-b6a2-248072165e3f",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "4ef4f534-21ef-4111-b5c2-d2e1e127e766"
        },
        "item": {
          "id": "dc73f29c-d5b4-44c1-b270-330dba0576e7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "267da204-ad87-448e-bb44-6b9bbd90d8ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb83cb18-0dc6-4767-9853-c3ae7125f6f7",
        "cursor": {
          "ref": "21b5833d-062f-4fe5-8577-601c052e2ac9",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "043dd289-4b3f-4670-a2d8-7de0034a4df8"
        },
        "item": {
          "id": "cb83cb18-0dc6-4767-9853-c3ae7125f6f7",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a3b13ed0-53a3-409c-b176-eaf7830ec9a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d8008a-4367-4394-a003-e871c23e8a68",
        "cursor": {
          "ref": "f27751e1-aa02-4e12-9df7-5b878015efeb",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "fd34c250-62f2-4035-b283-4160512591b4"
        },
        "item": {
          "id": "b7d8008a-4367-4394-a003-e871c23e8a68",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ffd53f51-30cb-419a-9a35-7a979e9394e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54ec2e7-ef60-47ce-a13b-3c808047ab4e",
        "cursor": {
          "ref": "e6302560-dc31-4de1-87bf-fbe47e6f9b71",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "36659ff7-1254-402d-bb20-232e4fb8b36c"
        },
        "item": {
          "id": "b54ec2e7-ef60-47ce-a13b-3c808047ab4e",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "49bede28-7ba9-4ec2-a4e9-cfdb02ec6e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56064929-12aa-4942-aa61-f668205ff5b7",
        "cursor": {
          "ref": "71049c58-408d-4ac7-a48b-bb7ae8037650",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "bc842495-096b-4441-a153-89392910b7eb"
        },
        "item": {
          "id": "56064929-12aa-4942-aa61-f668205ff5b7",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6a9fc15c-3b6f-4c0e-a885-a44265aa92a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ee0db25-43d3-4f17-a4f9-cb711c5611cf",
        "cursor": {
          "ref": "bb1db392-d159-473e-8972-6584b27764cf",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "2b59358b-1068-4adc-b647-4a5863d2f705"
        },
        "item": {
          "id": "8ee0db25-43d3-4f17-a4f9-cb711c5611cf",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0d08371d-b532-4c4a-a06b-23dd99319524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfa51eff-13e8-4ffa-b8e9-350b6beb536b",
        "cursor": {
          "ref": "bc40e004-5497-4b83-ab5f-daaefb7fb7e7",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "d8b48edd-eb8f-42e3-87b7-607c4e183c20"
        },
        "item": {
          "id": "dfa51eff-13e8-4ffa-b8e9-350b6beb536b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "dbebab98-a323-4df6-8a1b-6e4a41bf9f62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65c14b18-46cc-497e-9652-6af67c82e24f",
        "cursor": {
          "ref": "bf35dd1e-ca56-4925-bdc7-49bbcce0a9b4",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "39fb8966-9d8e-42b4-8a93-46d4fa1692cf"
        },
        "item": {
          "id": "65c14b18-46cc-497e-9652-6af67c82e24f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ad94a867-9eca-4f38-8f11-b9a1614afc1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a80ad73-5b0c-48b5-a00b-d57cc0c83f8d",
        "cursor": {
          "ref": "374ca4c2-8990-41f7-bbf2-9229884ba323",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "efdf1d1a-4fb8-4f0d-ba2a-343771c866b8"
        },
        "item": {
          "id": "9a80ad73-5b0c-48b5-a00b-d57cc0c83f8d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4fa7ad3c-34f1-4ebd-a287-c5a77d8c003f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31053b16-572d-4624-b10d-09802c721ccc",
        "cursor": {
          "ref": "2ecc3a3f-1f20-4814-8543-ab2f7fedb42d",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d129a0c7-c4fb-4f9e-82b6-ca505ad1e797"
        },
        "item": {
          "id": "31053b16-572d-4624-b10d-09802c721ccc",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "311cf138-f19c-4a58-88f2-9b123387bf4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a40e789-ab61-4cb7-ae99-9c6836aec919",
        "cursor": {
          "ref": "90e0ead4-0256-4a67-940c-64d011a26771",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "f16f2d51-2e46-482a-a363-b73f7aa59c70"
        },
        "item": {
          "id": "9a40e789-ab61-4cb7-ae99-9c6836aec919",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1ab04fc2-21c9-4ccb-b9f6-bc31f8365cdc",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5729c6b-2411-43fa-9cbd-68287e6debab",
        "cursor": {
          "ref": "1b02dcd0-0108-467c-ad1c-ceb2ed1864c6",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1f704463-a0d5-4db2-b1d5-cf4304d2bbdf"
        },
        "item": {
          "id": "f5729c6b-2411-43fa-9cbd-68287e6debab",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "001e8c6a-0c11-4772-947c-85e4828d9f09",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 63,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73864e95-23fe-4848-8537-f7ef13f67e40",
        "cursor": {
          "ref": "9a16b4d9-1754-4bb2-b97e-f9890bd5b400",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "766b2e27-bbdc-4aed-b3ec-d4bfd9589934"
        },
        "item": {
          "id": "73864e95-23fe-4848-8537-f7ef13f67e40",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "442591f9-f0af-44d2-ab89-55038026b993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73864e95-23fe-4848-8537-f7ef13f67e40",
        "cursor": {
          "ref": "9a16b4d9-1754-4bb2-b97e-f9890bd5b400",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "766b2e27-bbdc-4aed-b3ec-d4bfd9589934"
        },
        "item": {
          "id": "73864e95-23fe-4848-8537-f7ef13f67e40",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "442591f9-f0af-44d2-ab89-55038026b993",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa35f1a4-9f0b-4c7f-8e73-5570e91321c1",
        "cursor": {
          "ref": "8f499817-cb5d-48b8-a26d-c3da662c96b7",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "69a6094f-08c7-402e-9442-a43777dc3929"
        },
        "item": {
          "id": "fa35f1a4-9f0b-4c7f-8e73-5570e91321c1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "06ea4ab7-b6de-4943-bba9-4d62c54a05e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444c165d-ede5-4a04-b0eb-d78c887b87f5",
        "cursor": {
          "ref": "c73c39e8-a3fd-4c34-a8b5-a634499cd861",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "82a61dd2-d9de-4002-80af-58b2c520c0c5"
        },
        "item": {
          "id": "444c165d-ede5-4a04-b0eb-d78c887b87f5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "06a9cb61-d341-4f4f-9958-4c5c3a61eecc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4347990-d3a4-4de3-a0ad-9725516238df",
        "cursor": {
          "ref": "b34339d3-bbf0-4027-8cbe-f6fab2801422",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b4b3c48c-19b2-4cf2-b48b-62f26ab7e389"
        },
        "item": {
          "id": "c4347990-d3a4-4de3-a0ad-9725516238df",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "af2646ef-92bf-4aa4-a91c-efc967dfca52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2ec912e-1121-4bd2-9a7d-5812e381b4b2",
        "cursor": {
          "ref": "252791c4-ede4-4e27-b0f6-5a781a08fd25",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "72a0dd4c-e357-4963-9dac-7c9a3bd9e23f"
        },
        "item": {
          "id": "f2ec912e-1121-4bd2-9a7d-5812e381b4b2",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "1e44a877-40d2-4181-8ea9-9c4050eeb8bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283cf519-c1ca-4bb0-8d57-aa6dc6cfe857",
        "cursor": {
          "ref": "84faedd8-0e6d-4992-b547-da22c4ce4eda",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "281906c4-698e-41ed-b501-0ea82f4a67c5"
        },
        "item": {
          "id": "283cf519-c1ca-4bb0-8d57-aa6dc6cfe857",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "e4d4bd1a-d1b0-415b-bd34-08b087dc482f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6294acf4-a51a-474b-89a3-8e5ec982c012",
        "cursor": {
          "ref": "703aac8f-1b49-4745-ac82-3296ce2d85b4",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "1ae31036-ef17-46ac-9d25-e333b6684a37"
        },
        "item": {
          "id": "6294acf4-a51a-474b-89a3-8e5ec982c012",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ebe1de10-49d6-4f8a-91fb-b6396632fa2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd7cd2e0-ac52-44ba-a032-e3047f69903b",
        "cursor": {
          "ref": "4864e668-ee16-4ea5-a92d-13ced4e772f1",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "6798b438-6a47-4f6f-891c-5dc930504086"
        },
        "item": {
          "id": "cd7cd2e0-ac52-44ba-a032-e3047f69903b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "71b303a7-5786-4e5f-9583-bc117e4e4ddd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ca44917-a430-4e96-b3a9-0c43f1d17b58",
        "cursor": {
          "ref": "4cb478a0-8b7d-4405-9a91-13999d9a6d9a",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "8ba80830-9015-454f-8934-59862ae5ce70"
        },
        "item": {
          "id": "7ca44917-a430-4e96-b3a9-0c43f1d17b58",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "58af0c05-56bd-4fec-8ee4-07fc52ba224b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec42bfda-fca9-478a-9e77-496eb548de3c",
        "cursor": {
          "ref": "a0c7ac08-ff87-49b4-9073-dfa6a5a7774b",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a29d11ae-eeb2-49bc-9177-805c2050f6b7"
        },
        "item": {
          "id": "ec42bfda-fca9-478a-9e77-496eb548de3c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "377548dd-e934-4b0a-b958-e16007084f00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84e246b7-8a20-4d7b-bc34-af666e41e1d7",
        "cursor": {
          "ref": "8f13eb8d-5611-4c53-95a6-bd7ac16b8cab",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ffbb13d9-7672-44f7-b45c-4434931e8b4b"
        },
        "item": {
          "id": "84e246b7-8a20-4d7b-bc34-af666e41e1d7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "3142ce1d-b2c8-4269-8019-ce4fc057454f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de455237-eec2-4561-a5f6-b825a23959e2",
        "cursor": {
          "ref": "19a8c292-1258-4b0d-b3d3-26b29b91c2a4",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "bf7d78b2-7f1f-486d-9bbf-3ebfcb46994a"
        },
        "item": {
          "id": "de455237-eec2-4561-a5f6-b825a23959e2",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "631ab87a-2965-42e7-81a0-c5022b59b2c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25c30f4d-682a-4039-a4f9-453b6297efc4",
        "cursor": {
          "ref": "d6b9dd8d-fbcd-4b01-91ec-0ba11afb8928",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8fc5d1bc-78c4-4efc-866d-adc4e86ec727"
        },
        "item": {
          "id": "25c30f4d-682a-4039-a4f9-453b6297efc4",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "2643a791-4397-4cb4-afa9-788e822cbd11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da45ef90-28f9-4fcc-96b8-5affbdab6ece",
        "cursor": {
          "ref": "95a77302-4b20-4f9d-bb41-cbd1611e9dc3",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "2b17c139-d102-4e65-a18f-850322505b6f"
        },
        "item": {
          "id": "da45ef90-28f9-4fcc-96b8-5affbdab6ece",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "8ff5ff0a-987a-4a87-a0ef-ce968b7ef2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5c24761-053a-4cd4-8f18-330f6be4ab4a",
        "cursor": {
          "ref": "aabc72a8-0d04-4668-8b40-ca57b9332431",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "0e480c0c-24fb-4a58-b456-3c8b7307ca37"
        },
        "item": {
          "id": "f5c24761-053a-4cd4-8f18-330f6be4ab4a",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "5da9aa85-a896-45a9-95fa-a9ae87956f48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb7141c-5d8a-48b2-8b4a-1e43db859b7a",
        "cursor": {
          "ref": "51c935e2-4e44-4c2c-afcc-fc1796e476aa",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "081e9004-bbd8-4d90-9104-15c947ac4650"
        },
        "item": {
          "id": "7eb7141c-5d8a-48b2-8b4a-1e43db859b7a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "4c4db233-058d-45f3-9e74-81639c5b98ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d621b660-b934-4ff4-b580-8b6ed9c155ab",
        "cursor": {
          "ref": "92d947f2-3b37-45a5-b5e7-a875eeacb1d5",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "4d56ce90-a6c5-4c75-aa7e-979dce847d97"
        },
        "item": {
          "id": "d621b660-b934-4ff4-b580-8b6ed9c155ab",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "ecf5327a-a8bd-4310-a653-e0e852e60a00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e789b0d9-e31c-46dc-ae2a-839b8779907a",
        "cursor": {
          "ref": "8355f47f-d1b0-4a63-bd58-75fa7d280f4e",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "e4ac2595-d529-497f-81d1-d5e6264efc3f"
        },
        "item": {
          "id": "e789b0d9-e31c-46dc-ae2a-839b8779907a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0363bce5-6820-4e3d-947e-a6ce7ba6d548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429e66f0-d04a-4622-ab8c-91160c0f969a",
        "cursor": {
          "ref": "3c42a48c-e1e7-4d0a-bc95-5cbac3083d60",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "7d468a4b-9a02-4979-8db2-0a36d0dcf5a7"
        },
        "item": {
          "id": "429e66f0-d04a-4622-ab8c-91160c0f969a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "fe9c7993-fa97-4705-aa3b-38625612d93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbf7ba3-4eb8-48d1-85c5-fb1547650844",
        "cursor": {
          "ref": "81ca1fc0-35e3-4b4e-bec1-4a1dfad8613e",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ecac1ce1-aa3a-4f8c-951b-bd8f1197ab69"
        },
        "item": {
          "id": "5bbf7ba3-4eb8-48d1-85c5-fb1547650844",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "c0af5cd3-8751-411e-adda-7e564c5f6032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6381a7e1-865e-40d1-8195-a6c852575fae",
        "cursor": {
          "ref": "457f1cd3-0395-4412-9914-f9c880cd17f4",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "94c6c6ac-2350-4ada-986c-9b32b625ec4c"
        },
        "item": {
          "id": "6381a7e1-865e-40d1-8195-a6c852575fae",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "604267e8-bb70-4dfa-8b7b-ca3bfcdd1096",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "776762d6-f356-4743-896c-13764d5999ac",
        "cursor": {
          "ref": "ad1994b2-25c3-465f-a1e7-19ca9e487b6c",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "d4385524-c215-434a-bc88-80badf8bf74f"
        },
        "item": {
          "id": "776762d6-f356-4743-896c-13764d5999ac",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "91d9482c-d17d-495a-99e6-118c199fb7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e83887e7-194d-4e25-bda7-39aeb54c2840",
        "cursor": {
          "ref": "6e354b69-2398-44ec-ab4a-27c1bd03444b",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "20939b4d-6f79-464b-974d-6237901856cd"
        },
        "item": {
          "id": "e83887e7-194d-4e25-bda7-39aeb54c2840",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "c890d073-b1d6-4731-a437-944b843b0ffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbc16fbc-611d-4065-ad2b-33fba96673c3",
        "cursor": {
          "ref": "d50a8c6e-e80d-47c9-8e07-05e3c4b776f2",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "8a58b2b3-1d09-477e-bf37-2c15f2acf8d7"
        },
        "item": {
          "id": "bbc16fbc-611d-4065-ad2b-33fba96673c3",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "eba52148-25ab-4a5d-ae91-5859a642112a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d93fde-9484-4178-8b48-1ac4552e516b",
        "cursor": {
          "ref": "2c869037-2e2f-4c46-afb3-b04088b6201b",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "76e9035b-b1c0-4183-aa56-6ac8c71aa53c"
        },
        "item": {
          "id": "84d93fde-9484-4178-8b48-1ac4552e516b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "1f80833d-a05a-403f-a53a-46ac317614cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7e83ca7-dde1-400f-b130-e709dd71bb1f",
        "cursor": {
          "ref": "cca2655b-3a88-4363-ae6b-7e81b8e34da6",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "e5e7e895-9896-4a5f-9bde-8269e1971ea4"
        },
        "item": {
          "id": "a7e83ca7-dde1-400f-b130-e709dd71bb1f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "25a6d4a9-a120-49c7-810d-a3890e2228dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb6a73de-ce8d-4b96-9773-ed4fe7ae2eba",
        "cursor": {
          "ref": "069cd3f6-9bba-4b85-9c44-c58ff176b80d",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a7e38453-f4d6-4b52-9240-e12a82604227"
        },
        "item": {
          "id": "cb6a73de-ce8d-4b96-9773-ed4fe7ae2eba",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "8c4c0d31-83cd-47b4-9a3e-9fec3372397b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcfc4619-93c2-4e03-aa3f-5b15669b5fdb",
        "cursor": {
          "ref": "20556bcc-c538-4c74-b850-686096595c77",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5aad8bb9-3257-4aac-b651-949a764431f5"
        },
        "item": {
          "id": "dcfc4619-93c2-4e03-aa3f-5b15669b5fdb",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "d63a2dca-6e42-4d1e-94cc-f5b83b5d213f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2db72e6-e990-4cf0-bb4c-90937052fa7f",
        "cursor": {
          "ref": "89fc6afb-0ae5-4d12-bb1e-201e58685859",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "9b81bac6-5210-401f-aa43-56f2a00fe650"
        },
        "item": {
          "id": "f2db72e6-e990-4cf0-bb4c-90937052fa7f",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "541a5184-890b-43ae-a853-0deafa45f75f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a633ac5e-1f32-47f9-9ca4-0700748ccfb3",
        "cursor": {
          "ref": "ba9ef82e-0f05-41be-b03a-bb18d19e0cb6",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f423a9e1-5287-4df7-818e-3e008329b4d3"
        },
        "item": {
          "id": "a633ac5e-1f32-47f9-9ca4-0700748ccfb3",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "03319a0a-c088-4fcb-939f-b15979df0475",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d182b6-880e-47fd-bb83-65e5b692adc2",
        "cursor": {
          "ref": "03cc5901-9495-41aa-8158-d81ce050f72c",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "429edfc5-730b-4626-be46-eb5e6f03e673"
        },
        "item": {
          "id": "f7d182b6-880e-47fd-bb83-65e5b692adc2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ee2f8190-415a-4110-8d00-ab8ace3c81cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eec03209-3f33-42b9-be9d-8e5e3af2cab6",
        "cursor": {
          "ref": "6f577fd1-89f2-4e72-81f6-3e8ce191d145",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "0599a2dd-0706-4b13-9819-e687791fd3eb"
        },
        "item": {
          "id": "eec03209-3f33-42b9-be9d-8e5e3af2cab6",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "5c7d2e98-fdd5-4137-a1de-c32fddbd6c11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223712ba-eb4b-4b4c-8e29-f6c904f6047c",
        "cursor": {
          "ref": "7792d96e-edda-4be3-8467-3a411c1b6316",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "75f8f234-49fd-4d1a-b5b4-9825ecb80758"
        },
        "item": {
          "id": "223712ba-eb4b-4b4c-8e29-f6c904f6047c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "a8ac11f0-b98f-4895-8d2d-9d55de2a3aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed4016b8-1ec2-4b6b-89a6-0bcdc4b51110",
        "cursor": {
          "ref": "8fd5e66d-3ce8-4910-b83d-000189116d05",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "558c1ab3-c4c8-4d52-ac34-c2bd860af539"
        },
        "item": {
          "id": "ed4016b8-1ec2-4b6b-89a6-0bcdc4b51110",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a27221ea-e283-41cb-bb41-8f1b76d5e3ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c80931eb-b4d7-478c-a583-bc042c473bbc",
        "cursor": {
          "ref": "5fb9a56a-7744-4506-8910-0ec3a5b456fd",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "0197bf08-8836-44b2-9dfc-40e8b0649ad5"
        },
        "item": {
          "id": "c80931eb-b4d7-478c-a583-bc042c473bbc",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "9a55e156-c129-4eee-8127-8a7152810ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc59f06a-dd7f-42c9-93d9-c00664be250e",
        "cursor": {
          "ref": "848c38cb-cac2-4d66-9bd3-f44436d7f7f7",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b507ae57-91d4-4c42-a908-1b38d0c383c8"
        },
        "item": {
          "id": "fc59f06a-dd7f-42c9-93d9-c00664be250e",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2402b372-c246-4524-acb8-f584629b4cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6196696e-fccc-4eea-939b-7e883c384393",
        "cursor": {
          "ref": "497aca2d-284b-41a1-9bd5-6e4a7dc1c5bf",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "55bca605-a5f0-4d0f-8cbc-f41fcc12c424"
        },
        "item": {
          "id": "6196696e-fccc-4eea-939b-7e883c384393",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b4cb0043-7655-46f8-9361-7bba262d545c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe7af65-3032-4e88-bf41-02f0f4111ab4",
        "cursor": {
          "ref": "b42c05eb-8849-41c9-9863-f994d92facd8",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "e0d5d0b6-b4d7-442e-94f9-8e185c8cdf91"
        },
        "item": {
          "id": "4fe7af65-3032-4e88-bf41-02f0f4111ab4",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "11452c82-290b-402c-ab7b-5fe6978b7334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302468a3-cdff-4876-89a4-e968710cb8a7",
        "cursor": {
          "ref": "564b884a-f05c-4574-b42f-cbb99c0df40e",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e441796b-fb1a-4adb-b85f-b988b7280618"
        },
        "item": {
          "id": "302468a3-cdff-4876-89a4-e968710cb8a7",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "4a63f052-a0a3-4e00-b41b-f0472ba95a76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d68c729-3207-47d7-b862-eb7d92abb1c3",
        "cursor": {
          "ref": "ef7ae71a-37b9-4497-8054-079eaae545e3",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "78b76d13-e2bf-4f6a-9e74-bcc481d78b39"
        },
        "item": {
          "id": "8d68c729-3207-47d7-b862-eb7d92abb1c3",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "5863cc5e-f150-4c43-ae42-9788d72a3daa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d090e50-6016-414c-b4c4-8ad0a82f60c4",
        "cursor": {
          "ref": "9b1b065b-d66c-4b30-a115-1962d401f77e",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e16e1531-3dde-4432-b4a6-b46e970c10c5"
        },
        "item": {
          "id": "9d090e50-6016-414c-b4c4-8ad0a82f60c4",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "b763e478-63ff-453e-a7d7-ac24a647ec1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "842ce5d9-2240-443f-8885-07a9ab010ff5",
        "cursor": {
          "ref": "f1f88390-658a-4df0-b8b5-44c3a23bd04a",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "2557f685-59f6-428d-b757-756b1151fc9b"
        },
        "item": {
          "id": "842ce5d9-2240-443f-8885-07a9ab010ff5",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f45a56c6-74d3-4340-a7df-a8acf7b434f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd2c31e6-284c-4ef7-a004-27428d0b77e9",
        "cursor": {
          "ref": "e127e60c-6179-41a4-bc9d-36515b864499",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ed6db173-be0b-4df9-9b3e-55f3a80cf349"
        },
        "item": {
          "id": "dd2c31e6-284c-4ef7-a004-27428d0b77e9",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "885b42b2-1b17-408f-996b-f5ee93cc8b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a676c1e-ad0c-4957-ad61-68846ee52fe4",
        "cursor": {
          "ref": "d5865f15-0365-4967-897a-789db77cc16b",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "70334f51-e6a3-4d2b-a330-250aed8434af"
        },
        "item": {
          "id": "1a676c1e-ad0c-4957-ad61-68846ee52fe4",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d9bde269-fedd-46c1-9003-a23341c6a0a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f88958-7739-4ae5-815d-9761c3e771fe",
        "cursor": {
          "ref": "85ca86b6-d899-4eab-9c4a-6b312b922b87",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "8b837365-b3c4-4a81-aa34-b7739963e637"
        },
        "item": {
          "id": "00f88958-7739-4ae5-815d-9761c3e771fe",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "092a4358-4fc2-4466-97d5-aba8a0db6d7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b73a9c74-b55b-4bdb-89ae-b769d7216a4a",
        "cursor": {
          "ref": "7c2e5bfe-1c5c-4326-8b11-7719f0a047aa",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "7efe12da-ad84-4474-8545-59c2fe71d3fe"
        },
        "item": {
          "id": "b73a9c74-b55b-4bdb-89ae-b769d7216a4a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "687d4d52-a7a5-4975-9dbd-b27c5979a184",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e21dd67-27b1-4e59-86c3-09fca0005963",
        "cursor": {
          "ref": "adaabcd0-612e-4244-a4e7-e6fd67c3c202",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "a73f477e-73c1-4fb4-b974-81c71c7c4eed"
        },
        "item": {
          "id": "4e21dd67-27b1-4e59-86c3-09fca0005963",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "5cd5a0cd-fae1-49f8-b23a-2a10867983ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9f0daa-101f-4b2b-991c-61a51823be0b",
        "cursor": {
          "ref": "32b97cfd-681a-4211-9024-862a5d87736b",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "41ec7dd6-0855-4ace-8f47-a496d64898fb"
        },
        "item": {
          "id": "ad9f0daa-101f-4b2b-991c-61a51823be0b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4f8bf8e2-0b2c-4eec-976a-19a08f308a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd94b977-821d-4401-acd6-16f67707651b",
        "cursor": {
          "ref": "6e39d7ea-b53b-428c-b4d8-09156d692f30",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "a07d77a2-f26d-4817-8294-e9e2c69fcd7e"
        },
        "item": {
          "id": "fd94b977-821d-4401-acd6-16f67707651b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2d5e7b9a-c85d-4db9-b03a-953d95cf9a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc32b9ba-5366-46bc-a3da-c865f1a80e4e",
        "cursor": {
          "ref": "428d31e0-826c-4b6e-8cfa-fec3b5084643",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "82f3a3aa-e282-4004-92dc-8aa5c86e17d6"
        },
        "item": {
          "id": "bc32b9ba-5366-46bc-a3da-c865f1a80e4e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "304d52b2-6969-4c6d-90db-9aaff771eb76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1161ecf-a2b4-4104-992a-dfa82e4d672e",
        "cursor": {
          "ref": "86f6db94-309b-43a5-8552-7d6db888df31",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ebccd393-0882-4c0f-acbd-f72b07841472"
        },
        "item": {
          "id": "c1161ecf-a2b4-4104-992a-dfa82e4d672e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "681ea314-64e8-429c-bc27-d76584571b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c34f3d-9f06-4404-84bb-a92c15af7648",
        "cursor": {
          "ref": "441414bf-bf10-4a88-9be6-58075c11ab6a",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "c13a4203-414d-4a76-9567-42a77685b8c1"
        },
        "item": {
          "id": "c2c34f3d-9f06-4404-84bb-a92c15af7648",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4c985ff8-cacb-4762-a89c-968e9fdfc4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30c99042-c80e-42f1-b638-a1d19099df75",
        "cursor": {
          "ref": "67898bae-ce28-4ddb-9fae-71304c45fc8a",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "a79e11c3-323e-42dc-a5da-5a644b6c5f69"
        },
        "item": {
          "id": "30c99042-c80e-42f1-b638-a1d19099df75",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "31a3a8bb-4f3c-42a3-a627-e058c0d2b1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03653046-0855-4ae3-b37f-1cb4040964c6",
        "cursor": {
          "ref": "3e257b00-b001-4b7f-a80e-94d18f6d6266",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "4d545e98-06f7-4bde-8db8-e0b84b98c89f"
        },
        "item": {
          "id": "03653046-0855-4ae3-b37f-1cb4040964c6",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "a3c22480-a3db-41d1-aa54-db1cf93f067a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dffa1f56-f33e-4775-a3dd-29e26c8b9f6f",
        "cursor": {
          "ref": "70ffad50-0a8b-406b-9fd8-9b127b288d2d",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "ab8fd5ce-d595-401f-9e48-bd320f26dca4"
        },
        "item": {
          "id": "dffa1f56-f33e-4775-a3dd-29e26c8b9f6f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b85ae727-12e2-44c1-90e1-bc31d0b5eeab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9b866d-cbf3-4c8d-ad6d-72a526b9cdd7",
        "cursor": {
          "ref": "36efc962-e0a0-4b1a-b140-c2deda84ec42",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8fd9b201-6876-482a-ac9c-31d7e3e58bd4"
        },
        "item": {
          "id": "fe9b866d-cbf3-4c8d-ad6d-72a526b9cdd7",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "da58c9ae-900a-42a7-8c69-6c6bc354ba1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17288e14-8e4d-4ea9-97ae-069b6d62c600",
        "cursor": {
          "ref": "1fb4cf75-8625-4ded-ac8d-ad56ede31706",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "afaed009-a14f-4711-a88a-b72f2ebf6bbe"
        },
        "item": {
          "id": "17288e14-8e4d-4ea9-97ae-069b6d62c600",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d67f07b9-3866-41fd-af5f-7746389cf597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3248abd-dce9-41be-b5ef-d738fe56c742",
        "cursor": {
          "ref": "4b80a4ac-894f-45c5-bbb8-3d14d5dabdc7",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ff7c68ed-f5d1-4612-ad89-612e0e11daed"
        },
        "item": {
          "id": "d3248abd-dce9-41be-b5ef-d738fe56c742",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "07dfac06-58ba-44b9-b99d-7ed7eb5851ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874d2f1a-550b-4f0e-a26d-5456948a0461",
        "cursor": {
          "ref": "4f2eca2d-16ee-4f0a-bbd8-8b1f37081681",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "fbf432a2-66ad-4713-bb73-d24ee695e16e"
        },
        "item": {
          "id": "874d2f1a-550b-4f0e-a26d-5456948a0461",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "52dfb6e3-497b-4e68-9f07-f3965f537b3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c55f94d-2f2e-4944-84aa-c7d1738b9594",
        "cursor": {
          "ref": "0383a87b-6517-41ca-a728-dd43b3f6e22e",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "287ea291-ccce-4f7a-a69f-880671603c4f"
        },
        "item": {
          "id": "7c55f94d-2f2e-4944-84aa-c7d1738b9594",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "b07be209-10cd-4f05-84e6-aab84705bb72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 188,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1986d6-0a6a-42c8-b199-fb1a4ece3665",
        "cursor": {
          "ref": "47b27e59-3cf4-4220-91a1-1facf1429107",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "cced9429-120b-4916-9694-fbed23d4c7da"
        },
        "item": {
          "id": "ad1986d6-0a6a-42c8-b199-fb1a4ece3665",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "5243327b-75f4-497f-a3d9-8c93bec7320d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640a7f1b-5c28-45cd-bc55-57b2fa88a528",
        "cursor": {
          "ref": "8ab66eb3-e27a-44a5-bb55-81f18cb2c222",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "c325f518-9159-49f1-a8e8-aadaf99eb4c4"
        },
        "item": {
          "id": "640a7f1b-5c28-45cd-bc55-57b2fa88a528",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "397318cb-c8c4-424a-bf84-a09995c69ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6c2af83-0053-4ccf-9d31-4360d175527d",
        "cursor": {
          "ref": "2c924860-f693-4903-8094-1f559f625849",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "08024089-db78-44dd-b3b0-a9049f4b1c0d"
        },
        "item": {
          "id": "a6c2af83-0053-4ccf-9d31-4360d175527d",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "899c601f-33c8-43c5-a341-375a5c093908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92bbfe0-283d-44aa-94a8-8909dda41d9b",
        "cursor": {
          "ref": "a40aaf15-c2ec-4a9a-8b91-da40aae6304c",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d537f577-7fee-42cf-8694-dba14e52c7f0"
        },
        "item": {
          "id": "f92bbfe0-283d-44aa-94a8-8909dda41d9b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "17764bae-5c17-40bd-83fb-c784f66acc83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc7cba1-8fad-41b5-a77d-92f8e3d81355",
        "cursor": {
          "ref": "628f138a-3af5-413e-a855-991656e06727",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9324ab31-13c3-428b-95b8-8517dc36e5ce"
        },
        "item": {
          "id": "3bc7cba1-8fad-41b5-a77d-92f8e3d81355",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ce34185d-1a4b-4e47-b723-d14104bd43f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b8d1629-8a6f-4065-9298-e95c2d5a2184",
        "cursor": {
          "ref": "b7644826-f5dd-4d96-9c2a-a689522949d6",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "c043f44b-a5aa-407c-9e67-ba454343d1fb"
        },
        "item": {
          "id": "0b8d1629-8a6f-4065-9298-e95c2d5a2184",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "619d2ccf-d7d1-43e9-ba32-782a856c02c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478bea4c-d60d-40b0-b920-f1679a29be58",
        "cursor": {
          "ref": "16fb8d02-6261-4d9e-b3d3-ffa8c50e1423",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "eae44725-31f0-4c64-a745-ee16257788f3"
        },
        "item": {
          "id": "478bea4c-d60d-40b0-b920-f1679a29be58",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "813cca92-bf19-42b0-bd9f-cd624a32b602",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98237fa3-2f71-47a1-b33d-9dc80b268f91",
        "cursor": {
          "ref": "f96cb212-3217-4e60-9547-8c6c34585104",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "c2aaca81-a17f-4b0b-81f2-1cc8b85cc910"
        },
        "item": {
          "id": "98237fa3-2f71-47a1-b33d-9dc80b268f91",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f84ea3f9-79bc-45e2-9bd9-ea1ecdae9ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a14c2afe-3194-4d64-a0d7-a39f97d756c9",
        "cursor": {
          "ref": "fc68a566-b326-4740-a0a8-1d285c500ca0",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "0e4bc28e-ea74-46a1-b3e7-98b00340e6f8"
        },
        "item": {
          "id": "a14c2afe-3194-4d64-a0d7-a39f97d756c9",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "8462f524-2c7c-4494-85d3-c603e937dc7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f26449e-eeaa-41cf-8b9e-ce5e744bf6fb",
        "cursor": {
          "ref": "721307ce-209f-4be4-857a-8c83347b644c",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "93094808-52ed-4e0c-9588-0d0186d25a48"
        },
        "item": {
          "id": "7f26449e-eeaa-41cf-8b9e-ce5e744bf6fb",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "aa4ce486-5bd4-4772-a704-e1a9c046610d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d84709-e942-4844-854a-b918ff45094f",
        "cursor": {
          "ref": "141fc234-af5d-4932-be10-224c65f6db65",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "53e9f9df-0710-4ff8-b887-15e2d90448a8"
        },
        "item": {
          "id": "48d84709-e942-4844-854a-b918ff45094f",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "f79aea7a-3648-4145-9d9d-f7a85d538a45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc67ccd4-48e1-4bd8-b2f6-5e0c1654996e",
        "cursor": {
          "ref": "8c13ec71-90dc-482c-b6bd-00aac080ca62",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "375c3f87-f55c-422a-a008-5f9629f10f42"
        },
        "item": {
          "id": "fc67ccd4-48e1-4bd8-b2f6-5e0c1654996e",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "eeda6b85-c76e-40a4-8a1d-c8b6a6075729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdebb053-0c2c-4b4c-9722-0dd1adb6d95b",
        "cursor": {
          "ref": "a6b59fa8-1192-4279-b8af-fb61111169c5",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "32a17f9a-6312-424c-ac34-dfddc3b1285d"
        },
        "item": {
          "id": "cdebb053-0c2c-4b4c-9722-0dd1adb6d95b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "bd523da9-d608-482c-874f-7affe7207467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54fd505-a837-43cd-87c2-ae738b375bd8",
        "cursor": {
          "ref": "c35ba0ec-4c22-4067-86d6-bf495c577d87",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "991621cf-5341-4872-a5aa-8ef9576dce79"
        },
        "item": {
          "id": "b54fd505-a837-43cd-87c2-ae738b375bd8",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "80f057ab-ae83-4bbc-a816-dc58134cf518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e798e307-2b53-4702-8d37-16a4a73f301b",
        "cursor": {
          "ref": "4f12933f-ab22-4f74-b7bc-9143f94d15bd",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "db0ce2df-380a-4e7a-9091-fa6140c196fb"
        },
        "item": {
          "id": "e798e307-2b53-4702-8d37-16a4a73f301b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "df2ead89-9382-4be0-99da-27893de42865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "046fc019-3746-4886-ba86-3688e96a690a",
        "cursor": {
          "ref": "2fca4dc5-d6b8-4a56-8dd8-08c3b4d0ffc8",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "6a2de90d-29d4-4509-9f8e-bd9e7c2c59e3"
        },
        "item": {
          "id": "046fc019-3746-4886-ba86-3688e96a690a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "8c9c7431-184a-45e8-baa7-3eae86aff20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee42717-81c9-493b-a098-95ddcc79fa2c",
        "cursor": {
          "ref": "2e35e5bb-9861-4e67-bb4d-56b1f4de56d9",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "5089db9f-870a-4103-9619-273f87e94c21"
        },
        "item": {
          "id": "4ee42717-81c9-493b-a098-95ddcc79fa2c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b9740803-a520-4856-a588-7a897703bf5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "985d06c4-6020-4e9a-be02-881aaa55566c",
        "cursor": {
          "ref": "48cb045e-29dd-40f2-99f1-be6002adf84e",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "619c0035-5e51-4b4d-b6a3-8a1ea86718e5"
        },
        "item": {
          "id": "985d06c4-6020-4e9a-be02-881aaa55566c",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "b376a41b-4520-4c46-8beb-39d6ddd24297",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dbcafe4-7355-4789-866f-397c4e929062",
        "cursor": {
          "ref": "05f43159-fa3d-4002-8466-0ee102533e73",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "988d9ecd-fca0-458f-a207-db9d890378e7"
        },
        "item": {
          "id": "9dbcafe4-7355-4789-866f-397c4e929062",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "5c94e158-fa88-4f66-8081-bdcb55cfb114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc15b988-ab14-4dac-ba5c-56bad3fbb601",
        "cursor": {
          "ref": "636a4b23-1c9d-47aa-9427-1b3aaaa52008",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9d9efb62-f19d-4df4-a209-2e40656cf75b"
        },
        "item": {
          "id": "dc15b988-ab14-4dac-ba5c-56bad3fbb601",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "63d6d11b-3c32-4bfc-a9d7-8d17f1bce3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aacdf450-4d5c-4f47-b254-87d252e16e97",
        "cursor": {
          "ref": "480606bc-23ee-455d-aebb-7ac50a8a38e9",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3eec94b5-c1be-46b6-ae4d-520197acd262"
        },
        "item": {
          "id": "aacdf450-4d5c-4f47-b254-87d252e16e97",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c77d551e-a8b7-4efe-9347-3959882b4ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba699011-785c-490e-bb04-b709081bc680",
        "cursor": {
          "ref": "f1f30534-c3a5-4e14-9a09-9ad2820a8364",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "c243ab38-275b-42e0-a168-bb8e4c6d18a9"
        },
        "item": {
          "id": "ba699011-785c-490e-bb04-b709081bc680",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ad3e67c0-56c0-48e0-81cf-dec288717caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b11d25-b661-4a97-8b06-d6267f977466",
        "cursor": {
          "ref": "e891e3d8-6831-4983-a339-eba0c4300f69",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "dc99e294-f0d0-4e35-9d4a-0923f2d71be2"
        },
        "item": {
          "id": "52b11d25-b661-4a97-8b06-d6267f977466",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d79121c9-bb7e-45c4-b26e-9bfd8e2736ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b2d3f35-1225-41be-9c16-2f821affe08e",
        "cursor": {
          "ref": "d78c27f7-7cf7-4942-8b41-68885fd10e29",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e2435e77-da83-4255-ab67-279482f066d4"
        },
        "item": {
          "id": "3b2d3f35-1225-41be-9c16-2f821affe08e",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0b0cae6b-d5cc-422a-ab20-667637738f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfd5e11-63eb-4613-9980-68382abaef73",
        "cursor": {
          "ref": "517e2e5f-5f90-4143-8330-10da51405ba3",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "bdc72074-e55f-4e2b-8e07-081b83ed6471"
        },
        "item": {
          "id": "2dfd5e11-63eb-4613-9980-68382abaef73",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "9f23c03b-7f7a-41a0-9d73-1677b345eedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "921a15b7-3056-49ec-beb7-68868212cedc",
        "cursor": {
          "ref": "8c5d443f-47a1-4b63-9e7d-da5ebb96c996",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "5bb957e7-ef7c-4d71-8634-5e36c5f8db3f"
        },
        "item": {
          "id": "921a15b7-3056-49ec-beb7-68868212cedc",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "d509617e-6d3a-4250-b4b7-d6d3ffcfdccc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5ebcef-dcf3-4bfb-a176-75afc68c4153",
        "cursor": {
          "ref": "80be4b17-5fc8-4cb0-ad36-acdb293f19b0",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7caea894-05d9-487e-8e56-b1e261b9ca2b"
        },
        "item": {
          "id": "ae5ebcef-dcf3-4bfb-a176-75afc68c4153",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "68b2f290-7446-4559-be3c-1a57adf16539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ae3dc8-a482-4a23-a6a6-f93dfad20e82",
        "cursor": {
          "ref": "172dd54b-8e48-4c2f-a24e-def9a2873dd7",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "2937952a-9ee9-42c6-a2e9-e6067d612e81"
        },
        "item": {
          "id": "61ae3dc8-a482-4a23-a6a6-f93dfad20e82",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "837ec42f-a43f-4799-b464-e4f6d45b581a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "109d4bec-0856-419f-8343-4ae28437343f",
        "cursor": {
          "ref": "30ea7ed9-03b9-4f73-a341-4774825f8161",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "b11e0ac8-9aef-47ae-9de6-bd487c9d80e8"
        },
        "item": {
          "id": "109d4bec-0856-419f-8343-4ae28437343f",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "2fae4087-2ab0-49bc-b774-3608e018014f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6edc35-ed4e-47b9-942c-dd8c41a6418f",
        "cursor": {
          "ref": "ca792467-7b95-4c0c-80ff-0a53bca2a0d9",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "72b647e5-d426-4595-9f26-4c9686cdc01f"
        },
        "item": {
          "id": "5b6edc35-ed4e-47b9-942c-dd8c41a6418f",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d218f71d-77ca-489a-8277-16159ddebdde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2bd8eae-5391-4101-a505-004e9b308cf6",
        "cursor": {
          "ref": "720dd91e-3907-4e19-89f9-e02e941084fe",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "f5db256f-f1f2-4640-ac91-e48334812932"
        },
        "item": {
          "id": "f2bd8eae-5391-4101-a505-004e9b308cf6",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "6941e384-270b-4421-b89b-8d7e1ad54b6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0517cd9-f0e8-496a-a9f9-7cc17ce2a8ea",
        "cursor": {
          "ref": "89c5b949-21ab-438a-8096-b9ca2d5f3326",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "9ae94dd1-c043-406e-a166-d9565aa1fac7"
        },
        "item": {
          "id": "b0517cd9-f0e8-496a-a9f9-7cc17ce2a8ea",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "964c5204-6e4f-4ba3-acff-38f66da0f8f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1551042c-fed4-4635-8fcb-3b4f1ce141d5",
        "cursor": {
          "ref": "641def95-9956-436e-957e-a3b5e2fd1f8c",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "48de6ef3-8208-45cb-b533-3fdf45cf3e5c"
        },
        "item": {
          "id": "1551042c-fed4-4635-8fcb-3b4f1ce141d5",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "3b41691d-ade9-41a3-853c-33a3b3be552c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f37454-041d-458c-8688-87d435f42232",
        "cursor": {
          "ref": "c05d9c3f-b91b-41d8-9e8d-800ab21e77a6",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "1341928c-7a16-4319-8812-d70bff57da4a"
        },
        "item": {
          "id": "50f37454-041d-458c-8688-87d435f42232",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "60b961b1-5a4f-4396-a304-bea8552ad676",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad5a655b-e6f2-46f7-aca5-20186d20e885",
        "cursor": {
          "ref": "081c9857-cdea-4928-9adf-b421ac299993",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "f324e786-33c8-48a2-907d-96426d1459ce"
        },
        "item": {
          "id": "ad5a655b-e6f2-46f7-aca5-20186d20e885",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "ef20a256-0423-42e4-9746-1a26588566a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7256fd2b-cb20-444b-ae60-ec844cbbd26d",
        "cursor": {
          "ref": "c888e875-efff-4e7e-8646-167f2518b647",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "f265e44d-4305-4a0d-b35a-6876a9c1c215"
        },
        "item": {
          "id": "7256fd2b-cb20-444b-ae60-ec844cbbd26d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7d84bdaf-8f68-4f3a-a532-2a7f78cc05ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ae5e11-20bb-4d2d-a1c1-5eec77370380",
        "cursor": {
          "ref": "48b9ecbb-5ba1-4599-b13d-eec834aceb46",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ce962d80-a2fd-4fef-8a41-1f0bdee9c5e5"
        },
        "item": {
          "id": "92ae5e11-20bb-4d2d-a1c1-5eec77370380",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "f59de189-838b-4663-b239-7eaa86c85b3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8956c35a-e444-4d6b-90f5-3a8f79d28465",
        "cursor": {
          "ref": "56ada5f6-92dd-4721-b56f-94549048c7f2",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "43590152-1249-4ab2-baf5-910c450dd5f6"
        },
        "item": {
          "id": "8956c35a-e444-4d6b-90f5-3a8f79d28465",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "5df2bcad-4083-462a-baa6-7e84ae2a441c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fd6a816-b33b-4d16-b447-7be213ba98ee",
        "cursor": {
          "ref": "f80914d9-c382-4cb3-85cd-8e66cd7be58d",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1e6e0a3d-580d-49f6-bc0c-165014527529"
        },
        "item": {
          "id": "5fd6a816-b33b-4d16-b447-7be213ba98ee",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "5fad09bf-5f91-4739-9c8d-494435a661f8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 62,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdc4f527-a923-4b53-820a-36e264a5e482",
        "cursor": {
          "ref": "2b9adb96-8424-43a1-90b4-2d5101a63997",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "df0ec66e-7f94-46dd-8d7a-f92d4cdf68b4"
        },
        "item": {
          "id": "fdc4f527-a923-4b53-820a-36e264a5e482",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "0e75b3ec-e8df-40e9-a696-295769278609",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a3dcc1-3b9d-414b-8874-c90856981d9a",
        "cursor": {
          "ref": "15258bbf-7e5d-4da0-95c3-84e7390de770",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "29b78ab4-54d0-42cc-907c-704827b295d3"
        },
        "item": {
          "id": "96a3dcc1-3b9d-414b-8874-c90856981d9a",
          "name": "credentials_verify"
        },
        "response": {
          "id": "3c14b2a8-4001-4a55-b20a-5a47184314bd",
          "status": "OK",
          "code": 200,
          "responseTime": 77,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "393cf44e-e0e0-4c38-aa93-512dbf71247a",
        "cursor": {
          "ref": "1dd9bfc1-f75e-48f4-b096-d162b069d576",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "6a843ec5-d85c-4a0a-941a-5a98081dd48f"
        },
        "item": {
          "id": "393cf44e-e0e0-4c38-aa93-512dbf71247a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "eb710f8f-cfd2-4911-a3b5-9487776859e7",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6693fefc-da68-43d0-8664-ed4a0af9f278",
        "cursor": {
          "ref": "24daa4c2-2adf-47ba-83a0-3a80e99ae4f7",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "37133102-028f-45e0-a779-642a9653b7d7"
        },
        "item": {
          "id": "6693fefc-da68-43d0-8664-ed4a0af9f278",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c44a9af9-f150-40d4-bddb-16209465ed14",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6693fefc-da68-43d0-8664-ed4a0af9f278",
        "cursor": {
          "ref": "24daa4c2-2adf-47ba-83a0-3a80e99ae4f7",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "37133102-028f-45e0-a779-642a9653b7d7"
        },
        "item": {
          "id": "6693fefc-da68-43d0-8664-ed4a0af9f278",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c44a9af9-f150-40d4-bddb-16209465ed14",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6693fefc-da68-43d0-8664-ed4a0af9f278",
        "cursor": {
          "ref": "24daa4c2-2adf-47ba-83a0-3a80e99ae4f7",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "37133102-028f-45e0-a779-642a9653b7d7"
        },
        "item": {
          "id": "6693fefc-da68-43d0-8664-ed4a0af9f278",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c44a9af9-f150-40d4-bddb-16209465ed14",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ae812b-84a5-44eb-8b9f-0b66a3e1cccf",
        "cursor": {
          "ref": "08addb5d-7fb3-4d07-a5e6-663757c65fed",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "cfee3bd4-5b0a-4dd3-9c10-9588e14ff428"
        },
        "item": {
          "id": "07ae812b-84a5-44eb-8b9f-0b66a3e1cccf",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "4ebdc322-48ca-4472-b0d6-706d1283b3d8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 62,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530b47af-1700-49ab-90a9-0cb35a375f9d",
        "cursor": {
          "ref": "01c3b012-092e-46cc-af38-58b01d90b4c1",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "506e0e6c-1da1-4f37-b143-7b6c4bc553b2"
        },
        "item": {
          "id": "530b47af-1700-49ab-90a9-0cb35a375f9d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "38a30c0b-92af-40dc-b41c-90dfc5fae41a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "530b47af-1700-49ab-90a9-0cb35a375f9d",
        "cursor": {
          "ref": "01c3b012-092e-46cc-af38-58b01d90b4c1",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "506e0e6c-1da1-4f37-b143-7b6c4bc553b2"
        },
        "item": {
          "id": "530b47af-1700-49ab-90a9-0cb35a375f9d",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "38a30c0b-92af-40dc-b41c-90dfc5fae41a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6591b1cd-7383-48bf-a417-1784e8e03392",
        "cursor": {
          "ref": "85bde3ae-53ba-4946-a2a7-93beb6f71d7a",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "4799ae9a-54d5-4a69-ae73-ae4cd4f181d8"
        },
        "item": {
          "id": "6591b1cd-7383-48bf-a417-1784e8e03392",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "5dfb1517-54de-4840-bdbc-9bae558481b8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 62,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01730cd9-bce4-4497-a29e-359c852aed8c",
        "cursor": {
          "ref": "0632db39-a430-4436-ba89-9cd8506e116d",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4b9105ac-b1a7-4ebd-b665-2afe1ca18caa"
        },
        "item": {
          "id": "01730cd9-bce4-4497-a29e-359c852aed8c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6046f191-1563-4e7b-ae14-0fca9abeec6b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01730cd9-bce4-4497-a29e-359c852aed8c",
        "cursor": {
          "ref": "0632db39-a430-4436-ba89-9cd8506e116d",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4b9105ac-b1a7-4ebd-b665-2afe1ca18caa"
        },
        "item": {
          "id": "01730cd9-bce4-4497-a29e-359c852aed8c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6046f191-1563-4e7b-ae14-0fca9abeec6b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb64dfb-2695-4e9b-ac0e-c2b5fe7e199c",
        "cursor": {
          "ref": "efef9e10-2ba6-4125-9bec-4dc010190589",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "4ab6758b-7c6e-4185-a4fc-b3fde12e45e0"
        },
        "item": {
          "id": "6cb64dfb-2695-4e9b-ac0e-c2b5fe7e199c",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "537f63eb-bf6d-4a96-85bd-ea74b745679c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 62,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}